./ ADD NAME=$$$NOTE  0114-04350-04350-1300-00050-00027-00000-HOWTO
PURPOSE OF THIS PDS, AND DISCLAIMER
------- -- ---- ---  --- ----------

The purpose of this pds is to supply a lot of "HOWTO" JCL that
pretty much works.  Much of this JCL (but not all of it) was
generated by an IBM ServerPac (R) installation that generates a
completely new z/OS 1.4 system.  However, we feel that it is
impossible to copyright this JCL, because it is merely standard
JCL that was coded (in a specific instance of an installation)
which gets the IBM utilities to work.

For example, if you had a specific example of IEBCOPY JCL, to
copy one pds to another, or to dump the pds to a tape file, you
couldn't copyright that, because it is merely a specific
execution of a standard utility, which anyone can legally
produce.

In other words, we feel that the specifically generated output
jobs from a ServerPac (R) installation are not copyrightable,
because they are merely JCL to properly operate standard IBM
utilities, in a specific instance.

So why are we supplying this pds here?  To help you.  For example:

  Suppose if you want to copy or enlarge a RACF database and need
  JCL to do that, you have some examples here (members starting with
  D****).

So here is a set of examples of JCL that were designed to work as
correctly as possible.  They are meant as a starting point for
your own work, when you need some JCL examples to run utilities.
They are nothing more, and nothing less.

Program MAXRETCD, whose source is supplied, is expected to reside
in load library, SUPPLIED.LOADLIB .  IPOUPDTE, a copyrighted program
from IBM, is expected to reside there, too, but most of the steps
described here, do not require either IPOUPDTE or CPPUPDTE.  If you
happen to have these programs from a CBIPO, a CBPDO, or a ServerPac,
then it is all to the good.  There is sample JCL here to show you
how to run them.

------------------------------------------------------------------
No responsibility is taken by anyone, as to the correctness of
any of these jobs.  They are only here to help you get started,
and NO LIABILITY, EXPRESS OR IMPLIED, is assumed by ANYONE.  USE
AT YOUR OWN RISK.  To correctly use the IBM utilities described in
these jobs, it is expected that you consult the appropriate IBM
manuals that have all the complete information about the utilities.
------------------------------------------------------------------

./ ADD NAME=@0JOBCRD 0114-04350-04350-1300-00011-00011-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
./ ADD NAME=A02SETUP 0114-04350-04350-1300-00038-00062-00000-HOWTO
.
RUNNING THE INSTALLATION SETUP JOBS

This section describes the jobs that initialize DASD and set-up for the
rest of the installation.
JOB A1OFINIT.

+--- WARNING -------------------------------------------+
|                                                       |
| A1OFINIT deletes any existing data on the volumes.    |
|                                                       |
+-------------------------------------------------------+
Before running this job, ensure that the devices have been varied  off-
line.  Use one of the  following  commands, where 'nnnn' is  the device
number of the appropriate DASD:
 o  From an MVS console: V nnnn,OFFLINE
 o  From SDSF: /V nnnn,OFFLINE
When the job completes successfully,  vary the devices back online with
one of the following commands:
 o  From an MVS console: V nnnn,ONLINE
 o  From SDSF: /V nnnn,ONLINE


JOB A2INISMS
The  A2INISMS job  initializes an SMS-managed volume called
LOGR01.  This volume is defined to  the  LOGGER STORGRP  in
the sample  DFSMS configuration  in your order.  The LOGR01
volume and the sample  DFSMS configuration are used for the
set-up of System Logger services.

Run the A2INISMS job from  the driving system.  Ensure that
the volume has been varied offline.
If you want to rename volume LOGR01,  you  must use ISMF on
the  target system  to  change  the  volume  list  for  the
LOGGER storage group  in  the  sample  DFSMS  configuration
provided.   Here,  you  must  remove the LOGR01 volume name
and add the  new  volume name  to the LOGGER storage group.

./ ADD NAME=A1OFINIT 0114-04350-04350-1300-00134-00134-00000-HOWTO
//IBMUSERA JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//*  NOTE:
//*     THIS JOB USES THE FOLLOWING VALUES FOR VTOC AND INDEX:
//*
//*      DEVICE     VTOC      INDEX
//*      ------     -------   -------
//*      3380-1     0,1,029   02,0,006
//*      3380-2     0,1,044   03,0,009
//*      3380-3     0,1,059   04,0,012
//*      3390-1     0,1,029   02,0,006
//*      3390-2     0,1,059   04,0,012
//*      3390-3     0,1,074   05,0,015
//*      3390-9     0,1,224   15,0,045
//*      9345-1     0,1,044   03,0,009
//*      9345-2     0,1,059   04,0,012
//*      BEFORE RUNNING THIS STEP, BE SURE THAT THE FOLLOWING
//*      DEVICES HAVE BEEN PUT OFFLINE :
//*        0313
//*        0314
//*        0317
//*        0318
//*        0310
//*        0311
//*        031B
//*      AFTER HAVING COMPLETED THIS STEP, BE SURE THAT ABOVE
//*      DEVICES ARE PUT ONLINE.
//*
//* NOTE: THIS JOBS REQUIRES AN OPERATOR RESPONSE FOR EACH DASD TO BE
//*       INITIALIZED .
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//OFFLINIT EXEC PGM=ICKDSF,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 INIT -
      UNITADDRESS(0313) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4CAT1) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
 INIT -
      UNITADDRESS(0314) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4CAT2) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
 INIT -
      UNITADDRESS(0317) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4DLB1) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
 INIT -
      UNITADDRESS(0318) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4DLB2) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
 INIT -
      UNITADDRESS(0310) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4RES1) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
 INIT -
      UNITADDRESS(0311) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4RES2) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
 INIT -
      UNITADDRESS(031B) -
      DEVICETYPE(3390) -
      PURGE    -
      MAP      -
      NOVERIFY -
      NOCHECK -
      NOVALIDATE -
      NORECLAIM  -
      VOLID(C4USS1) -
      INDEX(05,0,015) -
      VTOC(0,1,074)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,OFFLINIT),(4000,LT))
//*
./ ADD NAME=A2INISMS 0114-04350-04350-1300-00044-00044-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//*  - The ICKDSF INSTALL command should have previously been run
//*    against the volume if it is a 3380, 3390, or 9345.
//*  - Ensure volume has been varied offline.
//*  - Specify a device number (dddd) on the UNIT parameter to specify
//*    the volume to be initialized.
//*  - If you change the volume serial specified for VOLID, you must
//*    also update the SMS configuration to add the specified volume
//*    to the LOGGER Storage Group.
//*  - When you submit this job, message ICK003D will be issued on
//*    the operator console.  To allow the job to complete, it must
//*    be replied to with "U".
//*
//*  - Remove the comments in the following ICKDSF control statements
//*    before submitting the job.
//*
//* MRC: The maximum expected return code is: 0
//*-------------------------------------------------------------------
//INITSMS  EXEC PGM=ICKDSF,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 INIT -
      UNIT(dddd) -             /* Add correct device number here  */
      VOLID(LOGR01) -          /* Read note above before changing */
      NOVALIDATE -
      NOVERIFY -               /* Remove these comments before    */
      PURGE    -               /* submit the job                  */
      STORAGEGROUP -
      VTOC(0,3,76)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,INITSMS),(4000,LT))
//*
./ ADD NAME=B0DEFCAT 0114-04350-04350-1300-00364-00349-00000-HOWTO
DEFINING CATALOGS AND RESTORING DATA SETS

This section  describes the jobs  that you use  to define
the  catalog  structure   and   restore   the  data  sets
associated with your order.
If your order includes SMS-managed  data sets,  you  must
ensure that the userid that submits the installation jobs
has access to STGADMIN.IGG.DIRCAT resource in the FACILITY
class.
For a Software Upgrade  installation,  if  the  driving  system  master
catalog does not match the  target  system  master  catalog,  you  must
import connect the following  to  your  driving  system master catalog:
o  Your existing target system master catalog
o  Any existing user catalogs that will be used to catalog data sets
   in your order.
For  a   Full System Replacement  installation:
If you are using your
existing master catalog, you are responsible for ensuring the integrity
of the catalog structure on the target system.    For more information,
see  the  section  entitled "Merging  Your  Existing Catalog  with  the
NEWSYSTEM  Master Catalog."

JOB B1RACF

The B1RACF job   establishes  the  RACF  profiles  needed
on the driving  system to  run  the  other driving system
installation jobs.    B1RACF   also  creates profiles for
the high-level qualifiers in the order.    Run  this  job
on the driving system.
B1RACF is   optional.   However,  the  authorizations  it
grants are  required  for  the  installation  jobs to run
successfully.
+--- ATTENTION -----------------------------------------+
|                                                       |
| You must review the contents of this job before sub-  |
| mitting it.  B1RACF contains sample definitions;      |
| running it unchanged on an existing system might      |
| result in an outage or significant rework for you     |
| later, depending on your installation's current       |
| security definitions.                                 |
|                                                       |
| As shipped, the B1RACF job restricts the use of some  |
| facilities and data sets, and might change the user   |
| IDs for started tasks and their authorizations.       |
| These changes can cause existing users and system     |
| tasks to lose authorization to system resources.      |
|                                                       |
| Review this job prior to submission and modify it as  |
| needed to ensure that the options it sets and the     |
| profiles it defines are workable in your environment  |
| and consistent with your installation's security      |
| practices.                                            |
|                                                       |
+-------------------------------------------------------+
The user ID that runs  the  B1RACF   job  must  have  the
RACF SPECIAL attribute.
If you plan to share  your  RACF  databases  between  the
driving system and the target system,  you  can  run  the
H1RACTGT job on the  driving  system.  Depending  on your
installation's security requirements, you can run H1RACTGT
after B1RACF, or in place of B1RACF.
If you run H1RACTGT on the driving system,  you must do so
before IPLing the target system.
Before running B1RACF,   review  and  modify  the  job as
appropriate for your installation:
o   Change IBMUSER to a  user ID  that is appropriate for
    your installation  (such as the installer's user ID).
o   Ensure that the RACF options  on the SETROPTS command
    are appropriate for your installation.
o   Ensure that the UIDs and GIDs  used  in OMVS segments
    for users and groups are appropriate for your
    installation.
The job should complete with return code 0.
When this  job  completes,  examine  the  job  output  to
verify that your installation's security setup objectives
have been met.

JOB B2DEFCAT

The B2DEFCAT job allocates and defines the target system master catalog
and user catalogs  to the driving  system master catalog. B2DEFCAT also
imports  the  user  catalogs  to  the  target  system  master  catalog.
If there is no master catalog to be allocated, B2DEFCAT does not define
one.

JOB B3DEFSSA

The  B3DEFSSA job defines the  system specific aliases (SSAs)  for  the
catalogs on  the  driving system  and  target system that are needed to
install your order.
For a description of SSAs  and  how  they are used during installation,
see NEWSYSTEM: Using the Installation Dialog.

JOB B4ALOCDS

The  B4ALOCDS job  allocates  and  catalogs  all  of  the   data   sets
to be used with the new target system, including  all  PS,  PDS,  PDSE,
HFS,
and VSAM data sets.  For z/OS orders, this job also  allocates  the
couple data sets.
Many of these data sets have unique considerations  for  serialization,
availability, security, backup and recovery.  For these considerations,
see the planning and implementation books  for  the  products  you  are
installing.
If you are installing your order on SMS-managed target  system volumes,
you  likely  performed SMS set-up  work  earlier  in  the  installation
dialog, such as defining storage classes.  To review this  information,
return to the topic on installing an order on  SMS-managed  volumes  in
NEWSYSTEM: Using the Installation Dialog.

Before Running B4ALOCDS...
IBM recommends that you verify the size of data set EXMP.VTAMLST before
running job B4ALOCDS.  If you plan to copy data set  VTAMLST  from  the
driving system into data set EXMP.VTAMLST, you might exceed the default
storage allocation for this data set and encounter an ABEND.   To avoid
having to reallocate EXMP.VTAMLST with additional space, consider using
the  dialog's  Modify System Layout  function  to  check  the  size  of
EXMP.VTAMLST and, if necessary,  increase  its  size to accommodate any
additional data sets that you plan to copy into it.
Similarly, IBM   recommends   that   you  verify  the  size  of
the  TSO/E  broadcast  data set  before  running  job  B4ALOCDS.
B4ALOCDS also requires that your userid have at a minimum read access to
the security profile of the SYS1.UADS dataset on your driving system.
By default link list data sets are allocated with secondary
allocations. To remove the secondary allocation prior to
submitting the B4ALOCDS job, modify the secondary space using
the Modify System Layout function:
1. Select 'C' {View and Change data sets by selected attributes}
2. Select 'LNKLST Eligible'
3. Select 'YES' and generate a list of link list data sets
4. Enter 'CH S * P0' to set secondary space to 0
5. Adjust the primary space if required
6. Tailor your job again using GENSKEL if you had done so earlier
Restarting B4ALOCDS
If B4ALOCDS fails, you can restart the job using the RESTART
parameter of the job card in the appropriate step, as follows:
o   IF STEP CHKALLOC ENDS WITH A NON-ZERO RETURN CODE:
    Delete any data sets that were allocated by the
    ALCONTIG or ALCHFS steps, correct the problems,
    and resubmit the job.  To find the problem, read the
    allocation messages in the job log.
o   IF B4ALOCDS FAILS IN STEP ALCCDS: Delete any couple
    data sets that were allocated, correct the problem,
    and restart the job in the ALCCDS step.  To find the
    problem, read the messages written to SYSPRINT by the
    IXCL1DSU utility and, if necessary, the allocation
    messages in the job log.
o   IF B4ALOCDS FAILS IN STEP CHKDSN1 WITH MESSAGES IKJ56701I
    AND IKJ56228I:
    Verify that the data sets named by the messages do not already
    exist on the volume you specified in Modify System Layout,
    either with or without the system-specific alias {for example,
    'ssa.SYS1.LINKLIB' or 'SYS1.LINKLIB' } and restart the job
    in the next step.
o   IF B4ALOCDS FAILS IN ANY OTHER STEP: Correct the
    problem and restart the job in the failing step.
    To find the problem, read the messages written to
    SYSPRINT by the IDCAMS utility.
For these steps, it is not necessary to edit the job or the failing
step to restart the job. Allocations will resume with the data set
for which allocation failed.


JOB B5RESTOR

The B5RESTOR job copies the NEWSYSTEM data sets from  your
order's tapes to the appropriate DASD device.
B5RESTOR also copies the ICKDSF  module  into the authorized
link library that you specified in  the  Define Installation
Variables function of the dialog.
For msys for Operations,  B5RESTOR initializes  the  IPLDATA
data set with twenty hex  zeroes,  followed  by  the  string
'10Y'.
B5RESTOR might require more than one tape  drive  to process
multi-volume data sets.    B5RESTOR might  run  for  several
hours.
B5RESTOR should end with return code 0.


JOB B6CPPUPD

The B6CPPUPD job changes the NEWSYSTEM default data set  names
to the names  you  specified  in  the  Modify System Layout
function of the  installation dialog.
Job B6CPPUPD also adds members to the EXMP.PARMLIB data set
for  products  in  your  order.   B6CPPUPD creates  parmlib
members as follows:
  PROG00     For data sets  that reside in the link list or
             require APF authorization
  LPALST00   For data sets  that  reside  in  LPA  storage.
Some of these members can be used as-is, while others might
have  to  be  merged  with  your  existing parmlib members.
Use  the  most  appropriate  method  to apply these parmlib
updates to your system.  For example:
o   Check your existing parmlib concatenation for duplicate
    member  names  and  rename  any  members, if necessary.
    Then,  add  the  new  parmlib  data set to your parmlib
    concatenation.
o   Merge members  in  your  existing  parmlib with the new
    members in EXMP.PARMLIB (for example, PROGxx).
o   Copy  the  members from EXMP.PARMLIB to the appropriate
    members  in  an  existing  data  set  in  your  parmlib
    concatenation.
If B6CPPUPD contains an ISPF EDIT step and there is an Initial Macro
specified in the ISPF EDIT default profile, you must concatenate the
library containing the Initial Macro to the SYSEXEC DD for that
jobstep. Otherwise, the step will fail with message "Macro does not
exist - Initial or recovery macro 'macroname' could not
be executed".
Running B6CPPUPD with PARM='CHECK'
If you want,  you   can  use  the  B6CPPUPD job to check for
problems before using the job to make updates.   If  you run
B6CPPUPD in "check" mode, the job detects unusual conditions
that would prevent an  update  from  occurring,  such  as  a
record being expanded beyond  the  data  set  record length.
To  check  for  problems  without  performing  any  updates,
modify B6CPPUPD's in-stream procedures, CPPPROC and CPPPROC1.
In each procedure's EXEC statement,  such  as the following:
  CPPUPDTE EXEC PGM=CPPUPDTE,PARM='UPDATE',COND=(4000,LT)
change  PARM='UPDATE'  to  PARM='CHECK'  and submit the job.
If the modified job's output  shows  no  problems,  resubmit
B6CPPUPD using PARM='UPDATE' to  make  the  needed  changes.
Return Codes
The  following  return  codes   are   valid  for B6CPPUPD:
RETURN CODE    EXPLANATION
00             Processing completed without errors or warnings.
               User Response: None.
04             One or more of the following situations occurred:
               o   One or more libraries had no updates.
               o   One or more libraries was not valid  for  processing
                   by the job.
               o   A  string  in  the record comment field could not be
                   replaced.  There were not enough blanks remaining in
                   the record.
               User  Response:  Review  the  messages  recorded  in the
               SYSPRINT data set.
08             An update failed.  Often, this problem occurs
               because the total length of a record would exceed
               the record length of the data set.   For example,
               updating the new name of a data set might cause
               a JCL record to exceed the 72-character limit.
               User  Response:    Check the job output to
               determine which update failed.
Restarting B6CPPUPD
If  B6CPPUPD fails,   do  not  simply  restart  the  job.
Re-running  certain  steps can result in  data set  names
that are incorrect for your installation.
Your corrective action for B6CPPUPD depends on which step
failed, as follows:
o   If the B6CPPUPD job fails in a CPPUPDTE step (one with
    PGM=CPPUPDTE specified on the EXEC statement), review
    the messages in the  joblog to determine what updates
    were not performed.   Complete the  updates manually.
o   If the B6CPPUPD job fails in another step (such as an
    IKJEFT01 or IEBUPDTE step),  resolve the problem that
    caused the failure and restart the job in the failing
    step (not the subsequent step).


RESTORING THE UNIX FILE SYSTEM FOR YOUR ORDER

You must now restore your order's UNIX file system.
To do so, you will run the B7RESTFS job.
Before running this job, ensure that the system requirements and
security requirements are met, as described in the sections that
follow.
SYSTEM REQUIREMENTS FOR RESTORING THE UNIX FILE SYSTEM
Ensure that the following system requirements are met:
o   SMS is active in at least a null configuration on the
    driving system.
o   The driving system's Language Environment (LE) data set
    SCEERUN is in the link list concatenation.  If not, you
    must add this data set to the JOBLIB concatenation for
    the B7RESTFS job.
o   UNIX System Services is active on the
    driving system and the UNIX System Services pax utility is
    available on the driving system.
The pax restore of the archive file
is directed to the Install Directory on the driving system.
Earlier in the installation process, you specified the Install
Directory variable (FA00PQ04) during the Define Installation
Variables function of the dialog.  By default, the Install
Directory is /Service.  This value cannot be blank (the job
will fail).
If you specified a directory other than /Service,  ensure  that
the name you use  does  not  exceed  20  characters  in length.
In a multi-level directory path, the lowest level from the root
is automatically created.   Higher directories are not created.
If your driving system's UNIX file system is mounted read-only,
the specified directory must already exist.
Understand that the target system's  UNIX file system  will  be
mounted  to  the  Install directory  during  the  pax  restore.
As a result,  the  real  names of the target system's UNIX file
system  data  sets   must   be   unique  in  your  environment.
If you attempt to mount a file system with the same name as one
that is  currently  mounted,  your  MOUNT  request  will  fail.
SECURITY REQUIREMENTS FOR RESTORING THE UNIX FILE SYSTEM
Ensure that the following security requirements are met:
o   The user ID you use must be a superuser (UID=0) or have read
    access to the BPX.SUPERUSER resource in the RACF FACILITY
    class.
o   The user ID you use must have read access to FACILITY
    class resources BPX.FILEATTR.APF, BPX.FILEATTR.PROGCTL,
    and BPX.FILEATTR.SHARELIB (or BPX.FILEATTR.* if you
    choose to use a generic name for these resources).
    The commands to define these facility class resources
    are in SYS1.SAMPLIB member BPXISEC1 and in the
    z/OS UNIX Customization Wizard:
    http://www.ibm.com/eserver/zseries/zos/wizards/
o   Group IDs UUCPG and TTY, and user ID UUCP, must be defined in
    your security database.  These IDs must contain OMVS segments
    with a GID value for each group and a UID value for the user ID.
    For ease of use and manageability, define the names in uppercase.
    RULES:
    -   The group ID and user ID values assigned to these IDs
        cannot be used by any other IDs. They must be unique.
    -   You must duplicate the required user ID  and  group names
        in each security database,  including  the  same  user ID
        and group ID values in the OMVS segment.   Doing so makes
        it easier to transport the UNIX  file  system  data  sets
        from a test system to a production system.   For example,
        the group name TTY on  System 1  must have the same group
        ID value on System 2 and System 3.  If it is not possible
        to synchronize your databases,  you must continue running
        the FOMISCHO job  against  each  system  after  z/OS UNIX
        System Services is installed.
    -   If names such as UUCP, UUCPG,  or  TTY are not allowed on
        your system or  conflict  with  existing  names,  you can
        create  a   user  ID   alias  table   and   activate   it
        (through the SETOMVS or SET OMVS command).
For information about defining  these group and user IDs to RACF,
and for creating a  user ID  alias table  (USERIDALIASTABLE), see
z/OS UNIX System Services Planning.

Also, the B1RACF installation job provides a sample of the
security system definitions required to perform the
installation tasks.
JOB B7RESTFS
The B7RESTFS job mounts your order's UNIX file systems:
o OMVS.ETC
o OMVS.JV390
o OMVS.ROOT
o OMVS.VAR
The B7RESTFS job restores the files and directories for your
order into the target system's UNIX file system.   As part
of this processing, B7RESTFS does the following:
o   Copies the shell initialization files
o   Converts the /etc and /var directories to symbolic
    links
o   Verifies existing user IDs and group IDs in the
    security database or through the user ID alias
    table, if one is defined.
When the B7RESTFS job completes, the target  system's /etc
directory is not accessible while  it is mounted under the
target system's root file system.   If  you  need  to copy
files to the target system's /etc directory,  you can make
the directory accessible by mounting it  temporarily under
the target system's /Service directory.
Use the following procedure:
1.  Mount the target system  /etc  under the target system
    /Service directory
2.  Copy the  driving  system's  /etc  files to the target
    system /Service/etc
3.  Unmount the target system /Service/etc
./ ADD NAME=B1RACF   0114-04350-04350-1300-01227-01227-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//* JOB: RACFDRV
//*
//* DOC:
//*    THIS JOB CREATES RACF DATASET PROFILES AND THE REQUIRED
//*    FACILITY CLASS PROFILES TO RUN THE REMAINING INSTALLATION
//*    JOBS.
//*
//* UPDATES:
//*    DEFAULT USERID IBMUSER MUST BE CHANGED BEFORE THE JOB IS
//*    SUBMITTED.
//*
//* IMPORTANT:
//*    THE USERID THAT RUNS THIS JOB MUST HAVE SPECIAL AUTHORITY.
//*
//*    REVIEW THE CONTENTS OF THIS JOB BEFORE SUBMITTING IT.
//*    RUNNING IT UNCHANGED ON AN EXISTING SYSTEM CAN CAUSE
//*    OUTAGE, SIGNIFICANT SECURITY EXPOSURE OR LOSS OF
//*    AUTHORIZATION TO SYSTEM RESOURCES.
//*
//* NOTES:
//*    THIS JOB SHOULD NOT BE RUN ON THE CUSTOMIZED OFFERINGS DRIVER
//*    AS IT ALREADY HAS THE REQUIRED RACF DEFINITIONS.
//*
//*    IF A DEFINITION ALREADY EXISTS EXPECT IKJ56702I MESSAGES
//*    WHICH CAN BE IGNORED.
//*
//*    REVIEW THE JOB OUTPUT TO VERIFY SECURITY OBJECTIVE HAVE
//*    BEEN MET.
//*
//* MRC:
//*    THE MAXIMUM EXPECTED RETURN CODE IS: 00
//*
//RACFDRV  EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSTSIN  DD  *
RDEFINE +
  FACILITY IRRDPI00 +
  UACC(NONE)
PE +
  IRRDPI00 +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(READ)
SETROPTS +
  REFRESH +
  RACLIST(FACILITY)
SETROPTS  +
  GENERIC(*)  +
  GENCMD(*)  +
  CLASSACT(DIGTRING  +
           DIGTCERT  +
           DIGTCRIT  +
           FACILITY  +
           UNIXPRIV  +
           LOGSTRM   +
           STARTED)  +
  RACLIST(DIGTCERT  +
          DIGTCRIT  +
          DIGTRING  +
          UNIXPRIV  +
          FACILITY  +
          LOGSTRM   +
          STARTED)
RACDCERT +
  CERTAUTH +
  ALTER( +
  LABEL('Verisign Class 3 Primary CA')) +
  TRUST
RACDCERT +
  ADDRING(SecureFTPKeyRing) +
  ID(IBMUSER)
RACDCERT +
  CONNECT +
  (CERTAUTH +
  RING(SecureFTPKeyRing) +
  LABEL('Verisign Class 3 Primary CA') +
  USAGE(CERTAUTH)) +
  ID(IBMUSER)
SETROPTS  +
  RACLIST(DIGTCERT +
          DIGTCRIT +
          DIGTRING  +
          FACILITY  +
          LOGSTRM   +
          STARTED)  +
  REFRESH
//IRRDPI00 EXEC PGM=IKJEFT1B,REGION=1M,PARM='IRRDPI00 UPDATE'
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD DSN=SYS1.SAMPLIB(IRRDPSDS),DISP=SHR
//SYSTSIN  DD DUMMY
//*
//RACFPRF2 EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSTSIN  DD  *
  PROF MSGID WTPMSG
SETROPTS +
   GENERIC(*) +
   GENCMD(*) +
   CLASSACT(FACILITY +
                  LOGSTRM) +
   RACLIST(FACILITY)
ADDGROUP +
   AOP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(AOP) +
   AUTH(JOIN)
AD +
   'AOP.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'AOP.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ASM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ASM) +
   AUTH(JOIN)
AD +
   'ASM.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ASM.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ASU +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ASU) +
   AUTH(JOIN)
AD +
   'ASU.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ASU.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   BDT1 +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BDT1) +
   AUTH(JOIN)
AD +
   'BDT1.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'BDT1.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   BPA +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BPA) +
   AUTH(JOIN)
AD +
   'BPA.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'BPA.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CBC +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CBC) +
   AUTH(JOIN)
AD +
   'CBC.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CBC.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CDS +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CDS) +
   AUTH(JOIN)
AD +
   'CDS.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CDS.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CEE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CEE) +
   AUTH(JOIN)
AD +
   'CEE.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CEE.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CIM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CIM) +
   AUTH(JOIN)
AD +
   'CIM.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CIM.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CMX +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CMX) +
   AUTH(JOIN)
AD +
   'CMX.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CMX.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EXMP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EXMP) +
   AUTH(JOIN)
AD +
   'EXMP.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EXMP.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CSF +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CSF) +
   AUTH(JOIN)
AD +
   'CSF.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CSF.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ECN +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ECN) +
   AUTH(JOIN)
AD +
   'ECN.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ECN.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EOX +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EOX) +
   AUTH(JOIN)
AD +
   'EOX.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EOX.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EOY +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EOY) +
   AUTH(JOIN)
AD +
   'EOY.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EOY.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EPH +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EPH) +
   AUTH(JOIN)
AD +
   'EPH.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EPH.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EQAW +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EQAW) +
   AUTH(JOIN)
AD +
   'EQAW.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EQAW.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EUV +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EUV) +
   AUTH(JOIN)
AD +
   'EUV.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EUV.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EUVF +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EUVF) +
   AUTH(JOIN)
AD +
   'EUVF.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EUVF.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   FFST +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(FFST) +
   AUTH(JOIN)
AD +
   'FFST.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'FFST.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GDDM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GDDM) +
   AUTH(JOIN)
AD +
   'GDDM.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GDDM.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GIM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GIM) +
   AUTH(JOIN)
AD +
   'GIM.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GIM.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GLD +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GLD) +
   AUTH(JOIN)
AD +
   'GLD.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GLD.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GSK +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GSK) +
   AUTH(JOIN)
AD +
   'GSK.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GSK.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   HCM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(HCM) +
   AUTH(JOIN)
AD +
   'HCM.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'HCM.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ICA +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ICA) +
   AUTH(JOIN)
AD +
   'ICA.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ICA.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ICQ +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ICQ) +
   AUTH(JOIN)
AD +
   'ICQ.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ICQ.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IMO +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IMO) +
   AUTH(JOIN)
AD +
   'IMO.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IMO.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IMW +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IMW) +
   AUTH(JOIN)
AD +
   'IMW.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IMW.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ING +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ING) +
   AUTH(JOIN)
AD +
   'ING.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ING.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IOA +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IOA) +
   AUTH(JOIN)
AD +
   'IOA.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IOA.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IOE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IOE) +
   AUTH(JOIN)
AD +
   'IOE.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IOE.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ISF +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ISF) +
   AUTH(JOIN)
AD +
   'ISF.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ISF.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ISP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ISP) +
   AUTH(JOIN)
AD +
   'ISP.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ISP.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   JAVA +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(JAVA) +
   AUTH(JOIN)
AD +
   'JAVA.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'JAVA.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   MSOPS +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(MSOPS) +
   AUTH(JOIN)
AD +
   'MSOPS.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'MSOPS.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   NETVIEW +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(NETVIEW) +
   AUTH(JOIN)
AD +
   'NETVIEW.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'NETVIEW.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   OMVS +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(OMVS) +
   AUTH(JOIN)
AD +
   'OMVS.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'OMVS.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   PAGE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(PAGE) +
   AUTH(JOIN)
AD +
   'PAGE.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'PAGE.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   SMPE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(SMPE) +
   AUTH(JOIN)
AD +
   'SMPE.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'SMPE.*' +
   ID(IBMUSER) +
   ACC(ALTER)
CONNECT +
   IBMUSER +
   GROUP(SYS1) +
   AUTH(JOIN)
AD +
   'SYS1.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'SYS1.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   TCPIP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TCPIP) +
   AUTH(JOIN)
AD +
   'TCPIP.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'TCPIP.*' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   TCPIVP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TCPIVP) +
   AUTH(JOIN)
AD +
   'TCPIVP.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'TCPIVP.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   BPX.DAEMON +
   CLASS(FACILITY) +
   ID(SYS1) +
   ACC(READ)
PE +
   BPX.DAEMON +
   CLASS(FACILITY) +
   ID(IBMUSER) +
   ACCESS(READ)
ALTUSER +
   IBMUSER +
   OMVS(UID(0) +
   HOME('/') +
   PROGRAM('/bin/sh'))
RDEFINE +
    FACILITY BPX.FILEATTR.APF +
    UACC(NONE)
RDEFINE +
    FACILITY BPX.FILEATTR.PROGCTL +
    UACC(NONE)
RDEFINE +
    FACILITY BPX.FILEATTR.SHARELIB +
    UACC(NONE)
RDEFINE +
    UNIXPRIV +
    SUPERUSER.FILESYS.PFSCTL +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ADD +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ADDRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ALTER +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ALTMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.CHECKCERT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.CONNECT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELETE +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.EXPORT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.EXPORTKEY +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.GENCERT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.GENREQ +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LIST +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LISTMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LISTRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.MAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.REMOVE +
    UACC(NONE)
PE +
    BPX.FILEATTR.APF +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    BPX.FILEATTR.PROGCTL +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    BPX.FILEATTR.SHARELIB +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    SUPERUSER.FILESYS.PFSCTL +
    CLASS(UNIXPRIV) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ADD +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ADD +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.ADDRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ADDRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.ALTER +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ALTER +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.ALTMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ALTMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.CHECKCERT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.CHECKCERT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.CONNECT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.CONNECT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.DELETE +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.DELETE +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.DELMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.DELMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.DELRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.DELRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.EXPORT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.EXPORT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.EXPORTKEY  +
    CLASS(FACILITY) +
    ID(*)  +
    ACC(READ)
PE +
    IRR.DIGTCERT.EXPORTKEY +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.GENCERT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.GENCERT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.GENREQ +
    CLASS(FACILITY)+
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.GENREQ +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.LIST +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.LIST +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.LISTMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.LISTMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.LISTRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.LISTRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.MAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.MAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.REMOVE +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.REMOVE +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
SETROPTS RACLIST(FACILITY  +
           DIGTCERT  +
           DIGTCRIT  +
           DIGTRING  +
           LOGSTRM   +
           STARTED   +
           UNIXPRIV) +
     REFRESH
ADDGROUP +
   PRIME +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(PRIME) +
   AUTH(JOIN)
AD +
   'PRIME.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'PRIME.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'PRIME.*' +
   ID(OMVSKERN) +
   ACC(UPDATE)
ADDGROUP +
   HFSCAT +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(HFSCAT) +
   AUTH(JOIN)
AD +
   'HFSCAT.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'HFSCAT.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'HFSCAT.*' +
   ID(OMVSKERN) +
   ACC(UPDATE)
ADDGROUP +
   MASTER +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(MASTER) +
   AUTH(JOIN)
AD +
   'MASTER.*' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'MASTER.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'MASTER.*' +
   ID(OMVSKERN) +
   ACC(UPDATE)
RDEFINE +
  FACILITY MVSADMIN.LOGR +
  UACC(NONE)
RDEFINE +
  LOGSTRM SYSPLEX.OPERLOG +
  UACC(NONE)
RDEFINE +
  LOGSTRM SYSPLEX.LOGREC.ALLRECS +
  UACC(NONE)
PE +
  MVSADMIN.LOGR +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(UPDATE)
PE +
  SYSPLEX.OPERLOG +
  CLASS(LOGSTRM) +
  ID(IBMUSER) +
  ACC(ALTER)
PE +
  SYSPLEX.LOGREC.ALLRECS +
  CLASS(LOGSTRM) +
  ID(IBMUSER) +
  ACC(ALTER)
ADDGROUP +
  TTY  +
  OMVS(GID(2))
ADDGROUP +
  UUCPG +
  OMVS(GID(8765))
ADDUSER +
  UUCP +
  DFLTGRP(UUCPG) +
  OMVS(UID(396)  +
  HOME('/usr/spool/uucppublic') +
  PROGRAM('/bin/sh'))
ADDGROUP +
  DFSGRP  +
  SUPGROUP(SYS1) +
  OMVS(GID(2))
PE 'OMVS.*' +
    ID(DFS) +
    ACC(ALTER)
ADDUSER +
  ZFS  +
  DFLTGRP(STCGRP) +
  OMVS(HOME(/opt/dfslocal/home/dfscntl) UID(0))
CONNECT +
  ZFS +
  GROUP(DFSGRP) +
  AUTH(CREATE)
SETROPTS +
   RACLIST(STARTED FACILITY LOGSTRM) +
   REFRESH
SETROPTS +
   GENERIC(*) +
   REFRESH
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE),(4000,LT))
/*
./ ADD NAME=B2DEFCAT 0114-04350-04350-1300-00127-00129-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: DEFINE THE TARGET SYSTEM'S CATALOG(S) INTO THE DRIVING
//*      SYSTEM'S MASTER CATALOG.
//*
//*      IMPORT/CONNECT EVENTUAL TARGET SYSTEM USER CATALOG(S) INTO
//*      THE TARGET SYSTEM'S MASTER CATALOG.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*---------------------------------------------------------------------
//*
//* PLEASE NOTICE:
//*       IF NO CATALOG IS FLAGGED TO BE ALLOCATED,
//*       NO EXECUTABLE JOB IS BUILT.
//*
//* FOR USER CATALOG, NOTE THAT AN IMPORT CONNECT BETWEEN THE MASTER
//* AND USER CATALOG IS REQUIRED.
//*
//*--------------------------------------------------------------------
//DEFMCAT  EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DEFINE -
    MCAT ( -
          ICFCATALOG -
          NAME(CATALOG.C14.MASTER) -
          VOL(C4CAT1) -
          CYL(30 30) -
          FREESPACE(10 10) -
          SHR(3 4) -
          STRNO(3) -
         ) -
    DATA ( -
          CISZ(4096) -
          BUFND(4) -
         ) -
    INDEX( -
          BUFNI(4) -
         ) -
    CAT(CATALOG.ZOS.MASTER/PWUPDATE)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DEFMCAT),(4000,LT))
//*
//SSA1 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DEFINE -
    UCAT ( -
          ICFCAT -
          NAME(PRIME14.USERCAT) -
          VOLUME (C4CAT2) -
          CYLINDERS (15 15) -
          FREESPACE(10 10) -
          SHR(3 4) -
          STRNO(3) -
         ) -
    DATA ( -
          CISZ(4096) -
          BUFND(4) -
         ) -
    INDEX( -
          BUFNI(4) -
         ) -
    CAT(CATALOG.ZOS.MASTER/PWUPDATE)
  IF LASTCC = 0 THEN -
  IMPORT CONNECT -
        OBJECTS((PRIME14.USERCAT -
        DEVICETYPE(3390) -
        VOLUME(C4CAT2))) -
        CATALOG(CATALOG.C14.MASTER)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,SSA1),(4000,LT))
//*
//SSA2 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DEFINE -
    UCAT ( -
          ICFCAT -
          NAME(CATALOG.H14.USERCAT) -
          VOLUME (C4USS1) -
          CYLINDERS (15 15) -
          FREESPACE(10 10) -
          SHR(3 4) -
          STRNO(3) -
         ) -
    DATA ( -
          CISZ(4096) -
          BUFND(4) -
         ) -
    INDEX( -
          BUFNI(4) -
         ) -
    CAT(CATALOG.ZOS.MASTER/PWUPDATE)
  IF LASTCC = 0 THEN -
  IMPORT CONNECT -
        OBJECTS((CATALOG.H14.USERCAT -
        DEVICETYPE(3390) -
        VOLUME(C4USS1))) -
        CATALOG(CATALOG.C14.MASTER)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,SSA2),(4000,LT))
//*
//*-------------------------------------------------------------------
//*  CONNECT THE DRIVING SYSTEM MASTER CATALOG INTO THE NEW TARGET
//*  SYSTEM MASTER CATALOG FOR THE S1CATCVT JOB
//*-------------------------------------------------------------------
//CONNECT1 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  IMPORT CONNECT -
        OBJECTS((CATALOG.ZOS.MASTER -
        DEVICETYPE(3390) -
        VOLUME(Z3SYS1))) -
        CATALOG(CATALOG.C14.MASTER)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CONNECT1),(4000,LT))
./ ADD NAME=B3DEFSSA 0114-04350-04350-1300-00128-00129-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: DEFINE ALL SSA'S (SYSTEM SPECIFIC ALIAS)
//*        IN THE DRIVING SYSTEM MASTER CATALOG.
//*      DEFINE ALL SSA'S RELATED TO THE TARGET SYSTEM
//*        USER CATALOG(S) IN THE TARGET SYSTEM MASTER CATALOG.
//*      DEFINES ALL NORMAL ALIAS RELATED TO THE TARGET SYSTEM
//*        USER CATALOG(S) IN THE TARGET SYSTEM MASTER CATALOG.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//*
//DEFSSA   EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DEF ALIAS( -
      NAME(PRIME) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.ZOS.MASTER/PWUPDATE)
  DEF ALIAS( -
      NAME(HFSCAT) -
      RELATE(CATALOG.H14.USERCAT)) -
    CAT(CATALOG.ZOS.MASTER/PWUPDATE)
  DEF ALIAS( -
      NAME(MASTER) -
      RELATE(CATALOG.C14.MASTER)) -
    CAT(CATALOG.ZOS.MASTER/PWUPDATE)
  DEF ALIAS( -
      NAME(PRIME) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(HFSCAT) -
      RELATE(CATALOG.H14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(AOP) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(ASU) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(BDT1) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(BPA) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(CDS) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(CIM) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(CMX) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(ECN) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(EPH) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(EQAW) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(EUV) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(HCM) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(ICQ) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(IMW) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(IOA) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(JAVA) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(MSOPS) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(OMVS) -
      RELATE(CATALOG.H14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(SMPE) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
  DEF ALIAS( -
      NAME(TCPIVP) -
      RELATE(PRIME14.USERCAT)) -
    CAT(CATALOG.C14.MASTER)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DEFSSA),(4000,LT))
//*
./ ADD NAME=B4ALOCDS 0114-04350-04350-1300-25777-25778-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: STEP B4ALOCDS WILL ALLOCATE AND CATALOG ALL DATASETS.
//*
//* NOTE:MSGID IS ADDED TO THE TSO PROFILE TO ENSURE THAT THE FIRST
//*      STEP CAN RUN SUCCESSFULLY.  PLEASE RESET YOUR PROFILE TO
//*      NOMSGID (IF REQUIRED) AFTER THE JOB HAS RUN.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*--------------------------------------------------------------------
//*************************************************************
//*   THE FOLLOWING STEP MAKES SURE THAT NONE OF THE DATA SETS
//*   TO BE ALLOCATED ALREADY HAVE EXISTING CATALOG ENTRIES
//*************************************************************
//*
//CHKDSN1  EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR
//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD DSN=SUPPLIED.SCPPTENU,DISP=SHR
//         DD DSN=ISP.SISPTENU,DISP=SHR
//ISPLOG   DD DSN=&ISPLOG,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPPROF  DD DSN=&ISPPROF,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 PROFILE PREFIX(IBMUSER) MSGID
 ISPSTART CMD(%CPPEDSN NOTEXIST F )
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CHKDSN1),(4000,LT))
//*
//*
//*************************************************************
//*
//*  THIS IS TO CHECK WHETHER SMS IS ACTIVE IN THE DRIVING
//*  SYSTEM. IT USES THE REXX MVSVAR FUNCTION TO CHECK IF SMS
//*  IS ACTIVE AND RETURN THE CORRESPONDING RETURN CODE.
//*
//*  IF SMS
//*       ACTIVE   ---    RETURN 0
//*     INACTIVE   ---    RETURN 4
//*  UNAVAILABLE   ---    RETURN 8
//*    ALL OTHER   ---    RETURN 12
//*
//*************************************************************
//CHKSMS1  EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPESMS NOISPF
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,CHKSMS1),(4000,LT))
//*
//*************************************************************
//*
//*************************************************************
//*
//ALCONTIG EXEC PGM=IEFBR14,COND=(4000,LT)
//BRODCAST DD DSN=MASTER.SYS1.BRODCAST,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4CAT1,
//      DCB=(BLKSIZE=129,RECFM=F,
//      LRECL=129,
//      DSORG=PS),
//          SPACE=(CYL,(3,0),,CONTIG)
//HASPACE DD DSN=MASTER.SYS1.HASPACE,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4CAT2,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(300,0),,CONTIG)
//HASPCKPT DD DSN=MASTER.SYS1.HASPCKPT,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4CAT2,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(2,0),,CONTIG)
//HASPCKP2 DD DSN=MASTER.SYS1.HASPCKP2,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4CAT2,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(2,0),,CONTIG)
//NUCLEUS DD DSN=MASTER.SYS1.NUCLEUS,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4RES1,
//      DCB=(BLKSIZE=32760,RECFM=U,
//      LRECL=0,
//      DSORG=PO),
//      SPACE=(6144,(7913,0,122),,CONTIG),
//      DSNTYPE=PDS
//RACFPRIM DD DSN=MASTER.SYS1.RACF,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4CAT2,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(25,0),,CONTIG)
//RACFBACK DD DSN=MASTER.SYS1.RACFSEC,
//      DISP=(NEW,CATLG,DELETE),
//      UNIT=3390,
//      VOL=SER=C4CAT2,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(25,0),,CONTIG)
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALCONTIG),(4000,LT))
//*
//*************************************************************
//*     ALLOCATE UADS DATA SET
//*************************************************************
//*
//ALCUADS  EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPEUADS MASTER.SYS1.UADS C4RES2 N
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,ALCUADS),(4000,LT))
//*
//*
//*************************************************************
//*
//*  THIS IS TO CHECK WHETHER SMS IS ACTIVE IN THE DRIVING
//*  SYSTEM. IT USES THE REXX MVSVAR FUNCTION TO CHECK IF SMS
//*  IS ACTIVE AND RETURN THE CORRESPONDING RETURN CODE.
//*
//*  IF SMS
//*       ACTIVE   ---    RETURN 0
//*     INACTIVE   ---    RETURN 4
//*  UNAVAILABLE   ---    RETURN 8
//*    ALL OTHER   ---    RETURN 12
//*
//*************************************************************
//CHKSMS2  EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPESMS NOISPF
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,CHKSMS2),(4000,LT))
//*
//*************************************************************
//* ALLOCATE THE HFS FILE SYSTEMS
//*************************************************************
//ALCHFS  EXEC PGM=IEFBR14,COND=(4000,LT)
//ETC DD  DSN=HFSCAT.OMVS.ETC,
//         DISP=(NEW,CATLG,DELETE),
//         UNIT=3390,
//         VOL=SER=C4CAT1,
//         DSNTYPE=HFS,
//         BLKSIZE=4096,
//         SPACE=(TRK,(1126,106,1))
//JV390 DD  DSN=HFSCAT.OMVS.JV390,
//         DISP=(NEW,CATLG,DELETE),
//         UNIT=3390,
//         VOL=SER=C4RES2,
//         DSNTYPE=HFS,
//         BLKSIZE=4096,
//         SPACE=(TRK,(7501,751,1))
//ROOT DD  DSN=HFSCAT.OMVS.ROOT,
//         DISP=(NEW,CATLG,DELETE),
//         UNIT=3390,
//         VOL=SER=C4USS1,
//         DSNTYPE=HFS,
//         BLKSIZE=4096,
//         SPACE=(TRK,(33601,3361,1))
//VAR DD  DSN=HFSCAT.OMVS.VAR,
//         DISP=(NEW,CATLG,DELETE),
//         UNIT=3390,
//         VOL=SER=C4CAT1,
//         DSNTYPE=HFS,
//         BLKSIZE=4096,
//         SPACE=(TRK,(376,31,1))
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALCHFS),(4000,LT))
//*************************************************************
//*   ENSURE THAT THE DATA SETS ALLOCATED WITH IEFBR14
//*   WERE ALLOCATED SUCCESSFULLY
//*************************************************************
//*
//CHKALLOC EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  LISTCAT -
     ENTRY(HFSCAT.OMVS.ETC)

  LISTCAT -
     ENTRY(HFSCAT.OMVS.JV390)

  LISTCAT -
     ENTRY(HFSCAT.OMVS.ROOT)

  LISTCAT -
     ENTRY(HFSCAT.OMVS.VAR)

  LISTCAT -
     ENTRY(MASTER.SYS1.BRODCAST)

  LISTCAT -
     ENTRY(MASTER.SYS1.HASPACE)

  LISTCAT -
     ENTRY(MASTER.SYS1.HASPCKPT)

  LISTCAT -
     ENTRY(MASTER.SYS1.HASPCKP2)

  LISTCAT -
     ENTRY(MASTER.SYS1.NUCLEUS)

  LISTCAT -
     ENTRY(MASTER.SYS1.RACF)

  LISTCAT -
     ENTRY(MASTER.SYS1.RACFSEC)

//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CHKALLOC),(4000,LT))
//*************************************************************
//*   THE FOLLOWING STEP MAKES SURE THAT THE *ONLY* POSSIBLE REASON
//*   FOR A NONZERO RETURN CODE FROM LISTCAT IS "DATA SET NOT FOUND".
//*************************************************************
//*
//CHKDSN2  EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR
//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD DSN=SUPPLIED.SCPPTENU,DISP=SHR
//         DD DSN=ISP.SISPTENU,DISP=SHR
//ISPLOG   DD DSN=&ISPLOG,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPPROF  DD DSN=&ISPPROF,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 PROFILE PREFIX(IBMUSER)
 ISPSTART CMD(%CPPEDSN CHECKRC F )
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CHKDSN2),(4000,LT))
//*
//*
//*************************************************************
//*
//*  THIS IS TO CHECK WHETHER SMS IS ACTIVE IN THE DRIVING
//*  SYSTEM. IT USES THE REXX MVSVAR FUNCTION TO CHECK IF SMS
//*  IS ACTIVE AND RETURN THE CORRESPONDING RETURN CODE.
//*
//*  IF SMS
//*       ACTIVE   ---    RETURN 0
//*     INACTIVE   ---    RETURN 4
//*  UNAVAILABLE   ---    RETURN 8
//*    ALL OTHER   ---    RETURN 12
//*
//*************************************************************
//CHKSMS4  EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPESMS NOISPF
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,CHKSMS4),(4000,LT))
//*
//*--------------------------------------------------------------------
//* DOC: STEP ALCVSAM ALLOCATES THE NEW SYSTEM'S VSAM DATASETS
//*--------------------------------------------------------------------
//*
//ALCVSAM  EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//DSILOGP DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//DSILOGS DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//DSISVRT DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//DSITRCP DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//DSITRCS DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//AOFSTAT DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//IPLDATA DD UNIT=3390,VOL=SER=C4CAT2,DISP=OLD
//PAGECOMM DD UNIT=3390,VOL=SER=C4CAT1,DISP=OLD
//PAGELOC1 DD UNIT=3390,VOL=SER=C4CAT1,DISP=OLD
//PAGEPLPA DD UNIT=3390,VOL=SER=C4CAT1,DISP=OLD
//SYSIN    DD *

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS: NETVIEW LOG DATASET              */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.MSOAC.DSILOGP)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.MSOAC.DSILOGP) -
        INDEXED                           -
        KEYS (4,8)                        -
        RECSZ(125,404)                    -
        FSPC(0,0)                         -
        REUSE                             -
        SHR(2)                            -
        TRACKS(17)                -
        VOLUMES(C4CAT2) -
      ) -
      DATA                                -
       (CISZ(4096))                       -
      INDEX                               -
       (CISZ(1024))                       -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS: NETVIEW LOG DATASET              */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.MSOAC.DSILOGS)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.MSOAC.DSILOGS) -
        INDEXED                           -
        KEYS (4,8)                        -
        RECSZ(125,404)                    -
        FSPC(0,0)                         -
        REUSE                             -
        SHR(2)                            -
        TRACKS(17)                -
        VOLUMES(C4CAT2) -
      ) -
      DATA                                -
       (CISZ(4096))                       -
      INDEX                               -
       (CISZ(1024))                       -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS: NETVIEW SAVE/RESTORE DATASET     */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.MSOAC.DSISVRT)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.MSOAC.DSISVRT) -
        INDEXED                           -
        SHR(2)                            -
        VOLUMES(C4CAT2) -
        TRACKS(35 15) -
        KEYS(54 0)                        -
        RECSZ(64 0512)                    -
        FSPC(5 5)                         -
        REUSE)                            -
      DATA                                -
       (CISZ(8192))                       -
      INDEX                               -
       (CISZ(4096))                       -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS: NETVIEW TRACE DATASET            */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.MSOAC.DSITRCP)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.MSOAC.DSITRCP) -
        INDEXED                           -
        KEYS (4,8)                        -
        RECSZ(114,146)                    -
        FSPC(0,0)                         -
        REUSE                             -
        SHR(2)                            -
        TRACKS(18)                -
        VOLUMES(C4CAT2) -
      ) -
      DATA                                -
       (CISZ(16384))                      -
      INDEX                               -
       (CISZ(512))                        -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS: NETVIEW TRACE DATASET            */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.MSOAC.DSITRCS)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.MSOAC.DSITRCS) -
        INDEXED                           -
        KEYS (4,8)                        -
        RECSZ(114,146)                    -
        FSPC(0,0)                         -
        REUSE                             -
        SHR(2)                            -
        TRACKS(18)                -
        VOLUMES(C4CAT2) -
      ) -
      DATA                                -
       (CISZ(16384))                      -
      INDEX                               -
       (CISZ(512))                        -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS AUTOMATION STATUS FILE DATASET    */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.MSOAC.STATS)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.MSOAC.STATS) -
        TRACKS(31) -
        VOLUMES(C4CAT2) -
        KEYS(20 0)                        -
        RECSZ(252 252)                    -
        FSPC(0 0)                         -
        SHR(2)                            -
        CISZ(512)                         -
        INDEXED                           -
        REUSE)                            -
      INDEX                               -
       (CISZ(512))                 -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE MSYS FOR OPERATIONS: IPLDATA DATASET                  */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(PRIME.MSOPS.SHARED.IPLDATA)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(PRIME.MSOPS.SHARED.IPLDATA) -
        TRACKS(47) -
        INDEXED                           -
        NOREUSE                           -
        KEYS (20,0)                       -
        RECSZ(90,4089)                    -
        SHR(4 3)                          -
        VOLUMES(C4CAT2) -
        ) -
        CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE COMMON PAGE DATA SET                                  */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.PAGE.EXMP.COMMON)

  IF LASTCC GT 0 THEN DO
    DEFINE PAGESPACE( -
        FILE(PAGECOMM) -
        NAME(MASTER.PAGE.EXMP.COMMON) -
        TRACKS(808) -
        VOLUME(C4CAT1) ) -
      CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE LOCAL PAGE DATA SET                                   */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.PAGE.EXMP.LOCAL1)

  IF LASTCC GT 0 THEN DO
    DEFINE PAGESPACE(  -
        FILE(PAGELOC1) -
        NAME(MASTER.PAGE.EXMP.LOCAL1) -
        TRACKS(12301) -
        VOLUME(C4CAT1) ) -
      CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE PLPA PAGE DATA SET                                    */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.PAGE.EXMP.PLPA)

  IF LASTCC GT 0 THEN DO
    DEFINE PAGESPACE( -
        FILE(PAGEPLPA) -
        NAME(MASTER.PAGE.EXMP.PLPA) -
        TRACKS(3231) -
        VOLUME(C4CAT1) ) -
      CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SMP/E CSI's                                           */
  /* -------------------------------------------------------------- */
    LISTCAT -
        ENTRY(PRIME.SMPE.GLOBAL.CSI)

  IF LASTCC GT 0 THEN  DO
    DEFINE CLUSTER( -
        NAME(PRIME.SMPE.GLOBAL.CSI) -
        TRACKS(438 44) -
        FREESPACE(0 7)  -
        KEYS(24 0)         -
        RECORDSIZE(24 143)  -
        SHAREOPTIONS(2 3)-
        VOLUMES(C4CAT2) -
       ) -
      DATA(CONTROLINTERVALSIZE(8192)) -
      INDEX(CONTROLINTERVALSIZE(2560)) -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SMP/E CSI's                                           */
  /* -------------------------------------------------------------- */
    LISTCAT -
        ENTRY(PRIME.SMPE.MVS.DLIB.CSI)

  IF LASTCC GT 0 THEN  DO
    DEFINE CLUSTER( -
        NAME(PRIME.SMPE.MVS.DLIB.CSI) -
        TRACKS(1607 161) -
        FREESPACE(0 7)  -
        KEYS(24 0)         -
        RECORDSIZE(24 143)  -
        SHAREOPTIONS(2 3)-
        VOLUMES(C4DLB2) -
       ) -
      DATA(CONTROLINTERVALSIZE(8192)) -
      INDEX(CONTROLINTERVALSIZE(2560)) -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SMP/E CSI's                                           */
  /* -------------------------------------------------------------- */
    LISTCAT -
        ENTRY(PRIME.SMPE.MVS.TARGET.CSI)

  IF LASTCC GT 0 THEN  DO
    DEFINE CLUSTER( -
        NAME(PRIME.SMPE.MVS.TARGET.CSI) -
        TRACKS(1786 179) -
        FREESPACE(0 7)  -
        KEYS(24 0)         -
        RECORDSIZE(24 143)  -
        SHAREOPTIONS(2 3)-
        VOLUMES(C4DLB2) -
       ) -
      DATA(CONTROLINTERVALSIZE(8192)) -
      INDEX(CONTROLINTERVALSIZE(2560)) -
      CATALOG(PRIME14.USERCAT)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SMS ACDS dataset                                      */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.DFSMS.ACDS)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                      -
        NAME(MASTER.SYS1.DFSMS.ACDS)     -
        LINEAR                      -
        VOLUMES(C4CAT1) -
        TRACKS(81,9) -
        SHAREOPTIONS(3,3)  )        -
        CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SMS COMMDS dataset                                    */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.DFSMS.COMMDS)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(                       -
        NAME(MASTER.SYS1.DFSMS.COMMDS) -
        LINEAR                       -
        VOLUMES(C4CAT1) -
        TRACKS(81,9) -
        SHAREOPTIONS(3,3)  )        -
        CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SMS SCDS dataset                                      */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.DFSMS.SCDS)

  IF LASTCC GT 0 THEN DO
    DEFINE   CLUSTER(               -
        NAME(MASTER.SYS1.DFSMS.SCDS)        -
        LINEAR               -
        VOLUMES(C4CAT1) -
        TRACKS(81,9) -
        SHAREOPTIONS(2,3)  ) -
        CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE IODF dataset                                          */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.IODF00)

  IF LASTCC GT 0 THEN DO
    DEFINE CLUSTER( -
        NAME(MASTER.SYS1.IODF00.CLUSTER) -
        LINEAR -
        TRACKS(146) -
        VOLUMES(C4CAT1) -
        ) +
        DATA (NAME (MASTER.SYS1.IODF00)) +
        CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE FIRST SMF DATA SET                                    */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.MAN1)

  IF LASTCC GT 0 THEN DO
    DEFINE CLUSTER( -
        CONTROLINTERVALSIZE(4096) -
        TRACKS(647) -
        NAME(MASTER.SYS1.MAN1) -
        NONINDEXED -
        RECORDSIZE(4086,32767) -
        REUSE -
        SHAREOPTIONS(2) -
        SPANNED -
        SPEED -
        VOLUME(C4CAT1) ) -
      CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE SECOND SMF DATA SET                                   */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.MAN2)

  IF LASTCC GT 0 THEN DO
    DEFINE CLUSTER( -
        CONTROLINTERVALSIZE(4096) -
        TRACKS(162) -
        NAME(MASTER.SYS1.MAN2) -
        NONINDEXED -
        RECORDSIZE(4086,32767) -
        REUSE -
        SHAREOPTIONS(2) -
        SPANNED -
        SPEED -
        VOLUME(C4CAT1) ) -
      CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

  /* -------------------------------------------------------------- */
  /* ALLOCATE THIRD SMF DATA SET                                    */
  /* -------------------------------------------------------------- */

    LISTCAT -
        ENTRY(MASTER.SYS1.MAN3)

  IF LASTCC GT 0 THEN DO
    DEFINE CLUSTER( -
        CONTROLINTERVALSIZE(4096) -
        TRACKS(162) -
        NAME(MASTER.SYS1.MAN3) -
        NONINDEXED -
        RECORDSIZE(4086,32767) -
        REUSE -
        SHAREOPTIONS(2) -
        SPANNED -
        SPEED -
        VOLUME(C4CAT1) ) -
      CATALOG(CATALOG.C14.MASTER)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALCVSAM),(4000,LT))
//*
//*************************************************************
//*   ALL NON-VSAM DATA SETS ARE NOW ALLOCATED.
//*   PLEASE NOTE THAT THE IPLPARM DATA SET IS PLACED ON THE SAME
//*   VOLUME AS THE IODF DATA SET.
//*************************************************************
//*
//*************************************************************
//*   THE FOLLOWING STEP MAKES SURE THAT THE *ONLY* POSSIBLE REASON
//*   FOR A NONZERO RETURN CODE FROM LISTCAT IS "DATA SET NOT FOUND".
//*************************************************************
//*
//CHKDSN3 EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//ISPLLIB  DD DSN=SUPPLIED.EXAMPL.SCPPLOAD,DISP=SHR
//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR
//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD DSN=SUPPLIED.SCPPTENU,DISP=SHR
//         DD DSN=ISP.SISPTENU,DISP=SHR
//ISPLOG   DD DSN=&ISPLOG,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPPROF  DD DSN=&ISPPROF,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 PROFILE PREFIX(IBMUSER)
 ISPSTART CMD(%CPPEDSN CHECKRC F )
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CHKDSN3),(4000,LT))
//*
//*
//*************************************************************
//*
//*  THIS IS TO CHECK WHETHER SMS IS ACTIVE IN THE DRIVING
//*  SYSTEM. IT USES THE REXX MVSVAR FUNCTION TO CHECK IF SMS
//*  IS ACTIVE AND RETURN THE CORRESPONDING RETURN CODE.
//*
//*  IF SMS
//*       ACTIVE   ---    RETURN 0
//*     INACTIVE   ---    RETURN 4
//*  UNAVAILABLE   ---    RETURN 8
//*    ALL OTHER   ---    RETURN 12
//*
//*************************************************************
//CHKSMS5 EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPESMS NOISPF
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,CHKSMS5),(4000,LT))
//*
//ALLOC1 EXEC PGM=IDCAMS,DYNAMNBR=1010,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *

    LISTCAT -
      ENTRY(MASTER.SYS1.LINKLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.LINKLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(741)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(26805 2890) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.LPALIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.LPALIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(330)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(10211 1696) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.MACLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.MACLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(117)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24564 2935) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.MIGLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.MIGLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(306)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(6042 746) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.CSSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.CSSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(124)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(374 36) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.MODGEN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.MODGEN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(53)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(4805 611) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.LINKLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.LINKLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(238 23) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.VTAMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.VTAMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(100 10) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(104 9) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZALOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZALOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(12923 1185) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICEUSER)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICEUSER')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(93 8) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(15)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1894 200) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMSAM1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMSAM1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(79 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(156 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(378 37) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPMACS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPMACS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(265 24) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.NFSMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.NFSMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(78 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1016 306) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(44)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(2985 306) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZANMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZANMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(90 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SCNMMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SCNMMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZACMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZACMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(86)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1947 193) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SORTLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SORTLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(210 16) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICELPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICELPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SORTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SORTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(31)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(221 19) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICELINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICELINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(262 22) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMMAC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMMAC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1039 99) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.AAOPEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.AAOPEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.AAOPHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.AAOPHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(27998)         -
       SPACE(2158 220) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.AAOPMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.AAOPMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.AAOPMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.AAOPMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(46)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(986 91) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.AAOPPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.AAOPPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(24)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(404 42) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.SAOPEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.SAOPEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.SAOPMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.SAOPMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.AOP.SAOPPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.AOP.SAOPPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(24)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(404 37) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMMAC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMMAC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(255 26) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(91)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(910 95) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMPUT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMPUT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(816 84) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMSAM1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMSAM1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(79 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.AASMSAM2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.AASMSAM2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 8) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(200 14) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(473 36) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMPUT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMPUT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(816 86) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ASM.SASMSAM2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ASM.SASMSAM2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUACF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUACF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUCIDL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUCIDL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUHHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUHHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(38 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUHLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUHLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(316 37) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUHSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUHSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(92 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUIDL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUIDL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASULINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASULINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(744 68) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUSTUB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUSTUB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.AASUTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.AASUTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUACF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUACF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUCIDL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUCIDL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUIDL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUIDL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUSTUB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUSTUB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ASU.SASUTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ASU.SASUTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.BDT1.BDTSPOOL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.BDT1.BDTSPOOL')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(2048)           -
       DSORG(PS)           -
       BLKSIZE(2048)              -
       AVBLOCK(2048)         -
       SPACE(150 0) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.BDT1.MSG0001)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.BDT1.MSG0001')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(6156)           -
       DSORG(PS)           -
       BLKSIZE(6156)              -
       AVBLOCK(6156)         -
       SPACE(100 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.BDT1.TQIBITS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.BDT1.TQIBITS')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(31)           -
       DSORG(PS)           -
       BLKSIZE(31)              -
       AVBLOCK(31)         -
       SPACE(100 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.BDT1.TQIDATA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.BDT1.TQIDATA')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(3584)           -
       DSORG(PS)           -
       BLKSIZE(3584)              -
       AVBLOCK(3584)         -
       SPACE(150 0) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.BPA.ABPAHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.BPA.ABPAHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(177 18) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACBCCMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACBCCMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(11281 920) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACBCSR1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACBCSR1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(20)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(286 29) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACCNCMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACCNCMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(18662 1996) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACCNSR1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACCNSR1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(20)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(275 28) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBDLL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBDLL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1094 89) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBDLL2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBDLL2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1306 136) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBHFS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBHFS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(12)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2220 223) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBOBJ)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBOBJ')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(24)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(3548 351) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBOBJ2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBOBJ2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(39)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(5795 583) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBSR1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBSR1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(72)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(6046 602) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBSR2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBSR2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(16)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(1436 142) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBSR3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBSR3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(37)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(3109 309) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLBSR4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLBSR4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(83)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(3227 322) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLDHFS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLDHFS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2140 208) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACLDSR1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACLDSR1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACTVMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACTVMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(110 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.ACTVSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.ACTVSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCCMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCCMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(11277 1055) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCDOC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCDOC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCIMG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCIMG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCPRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCPRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCSKL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCSKL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCBCUTL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCBCUTL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNCMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNCMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(18660 1977) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNDOC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNDOC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNIMG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNIMG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNPRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNPRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(159 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNSKL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNSKL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCCNUTL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCCNUTL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBCPP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBCPP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(22)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2878 284) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBCPP2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBCPP2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(39)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(5649 569) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBDLL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBDLL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1094 89) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBDLL2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBDLL2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1306 136) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBH.C)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBH.C')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(723 71) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBH.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBH.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(48)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(3030 301) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBH.HPP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBH.HPP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(56)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(1620 162) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBH.INL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBH.INL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(25)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(1565 154) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(470 45) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLBSID)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLBSID')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(383 36) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCLDJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCLDJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCTVJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCTVJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CBC.SCTVMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CBC.SCTVMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CDS.ACDSHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CDS.ACDSHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(62 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CDS.ACDSLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CDS.ACDSLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3449 274) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CDS.ACDSSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CDS.ACDSSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CDS.SCDSSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CDS.SCDSSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AAFHMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AAFHMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(555)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1310 121) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AAFHSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AAFHSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(203 21) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.ACEEMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.ACEEMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(342)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2763 217) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.ACEEMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.ACEEMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(300)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(40304 3887) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.ACEESRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.ACEESRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(797 78) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.ACEESRC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.ACEESRC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(311 30) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.ACEESRC3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.ACEESRC3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(117 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCCPP1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCCPP1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(128 11) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(52)             -
       BLKSIZE(0)              -
       AVBLOCK(8670)         -
       SPACE(23431 2329) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(1095)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(15670 1431) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(57)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(95 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCMSEP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCMSEP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(150)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6150)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCOBJ1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCOBJ1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(99 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCSRC6)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCSRC6')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(75)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(15783 1639) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AEDCSRC7)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AEDCSRC7')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(129)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(10359 1075) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AIBMMOD3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AIBMMOD3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(443)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2228 202) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AIBMSRC3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AIBMSRC3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(203 19) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AIGZMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AIGZMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(216)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(972 83) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.AIGZSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.AIGZSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(248 24) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SAFHFORT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SAFHFORT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(53)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(148 13) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEBIND)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEBIND')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(200)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(62 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEBND2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEBND2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(44 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEECICS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEECICS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEECLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEECLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(79 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEECMAP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEECMAP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(4148 429) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEECPP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEECPP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(128 11) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEGXLT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEGXLT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(35)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1669 173) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(338 34) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH.ARPA.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH.ARPA.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(34 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(553 56) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH.NET.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH.NET.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(34 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH.NETINET.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH.NETINET.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(44 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH.SYS.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH.SYS.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(193 18) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEH.T)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEH.T')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(120)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(117 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEELIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEELIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(20)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(283 25) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEELKED)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEELKED')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(1652)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3704 335) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEELKEX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEELKEX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(77)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(508 53) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEELOCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEELOCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(657 66) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEELOCX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEELOCX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(16)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(7981 828) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEELPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEELPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1310 110) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEMSGP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEMSGP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(150)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6150)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEOBJ)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEOBJ')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(49 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEERTLS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEERTLS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(35 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEERUN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEERUN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(1084)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(17752 1481) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEERUN2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEERUN2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(500)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(43397 4168) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEESAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEESAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(26)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(991 100) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEESPC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEESPC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(60)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(100 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEESPCO)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEESPCO')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(44 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEUMAP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEUMAP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(9192 954) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SCEEUTBL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SCEEUTBL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1140 117) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SIBMCALL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SIBMCALL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SIBMCAL2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SIBMCAL2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SIBMMATH)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SIBMMATH')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(44)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(114 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CEE.SIBMTASK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CEE.SIBMTASK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CIM.ACIMHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CIM.ACIMHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(6897 434) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CIM.ACIMMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CIM.ACIMMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(130 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CIM.ACIMPLUG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CIM.ACIMPLUG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(2832 274) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CIM.SCIMXML)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CIM.SCIMXML')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(18 5) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CMX.ACMXDBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CMX.ACMXDBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(152 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CMX.ACMXHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CMX.ACMXHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(298 30) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.CMX.SCMXDBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.CMX.SCMXDBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(152 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.CMDPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.CMDPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(206 20) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.DOCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.DOCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(4120 400) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.HFSFILE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.HFSFILE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(6475)              -
       AVBLOCK(6475)         -
       SPACE(134363 22500) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.ISPPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.ISPPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(103 10) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.IVPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.IVPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(103 10) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.PARMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.PARMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(103 10) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.PGMDIR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.PGMDIR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(250)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29000 2900) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.PROCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.PROCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(103 10) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.REPORTS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.REPORTS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B A ) -
       LRECL(125)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(6160)              -
       AVBLOCK(6160)         -
       SPACE(3502 340) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.SAMPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.SAMPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(155)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(461 44) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EXMP.VTAMLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EXMP.VTAMLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(218 21) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFCLI0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFCLI0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(167 17) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFHDRS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFHDRS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(45 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(75)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(708 65) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFMSG0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFMSG0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFOBJ)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFOBJ')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(48 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(156 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFSKL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFSKL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.ACSFTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.ACSFTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFCLI0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFCLI0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(167 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFHDRS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFHDRS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(45 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(56)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(600 49) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFMSG0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFMSG0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFOBJ)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFOBJ')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(48 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(156 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFSKL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFSKL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.CSF.SCSFTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.CSF.SCSFTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.AECNEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.AECNEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.AECNHETC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.AECNHETC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(6475)              -
       AVBLOCK(6475)         -
       SPACE(27 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.AECNHEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.AECNHEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(56 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.AECNHINC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.AECNHINC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(136 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.AECNHLBR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.AECNHLBR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(306 36) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.AECNLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.AECNLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1423 164) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ECN.SECNEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ECN.SECNEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHBOK1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHBOK1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4096)         -
       SPACE(910 119) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHCLB1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHCLB1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHDAT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHDAT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V   ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(2560)         -
       SPACE(60 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHLOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHLOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(148 95) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHMSG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHMSG1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 24) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(69 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHSAM1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHSAM1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.AEPHTBL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.AEPHTBL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 24) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHBOK1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHBOK1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4096)         -
       SPACE(910 119) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHCLB1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHCLB1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHDAT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHDAT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V   ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(2560)         -
       SPACE(60 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHLOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHLOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(149 13) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHMSG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHMSG1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 24) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(69 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHSAM1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHSAM1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOX.SEPHTBL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOX.SEPHTBL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 24) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOXFONT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOXFONT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B M ) -
       LRECL(8300)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(12888)              -
       AVBLOCK(12888)         -
       SPACE(17 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOXIENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOXIENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B M ) -
       LRECL(8300)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(8304)              -
       AVBLOCK(8304)         -
       SPACE(51 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOXOENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOXOENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(138 25) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOX1ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOX1ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(60 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOX2ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOX2ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOX3ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOX3ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(184 40) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOX4ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOX4ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(63 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYAENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYAENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6000)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYBENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYBENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(213 102) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYGENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYGENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYIENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYIENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(8300)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8304)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYIPRF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYIPRF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYLENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYLENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYLEXS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYLEXS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(512)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4096)         -
       SPACE(4684 1812) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(19)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(721 464) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYMC30)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYMC30')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(108 18) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYMC40)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYMC40')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(34)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(303 57) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(59 18) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYOENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYOENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(125 47) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(59)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1405 530) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(79 24) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYSENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYSENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(49 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOYXENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOYXENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(92 36) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOY1ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOY1ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(148 17) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOY2ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOY2ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(56 19) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.AEOY4ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.AEOY4ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(137 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.BKLSHELF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.BKLSHELF')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PS)           -
       BLKSIZE(6475)              -
       AVBLOCK(6475)         -
       SPACE(100 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOXFONT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOXFONT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B M ) -
       LRECL(8300)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(12888)              -
       AVBLOCK(12888)         -
       SPACE(17 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOXIENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOXIENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B M ) -
       LRECL(8300)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(8304)              -
       AVBLOCK(8304)         -
       SPACE(51 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOXOENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOXOENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(138 25) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOX1ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOX1ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(60 11) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOX2ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOX2ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOX3ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOX3ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(184 39) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOX4ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOX4ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(63 12) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYAENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYAENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6000)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYBENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYBENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(213 101) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYGENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYGENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYIENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYIENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(8300)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8304)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYIPRF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYIPRF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYLENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYLENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYLEXS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYLEXS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(512)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4096)         -
       SPACE(4684 1812) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1029 283) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(314 148) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYMC30)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYMC30')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(108 18) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYMC40)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYMC40')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(34)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(303 58) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(59 18) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYOENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYOENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(125 47) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(59)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1405 530) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(79 25) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYSENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYSENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(49 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOYXENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOYXENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(92 36) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOY1ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOY1ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(148 17) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOY2ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOY2ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(56 19) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EOY.SEOY4ENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EOY.SEOY4ENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(137 12) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.AEPHBOOK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.AEPHBOOK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(24576)         -
       SPACE(191 17) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.AEPHCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.AEPHCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(27998)         -
       SPACE(86 8) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.AEPHGIF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.AEPHGIF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(24576)         -
       SPACE(158 16) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.AEPHLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.AEPHLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(833 67) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.AEPHSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.AEPHSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(27920)         -
       SPACE(11 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.SEPHCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.SEPHCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.SEPHSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.SEPHSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(49 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EPH.SEPHTAB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EPH.SEPHTAB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(24576)         -
       SPACE(158 16) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EQAW.AEQAMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EQAW.AEQAMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(79)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2211 205) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EQAW.AEQASRC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EQAW.AEQASRC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EQAW.SEQAAUTH)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EQAW.SEQAAUTH')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(26 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EQAW.SEQADUM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EQAW.SEQADUM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(23 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EQAW.SEQAMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EQAW.SEQAMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(26)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3615 329) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EQAW.SEQASAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EQAW.SEQASAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVACF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVACF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVDBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVDBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHDCP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHDCP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(59 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(379 38) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHDRK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHDRK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHETC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHETC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(79 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHINC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHINC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(425 47) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHLBR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHLBR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(369 38) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHTCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHTCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVHXMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVHXMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(267 28) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVIDL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVIDL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(218 22) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(128 12) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVLIBK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVLIBK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVLIBS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVLIBS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(6287 586) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.AEUVPRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.AEUVPRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVACF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVACF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVDBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVDBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(379 38) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVHDRK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVHDRK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVIDL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVIDL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(218 22) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(128 13) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVLIBK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVLIBK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVLIBS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVLIBS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.EUV.SEUVPRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.EUV.SEUVPRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFEXC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFEXC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(69 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(139 14) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(45 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFLNK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFLNK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(633 59) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.AEUVFSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.AEUVFSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFEXC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFEXC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFEXP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFEXP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(69 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(45 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFLNK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFLNK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(336 28) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(335 28) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.EUVF.SEUVFSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.EUVF.SEUVFSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.AEPWBENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.AEPWBENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4096)         -
       SPACE(92 25) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.AEPWMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.AEPWMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(89)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1103 200) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.AEPWSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.AEPWSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(114 50) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.EPWCKPT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.EPWCKPT')          -
       NEW                         -
       CATALOG                     -
       RECFM(F B  ) -
       LRECL(6160)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(100 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.EPWDUMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.EPWDUMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4160)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4160)         -
       SPACE(33 20) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.EPWLOG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.EPWLOG1')          -
       NEW                         -
       CATALOG                     -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(450 45) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.EPWLOG2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.EPWLOG2')          -
       NEW                         -
       CATALOG                     -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(450 45) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.EPWPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.EPWPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWBENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWBENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(4096)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(4096)         -
       SPACE(92 25) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWCENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWCENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(114 20) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(37 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWMOD3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWMOD3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(25 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWMOD4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWMOD4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(58)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1250 150) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(34 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(63 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.FFST.V120ESA.SEPWSRC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.FFST.V120ESA.SEPWSRC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(49 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMCDA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMCDA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMCFO)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMCFO')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMDAT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMDAT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(236 26) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMGDF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMGDF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(61 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMIMG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMIMG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(19 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMMAP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMMAP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(319)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2801 549) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMOPS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMOPS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(74 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMPCF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMPCF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(589 60) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1039 99) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.AADMSYM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.AADMSYM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(19)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(713 49) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMCDA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMCDA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMCFO)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMCFO')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMDAT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMDAT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(236 26) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMGDF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMGDF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(61 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMIMG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMIMG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(19 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMMAP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMMAP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(64)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1874 588) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMOPS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMOPS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(74 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMPCF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMPCF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(589 60) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GDDM.SADMSYM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GDDM.SADMSYM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(400)           -
       DSORG(PO)           -
       DIR(19)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(713 49) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.AGIMCLS0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.AGIMCLS0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(125 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.AGIMMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.AGIMMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.AGIMPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.AGIMPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(57)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(872 86) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.AGIMSENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.AGIMSENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(117 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.AGIMTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.AGIMTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(5150 450) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.SGIMCLS0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.SGIMCLS0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(125 11) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.SGIMLMD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.SGIMLMD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(510 57) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.SGIMMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.SGIMMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.SGIMPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.SGIMPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(57)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(872 86) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.SGIMSENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.SGIMSENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(117 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GIM.SGIMTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GIM.SGIMTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(5150 458) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDEXPC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDEXPC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDHCLI)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDHCLI')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(31 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDHDRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDHDRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(509 42) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDLNK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDLNK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1786 157) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.AGLDSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.AGLDSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(45 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.SGLDEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.SGLDEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.SGLDEXPC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.SGLDEXPC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.SGLDHDRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.SGLDHDRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.SGLDLNK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.SGLDLNK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1549 175) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GLD.SGLDSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GLD.SGLDSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(45 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GSK.AGSKHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GSK.AGSKHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(141 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GSK.AGSKLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GSK.AGSKLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(333 29) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GSK.AGSKSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GSK.AGSKSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GSK.SGSKLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GSK.SGSKLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(304 24) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.GSK.SGSKSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.GSK.SGSKSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(30 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.HCM.AEEQINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.HCM.AEEQINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(568 57) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.HCM.SEEQINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.HCM.SEEQINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(568 53) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICAHETC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICAHETC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(31 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICAHLBR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICAHLBR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(115 20) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICAHSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICAHSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICAHSCR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICAHSCR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(5689 539) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICALINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICALINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(4629 420) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICAPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICAPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.AICASAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.AICASAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.SICALMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.SICALMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1354 350) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.SICAPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.SICAPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ICA.SICASAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ICA.SICASAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQABTXT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQABTXT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQCCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQCCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1007 99) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQILIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQILIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 11) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(145)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2020 210) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.ICQ.ICQTABLS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.ICQ.ICQTABLS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(58 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IMO.AIMOHFS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IMO.AIMOHFS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(15)             -
       BLKSIZE(0)              -
       AVBLOCK(6220)         -
       SPACE(7434 832) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IMO.AIMOJCL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IMO.AIMOJCL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IMO.AIMOMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IMO.AIMOMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(9317 1050) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IMO.SIMOJCL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IMO.SIMOJCL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IMO.SIMOMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IMO.SIMOMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(12)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(5200 1400) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IMW.AIMWEMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IMW.AIMWEMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2479 235) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IMW.AIMWHENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IMW.AIMWHENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(1024)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(715 75) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IMW.AIMWSAM1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IMW.AIMWSAM1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(58 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IMW.SIMWSDCK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IMW.SIMWSDCK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IMW.SIMWTBL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IMW.SIMWTBL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AEVIMOD6)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AEVIMOD6')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AEVIMOD7)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AEVIMOD7')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AEVIMOD8)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AEVIMOD8')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGIMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGIMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGIMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGIMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGIPDB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGIPDB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGIPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGIPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGIREX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGIREX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGISKL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGISKL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGITBL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGITBL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGMODC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGMODC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(47)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(645 352) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(52 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGNMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGNMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(55 13) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGNPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGNPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(536 120) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGNPRF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGNPRF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGNPRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGNPRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(128 60) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGNREX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGNREX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2239 431) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGPWS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGPWS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 30) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.AINGSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.AINGSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 46) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SEVIMOD6)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SEVIMOD6')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SEVIMOD7)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SEVIMOD7')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SEVIMOD8)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SEVIMOD8')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGIMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGIMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGIMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGIMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGIPDB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGIPDB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGIPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGIPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGIREX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGIREX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGISKL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGISKL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGITBL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGITBL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGMODC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGMODC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(19 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1545 701) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(158 16) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGMOD3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGMOD3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(48 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGNMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGNMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(60 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGNPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGNPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(589 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGNPRF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGNPRF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(17 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGNPRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGNPRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(140 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGNREX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGNREX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2462 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGPWS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGPWS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 30) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ING.SINGSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ING.SINGSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 40) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.AIOAIBIN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.AIOAIBIN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(32512)         -
       SPACE(128 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.AIOAJAVA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.AIOAJAVA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(204)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(249 49) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.AIOALMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.AIOALMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(34)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(508 79) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.AIOAMMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.AIOAMMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(23 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.AIOASAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.AIOASAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(366 139) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.SIOAIBIN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.SIOAIBIN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(32512)         -
       SPACE(128 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.SIOAJAVA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.SIOAJAVA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(84)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(249 24) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.SIOAMMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.SIOAMMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(23 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.IOA.SIOASAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.IOA.SIOASAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(366 70) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEHLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEHLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(77 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEHSAM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEHSAM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEHSHL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEHSHL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEHSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEHSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOELMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOELMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(9680 887) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEMSGE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEMSGE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEPNLE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEPNLE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOEPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOEPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.AIOESAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.AIOESAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.SIOEEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.SIOEEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(51 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.SIOELMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.SIOELMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(12)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(9660 823) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.SIOEMSGE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.SIOEMSGE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.SIOEPNLE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.SIOEPNLE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.SIOEPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.SIOEPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.IOE.SIOESAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.IOE.SIOESAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(83 8) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(107 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(44)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(591 54) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(89)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1405 144) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(15)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1894 192) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.AISFTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.AISFTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.HASPINDX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.HASPINDX')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(4096)           -
       DSORG(PS)           -
       BLKSIZE(4096)              -
       AVBLOCK(4096)         -
       SPACE(1462 0) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(83 8) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(107 11) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(618 51) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(89)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1405 144) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISF.SISFTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISF.SISFTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPALIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPALIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(125 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(592 57) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPGENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPGENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(99)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1092 108) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPGMLI)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPGMLI')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(42)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(837 81) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPGUI)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPGUI')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2097 204) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPMACS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPMACS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(265 24) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(30)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(250 24) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(360)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3727 329) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(182)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2421 238) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(561 54) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPSASC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPSASC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(46)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(741 64) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPSENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPSENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(48)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(592 58) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(125 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.AISPTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.AISPTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPALIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPALIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(125 11) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(592 57) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPGENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPGENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(99)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1092 108) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPGMLI)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPGMLI')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(42)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(837 81) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPGUI)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPGUI')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2026 197) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPLOAD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPLOAD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(52)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(677 58) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(36)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3058 249) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(30)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(250 24) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(182)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2421 238) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(561 54) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPSASC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPSASC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(46)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(741 64) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPSENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPSENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(48)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(592 58) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(125 12) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.ISP.SISPTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.ISP.SISPTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.JAVA.AAJVSMP1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.JAVA.AAJVSMP1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.JAVA.AAJVS390)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.JAVA.AAJVS390')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(20497 1594) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.JAVA.SAJVSMP1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.JAVA.SAJVSMP1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.MSOPS.MSOAC.DSIARPT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.MSOPS.MSOAC.DSIARPT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.MSOPS.MSOAC.DSIASRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.MSOPS.MSOAC.DSIASRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.MSOPS.MSOAC.DSILIST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.MSOPS.MSOAC.DSILIST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.MSOPS.SHARED.DSIPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.MSOPS.SHARED.DSIPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ABNJPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ABNJPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(90 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ABNJPNL2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ABNJPNL2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ABNJSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ABNJSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ACNMCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ACNMCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(485 46) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ACNMINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ACNMINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(83 13) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ACNMLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ACNMLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(643)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(5447 493) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ACNMMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ACNMMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ACNMPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ACNMPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(130)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(3709 363) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ACNMSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ACNMSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(19)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(679 66) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ADSIMSG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ADSIMSG1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ADSIOPEN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ADSIOPEN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ADSIPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ADSIPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(143 11) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ADSIPRF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ADSIPRF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ADUIMSG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ADUIMSG1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEKGCAS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEKGCAS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEKGLANG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEKGLANG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(125)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3125)         -
       SPACE(48 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEKGLUTB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEKGLUTB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEKGMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEKGMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEKGPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEKGPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEKGSMP1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEKGSMP1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEZLCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEZLCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEZLINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEZLINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEZLLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEZLLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEZLPNLU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEZLPNLU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AEZLSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AEZLSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.AFLBDAT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.AFLBDAT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(1028)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(23648)         -
       SPACE(6 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.ANVULIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.ANVULIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(50 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.BNJPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.BNJPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(90 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.BNJPNL2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.BNJPNL2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.BNJSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.BNJSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.CNMCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.CNMCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(485 45) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.CNMINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.CNMINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(83 13) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.CNMLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.CNMLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(180)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3743 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.CNMPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.CNMPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(130)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(3709 364) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.CNMSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.CNMSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(19)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(694 350) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.DSIPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.DSIPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(143 11) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.DSIPRF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.DSIPRF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.NVULIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.NVULIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(50 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SCNMLNK1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SCNMLNK1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(23 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SCNMLPA1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SCNMLPA1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(26 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SDSIMSG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SDSIMSG1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 7) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SDSIOPEN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SDSIOPEN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SDUIMSG1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SDUIMSG1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGCAS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGCAS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGLANG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGLANG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(125)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3125)         -
       SPACE(48 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGLNK1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGLNK1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGLUTB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGLUTB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 0) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGPNL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGPNL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEKGSMP1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEKGSMP1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEZLCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEZLCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEZLINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEZLINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEZLLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEZLLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEZLPNLU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEZLPNLU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SEZLSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SEZLSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.NETVIEW.SFLBDAT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.NETVIEW.SFLBDAT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(1028)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(23648)         -
       SPACE(6 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVSD100.SMPDLOG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVSD100.SMPDLOG')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(510)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6120)         -
       SPACE(649 64) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVSD100.SMPDLOGA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVSD100.SMPDLOGA')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(510)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6120)         -
       SPACE(649 64) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVST100.SMPLTS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVST100.SMPLTS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(600)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(131093 10584) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVST100.SMPMTS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVST100.SMPMTS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(2161 216) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVST100.SMPSCDS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVST100.SMPSCDS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(2161 216) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVST100.SMPSTS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVST100.SMPSTS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(3121 312) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVST100.SMPTLOG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVST100.SMPTLOG')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(510)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6120)         -
       SPACE(649 64) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.MVST100.SMPTLOGA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.MVST100.SMPTLOGA')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(510)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6120)         -
       SPACE(649 64) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.SMPGLOG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.SMPGLOG')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(510)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6120)         -
       SPACE(675 67) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.SMPGLOGA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.SMPGLOGA')          -
       NEW                         -
       CATALOG                     -
       RECFM(V B  ) -
       LRECL(510)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(6120)         -
       SPACE(675 67) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.SMPE.SMPPTS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.SMPE.SMPPTS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(1200)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(144266 9000) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AACBCNTL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AACBCNTL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(138 14) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AADFMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AADFMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AADRLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AADRLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(55)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(683 61) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AADRYLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AADRYLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(69 7) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AAPPDAT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AAPPDAT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AAPPDAT4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AAPPDAT4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(213)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(213)         -
       SPACE(720 53) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AAPPMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AAPPMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(20)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(396 35) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AAPPMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AAPPMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(14)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(314 28) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AAPPSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AAPPSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTCLI0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTCLI0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(44 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1016 306) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(35)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(310 79) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(73 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABDTSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABDTSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(104 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABLSCLI0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABLSCLI0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(2028 288) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABLSKEL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABLSKEL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(73 12) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABLSMSG0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABLSMSG0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(79 11) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABLSPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABLSPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(145)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(2926 369) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABLSTBL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABLSTBL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(69 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABMFMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABMFMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(226 18) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABPXEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABPXEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(107 9) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABPXMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABPXMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(75 6) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABPXMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABPXMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(151)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1916 174) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABPXPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABPXPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(16)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(191 19) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABPXSPC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABPXSPC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(41 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ABPXTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ABPXTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDEHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDEHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(15 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDHENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDHENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(464)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2759 492) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(16)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(128 24) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(101)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2671 471) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDMOD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDMOD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(52 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(25)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(414 84) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDTEMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDTEMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(117 22) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBDTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBDTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBRDBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBRDBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACBRMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACBRMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(129)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1178 107) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACDMMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACDMMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(24)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(268 21) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACDRMODS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACDRMODS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(83 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACDRTABL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACDRTABL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1727 169) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACLMMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACLMMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(135)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2004 173) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACMDLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACMDLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(30)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(293 32) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACSSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACSSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(119)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(366 38) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNHF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNHF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(25 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNIMG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNIMG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(7242 1323) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(180 12) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(27 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNMJPN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNMJPN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(22)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(223 16) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNREXX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNREXX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(96 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ACUNTBL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ACUNTBL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(473)             -
       BLKSIZE(0)              -
       AVBLOCK(27904)         -
       SPACE(1158 120) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADBBLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADBBLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(23)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(413 44) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADFMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADFMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADFPMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADFPMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(14)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(223 19) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADFQMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADFQMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADFQPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADFQPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(209 20) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADFQPSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADFQPSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(102 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(745 70) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTLLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTLLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(218)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1823 177) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(244 27) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(247)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(4501 507) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTPSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTPSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(26)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(1257 138) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(188 30) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADGTTSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADGTTSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(30 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ADMSSVM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ADMSSVM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(138)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(326 30) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AEDGEXE1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AEDGEXE1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(512 37) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AEDGMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AEDGMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AEDGMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AEDGMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(27)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(398 35) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AEDGPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AEDGPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(50)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(973 93) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AEDGPSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AEDGPSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(14)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(337 32) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AEDGSRC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AEDGSRC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(107 9) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBCLS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBCLS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(167 15) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(260 25) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(48 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(118)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3242 298) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(116)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2009 197) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBPWSV)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBPWSV')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(7069 387) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(55 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AERBTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AERBTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(48 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AFOMDATA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AFOMDATA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(793 77) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AFOMHDRS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AFOMHDRS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(138 12) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AFOMHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AFOMHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(68)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(54374 5387) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AFOMMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AFOMMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(36)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(7031 635) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AFOMOBJ)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AFOMOBJ')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(25)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(303 29) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AGDEMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AGDEMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(42)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(520 46) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AGENLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AGENLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(63 31) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AGFTAJL1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AGFTAJL1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AGFTAMD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AGFTAMD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(187 16) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AGFUMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AGFUMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(286 25) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(44)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(2985 307) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(2590)         -
       SPACE(96 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(48)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(789 71) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(89 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(652 65) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHASSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHASSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(11147 1144) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(33)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1549 161) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AHELPENP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AHELPENP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(218 21) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICECLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICECLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICELIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICELIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(82)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(734 67) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICEMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICEMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICEPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICEPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(35)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(572 51) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICESAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICESAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(69 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICESLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICESLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICESRCE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICESRCE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICETLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICETLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICEUSER)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICEUSER')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(93 8) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQAB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQAB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQILIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQILIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(145)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2020 201) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQMAC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQMAC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQMAC3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQMAC3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQMAC4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQMAC4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(58 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AICQMAC5)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AICQMAC5')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1007 99) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIEAHDR)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIEAHDR')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(180 17) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIEWMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIEWMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(46)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(700 62) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIFALIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIFALIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(90 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIGDVBS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIGDVBS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(4100)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(47 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIKYHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIKYHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(5473 418) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIMAGE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIMAGE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(3831 378) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AIMFMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AIMFMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(89 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AINDLMD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AINDLMD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(31 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTASGD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTASGD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(512)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(366 35) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTASN1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTASN1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(1024)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(77 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTCMIP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTCMIP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTDAT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTDAT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(6156)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(256 28) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTDAT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTDAT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(51 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTGDMO)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTGDMO')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(500)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8000)         -
       SPACE(797 84) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AISTMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AISTMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(104 9) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AITYHFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AITYHFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(257 50) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ALINKLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ALINKLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(132)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1217 181) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ALPALIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ALPALIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(23)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(168 20) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AMACLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AMACLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(102)             -
       BLKSIZE(0)              -
       AVBLOCK(8880)         -
       SPACE(16154 1916) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AMIGLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AMIGLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(155)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1091 107) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AMODGEN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AMODGEN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(53)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(4805 613) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AMSGENP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AMSGENP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(1040)         -
       SPACE(418 48) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AMSGENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AMSGENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(1040)         -
       SPACE(1635 321) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ANFSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ANFSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1097 175) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ANFSMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ANFSMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(78 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ANFSSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ANFSSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(187 19) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ANFSTARB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ANFSTARB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(264)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(176 21) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ANUCLEUS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ANUCLEUS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(46)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(332 44) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSACB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSACB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(75)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(853 77) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSA0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSA0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(88)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1002 90) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSA1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSA1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(61)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(793 71) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSBN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSBN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(182)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1981 179) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSB0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSB0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(33 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSB3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSB3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(139)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1241 120) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSCA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSCA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(49 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSCD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSCD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(156)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1364 239) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSCE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSCE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(71 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(20 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSC5)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSC5')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(891)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(10428 2030) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSC6)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSC6')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(74 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(133)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1021 95) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSD7)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSD7')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(63 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSD8)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSD8')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(22)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(149 13) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSG0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSG0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSJSC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSJSC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(33 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOST3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOST3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(132 19) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOST4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOST4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(141)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1190 112) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSU0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSU0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(187)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2498 237) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOSXCF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOSXCF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(114)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1489 133) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS00)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS00')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(105 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS04)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS04')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(63 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS05)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS05')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(30 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS06)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS06')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(13)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(105 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS11)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS11')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(91 10) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS12)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS12')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(106)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1679 287) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS24)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS24')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(73 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS26)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS26')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(770)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(6719 611) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS28)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS28')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(181)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1883 171) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AOS32)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AOS32')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(96)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(631 58) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ASAMPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ASAMPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(48)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(5694 1125) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ASSFMOD0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ASSFMOD0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(24)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(222 19) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ATSOMAC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ATSOMAC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(12)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(687 74) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.AUADS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.AUADS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.BDT.INITS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.BDT.INITS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(48 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.CBRDBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.CBRDBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.CIPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.CIPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(66 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.CMDLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.CMDLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(58)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(559 51) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.EXMP.LOGREC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.EXMP.LOGREC')          -
       NEW                         -
       CATALOG                     -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PS)           -
       BLKSIZE(32760)              -
       AVBLOCK(1944)         -
       SPACE(1290 0) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DAE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DAE')          -
       NEW                         -
       CATALOG                     -
       RECFM(F B  ) -
       LRECL(255)           -
       DSORG(PS)           -
       BLKSIZE(0)              -
       AVBLOCK(18870)         -
       SPACE(50 5) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DBBLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DBBLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(23)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(408 42) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DFQLLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DFQLLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(60 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DFQMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DFQMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DFQPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DFQPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(209 20) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DGTCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DGTCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(745 73) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DGTLLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DGTLLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(104)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1614 140) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DGTMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DGTMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(244 26) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DGTPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DGTPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(247)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(4501 483) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DGTSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DGTSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(188 22) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DGTTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DGTTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DUMP00)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DUMP00')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(4160)           -
       DSORG(PS)           -
       BLKSIZE(4160)              -
       AVBLOCK(4160)         -
       SPACE(2137 0) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DUMP01)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DUMP01')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(4160)           -
       DSORG(PS)           -
       BLKSIZE(4160)              -
       AVBLOCK(4160)         -
       SPACE(2137 0) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.DUMP02)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.DUMP02')          -
       NEW                         -
       CATALOG                     -
       RECFM(F   ) -
       LRECL(4160)           -
       DSORG(PS)           -
       BLKSIZE(4160)              -
       AVBLOCK(4160)         -
       SPACE(2137 0) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.GMJD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.GMJD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(58 10) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(33)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(1549 161) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HELPENP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HELPENP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(218 21) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HHRFCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HHRFCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HHRFMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HHRFMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 6) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HHRFPANL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HHRFPANL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(53)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1078 106) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HHRFSKEL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HHRFSKEL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(369 36) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HRFCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HRFCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HRFMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HRFMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HRFPANL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HRFPANL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(53)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1078 106) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.HRFSKEL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.HRFSKEL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(369 36) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IBM.APARMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IBM.APARMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(75 11) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IBM.APROCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IBM.APROCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IBM.PARMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IBM.PARMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(118 17) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IBM.PROCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IBM.PROCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(59 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IGDVBS1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IGDVBS1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(4100)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(47 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IMAGELIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IMAGELIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(47)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(324 14) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.IPLPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.IPLPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(80)         -
       SPACE(1919 10) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.ISAMLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.ISAMLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(20)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(147 25) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.MSGENP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.MSGENP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(1040)         -
       SPACE(418 48) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.MSGENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.MSGENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(1040)         -
       SPACE(1635 289) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.NFSLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.NFSLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1047 169) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.NFSSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.NFSSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(187 18) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.NFSTARB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.NFSTARB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(264)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6144)         -
       SPACE(176 21) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.PARMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.PARMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(49 155) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.PROCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.PROCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 58) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SACBCNTL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SACBCNTL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(138 12) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SADRYLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SADRYLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(69 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SAMPLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SAMPLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(59)             -
       BLKSIZE(0)              -
       AVBLOCK(3120)         -
       SPACE(27108 4534) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SAPPDAT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SAPPDAT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SAPPDAT4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SAPPDAT4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(213)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(213)         -
       SPACE(720 53) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SAPPMOD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SAPPMOD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1031 84) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SAPPSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SAPPSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTCLI0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTCLI0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(44 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTCMD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTCMD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTHELP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTHELP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(12)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(173 42) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(28 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(30 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTMSG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTMSG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(73 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBDTSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBDTSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(104 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBLSCLI0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBLSCLI0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(2028 288) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBLSKEL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBLSKEL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(73 12) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBLSMSG0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBLSMSG0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(79 11) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBLSPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBLSPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(145)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(2926 369) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBLSTBL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBLSTBL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(69 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBPXEXEC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBPXEXEC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(107 9) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBPXMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBPXMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(75 6) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBPXPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBPXPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(16)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(191 19) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SBPXTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SBPXTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCBDCLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCBDCLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCBDHENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCBDHENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(464)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2759 492) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCBDMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCBDMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(16)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(128 12) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCBDPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCBDPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(25)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(414 42) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCBDTEMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCBDTEMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(114 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCBDTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCBDTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCDRTABL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCDRTABL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1727 169) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNHF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNHF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(25 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNIMG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNIMG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(7242 1323) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNJCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNJCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(27 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNMJPN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNMJPN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNREXX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNREXX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SCUNTBL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SCUNTBL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(473)             -
       BLKSIZE(0)              -
       AVBLOCK(27904)         -
       SPACE(1158 120) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SDFQPSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SDFQPSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(102 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SDGTPSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SDGTPSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(26)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(1257 133) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SDGTTSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SDGTTSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(30 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SDMSSVM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SDMSSVM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(138)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(325 30) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SDMSSVMS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SDMSSVMS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SDWWDLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SDWWDLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(22 70) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SEDGEXE1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SEDGEXE1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(512 37) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SEDGMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SEDGMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(72 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SEDGPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SEDGPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(50)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(973 93) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SEDGPSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SEDGPSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(14)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(337 32) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBCLS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBCLS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(167 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(35)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(3328 283) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBLPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBLPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(62 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(48 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(116)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2009 197) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBPWSV)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBPWSV')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(7069 387) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBT)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBT')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(55 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SERBTENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SERBTENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(48 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SFOMDATA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SFOMDATA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(255)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(793 77) -
       UNIT(3390)            -
       VOLUME(C4USS1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SFOMHDRS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SFOMHDRS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4USS1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SFOMOBJ)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SFOMOBJ')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(25)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(303 29) -
       UNIT(3390)            -
       VOLUME(C4USS1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASLINK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASLINK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(464 39) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(2590)         -
       SPACE(96 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASMIG)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASMIG')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(35)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(284 25) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASPARM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASPARM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASPNL0)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASPNL0')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(89 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASSAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASSAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(652 65) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SHASSRC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SHASSRC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(17)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(11147 1537) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICECLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICECLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(34 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICEMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICEMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(37 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICEPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICEPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(35)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(572 51) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICEPROC)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICEPROC')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICESAMP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICESAMP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(69 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICESLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICESLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICESRCE)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICESRCE')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(27 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SICETLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SICETLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(20 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SIEAHDR.H)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SIEAHDR.H')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(180 17) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SIFALIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SIFALIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(74 11) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SIOALMOD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SIOALMOD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(414 37) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTASGD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTASGD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(512)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(366 35) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTASN1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTASN1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(1024)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8192)         -
       SPACE(77 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(84)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(630 51) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTCMIP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTCMIP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTDAT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTDAT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(6156)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(256 28) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTDAT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTDAT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(259)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6475)         -
       SPACE(51 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SISTGDMO)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SISTGDMO')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(500)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8000)         -
       SPACE(797 84) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.SVCLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.SVCLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(27 0) -
       UNIT(3390)            -
       VOLUME(C4RES1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.VTAMLIB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.VTAMLIB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(69)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(2455 198) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.VTAMLST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.VTAMLST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(6160)         -
       SPACE(24 25) -
       UNIT(3390)            -
       VOLUME(C4CAT2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.SYS1.WLM.DEF)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.SYS1.WLM.DEF')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(100)             -
       BLKSIZE(6160)              -
       AVBLOCK(6160)         -
       SPACE(150 0) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZADBR1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZADBR1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAMAC1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAMAC1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(271 24) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAMAC2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAMAC2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(78)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2093 204) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAMAC3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAMAC3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(19)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(826 80) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAMODS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAMODS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(LIBRARY)            -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(507)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(13613 1294) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZARNT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZARNT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(60)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(519 149) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZARNT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZARNT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(101 9) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZARNT3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZARNT3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(372 36) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZARNT4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZARNT4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(55 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAROE1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAROE1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(57)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(575 132) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAROE2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAROE2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAROE3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAROE3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(459 46) -
       UNIT(3390)            -
       VOLUME(C4DLB2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZASMP1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZASMP1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(83)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(4661 464) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAXLTD)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAXLTD')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F   ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(256)              -
       AVBLOCK(256)         -
       SPACE(162 44) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAXLTK)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAXLTK')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(5124)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(528 52) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAXLT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAXLT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(58 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAXLT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAXLT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.AEZAXLT3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.AEZAXLT3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(231)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(4712 471) -
       UNIT(3390)            -
       VOLUME(C4DLB1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZACMTX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZACMTX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(150)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(293 25) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADBCX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADBCX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(231)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(2007 196) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADBRM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADBRM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADEFS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADEFS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADPIL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADPIL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(39 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALLOC1),(4000,LT))
//*
//*************************************************************
//*   THE FOLLOWING STEP MAKES SURE THAT THE *ONLY* POSSIBLE REASON
//*   FOR A NONZERO RETURN CODE FROM LISTCAT IS "DATA SET NOT FOUND".
//*************************************************************
//*
//CHKDSN4 EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//ISPLLIB  DD DSN=SUPPLIED.EXAMPL.SCPPLOAD,DISP=SHR
//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR
//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD DSN=SUPPLIED.SCPPTENU,DISP=SHR
//         DD DSN=ISP.SISPTENU,DISP=SHR
//ISPLOG   DD DSN=&ISPLOG,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPPROF  DD DSN=&ISPPROF,
//            DISP=NEW,UNIT=SYSALLDA,SPACE=(CYL,(1,1,1)),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 PROFILE PREFIX(IBMUSER)
 ISPSTART CMD(%CPPEDSN CHECKRC F )
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CHKDSN4),(4000,LT))
//*
//*
//*************************************************************
//*
//*  THIS IS TO CHECK WHETHER SMS IS ACTIVE IN THE DRIVING
//*  SYSTEM. IT USES THE REXX MVSVAR FUNCTION TO CHECK IF SMS
//*  IS ACTIVE AND RETURN THE CORRESPONDING RETURN CODE.
//*
//*  IF SMS
//*       ACTIVE   ---    RETURN 0
//*     INACTIVE   ---    RETURN 4
//*  UNAVAILABLE   ---    RETURN 8
//*    ALL OTHER   ---    RETURN 12
//*
//*************************************************************
//CHKSMS6 EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPESMS NOISPF
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,CHKSMS6),(4000,LT))
//*
//ALLOC2 EXEC PGM=IDCAMS,DYNAMNBR=1010,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADSIL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADSIL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(198 15) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADSIM)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADSIM')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZADSIP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZADSIP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAINST)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAINST')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(41)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(1235 124) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZALIBN)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZALIBN')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(34)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(67 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZALNK2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZALNK2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(112 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZALPA)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZALPA')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(29 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAMENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAMENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(24 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZANCLS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZANCLS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(260 26) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZANPNL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZANPNL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(18)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(138 13) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAOLDX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAOLDX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(27 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAPENU)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAPENU')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(66 6) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZARNT1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZARNT1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(60)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(519 149) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZARNT2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZARNT2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(101 9) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZARNT3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZARNT3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(372 36) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZARNT4)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZARNT4')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(55 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAROE1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAROE1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(57)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(575 132) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAROE2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAROE2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAROE3)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAROE3')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(459 46) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZARPCL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZARPCL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(30)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(73 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZATCP)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZATCP')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(11)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(1208 100) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZATCPX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZATCPX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(58 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZATELX)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZATELX')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(41 5) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAXAWL)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAXAWL')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(39)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(111 10) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAXLD1)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAXLD1')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F   ) -
       LRECL(256)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(256)              -
       AVBLOCK(256)         -
       SPACE(162 44) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAXLD2)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAXLD2')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(V B  ) -
       LRECL(5124)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(528 52) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAXMLB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAXMLB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(141)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(399 35) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAXTLB)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAXTLB')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(89)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(146 13) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(MASTER.TCPIP.SEZAX11L)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('MASTER.TCPIP.SEZAX11L')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(U   ) -
       LRECL(0)           -
       DSORG(PO)           -
       DIR(220)             -
       BLKSIZE(32760)              -
       AVBLOCK(6144)         -
       SPACE(429 39) -
       UNIT(3390)            -
       VOLUME(C4RES2)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL

    LISTCAT -
      ENTRY(PRIME.TCPIVP.TCPPARMS)

  IF LASTCC GT 0 THEN DO
    ALLOCATE -
       DSNAME('PRIME.TCPIVP.TCPPARMS')          -
       NEW                         -
       CATALOG                     -
       DSNTYPE(PDS)                -
       RECFM(F B  ) -
       LRECL(80)           -
       DSORG(PO)           -
       DIR(10)             -
       BLKSIZE(0)              -
       AVBLOCK(8800)         -
       SPACE(16 5) -
       UNIT(3390)            -
       VOLUME(C4CAT1)

  END

  IF LASTCC = 0 THEN SET MAXCC = 0
  ELSE CANCEL
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALLOC2),(4000,LT))
//*
//*
//*************************************************************
//*
//*  THIS IS TO CHECK WHETHER SMS IS ACTIVE IN THE DRIVING
//*  SYSTEM. IT USES THE REXX MVSVAR FUNCTION TO CHECK IF SMS
//*  IS ACTIVE AND RETURN THE CORRESPONDING RETURN CODE.
//*
//*  IF SMS
//*       ACTIVE   ---    RETURN 0
//*     INACTIVE   ---    RETURN 4
//*  UNAVAILABLE   ---    RETURN 8
//*    ALL OTHER   ---    RETURN 12
//*
//*************************************************************
//CHKSMS7 EXEC PGM=IKJEFT1B
//SYSEXEC  DD DSN=SUPPLIED.EXAMPL.SCPPCENU,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  %CPPESMS NOISPF
/*
//*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,CHKSMS7),(4000,LT))
//*
//*--------------------------------------------------------------------
//* DOC: STEP ALCCDS ALLOCATES THE NEW SYSPLEX COUPLE DATASETS
//*--------------------------------------------------------------------
//ALCCDS   EXEC PGM=IXCL1DSU,COND=(4000,LT)
//STEPLIB   DD DSN=SYS1.MIGLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN     DD *
  /* -------------------------------------------------------------- */
  /* ALLOCATE SYSTEM LOGGER COUPLE DATASET LOGCDS01                 */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.LOGR.CDS01)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(LOGR)
         ITEM NAME(LSR) NUMBER(10)
         ITEM NAME(LSTRR) NUMBER(10)
         ITEM NAME(DSEXTENT) NUMBER(10)
  /* -------------------------------------------------------------- */
  /* ALLOCATE SYSTEM LOGGER COUPLE DATASET LOGCDS02                 */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.LOGR.CDS02)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(LOGR)
         ITEM NAME(LSR) NUMBER(10)
         ITEM NAME(LSTRR) NUMBER(10)
         ITEM NAME(DSEXTENT) NUMBER(10)
  /* -------------------------------------------------------------- */
  /* ALLOCATE SYSTEM LOGGER COUPLE DATASET LOGCDS03                 */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.LOGR.CDS03)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(LOGR)
         ITEM NAME(LSR) NUMBER(10)
         ITEM NAME(LSTRR) NUMBER(10)
         ITEM NAME(DSEXTENT) NUMBER(10)
  /* -------------------------------------------------------------- */
  /* ALLOCATE WLM COUPLE DATASET WLMCDS1                            */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.WLM.CDS01)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(WLM)
         ITEM NAME(APPLENV) NUMBER(100)
         ITEM NAME(POLICY) NUMBER(10)
         ITEM NAME(SCHENV) NUMBER(100)
         ITEM NAME(SRVCLASS) NUMBER(30)
         ITEM NAME(SVAEAEXT) NUMBER(5)
         ITEM NAME(SVDCREXT) NUMBER(5)
         ITEM NAME(SVDEFEXT) NUMBER(5)
         ITEM NAME(SVSEAEXT) NUMBER(5)
         ITEM NAME(WORKLOAD) NUMBER(35)
  /* -------------------------------------------------------------- */
  /* ALLOCATE WLM COUPLE DATASET WLMCDS2                            */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.WLM.CDS02)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(WLM)
         ITEM NAME(APPLENV) NUMBER(100)
         ITEM NAME(POLICY) NUMBER(10)
         ITEM NAME(SCHENV) NUMBER(100)
         ITEM NAME(SRVCLASS) NUMBER(30)
         ITEM NAME(SVAEAEXT) NUMBER(5)
         ITEM NAME(SVDCREXT) NUMBER(5)
         ITEM NAME(SVDEFEXT) NUMBER(5)
         ITEM NAME(SVSEAEXT) NUMBER(5)
         ITEM NAME(WORKLOAD) NUMBER(35)
  /* -------------------------------------------------------------- */
  /* ALLOCATE WLM COUPLE DATASET WLMCDS3                            */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.WLM.CDS03)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(WLM)
         ITEM NAME(APPLENV) NUMBER(100)
         ITEM NAME(POLICY) NUMBER(10)
         ITEM NAME(SCHENV) NUMBER(100)
         ITEM NAME(SRVCLASS) NUMBER(30)
         ITEM NAME(SVAEAEXT) NUMBER(5)
         ITEM NAME(SVDCREXT) NUMBER(5)
         ITEM NAME(SVDEFEXT) NUMBER(5)
         ITEM NAME(SVSEAEXT) NUMBER(5)
         ITEM NAME(WORKLOAD) NUMBER(35)
  /* -------------------------------------------------------------- */
  /* ALLOCATE SYSPLEX COUPLE DATASET XCFCDS01                       */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.XCF.CDS01)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(SYSPLEX)
       ITEM NAME(GROUP)    NUMBER(50)
       ITEM NAME(MEMBER)   NUMBER(100)
       ITEM NAME(GRS)      NUMBER(1)
  /* -------------------------------------------------------------- */
  /* ALLOCATE SYSPLEX COUPLE DATASET XCFCDS02                       */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.XCF.CDS02)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(SYSPLEX)
       ITEM NAME(GROUP)    NUMBER(50)
       ITEM NAME(MEMBER)   NUMBER(100)
       ITEM NAME(GRS)      NUMBER(1)
  /* -------------------------------------------------------------- */
  /* ALLOCATE SYSPLEX COUPLE DATASET XCFCDS03                       */
  /* -------------------------------------------------------------- */
  DEFINEDS SYSPLEX(LOCAL)
       DSN(MASTER.SYS1.XCF.CDS03)
       VOLSER(C4CAT1)
       MAXSYSTEM(8)
       CATALOG
    DATA TYPE(SYSPLEX)
       ITEM NAME(GROUP)    NUMBER(50)
       ITEM NAME(MEMBER)   NUMBER(100)
       ITEM NAME(GRS)      NUMBER(1)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALCCDS),(4000,LT))
//*
./ ADD NAME=B4HASPAL 0114-04350-04350-1300-00036-00024-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//ALCONTIG EXEC PGM=IEFBR14,COND=(4000,LT)
//HASPCKPT DD DSN=SYS1.HASPCKPT,
//      DISP=(NEW,KEEP,DELETE),
//      UNIT=3390,
//      VOL=SER=C4SPL1,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(3,0),,CONTIG)
//HASPCKP2 DD DSN=SYS1.HASPCKP2,
//      DISP=(NEW,KEEP,DELETE),
//      UNIT=3390,
//      VOL=SER=C4SPL1,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(3,0),,CONTIG)
//HASPACE DD DSN=SYS1.HASPACE,
//      DISP=(NEW,KEEP,DELETE),
//      UNIT=3390,
//      VOL=SER=C4SPL1,
//      DCB=(BLKSIZE=4096,RECFM=F,
//      LRECL=4096,
//      DSORG=PS),
//          SPACE=(CYL,(3300,0),,CONTIG)
./ ADD NAME=B5RESTOR 0114-04350-04350-1300-06068-06068-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: LOAD ALL DATASETS FROM TAPE.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*
//* NOTE:  Multi-volume data sets are supported.  The job may require
//*        more than 1 Tape Drive.
//*
//*--------------------------------------------------------------------
//*
//IEBCAA#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.EXMP.HFSFILE,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.EXMP.HFSFILE,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AA))
//OUT0002 DD DSN=MASTER.SYS1.LPALIB,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.SYS1.LPALIB,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AA))
//OUT0003 DD DSN=MASTER.GDDM.AADMMAP,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMMAP,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AA))
//SYSIN    DD *
 COPY    INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPYMOD INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPY    INDD=IN0003,OUTDD=OUT0003,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAA#1),(4000,LT))
//*
//IEBCAB#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.SMPE.SMPPTS,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AB))
//OUT0002 DD DSN=MASTER.CBC.ACBCCMP,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACBCCMP,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AB))
//OUT0003 DD DSN=MASTER.SYS1.DGTLLIB,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DGTLLIB,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AB))
//OUT0004 DD DSN=MASTER.SYS1.UADS,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.SYS1.UADS,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AB))
//SYSIN    DD *
 COPY    INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPYMOD INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPY    INDD=IN0004,OUTDD=OUT0004,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAB#1),(4000,LT))
//*
//IEBCAC#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=PRIME.SMPE.MVST100.SMPLTS,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.SMPE.MVST100.SMPLTS,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AC))
//OUT0002 DD DSN=MASTER.SYS1.AMACLIB,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AMACLIB,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AC))
//OUT0003 DD DSN=MASTER.SYS1.SISTASGD,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTASGD,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AC))
//SYSIN    DD *
 COPYMOD INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPY    INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPY    INDD=IN0003,OUTDD=OUT0003,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAC#1),(4000,LT))
//*
//IEBCAD#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.SYS1.AFOMHFS,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AFOMHFS,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AD))
//OUT0002 DD DSN=MASTER.CEE.SCEERUN2,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEERUN2,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AD))
//OUT0003 DD DSN=MASTER.CEE.ACEEMOD2,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.CEE.ACEEMOD2,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AD))
//OUT0004 DD DSN=MASTER.TCPIP.AEZAMODS,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAMODS,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AD))
//OUT0005 DD DSN=PRIME.AOP.AAOPMOD1,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.AOP.AAOPMOD1,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AD))
//SYSIN    DD *
 COPY    INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPYMOD INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPYMOD INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPYMOD INDD=IN0005,OUTDD=OUT0005,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAD#1),(4000,LT))
//*
//IEBCAE#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.CEE.AEDCHFS,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCHFS,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AE))
//OUT0002 DD DSN=MASTER.EXMP.PGMDIR,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.EXMP.PGMDIR,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AE))
//OUT0005 DD DSN=MASTER.SYS1.MACLIB,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.SYS1.MACLIB,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AE))
//OUT0006 DD DSN=MASTER.CEE.SCEERUN,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEERUN,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AE))
//OUT0007 DD DSN=MASTER.SYS1.SIOALMOD,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SIOALMOD,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AE))
//SYSIN    DD *
 COPY    INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPY    INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPYMOD INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPYMOD INDD=IN0007,OUTDD=OUT0007,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAE#1),(4000,LT))
//*
//IEBCAF#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.SYS1.LINKLIB,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.SYS1.LINKLIB,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0002 DD DSN=PRIME.JAVA.AAJVS390,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.JAVA.AAJVS390,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0003 DD DSN=MASTER.CBC.ACCNCMP,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACCNCMP,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0004 DD DSN=MASTER.CBC.SCCNCMP,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNCMP,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0005 DD DSN=MASTER.CEE.AEDCSRC6,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCSRC6,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0006 DD DSN=MASTER.CEE.AEDCMOD1,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCMOD1,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0007 DD DSN=MASTER.SYS1.SAMPLIB,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SAMPLIB,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0008 DD DSN=MASTER.TCPIP.SEZALOAD,DISP=SHR
//IN0008 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZALOAD,
//      LABEL=(0008,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0009 DD DSN=MASTER.CBC.SCBCCMP,DISP=SHR
//IN0009 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCCMP,
//      LABEL=(0009,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0010 DD DSN=MASTER.CBC.ACLBSR4,DISP=SHR
//IN0010 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBSR4,
//      LABEL=(0010,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AF))
//OUT0011 DD DSN=PRIME.CIM.SCIMXML,DISP=SHR
//IN0011 DD DISP=(OLD,PASS),DSN=CPP.CIM.SCIMXML,
//      LABEL=(0011,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AF))
//SYSIN    DD *
 COPYMOD INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPY    INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPYMOD INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPYMOD INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPY    INDD=IN0007,OUTDD=OUT0007,LIST=NO
 COPYMOD INDD=IN0008,OUTDD=OUT0008,LIST=NO
 COPYMOD INDD=IN0009,OUTDD=OUT0009,LIST=NO
 COPY    INDD=IN0010,OUTDD=OUT0010,LIST=NO
 COPY    INDD=IN0011,OUTDD=OUT0011,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAF#1),(4000,LT))
//*
//IEBCAG#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.SYS1.AHASSRC,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASSRC,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0002 DD DSN=MASTER.SYS1.SHASSRC,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASSRC,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0003 DD DSN=MASTER.SYS1.AOSC5,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSC5,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0004 DD DSN=MASTER.CEE.AEDCSRC7,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCSRC7,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0005 DD DSN=MASTER.SYS1.AERBPWSV,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBPWSV,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0006 DD DSN=MASTER.SYS1.SERBPWSV,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBPWSV,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0007 DD DSN=PRIME.CIM.ACIMHFS,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.CIM.ACIMHFS,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0008 DD DSN=PRIME.AOP.AAOPHFS,DISP=SHR
//IN0008 DD DISP=(OLD,PASS),DSN=CPP.AOP.AAOPHFS,
//      LABEL=(0008,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0009 DD DSN=MASTER.IOE.AIOELMOD,DISP=SHR
//IN0009 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOELMOD,
//      LABEL=(0009,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0010 DD DSN=MASTER.IOE.SIOELMOD,DISP=SHR
//IN0010 DD DISP=(OLD,PASS),DSN=CPP.IOE.SIOELMOD,
//      LABEL=(0010,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0011 DD DSN=MASTER.IMO.AIMOMOD1,DISP=SHR
//IN0011 DD DISP=(OLD,PASS),DSN=CPP.IMO.AIMOMOD1,
//      LABEL=(0011,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0012 DD DSN=MASTER.CEE.SCEEUMAP,DISP=SHR
//IN0012 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEUMAP,
//      LABEL=(0012,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0013 DD DSN=MASTER.CBC.ACLBSR1,DISP=SHR
//IN0013 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBSR1,
//      LABEL=(0013,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0014 DD DSN=MASTER.CBC.ACLBOBJ2,DISP=SHR
//IN0014 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBOBJ2,
//      LABEL=(0014,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0015 DD DSN=MASTER.SYS1.ASAMPLIB,DISP=SHR
//IN0015 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ASAMPLIB,
//      LABEL=(0015,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0016 DD DSN=MASTER.CBC.SCLBCPP2,DISP=SHR
//IN0016 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBCPP2,
//      LABEL=(0016,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0017 DD DSN=MASTER.SYS1.AERBMOD1,DISP=SHR
//IN0017 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBMOD1,
//      LABEL=(0017,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AG))
//OUT0018 DD DSN=MASTER.TCPIP.AEZAXLTD,DISP=SHR
//IN0018 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAXLTD,
//      LABEL=(0018,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AG))
//SYSIN    DD *
 COPY    INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPY    INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPY    INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPY    INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPY    INDD=IN0007,OUTDD=OUT0007,LIST=NO
 COPY    INDD=IN0008,OUTDD=OUT0008,LIST=NO
 COPYMOD INDD=IN0009,OUTDD=OUT0009,LIST=NO
 COPYMOD INDD=IN0010,OUTDD=OUT0010,LIST=NO
 COPYMOD INDD=IN0011,OUTDD=OUT0011,LIST=NO
 COPY    INDD=IN0012,OUTDD=OUT0012,LIST=NO
 COPY    INDD=IN0013,OUTDD=OUT0013,LIST=NO
 COPY    INDD=IN0014,OUTDD=OUT0014,LIST=NO
 COPY    INDD=IN0015,OUTDD=OUT0015,LIST=NO
 COPY    INDD=IN0016,OUTDD=OUT0016,LIST=NO
 COPYMOD INDD=IN0017,OUTDD=OUT0017,LIST=NO
 COPY    INDD=IN0018,OUTDD=OUT0018,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAG#1),(4000,LT))
//*
//IEBCAH#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.CEE.SCEELOCX,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEELOCX,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0002 DD DSN=MASTER.IMO.AIMOHFS1,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.IMO.AIMOHFS1,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0003 DD DSN=MASTER.SYS1.ACUNIMG,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNIMG,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0004 DD DSN=MASTER.SYS1.SCUNIMG,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNIMG,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0005 DD DSN=MASTER.GIM.SGIMTENU,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.GIM.SGIMTENU,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0006 DD DSN=MASTER.GIM.AGIMTENU,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.GIM.AGIMTENU,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0007 DD DSN=MASTER.SYS1.AFOMMOD1,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AFOMMOD1,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0008 DD DSN=MASTER.TCPIP.AEZAXLT3,DISP=SHR
//IN0008 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAXLT3,
//      LABEL=(0008,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0009 DD DSN=MASTER.SYS1.AOS26,DISP=SHR
//IN0009 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS26,
//      LABEL=(0009,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0010 DD DSN=MASTER.TCPIP.AEZASMP1,DISP=SHR
//IN0010 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZASMP1,
//      LABEL=(0010,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0011 DD DSN=MASTER.SYS1.DGTPLIB,DISP=SHR
//IN0011 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DGTPLIB,
//      LABEL=(0011,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0012 DD DSN=MASTER.SYS1.ADGTPLIB,DISP=SHR
//IN0012 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTPLIB,
//      LABEL=(0012,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0013 DD DSN=PRIME.EUV.AEUVLINK,DISP=SHR
//IN0013 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVLINK,
//      LABEL=(0013,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0014 DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//IN0014 DD DISP=(OLD,PASS),DSN=CPP.SYS1.MIGLIB,
//      LABEL=(0014,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0015 DD DSN=MASTER.ICA.AICAHSCR,DISP=SHR
//IN0015 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICAHSCR,
//      LABEL=(0015,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0016 DD DSN=MASTER.SYS1.AIKYHFS,DISP=SHR
//IN0016 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIKYHFS,
//      LABEL=(0016,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0017 DD DSN=MASTER.SYS1.AIMAGE,DISP=SHR
//IN0017 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIMAGE,
//      LABEL=(0017,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0018 DD DSN=MASTER.NETVIEW.ACNMLINK,DISP=SHR
//IN0018 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ACNMLINK,
//      LABEL=(0018,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0019 DD DSN=MASTER.NETVIEW.ACNMPNL1,DISP=SHR
//IN0019 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ACNMPNL1,
//      LABEL=(0019,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0020 DD DSN=MASTER.NETVIEW.CNMPNL1,DISP=SHR
//IN0020 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.CNMPNL1,
//      LABEL=(0020,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0021 DD DSN=MASTER.SYS1.ACUNTBL,DISP=SHR
//IN0021 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNTBL,
//      LABEL=(0021,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0022 DD DSN=MASTER.SYS1.SCUNTBL,DISP=SHR
//IN0022 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNTBL,
//      LABEL=(0022,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0023 DD DSN=MASTER.IMO.SIMOMOD1,DISP=SHR
//IN0023 DD DISP=(OLD,PASS),DSN=CPP.IMO.SIMOMOD1,
//      LABEL=(0023,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0024 DD DSN=MASTER.CBC.ACLBOBJ,DISP=SHR
//IN0024 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBOBJ,
//      LABEL=(0024,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0026 DD DSN=MASTER.SYS1.NFSLIB,DISP=SHR
//IN0026 DD DISP=(OLD,PASS),DSN=CPP.SYS1.NFSLIB,
//      LABEL=(0026,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AH))
//OUT0027 DD DSN=MASTER.NETVIEW.AFLBDAT1,DISP=SHR
//IN0027 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AFLBDAT1,
//      LABEL=(0027,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AH))
//SYSIN    DD *
 COPY    INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPY    INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPYMOD INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPY    INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPYMOD INDD=IN0007,OUTDD=OUT0007,LIST=NO
 COPY    INDD=IN0008,OUTDD=OUT0008,LIST=NO
 COPYMOD INDD=IN0009,OUTDD=OUT0009,LIST=NO
 COPY    INDD=IN0010,OUTDD=OUT0010,LIST=NO
 COPY    INDD=IN0011,OUTDD=OUT0011,LIST=NO
 COPY    INDD=IN0012,OUTDD=OUT0012,LIST=NO
 COPYMOD INDD=IN0013,OUTDD=OUT0013,LIST=NO
 COPYMOD INDD=IN0014,OUTDD=OUT0014,LIST=NO
 COPY    INDD=IN0015,OUTDD=OUT0015,LIST=NO
 COPY    INDD=IN0016,OUTDD=OUT0016,LIST=NO
 COPY    INDD=IN0017,OUTDD=OUT0017,LIST=NO
 COPYMOD INDD=IN0018,OUTDD=OUT0018,LIST=NO
 COPY    INDD=IN0019,OUTDD=OUT0019,LIST=NO
 COPY    INDD=IN0020,OUTDD=OUT0020,LIST=NO
 COPY    INDD=IN0021,OUTDD=OUT0021,LIST=NO
 COPY    INDD=IN0022,OUTDD=OUT0022,LIST=NO
 COPYMOD INDD=IN0023,OUTDD=OUT0023,LIST=NO
 COPY    INDD=IN0024,OUTDD=OUT0024,LIST=NO
 COPYMOD INDD=IN0026,OUTDD=OUT0026,LIST=NO
 COPY    INDD=IN0027,OUTDD=OUT0027,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAH#1),(4000,LT))
//*
//IEBCAI#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0002 DD DSN=MASTER.SYS1.MODGEN,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.SYS1.MODGEN,
//      LABEL=(0002,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0003 DD DSN=MASTER.SYS1.AMODGEN,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AMODGEN,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0004 DD DSN=MASTER.ICA.AICALINK,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICALINK,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0005 DD DSN=MASTER.CBC.ACLBSR3,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBSR3,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0006 DD DSN=MASTER.SYS1.NUCLEUS,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.SYS1.NUCLEUS,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0007 DD DSN=MASTER.EXMP.DOCLIB,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.EXMP.DOCLIB,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0008 DD DSN=MASTER.CBC.SCLBH.H,DISP=SHR
//IN0008 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBH.H,
//      LABEL=(0008,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0009 DD DSN=MASTER.CEE.SCEECMAP,DISP=SHR
//IN0009 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEECMAP,
//      LABEL=(0009,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0010 DD DSN=MASTER.CBC.SCLBCPP,DISP=SHR
//IN0010 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBCPP,
//      LABEL=(0010,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0011 DD DSN=MASTER.EXMP.REPORTS,DISP=SHR
//IN0011 DD DISP=(OLD,PASS),DSN=CPP.EXMP.REPORTS,
//      LABEL=(0011,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0012 DD DSN=MASTER.ISP.AISPMOD1,DISP=SHR
//IN0012 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPMOD1,
//      LABEL=(0012,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0013 DD DSN=MASTER.CEE.SCEELKED,DISP=SHR
//IN0013 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEELKED,
//      LABEL=(0013,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0014 DD DSN=PRIME.EQAW.SEQAMOD,DISP=SHR
//IN0014 DD DISP=(OLD,PASS),DSN=CPP.EQAW.SEQAMOD,
//      LABEL=(0014,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0015 DD DSN=MASTER.ISP.AISPPENU,DISP=SHR
//IN0015 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPPENU,
//      LABEL=(0015,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0016 DD DSN=MASTER.ISP.SISPPENU,DISP=SHR
//IN0016 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPPENU,
//      LABEL=(0016,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0017 DD DSN=PRIME.CDS.ACDSLINK,DISP=SHR
//IN0017 DD DISP=(OLD,PASS),DSN=CPP.CDS.ACDSLINK,
//      LABEL=(0017,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0018 DD DSN=MASTER.NETVIEW.CNMLINK,DISP=SHR
//IN0018 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.CNMLINK,
//      LABEL=(0018,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0019 DD DSN=MASTER.SYS1.SERBLINK,DISP=SHR
//IN0019 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBLINK,
//      LABEL=(0019,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0020 DD DSN=MASTER.ING.AINGNREX,DISP=SHR
//IN0020 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGNREX,
//      LABEL=(0020,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0021 DD DSN=MASTER.ING.SINGNREX,DISP=SHR
//IN0021 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGNREX,
//      LABEL=(0021,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0022 DD DSN=MASTER.CBC.ACLBHFS1,DISP=SHR
//IN0022 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBHFS1,
//      LABEL=(0022,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0023 DD DSN=MASTER.EOY.SEOYLEXS,DISP=SHR
//IN0023 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYLEXS,
//      LABEL=(0023,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0024 DD DSN=MASTER.EOY.AEOYLEXS,DISP=SHR
//IN0024 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYLEXS,
//      LABEL=(0024,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0025 DD DSN=MASTER.CBC.ACLDHFS1,DISP=SHR
//IN0025 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLDHFS1,
//      LABEL=(0025,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0026 DD DSN=MASTER.ISP.SISPLPA,DISP=SHR
//IN0026 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPLPA,
//      LABEL=(0026,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0027 DD DSN=MASTER.ISP.AISPGUI,DISP=SHR
//IN0027 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPGUI,
//      LABEL=(0027,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0028 DD DSN=MASTER.TCPIP.AEZAMAC2,DISP=SHR
//IN0028 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAMAC2,
//      LABEL=(0028,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0029 DD DSN=MASTER.SYS1.AHASMAC,DISP=SHR
//IN0029 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASMAC,
//      LABEL=(0029,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0030 DD DSN=MASTER.SYS1.SHASMAC,DISP=SHR
//IN0030 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASMAC,
//      LABEL=(0030,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0031 DD DSN=PRIME.CIM.ACIMPLUG,DISP=SHR
//IN0031 DD DISP=(OLD,PASS),DSN=CPP.CIM.ACIMPLUG,
//      LABEL=(0031,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0032 DD DSN=MASTER.SYS1.ABLSPNL0,DISP=SHR
//IN0032 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABLSPNL0,
//      LABEL=(0032,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0033 DD DSN=MASTER.SYS1.SBLSPNL0,DISP=SHR
//IN0033 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBLSPNL0,
//      LABEL=(0033,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0034 DD DSN=MASTER.ISP.SISPGUI,DISP=SHR
//IN0034 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPGUI,
//      LABEL=(0034,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0035 DD DSN=MASTER.SYS1.AICQMAC1,DISP=SHR
//IN0035 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQMAC1,
//      LABEL=(0035,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0036 DD DSN=PRIME.ICQ.ICQPLIB,DISP=SHR
//IN0036 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQPLIB,
//      LABEL=(0036,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0037 DD DSN=MASTER.SYS1.SERBPENU,DISP=SHR
//IN0037 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBPENU,
//      LABEL=(0037,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0038 DD DSN=MASTER.SYS1.AERBPENU,DISP=SHR
//IN0038 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBPENU,
//      LABEL=(0038,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0039 DD DSN=MASTER.TCPIP.SEZADBCX,DISP=SHR
//IN0039 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADBCX,
//      LABEL=(0039,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0040 DD DSN=MASTER.GDDM.AADMMOD,DISP=SHR
//IN0040 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMMOD,
//      LABEL=(0040,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0041 DD DSN=MASTER.TCPIP.SEZACMAC,DISP=SHR
//IN0041 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZACMAC,
//      LABEL=(0041,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0042 DD DSN=MASTER.CEE.ACEEMOD1,DISP=SHR
//IN0042 DD DISP=(OLD,PASS),DSN=CPP.CEE.ACEEMOD1,
//      LABEL=(0042,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0043 DD DSN=MASTER.SYS1.ACBDHENU,DISP=SHR
//IN0043 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDHENU,
//      LABEL=(0043,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0044 DD DSN=MASTER.SYS1.SCBDHENU,DISP=SHR
//IN0044 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCBDHENU,
//      LABEL=(0044,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0045 DD DSN=MASTER.ISF.AISFSRC,DISP=SHR
//IN0045 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFSRC,
//      LABEL=(0045,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0046 DD DSN=MASTER.ISF.SISFSRC,DISP=SHR
//IN0046 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFSRC,
//      LABEL=(0046,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,RETAIN,,,SER=(M999AI))
//OUT0047 DD DSN=MASTER.SYS1.AOSD0,DISP=SHR
//IN0047 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSD0,
//      LABEL=(0047,SL),
//      UNIT=AFF=IN0002,
//      VOL=(,,,,SER=(M999AI))
//SYSIN    DD *
 COPY    INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPY    INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPYMOD INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPYMOD INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPY    INDD=IN0007,OUTDD=OUT0007,LIST=NO
 COPY    INDD=IN0008,OUTDD=OUT0008,LIST=NO
 COPY    INDD=IN0009,OUTDD=OUT0009,LIST=NO
 COPY    INDD=IN0010,OUTDD=OUT0010,LIST=NO
 COPY    INDD=IN0011,OUTDD=OUT0011,LIST=NO
 COPYMOD INDD=IN0012,OUTDD=OUT0012,LIST=NO
 COPYMOD INDD=IN0013,OUTDD=OUT0013,LIST=NO
 COPYMOD INDD=IN0014,OUTDD=OUT0014,LIST=NO
 COPY    INDD=IN0015,OUTDD=OUT0015,LIST=NO
 COPY    INDD=IN0016,OUTDD=OUT0016,LIST=NO
 COPYMOD INDD=IN0017,OUTDD=OUT0017,LIST=NO
 COPYMOD INDD=IN0018,OUTDD=OUT0018,LIST=NO
 COPYMOD INDD=IN0019,OUTDD=OUT0019,LIST=NO
 COPY    INDD=IN0020,OUTDD=OUT0020,LIST=NO
 COPY    INDD=IN0021,OUTDD=OUT0021,LIST=NO
 COPY    INDD=IN0022,OUTDD=OUT0022,LIST=NO
 COPY    INDD=IN0023,OUTDD=OUT0023,LIST=NO
 COPY    INDD=IN0024,OUTDD=OUT0024,LIST=NO
 COPY    INDD=IN0025,OUTDD=OUT0025,LIST=NO
 COPYMOD INDD=IN0026,OUTDD=OUT0026,LIST=NO
 COPY    INDD=IN0027,OUTDD=OUT0027,LIST=NO
 COPY    INDD=IN0028,OUTDD=OUT0028,LIST=NO
 COPY    INDD=IN0029,OUTDD=OUT0029,LIST=NO
 COPY    INDD=IN0030,OUTDD=OUT0030,LIST=NO
 COPY    INDD=IN0031,OUTDD=OUT0031,LIST=NO
 COPY    INDD=IN0032,OUTDD=OUT0032,LIST=NO
 COPY    INDD=IN0033,OUTDD=OUT0033,LIST=NO
 COPY    INDD=IN0034,OUTDD=OUT0034,LIST=NO
 COPY    INDD=IN0035,OUTDD=OUT0035,LIST=NO
 COPY    INDD=IN0036,OUTDD=OUT0036,LIST=NO
 COPY    INDD=IN0037,OUTDD=OUT0037,LIST=NO
 COPY    INDD=IN0038,OUTDD=OUT0038,LIST=NO
 COPY    INDD=IN0039,OUTDD=OUT0039,LIST=NO
 COPYMOD INDD=IN0040,OUTDD=OUT0040,LIST=NO
 COPY    INDD=IN0041,OUTDD=OUT0041,LIST=NO
 COPYMOD INDD=IN0042,OUTDD=OUT0042,LIST=NO
 COPYMOD INDD=IN0043,OUTDD=OUT0043,LIST=NO
 COPYMOD INDD=IN0044,OUTDD=OUT0044,LIST=NO
 COPY    INDD=IN0045,OUTDD=OUT0045,LIST=NO
 COPY    INDD=IN0046,OUTDD=OUT0046,LIST=NO
 COPYMOD INDD=IN0047,OUTDD=OUT0047,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAI#1),(4000,LT))
//*
//IEBCAJ#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.SYS1.ACBDMOD1,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDMOD1,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0002 DD DSN=PRIME.IMW.AIMWEMOD,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.IMW.AIMWEMOD,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0003 DD DSN=MASTER.SYS1.AOSU0,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSU0,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0004 DD DSN=MASTER.SYS1.SCDRTABL,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCDRTABL,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0005 DD DSN=MASTER.SYS1.ACDRTABL,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACDRTABL,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0006 DD DSN=MASTER.SYS1.VTAMLIB,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.SYS1.VTAMLIB,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0007 DD DSN=MASTER.CBC.SCLBH.HPP,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBH.HPP,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0008 DD DSN=MASTER.CBC.SCLBH.INL,DISP=SHR
//IN0008 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBH.INL,
//      LABEL=(0008,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0009 DD DSN=MASTER.CEE.AIBMMOD3,DISP=SHR
//IN0009 DD DISP=(OLD,PASS),DSN=CPP.CEE.AIBMMOD3,
//      LABEL=(0009,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0010 DD DSN=PRIME.EQAW.AEQAMOD2,DISP=SHR
//IN0010 DD DISP=(OLD,PASS),DSN=CPP.EQAW.AEQAMOD2,
//      LABEL=(0010,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0011 DD DSN=MASTER.CBC.ACLBSR2,DISP=SHR
//IN0011 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBSR2,
//      LABEL=(0011,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0012 DD DSN=MASTER.SYS1.ABLSCLI0,DISP=SHR
//IN0012 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABLSCLI0,
//      LABEL=(0012,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0013 DD DSN=MASTER.SYS1.SBLSCLI0,DISP=SHR
//IN0013 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBLSCLI0,
//      LABEL=(0013,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0014 DD DSN=MASTER.ISF.AISFPLIB,DISP=SHR
//IN0014 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFPLIB,
//      LABEL=(0014,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0015 DD DSN=MASTER.ISF.SISFPLIB,DISP=SHR
//IN0015 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFPLIB,
//      LABEL=(0015,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0016 DD DSN=MASTER.SYS1.ACLMMOD0,DISP=SHR
//IN0016 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACLMMOD0,
//      LABEL=(0016,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0017 DD DSN=MASTER.SYS1.AOSBN,DISP=SHR
//IN0017 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSBN,
//      LABEL=(0017,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0018 DD DSN=MASTER.SYS1.ABPXMOD1,DISP=SHR
//IN0018 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABPXMOD1,
//      LABEL=(0018,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0019 DD DSN=MASTER.SYS1.AOS28,DISP=SHR
//IN0019 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS28,
//      LABEL=(0019,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0020 DD DSN=MASTER.GDDM.SADMMOD,DISP=SHR
//IN0020 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMMOD,
//      LABEL=(0020,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0021 DD DSN=MASTER.SYS1.ADGTLLIB,DISP=SHR
//IN0021 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTLLIB,
//      LABEL=(0021,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0022 DD DSN=MASTER.GLD.AGLDLNK,DISP=SHR
//IN0022 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDLNK,
//      LABEL=(0022,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0023 DD DSN=MASTER.TCPIP.SEZAINST,DISP=SHR
//IN0023 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAINST,
//      LABEL=(0023,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0025 DD DSN=MASTER.SYS1.AOS12,DISP=SHR
//IN0025 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS12,
//      LABEL=(0025,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0026 DD DSN=MASTER.CEE.SCEEGXLT,DISP=SHR
//IN0026 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEGXLT,
//      LABEL=(0026,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0027 DD DSN=MASTER.ISP.SISPGENU,DISP=SHR
//IN0027 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPGENU,
//      LABEL=(0027,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0028 DD DSN=MASTER.ISP.AISPGENU,DISP=SHR
//IN0028 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPGENU,
//      LABEL=(0028,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0029 DD DSN=MASTER.SYS1.HELP,DISP=SHR
//IN0029 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HELP,
//      LABEL=(0029,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0030 DD DSN=MASTER.SYS1.AHELP,DISP=SHR
//IN0030 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHELP,
//      LABEL=(0030,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0031 DD DSN=MASTER.GLD.SGLDLNK,DISP=SHR
//IN0031 DD DISP=(OLD,PASS),DSN=CPP.GLD.SGLDLNK,
//      LABEL=(0031,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0032 DD DSN=MASTER.ING.SINGMOD1,DISP=SHR
//IN0032 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGMOD1,
//      LABEL=(0032,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0033 DD DSN=MASTER.SYS1.HHRFPANL,DISP=SHR
//IN0033 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HHRFPANL,
//      LABEL=(0033,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0034 DD DSN=MASTER.SYS1.HRFPANL,DISP=SHR
//IN0034 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HRFPANL,
//      LABEL=(0034,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0035 DD DSN=MASTER.GDDM.SADMSAM,DISP=SHR
//IN0035 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMSAM,
//      LABEL=(0035,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0036 DD DSN=MASTER.GDDM.AADMSAM,DISP=SHR
//IN0036 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMSAM,
//      LABEL=(0036,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0037 DD DSN=MASTER.SYS1.AOSXCF,DISP=SHR
//IN0037 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSXCF,
//      LABEL=(0037,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0038 DD DSN=MASTER.SYS1.AICQMAC5,DISP=SHR
//IN0038 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQMAC5,
//      LABEL=(0038,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0039 DD DSN=PRIME.ICQ.ICQCCLIB,DISP=SHR
//IN0039 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQCCLIB,
//      LABEL=(0039,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0040 DD DSN=PRIME.ECN.AECNLINK,DISP=SHR
//IN0040 DD DISP=(OLD,PASS),DSN=CPP.ECN.AECNLINK,
//      LABEL=(0040,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0041 DD DSN=MASTER.EOY.AEOYPENU,DISP=SHR
//IN0041 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYPENU,
//      LABEL=(0041,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0042 DD DSN=MASTER.EOY.SEOYPENU,DISP=SHR
//IN0042 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYPENU,
//      LABEL=(0042,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0043 DD DSN=MASTER.SYS1.AEDGPENU,DISP=SHR
//IN0043 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AEDGPENU,
//      LABEL=(0043,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0044 DD DSN=MASTER.SYS1.SEDGPENU,DISP=SHR
//IN0044 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SEDGPENU,
//      LABEL=(0044,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0045 DD DSN=MASTER.SYS1.AOSCD,DISP=SHR
//IN0045 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSCD,
//      LABEL=(0045,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0046 DD DSN=MASTER.ICA.SICALMOD,DISP=SHR
//IN0046 DD DISP=(OLD,PASS),DSN=CPP.ICA.SICALMOD,
//      LABEL=(0046,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0047 DD DSN=MASTER.CBC.ACLBDLL2,DISP=SHR
//IN0047 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBDLL2,
//      LABEL=(0047,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0048 DD DSN=MASTER.CBC.SCLBDLL2,DISP=SHR
//IN0048 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBDLL2,
//      LABEL=(0048,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0049 DD DSN=MASTER.SYS1.ADGTPSRC,DISP=SHR
//IN0049 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTPSRC,
//      LABEL=(0049,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0050 DD DSN=MASTER.SYS1.SDGTPSRC,DISP=SHR
//IN0050 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SDGTPSRC,
//      LABEL=(0050,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0051 DD DSN=MASTER.CEE.AAFHMOD1,DISP=SHR
//IN0051 DD DISP=(OLD,PASS),DSN=CPP.CEE.AAFHMOD1,
//      LABEL=(0051,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0052 DD DSN=MASTER.CEE.SCEELPA,DISP=SHR
//IN0052 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEELPA,
//      LABEL=(0052,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0054 DD DSN=MASTER.FFST.V120ESA.SEPWMOD4,DISP=SHR
//IN0054 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWMOD4,
//      LABEL=(0054,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0055 DD DSN=MASTER.GIM.SGIMPENU,DISP=SHR
//IN0055 DD DISP=(OLD,PASS),DSN=CPP.GIM.SGIMPENU,
//      LABEL=(0055,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0056 DD DSN=MASTER.GIM.AGIMPENU,DISP=SHR
//IN0056 DD DISP=(OLD,PASS),DSN=CPP.GIM.AGIMPENU,
//      LABEL=(0056,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0057 DD DSN=MASTER.SYS1.AOSB3,DISP=SHR
//IN0057 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSB3,
//      LABEL=(0057,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0058 DD DSN=MASTER.SYS1.ALINKLIB,DISP=SHR
//IN0058 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ALINKLIB,
//      LABEL=(0058,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0059 DD DSN=MASTER.TCPIP.SEZATCP,DISP=SHR
//IN0059 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZATCP,
//      LABEL=(0059,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0060 DD DSN=MASTER.ISP.AISPGMLI,DISP=SHR
//IN0060 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPGMLI,
//      LABEL=(0060,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0061 DD DSN=MASTER.ISP.SISPGMLI,DISP=SHR
//IN0061 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPGMLI,
//      LABEL=(0061,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0062 DD DSN=MASTER.SYS1.AOST4,DISP=SHR
//IN0062 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOST4,
//      LABEL=(0062,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0063 DD DSN=MASTER.TCPIP.AEZAMAC3,DISP=SHR
//IN0063 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAMAC3,
//      LABEL=(0063,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0064 DD DSN=MASTER.SYS1.ACBRMOD0,DISP=SHR
//IN0064 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBRMOD0,
//      LABEL=(0064,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0065 DD DSN=MASTER.ASM.SASMPUT2,DISP=SHR
//IN0065 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMPUT2,
//      LABEL=(0065,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0066 DD DSN=MASTER.ASM.AASMPUT2,DISP=SHR
//IN0066 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMPUT2,
//      LABEL=(0066,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0067 DD DSN=MASTER.CEE.SCEEUTBL,DISP=SHR
//IN0067 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEUTBL,
//      LABEL=(0067,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0068 DD DSN=MASTER.FFST.V120ESA.AEPWMOD1,DISP=SHR
//IN0068 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.AEPWMOD1,
//      LABEL=(0068,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0069 DD DSN=MASTER.SYS1.ANFSLIB,DISP=SHR
//IN0069 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ANFSLIB,
//      LABEL=(0069,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0070 DD DSN=MASTER.CBC.SCLBDLL,DISP=SHR
//IN0070 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBDLL,
//      LABEL=(0070,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0071 DD DSN=MASTER.CBC.ACLBDLL,DISP=SHR
//IN0071 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLBDLL,
//      LABEL=(0071,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0072 DD DSN=MASTER.SYS1.AMIGLIB,DISP=SHR
//IN0072 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AMIGLIB,
//      LABEL=(0072,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0073 DD DSN=MASTER.SYS1.ADGTCLIB,DISP=SHR
//IN0073 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTCLIB,
//      LABEL=(0073,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0074 DD DSN=MASTER.SYS1.DGTCLIB,DISP=SHR
//IN0074 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DGTCLIB,
//      LABEL=(0074,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0075 DD DSN=MASTER.CBC.SCLBH.C,DISP=SHR
//IN0075 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBH.C,
//      LABEL=(0075,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0076 DD DSN=MASTER.SYS1.AISTGDMO,DISP=SHR
//IN0076 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTGDMO,
//      LABEL=(0076,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0077 DD DSN=MASTER.SYS1.SISTGDMO,DISP=SHR
//IN0077 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTGDMO,
//      LABEL=(0077,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0078 DD DSN=MASTER.SYS1.SAPPMOD1,DISP=SHR
//IN0078 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SAPPMOD1,
//      LABEL=(0078,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0079 DD DSN=MASTER.EOY.SEOYLOAD,DISP=SHR
//IN0079 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYLOAD,
//      LABEL=(0079,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0080 DD DSN=PRIME.IMW.AIMWHENU,DISP=SHR
//IN0080 DD DISP=(OLD,PASS),DSN=CPP.IMW.AIMWHENU,
//      LABEL=(0080,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0081 DD DSN=MASTER.GDDM.SADMSYM,DISP=SHR
//IN0081 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMSYM,
//      LABEL=(0081,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0082 DD DSN=MASTER.GDDM.AADMSYM,DISP=SHR
//IN0082 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMSYM,
//      LABEL=(0082,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0083 DD DSN=MASTER.SYS1.ABDTMAC,DISP=SHR
//IN0083 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTMAC,
//      LABEL=(0083,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0084 DD DSN=MASTER.SYS1.SBDTMAC,DISP=SHR
//IN0084 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTMAC,
//      LABEL=(0084,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0085 DD DSN=MASTER.SYS1.AOSA0,DISP=SHR
//IN0085 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSA0,
//      LABEL=(0085,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0086 DD DSN=MASTER.CEE.SCEESAMP,DISP=SHR
//IN0086 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEESAMP,
//      LABEL=(0086,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0087 DD DSN=MASTER.NETVIEW.CNMSAMP,DISP=SHR
//IN0087 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.CNMSAMP,
//      LABEL=(0087,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0088 DD DSN=MASTER.NETVIEW.ACNMSAMP,DISP=SHR
//IN0088 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ACNMSAMP,
//      LABEL=(0088,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0089 DD DSN=MASTER.CEE.AIGZMOD1,DISP=SHR
//IN0089 DD DISP=(OLD,PASS),DSN=CPP.CEE.AIGZMOD1,
//      LABEL=(0089,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0090 DD DSN=MASTER.ASM.AASMMOD2,DISP=SHR
//IN0090 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMMOD2,
//      LABEL=(0090,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0091 DD DSN=MASTER.SYS1.AOSACB,DISP=SHR
//IN0091 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSACB,
//      LABEL=(0091,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0092 DD DSN=MASTER.ISP.AISPSENU,DISP=SHR
//IN0092 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPSENU,
//      LABEL=(0092,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0093 DD DSN=MASTER.ISP.AISPEXEC,DISP=SHR
//IN0093 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPEXEC,
//      LABEL=(0093,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0094 DD DSN=MASTER.ISP.SISPSENU,DISP=SHR
//IN0094 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPSENU,
//      LABEL=(0094,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0095 DD DSN=MASTER.ISP.SISPEXEC,DISP=SHR
//IN0095 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPEXEC,
//      LABEL=(0095,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0096 DD DSN=MASTER.GDDM.SADMPCF,DISP=SHR
//IN0096 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMPCF,
//      LABEL=(0096,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0097 DD DSN=MASTER.GDDM.AADMPCF,DISP=SHR
//IN0097 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMPCF,
//      LABEL=(0097,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0098 DD DSN=MASTER.SYS1.AFOMDATA,DISP=SHR
//IN0098 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AFOMDATA,
//      LABEL=(0098,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0099 DD DSN=MASTER.SYS1.SFOMDATA,DISP=SHR
//IN0099 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SFOMDATA,
//      LABEL=(0099,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0100 DD DSN=PRIME.EPH.AEPHLOAD,DISP=SHR
//IN0100 DD DISP=(OLD,PASS),DSN=CPP.EPH.AEPHLOAD,
//      LABEL=(0100,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0101 DD DSN=MASTER.TCPIP.SEZAROE1,DISP=SHR
//IN0101 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAROE1,
//      LABEL=(0101,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0102 DD DSN=MASTER.TCPIP.AEZAROE1,DISP=SHR
//IN0102 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAROE1,
//      LABEL=(0102,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0103 DD DSN=MASTER.SYS1.SICEPENU,DISP=SHR
//IN0103 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICEPENU,
//      LABEL=(0103,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0104 DD DSN=MASTER.SYS1.AICEPENU,DISP=SHR
//IN0104 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICEPENU,
//      LABEL=(0104,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0105 DD DSN=PRIME.HCM.AEEQINST,DISP=SHR
//IN0105 DD DISP=(OLD,PASS),DSN=CPP.HCM.AEEQINST,
//      LABEL=(0105,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0106 DD DSN=PRIME.HCM.SEEQINST,DISP=SHR
//IN0106 DD DISP=(OLD,PASS),DSN=CPP.HCM.SEEQINST,
//      LABEL=(0106,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0107 DD DSN=MASTER.ISP.AISPSAMP,DISP=SHR
//IN0107 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPSAMP,
//      LABEL=(0107,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0108 DD DSN=MASTER.ISP.SISPSAMP,DISP=SHR
//IN0108 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPSAMP,
//      LABEL=(0108,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0109 DD DSN=MASTER.CEE.ACEESRC1,DISP=SHR
//IN0109 DD DISP=(OLD,PASS),DSN=CPP.CEE.ACEESRC1,
//      LABEL=(0109,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0110 DD DSN=MASTER.SYS1.AOSA1,DISP=SHR
//IN0110 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSA1,
//      LABEL=(0110,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0111 DD DSN=MASTER.SYS1.AHASMOD,DISP=SHR
//IN0111 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASMOD,
//      LABEL=(0111,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0112 DD DSN=MASTER.ING.AINGNPNL,DISP=SHR
//IN0112 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGNPNL,
//      LABEL=(0112,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0113 DD DSN=MASTER.ING.SINGNPNL,DISP=SHR
//IN0113 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGNPNL,
//      LABEL=(0113,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0114 DD DSN=PRIME.EPH.AEPHBOOK,DISP=SHR
//IN0114 DD DISP=(OLD,PASS),DSN=CPP.EPH.AEPHBOOK,
//      LABEL=(0114,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0115 DD DSN=MASTER.TCPIP.SEZAXLD2,DISP=SHR
//IN0115 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAXLD2,
//      LABEL=(0115,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0116 DD DSN=MASTER.TCPIP.AEZAXLTK,DISP=SHR
//IN0116 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAXLTK,
//      LABEL=(0116,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0117 DD DSN=MASTER.TCPIP.SEZARNT1,DISP=SHR
//IN0117 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZARNT1,
//      LABEL=(0117,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0118 DD DSN=MASTER.TCPIP.AEZARNT1,DISP=SHR
//IN0118 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZARNT1,
//      LABEL=(0118,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0119 DD DSN=PRIME.ASU.AASULINK,DISP=SHR
//IN0119 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASULINK,
//      LABEL=(0119,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AJ))
//OUT0120 DD DSN=MASTER.CEE.SCEEMAC,DISP=SHR
//IN0120 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEMAC,
//      LABEL=(0120,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,,,,SER=(M999AJ))
//SYSIN    DD *
 COPYMOD INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPYMOD INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPY    INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPYMOD INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPY    INDD=IN0007,OUTDD=OUT0007,LIST=NO
 COPY    INDD=IN0008,OUTDD=OUT0008,LIST=NO
 COPYMOD INDD=IN0009,OUTDD=OUT0009,LIST=NO
 COPYMOD INDD=IN0010,OUTDD=OUT0010,LIST=NO
 COPY    INDD=IN0011,OUTDD=OUT0011,LIST=NO
 COPY    INDD=IN0012,OUTDD=OUT0012,LIST=NO
 COPY    INDD=IN0013,OUTDD=OUT0013,LIST=NO
 COPY    INDD=IN0014,OUTDD=OUT0014,LIST=NO
 COPY    INDD=IN0015,OUTDD=OUT0015,LIST=NO
 COPYMOD INDD=IN0016,OUTDD=OUT0016,LIST=NO
 COPYMOD INDD=IN0017,OUTDD=OUT0017,LIST=NO
 COPYMOD INDD=IN0018,OUTDD=OUT0018,LIST=NO
 COPYMOD INDD=IN0019,OUTDD=OUT0019,LIST=NO
 COPYMOD INDD=IN0020,OUTDD=OUT0020,LIST=NO
 COPYMOD INDD=IN0021,OUTDD=OUT0021,LIST=NO
 COPYMOD INDD=IN0022,OUTDD=OUT0022,LIST=NO
 COPY    INDD=IN0023,OUTDD=OUT0023,LIST=NO
 COPYMOD INDD=IN0025,OUTDD=OUT0025,LIST=NO
 COPY    INDD=IN0026,OUTDD=OUT0026,LIST=NO
 COPY    INDD=IN0027,OUTDD=OUT0027,LIST=NO
 COPY    INDD=IN0028,OUTDD=OUT0028,LIST=NO
 COPY    INDD=IN0029,OUTDD=OUT0029,LIST=NO
 COPY    INDD=IN0030,OUTDD=OUT0030,LIST=NO
 COPYMOD INDD=IN0031,OUTDD=OUT0031,LIST=NO
 COPYMOD INDD=IN0032,OUTDD=OUT0032,LIST=NO
 COPY    INDD=IN0033,OUTDD=OUT0033,LIST=NO
 COPY    INDD=IN0034,OUTDD=OUT0034,LIST=NO
 COPY    INDD=IN0035,OUTDD=OUT0035,LIST=NO
 COPY    INDD=IN0036,OUTDD=OUT0036,LIST=NO
 COPYMOD INDD=IN0037,OUTDD=OUT0037,LIST=NO
 COPY    INDD=IN0038,OUTDD=OUT0038,LIST=NO
 COPY    INDD=IN0039,OUTDD=OUT0039,LIST=NO
 COPYMOD INDD=IN0040,OUTDD=OUT0040,LIST=NO
 COPY    INDD=IN0041,OUTDD=OUT0041,LIST=NO
 COPY    INDD=IN0042,OUTDD=OUT0042,LIST=NO
 COPY    INDD=IN0043,OUTDD=OUT0043,LIST=NO
 COPY    INDD=IN0044,OUTDD=OUT0044,LIST=NO
 COPYMOD INDD=IN0045,OUTDD=OUT0045,LIST=NO
 COPYMOD INDD=IN0046,OUTDD=OUT0046,LIST=NO
 COPYMOD INDD=IN0047,OUTDD=OUT0047,LIST=NO
 COPYMOD INDD=IN0048,OUTDD=OUT0048,LIST=NO
 COPY    INDD=IN0049,OUTDD=OUT0049,LIST=NO
 COPY    INDD=IN0050,OUTDD=OUT0050,LIST=NO
 COPYMOD INDD=IN0051,OUTDD=OUT0051,LIST=NO
 COPYMOD INDD=IN0052,OUTDD=OUT0052,LIST=NO
 COPYMOD INDD=IN0054,OUTDD=OUT0054,LIST=NO
 COPY    INDD=IN0055,OUTDD=OUT0055,LIST=NO
 COPY    INDD=IN0056,OUTDD=OUT0056,LIST=NO
 COPYMOD INDD=IN0057,OUTDD=OUT0057,LIST=NO
 COPYMOD INDD=IN0058,OUTDD=OUT0058,LIST=NO
 COPYMOD INDD=IN0059,OUTDD=OUT0059,LIST=NO
 COPY    INDD=IN0060,OUTDD=OUT0060,LIST=NO
 COPY    INDD=IN0061,OUTDD=OUT0061,LIST=NO
 COPYMOD INDD=IN0062,OUTDD=OUT0062,LIST=NO
 COPY    INDD=IN0063,OUTDD=OUT0063,LIST=NO
 COPYMOD INDD=IN0064,OUTDD=OUT0064,LIST=NO
 COPY    INDD=IN0065,OUTDD=OUT0065,LIST=NO
 COPY    INDD=IN0066,OUTDD=OUT0066,LIST=NO
 COPY    INDD=IN0067,OUTDD=OUT0067,LIST=NO
 COPYMOD INDD=IN0068,OUTDD=OUT0068,LIST=NO
 COPYMOD INDD=IN0069,OUTDD=OUT0069,LIST=NO
 COPYMOD INDD=IN0070,OUTDD=OUT0070,LIST=NO
 COPYMOD INDD=IN0071,OUTDD=OUT0071,LIST=NO
 COPYMOD INDD=IN0072,OUTDD=OUT0072,LIST=NO
 COPY    INDD=IN0073,OUTDD=OUT0073,LIST=NO
 COPY    INDD=IN0074,OUTDD=OUT0074,LIST=NO
 COPY    INDD=IN0075,OUTDD=OUT0075,LIST=NO
 COPY    INDD=IN0076,OUTDD=OUT0076,LIST=NO
 COPY    INDD=IN0077,OUTDD=OUT0077,LIST=NO
 COPYMOD INDD=IN0078,OUTDD=OUT0078,LIST=NO
 COPYMOD INDD=IN0079,OUTDD=OUT0079,LIST=NO
 COPY    INDD=IN0080,OUTDD=OUT0080,LIST=NO
 COPY    INDD=IN0081,OUTDD=OUT0081,LIST=NO
 COPY    INDD=IN0082,OUTDD=OUT0082,LIST=NO
 COPY    INDD=IN0083,OUTDD=OUT0083,LIST=NO
 COPY    INDD=IN0084,OUTDD=OUT0084,LIST=NO
 COPYMOD INDD=IN0085,OUTDD=OUT0085,LIST=NO
 COPY    INDD=IN0086,OUTDD=OUT0086,LIST=NO
 COPY    INDD=IN0087,OUTDD=OUT0087,LIST=NO
 COPY    INDD=IN0088,OUTDD=OUT0088,LIST=NO
 COPYMOD INDD=IN0089,OUTDD=OUT0089,LIST=NO
 COPYMOD INDD=IN0090,OUTDD=OUT0090,LIST=NO
 COPYMOD INDD=IN0091,OUTDD=OUT0091,LIST=NO
 COPY    INDD=IN0092,OUTDD=OUT0092,LIST=NO
 COPY    INDD=IN0093,OUTDD=OUT0093,LIST=NO
 COPY    INDD=IN0094,OUTDD=OUT0094,LIST=NO
 COPY    INDD=IN0095,OUTDD=OUT0095,LIST=NO
 COPY    INDD=IN0096,OUTDD=OUT0096,LIST=NO
 COPY    INDD=IN0097,OUTDD=OUT0097,LIST=NO
 COPY    INDD=IN0098,OUTDD=OUT0098,LIST=NO
 COPY    INDD=IN0099,OUTDD=OUT0099,LIST=NO
 COPYMOD INDD=IN0100,OUTDD=OUT0100,LIST=NO
 COPY    INDD=IN0101,OUTDD=OUT0101,LIST=NO
 COPY    INDD=IN0102,OUTDD=OUT0102,LIST=NO
 COPY    INDD=IN0103,OUTDD=OUT0103,LIST=NO
 COPY    INDD=IN0104,OUTDD=OUT0104,LIST=NO
 COPY    INDD=IN0105,OUTDD=OUT0105,LIST=NO
 COPY    INDD=IN0106,OUTDD=OUT0106,LIST=NO
 COPY    INDD=IN0107,OUTDD=OUT0107,LIST=NO
 COPY    INDD=IN0108,OUTDD=OUT0108,LIST=NO
 COPY    INDD=IN0109,OUTDD=OUT0109,LIST=NO
 COPYMOD INDD=IN0110,OUTDD=OUT0110,LIST=NO
 COPYMOD INDD=IN0111,OUTDD=OUT0111,LIST=NO
 COPY    INDD=IN0112,OUTDD=OUT0112,LIST=NO
 COPY    INDD=IN0113,OUTDD=OUT0113,LIST=NO
 COPY    INDD=IN0114,OUTDD=OUT0114,LIST=NO
 COPY    INDD=IN0115,OUTDD=OUT0115,LIST=NO
 COPY    INDD=IN0116,OUTDD=OUT0116,LIST=NO
 COPY    INDD=IN0117,OUTDD=OUT0117,LIST=NO
 COPY    INDD=IN0118,OUTDD=OUT0118,LIST=NO
 COPYMOD INDD=IN0119,OUTDD=OUT0119,LIST=NO
 COPY    INDD=IN0120,OUTDD=OUT0120,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAJ#1),(4000,LT))
//*
//IEBCAK#1  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0001 DD DSN=MASTER.ISP.SISPSASC,DISP=SHR
//IN0001 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPSASC,
//      LABEL=(0001,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0002 DD DSN=MASTER.ISP.AISPSASC,DISP=SHR
//IN0002 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPSASC,
//      LABEL=(0002,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0003 DD DSN=MASTER.SYS1.AICELIB,DISP=SHR
//IN0003 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICELIB,
//      LABEL=(0003,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0004 DD DSN=MASTER.SYS1.SEDGEXE1,DISP=SHR
//IN0004 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SEDGEXE1,
//      LABEL=(0004,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0005 DD DSN=MASTER.SYS1.AEDGEXE1,DISP=SHR
//IN0005 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AEDGEXE1,
//      LABEL=(0005,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0006 DD DSN=MASTER.EOY.AEOYLOAD,DISP=SHR
//IN0006 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYLOAD,
//      LABEL=(0006,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0007 DD DSN=MASTER.CSF.ACSFMOD0,DISP=SHR
//IN0007 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFMOD0,
//      LABEL=(0007,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0008 DD DSN=MASTER.SYS1.AIEWMOD0,DISP=SHR
//IN0008 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIEWMOD0,
//      LABEL=(0008,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0009 DD DSN=MASTER.NETVIEW.ACNMCLST,DISP=SHR
//IN0009 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ACNMCLST,
//      LABEL=(0009,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0010 DD DSN=MASTER.NETVIEW.CNMCLST,DISP=SHR
//IN0010 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.CNMCLST,
//      LABEL=(0010,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0011 DD DSN=MASTER.SYS1.ATSOMAC,DISP=SHR
//IN0011 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ATSOMAC,
//      LABEL=(0011,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0012 DD DSN=PRIME.IOA.AIOAIBIN,DISP=SHR
//IN0012 DD DISP=(OLD,PASS),DSN=CPP.IOA.AIOAIBIN,
//      LABEL=(0012,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0013 DD DSN=PRIME.IOA.SIOAIBIN,DISP=SHR
//IN0013 DD DISP=(OLD,PASS),DSN=CPP.IOA.SIOAIBIN,
//      LABEL=(0013,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0014 DD DSN=MASTER.SYS1.AADRLIB,DISP=SHR
//IN0014 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AADRLIB,
//      LABEL=(0014,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0015 DD DSN=MASTER.ISP.SISPLOAD,DISP=SHR
//IN0015 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPLOAD,
//      LABEL=(0015,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0016 DD DSN=MASTER.CBC.SCLBJCL,DISP=SHR
//IN0016 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBJCL,
//      LABEL=(0016,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0017 DD DSN=MASTER.CEE.SCEELOCL,DISP=SHR
//IN0017 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEELOCL,
//      LABEL=(0017,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0018 DD DSN=MASTER.TCPIP.SEZAROE3,DISP=SHR
//IN0018 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAROE3,
//      LABEL=(0018,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0019 DD DSN=MASTER.TCPIP.AEZAROE3,DISP=SHR
//IN0019 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAROE3,
//      LABEL=(0019,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0020 DD DSN=MASTER.SYS1.SHASSAMP,DISP=SHR
//IN0020 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASSAMP,
//      LABEL=(0020,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0021 DD DSN=MASTER.SYS1.AHASSAMP,DISP=SHR
//IN0021 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASSAMP,
//      LABEL=(0021,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0022 DD DSN=MASTER.ING.AINGMOD1,DISP=SHR
//IN0022 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGMOD1,
//      LABEL=(0022,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0023 DD DSN=MASTER.EUVF.AEUVFLNK,DISP=SHR
//IN0023 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFLNK,
//      LABEL=(0023,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0024 DD DSN=PRIME.EPH.AEPHGIF,DISP=SHR
//IN0024 DD DISP=(OLD,PASS),DSN=CPP.EPH.AEPHGIF,
//      LABEL=(0024,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0025 DD DSN=PRIME.EPH.SEPHTAB,DISP=SHR
//IN0025 DD DISP=(OLD,PASS),DSN=CPP.EPH.SEPHTAB,
//      LABEL=(0025,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0026 DD DSN=MASTER.SYS1.AOS32,DISP=SHR
//IN0026 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS32,
//      LABEL=(0026,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0027 DD DSN=MASTER.SYS1.SISTCLIB,DISP=SHR
//IN0027 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTCLIB,
//      LABEL=(0027,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0028 DD DSN=MASTER.ISF.SISFLOAD,DISP=SHR
//IN0028 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFLOAD,
//      LABEL=(0028,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0029 DD DSN=MASTER.EOX.AEPHBOK1,DISP=SHR
//IN0029 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHBOK1,
//      LABEL=(0029,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0030 DD DSN=MASTER.EOX.SEPHBOK1,DISP=SHR
//IN0030 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHBOK1,
//      LABEL=(0030,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0031 DD DSN=MASTER.CSF.SCSFMOD0,DISP=SHR
//IN0031 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFMOD0,
//      LABEL=(0031,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0032 DD DSN=MASTER.SYS1.SCBDPENU,DISP=SHR
//IN0032 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCBDPENU,
//      LABEL=(0032,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0033 DD DSN=MASTER.SYS1.ACBDPENU,DISP=SHR
//IN0033 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDPENU,
//      LABEL=(0033,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0034 DD DSN=MASTER.ISF.AISFLOAD,DISP=SHR
//IN0034 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFLOAD,
//      LABEL=(0034,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0035 DD DSN=PRIME.AOP.AAOPPENU,DISP=SHR
//IN0035 DD DISP=(OLD,PASS),DSN=CPP.AOP.AAOPPENU,
//      LABEL=(0035,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0036 DD DSN=PRIME.AOP.SAOPPENU,DISP=SHR
//IN0036 DD DISP=(OLD,PASS),DSN=CPP.AOP.SAOPPENU,
//      LABEL=(0036,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0037 DD DSN=MASTER.SYS1.CMDLIB,DISP=SHR
//IN0037 DD DISP=(OLD,PASS),DSN=CPP.SYS1.CMDLIB,
//      LABEL=(0037,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0038 DD DSN=MASTER.CEE.SCEEH.H,DISP=SHR
//IN0038 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH.H,
//      LABEL=(0038,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0039 DD DSN=MASTER.CBC.SCLBSID,DISP=SHR
//IN0039 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLBSID,
//      LABEL=(0039,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0040 DD DSN=PRIME.EUV.AEUVHDR,DISP=SHR
//IN0040 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHDR,
//      LABEL=(0040,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0041 DD DSN=PRIME.EUV.SEUVHDR,DISP=SHR
//IN0041 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVHDR,
//      LABEL=(0041,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0042 DD DSN=MASTER.GLD.AGLDHFS,DISP=SHR
//IN0042 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDHFS,
//      LABEL=(0042,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0043 DD DSN=MASTER.TCPIP.SEZARNT3,DISP=SHR
//IN0043 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZARNT3,
//      LABEL=(0043,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0044 DD DSN=MASTER.TCPIP.AEZARNT3,DISP=SHR
//IN0044 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZARNT3,
//      LABEL=(0044,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0045 DD DSN=MASTER.SYS1.HHRFSKEL,DISP=SHR
//IN0045 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HHRFSKEL,
//      LABEL=(0045,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0046 DD DSN=MASTER.SYS1.HRFSKEL,DISP=SHR
//IN0046 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HRFSKEL,
//      LABEL=(0046,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0047 DD DSN=PRIME.IOA.AIOASAMP,DISP=SHR
//IN0047 DD DISP=(OLD,PASS),DSN=CPP.IOA.AIOASAMP,
//      LABEL=(0047,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0048 DD DSN=PRIME.IOA.SIOASAMP,DISP=SHR
//IN0048 DD DISP=(OLD,PASS),DSN=CPP.IOA.SIOASAMP,
//      LABEL=(0048,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0049 DD DSN=MASTER.SYS1.AGDEMOD0,DISP=SHR
//IN0049 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AGDEMOD0,
//      LABEL=(0049,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0050 DD DSN=MASTER.GIM.SGIMLMD0,DISP=SHR
//IN0050 DD DISP=(OLD,PASS),DSN=CPP.GIM.SGIMLMD0,
//      LABEL=(0050,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0051 DD DSN=MASTER.CEE.SCEELKEX,DISP=SHR
//IN0051 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEELKEX,
//      LABEL=(0051,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0052 DD DSN=PRIME.IOA.AIOALMOD,DISP=SHR
//IN0052 DD DISP=(OLD,PASS),DSN=CPP.IOA.AIOALMOD,
//      LABEL=(0052,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0053 DD DSN=MASTER.EXMP.SAMPLIB,DISP=SHR
//IN0053 DD DISP=(OLD,PASS),DSN=CPP.EXMP.SAMPLIB,
//      LABEL=(0053,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0054 DD DSN=MASTER.CEE.SCEEH,DISP=SHR
//IN0054 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH,
//      LABEL=(0054,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0055 DD DSN=MASTER.SYS1.AISTASGD,DISP=SHR
//IN0055 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTASGD,
//      LABEL=(0055,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0056 DD DSN=MASTER.ASM.SASMMOD2,DISP=SHR
//IN0056 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMMOD2,
//      LABEL=(0056,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0057 DD DSN=MASTER.SYS1.SHASLINK,DISP=SHR
//IN0057 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASLINK,
//      LABEL=(0057,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0058 DD DSN=MASTER.CEE.ACEESRC2,DISP=SHR
//IN0058 DD DISP=(OLD,PASS),DSN=CPP.CEE.ACEESRC2,
//      LABEL=(0058,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0059 DD DSN=PRIME.EUV.AEUVHINC,DISP=SHR
//IN0059 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHINC,
//      LABEL=(0059,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0060 DD DSN=MASTER.SYS1.ADBBLIB,DISP=SHR
//IN0060 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADBBLIB,
//      LABEL=(0060,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0061 DD DSN=MASTER.SYS1.AFOMOBJ,DISP=SHR
//IN0061 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AFOMOBJ,
//      LABEL=(0061,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0062 DD DSN=MASTER.SYS1.SFOMOBJ,DISP=SHR
//IN0062 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SFOMOBJ,
//      LABEL=(0062,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0063 DD DSN=MASTER.SYS1.DBBLIB,DISP=SHR
//IN0063 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DBBLIB,
//      LABEL=(0063,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0064 DD DSN=MASTER.TCPIP.SEZAX11L,DISP=SHR
//IN0064 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAX11L,
//      LABEL=(0064,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0065 DD DSN=PRIME.CMX.ACMXHFS,DISP=SHR
//IN0065 DD DISP=(OLD,PASS),DSN=CPP.CMX.ACMXHFS,
//      LABEL=(0065,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0066 DD DSN=MASTER.CBC.ACBCSR1,DISP=SHR
//IN0066 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACBCSR1,
//      LABEL=(0066,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0068 DD DSN=MASTER.TCPIP.SEZAXMLB,DISP=SHR
//IN0068 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAXMLB,
//      LABEL=(0068,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0069 DD DSN=MASTER.SYS1.AEDGMOD1,DISP=SHR
//IN0069 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AEDGMOD1,
//      LABEL=(0069,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0070 DD DSN=MASTER.SYS1.AAPPMOD1,DISP=SHR
//IN0070 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AAPPMOD1,
//      LABEL=(0070,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0071 DD DSN=PRIME.EPH.AEPHCLIB,DISP=SHR
//IN0071 DD DISP=(OLD,PASS),DSN=CPP.EPH.AEPHCLIB,
//      LABEL=(0071,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0072 DD DSN=MASTER.CBC.ACCNSR1,DISP=SHR
//IN0072 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACCNSR1,
//      LABEL=(0072,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0073 DD DSN=MASTER.TCPIP.AEZAMAC1,DISP=SHR
//IN0073 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAMAC1,
//      LABEL=(0073,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0074 DD DSN=PRIME.EUV.AEUVHLBR,DISP=SHR
//IN0074 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHLBR,
//      LABEL=(0074,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0075 DD DSN=MASTER.ISP.SISPMACS,DISP=SHR
//IN0075 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPMACS,
//      LABEL=(0075,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0076 DD DSN=MASTER.ISP.AISPMACS,DISP=SHR
//IN0076 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPMACS,
//      LABEL=(0076,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0077 DD DSN=MASTER.SYS1.AERBMAC1,DISP=SHR
//IN0077 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBMAC1,
//      LABEL=(0077,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0078 DD DSN=MASTER.TCPIP.SEZANCLS,DISP=SHR
//IN0078 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZANCLS,
//      LABEL=(0078,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0079 DD DSN=MASTER.SYS1.CSSLIB,DISP=SHR
//IN0079 DD DISP=(OLD,PASS),DSN=CPP.SYS1.CSSLIB,
//      LABEL=(0079,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0080 DD DSN=MASTER.SYS1.ACSSLIB,DISP=SHR
//IN0080 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACSSLIB,
//      LABEL=(0080,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0081 DD DSN=MASTER.ISP.AISPMENU,DISP=SHR
//IN0081 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPMENU,
//      LABEL=(0081,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0082 DD DSN=MASTER.ISP.SISPMENU,DISP=SHR
//IN0082 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPMENU,
//      LABEL=(0082,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0083 DD DSN=PRIME.IOA.AIOAJAVA,DISP=SHR
//IN0083 DD DISP=(OLD,PASS),DSN=CPP.IOA.AIOAJAVA,
//      LABEL=(0083,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0084 DD DSN=PRIME.IOA.SIOAJAVA,DISP=SHR
//IN0084 DD DISP=(OLD,PASS),DSN=CPP.IOA.SIOAJAVA,
//      LABEL=(0084,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0085 DD DSN=MASTER.SYS1.AEDGPSRC,DISP=SHR
//IN0085 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AEDGPSRC,
//      LABEL=(0085,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0086 DD DSN=MASTER.SYS1.SEDGPSRC,DISP=SHR
//IN0086 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SEDGPSRC,
//      LABEL=(0086,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0087 DD DSN=MASTER.SYS1.DGTMLIB,DISP=SHR
//IN0087 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DGTMLIB,
//      LABEL=(0087,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0088 DD DSN=MASTER.SYS1.ADGTMLIB,DISP=SHR
//IN0088 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTMLIB,
//      LABEL=(0088,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0089 DD DSN=MASTER.EUVF.SEUVFLNK,DISP=SHR
//IN0089 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFLNK,
//      LABEL=(0089,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0090 DD DSN=MASTER.EUVF.SEUVFLPA,DISP=SHR
//IN0090 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFLPA,
//      LABEL=(0090,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0091 DD DSN=PRIME.ASU.AASUHLIB,DISP=SHR
//IN0091 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUHLIB,
//      LABEL=(0091,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0092 DD DSN=MASTER.GSK.AGSKLINK,DISP=SHR
//IN0092 DD DISP=(OLD,PASS),DSN=CPP.GSK.AGSKLINK,
//      LABEL=(0092,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0093 DD DSN=MASTER.SYS1.ANUCLEUS,DISP=SHR
//IN0093 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ANUCLEUS,
//      LABEL=(0093,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0094 DD DSN=MASTER.SYS1.ADMSSVM,DISP=SHR
//IN0094 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADMSSVM,
//      LABEL=(0094,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0095 DD DSN=MASTER.SYS1.SDMSSVM,DISP=SHR
//IN0095 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SDMSSVM,
//      LABEL=(0095,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0096 DD DSN=PRIME.ECN.AECNHLBR,DISP=SHR
//IN0096 DD DISP=(OLD,PASS),DSN=CPP.ECN.AECNHLBR,
//      LABEL=(0096,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0097 DD DSN=PRIME.EUV.AEUVIDL,DISP=SHR
//IN0097 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVIDL,
//      LABEL=(0097,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0098 DD DSN=PRIME.EUV.SEUVIDL,DISP=SHR
//IN0098 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVIDL,
//      LABEL=(0098,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0099 DD DSN=MASTER.SYS1.AHELPENP,DISP=SHR
//IN0099 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHELPENP,
//      LABEL=(0099,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0100 DD DSN=MASTER.SYS1.HELPENP,DISP=SHR
//IN0100 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HELPENP,
//      LABEL=(0100,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0101 DD DSN=MASTER.SYS1.AAPPMOD2,DISP=SHR
//IN0101 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AAPPMOD2,
//      LABEL=(0101,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0102 DD DSN=MASTER.EOY.SEOYLPA,DISP=SHR
//IN0102 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYLPA,
//      LABEL=(0102,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0103 DD DSN=MASTER.SYS1.ABDTMOD,DISP=SHR
//IN0103 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTMOD,
//      LABEL=(0103,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0104 DD DSN=MASTER.EOY.SEOYMC40,DISP=SHR
//IN0104 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYMC40,
//      LABEL=(0104,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0105 DD DSN=MASTER.EOY.AEOYMC40,DISP=SHR
//IN0105 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYMC40,
//      LABEL=(0105,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0106 DD DSN=MASTER.GSK.SGSKLOAD,DISP=SHR
//IN0106 DD DISP=(OLD,PASS),DSN=CPP.GSK.SGSKLOAD,
//      LABEL=(0106,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0107 DD DSN=MASTER.SYS1.ADFQPLIB,DISP=SHR
//IN0107 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADFQPLIB,
//      LABEL=(0107,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0108 DD DSN=MASTER.SYS1.DFQPLIB,DISP=SHR
//IN0108 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DFQPLIB,
//      LABEL=(0108,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0109 DD DSN=MASTER.TCPIP.SEZACMTX,DISP=SHR
//IN0109 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZACMTX,
//      LABEL=(0109,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0110 DD DSN=MASTER.SYS1.ACMDLIB,DISP=SHR
//IN0110 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACMDLIB,
//      LABEL=(0110,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0111 DD DSN=MASTER.SYS1.AGFUMOD1,DISP=SHR
//IN0111 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AGFUMOD1,
//      LABEL=(0111,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0112 DD DSN=MASTER.CEE.SCEELIB,DISP=SHR
//IN0112 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEELIB,
//      LABEL=(0112,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0113 DD DSN=MASTER.SYS1.SHASMIG,DISP=SHR
//IN0113 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASMIG,
//      LABEL=(0113,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0114 DD DSN=PRIME.EUV.AEUVHXMP,DISP=SHR
//IN0114 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHXMP,
//      LABEL=(0114,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0115 DD DSN=MASTER.SYS1.MSGENU,DISP=SHR
//IN0115 DD DISP=(OLD,PASS),DSN=CPP.SYS1.MSGENU,
//      LABEL=(0115,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0116 DD DSN=MASTER.SYS1.AMSGENU,DISP=SHR
//IN0116 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AMSGENU,
//      LABEL=(0116,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0117 DD DSN=MASTER.SYS1.SBPXPENU,DISP=SHR
//IN0117 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBPXPENU,
//      LABEL=(0117,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0118 DD DSN=MASTER.SYS1.ABPXPENU,DISP=SHR
//IN0118 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABPXPENU,
//      LABEL=(0118,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0119 DD DSN=MASTER.SYS1.AITYHFS,DISP=SHR
//IN0119 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AITYHFS,
//      LABEL=(0119,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0120 DD DSN=MASTER.SYS1.DGTSLIB,DISP=SHR
//IN0120 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DGTSLIB,
//      LABEL=(0120,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0121 DD DSN=MASTER.SYS1.ADGTSLIB,DISP=SHR
//IN0121 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTSLIB,
//      LABEL=(0121,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0122 DD DSN=MASTER.SYS1.ACDMMOD0,DISP=SHR
//IN0122 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACDMMOD0,
//      LABEL=(0122,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0123 DD DSN=MASTER.SYS1.SICELINK,DISP=SHR
//IN0123 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICELINK,
//      LABEL=(0123,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0124 DD DSN=MASTER.SYS1.SIEAHDR.H,DISP=SHR
//IN0124 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SIEAHDR.H,
//      LABEL=(0124,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0125 DD DSN=MASTER.SYS1.ACUNMAC,DISP=SHR
//IN0125 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNMAC,
//      LABEL=(0125,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0126 DD DSN=MASTER.SYS1.AIEAHDR,DISP=SHR
//IN0126 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIEAHDR,
//      LABEL=(0126,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0127 DD DSN=MASTER.SYS1.SISTDAT1,DISP=SHR
//IN0127 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTDAT1,
//      LABEL=(0127,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0128 DD DSN=MASTER.SYS1.AISTDAT1,DISP=SHR
//IN0128 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTDAT1,
//      LABEL=(0128,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0129 DD DSN=MASTER.EXMP.LINKLIB,DISP=SHR
//IN0129 DD DISP=(OLD,PASS),DSN=CPP.EXMP.LINKLIB,
//      LABEL=(0129,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0130 DD DSN=MASTER.ASM.AASMMOD1,DISP=SHR
//IN0130 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMMOD1,
//      LABEL=(0130,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0131 DD DSN=PRIME.BPA.ABPAHFS,DISP=SHR
//IN0131 DD DISP=(OLD,PASS),DSN=CPP.BPA.ABPAHFS,
//      LABEL=(0131,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0132 DD DSN=MASTER.CEE.AIGZSRC1,DISP=SHR
//IN0132 DD DISP=(OLD,PASS),DSN=CPP.CEE.AIGZSRC1,
//      LABEL=(0132,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0133 DD DSN=MASTER.EXMP.VTAMLST,DISP=SHR
//IN0133 DD DISP=(OLD,PASS),DSN=CPP.EXMP.VTAMLST,
//      LABEL=(0133,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0134 DD DSN=MASTER.SYS1.SERBCLS,DISP=SHR
//IN0134 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBCLS,
//      LABEL=(0134,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0135 DD DSN=MASTER.SYS1.AERBCLS,DISP=SHR
//IN0135 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBCLS,
//      LABEL=(0135,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0136 DD DSN=MASTER.CSF.SCSFCLI0,DISP=SHR
//IN0136 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFCLI0,
//      LABEL=(0136,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0137 DD DSN=MASTER.CSF.ACSFCLI0,DISP=SHR
//IN0137 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFCLI0,
//      LABEL=(0137,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0138 DD DSN=MASTER.GDDM.SADMDAT,DISP=SHR
//IN0138 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMDAT,
//      LABEL=(0138,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0139 DD DSN=MASTER.GDDM.AADMDAT,DISP=SHR
//IN0139 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMDAT,
//      LABEL=(0139,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0140 DD DSN=MASTER.CBC.SCCNSAM,DISP=SHR
//IN0140 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNSAM,
//      LABEL=(0140,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0141 DD DSN=MASTER.SYS1.ABMFMOD0,DISP=SHR
//IN0141 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABMFMOD0,
//      LABEL=(0141,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0142 DD DSN=MASTER.CBC.SCBCSAM,DISP=SHR
//IN0142 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCSAM,
//      LABEL=(0142,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0143 DD DSN=MASTER.CSF.SCSFPNL0,DISP=SHR
//IN0143 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFPNL0,
//      LABEL=(0143,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0144 DD DSN=MASTER.CSF.ACSFPNL0,DISP=SHR
//IN0144 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFPNL0,
//      LABEL=(0144,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0145 DD DSN=MASTER.SYS1.ADFPMOD0,DISP=SHR
//IN0145 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADFPMOD0,
//      LABEL=(0145,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0146 DD DSN=MASTER.SYS1.ACUNMOD,DISP=SHR
//IN0146 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNMOD,
//      LABEL=(0146,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0147 DD DSN=MASTER.SYS1.ASSFMOD0,DISP=SHR
//IN0147 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ASSFMOD0,
//      LABEL=(0147,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0148 DD DSN=MASTER.SYS1.SORTLIB,DISP=SHR
//IN0148 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SORTLIB,
//      LABEL=(0148,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0149 DD DSN=MASTER.EXMP.CMDPROC,DISP=SHR
//IN0149 DD DISP=(OLD,PASS),DSN=CPP.EXMP.CMDPROC,
//      LABEL=(0149,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0150 DD DSN=PRIME.CMX.ACMXDBRM,DISP=SHR
//IN0150 DD DISP=(OLD,PASS),DSN=CPP.CMX.ACMXDBRM,
//      LABEL=(0150,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0151 DD DSN=PRIME.CMX.SCMXDBRM,DISP=SHR
//IN0151 DD DISP=(OLD,PASS),DSN=CPP.CMX.SCMXDBRM,
//      LABEL=(0151,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0152 DD DSN=MASTER.EOY.AEOYCLIB,DISP=SHR
//IN0152 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYCLIB,
//      LABEL=(0152,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0153 DD DSN=MASTER.EOY.SEOYCLIB,DISP=SHR
//IN0153 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYCLIB,
//      LABEL=(0153,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0154 DD DSN=MASTER.SYS1.SORTLPA,DISP=SHR
//IN0154 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SORTLPA,
//      LABEL=(0154,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0155 DD DSN=MASTER.NETVIEW.DSIPARM,DISP=SHR
//IN0155 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.DSIPARM,
//      LABEL=(0155,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0156 DD DSN=MASTER.CEE.AAFHSRC1,DISP=SHR
//IN0156 DD DISP=(OLD,PASS),DSN=CPP.CEE.AAFHSRC1,
//      LABEL=(0156,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0157 DD DSN=MASTER.NETVIEW.ADSIPARM,DISP=SHR
//IN0157 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ADSIPARM,
//      LABEL=(0157,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0158 DD DSN=MASTER.CEE.AIBMSRC3,DISP=SHR
//IN0158 DD DISP=(OLD,PASS),DSN=CPP.CEE.AIBMSRC3,
//      LABEL=(0158,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0159 DD DSN=MASTER.GSK.AGSKHFS,DISP=SHR
//IN0159 DD DISP=(OLD,PASS),DSN=CPP.GSK.AGSKHFS,
//      LABEL=(0159,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0160 DD DSN=MASTER.ASM.SASMMOD1,DISP=SHR
//IN0160 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMMOD1,
//      LABEL=(0160,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0161 DD DSN=MASTER.SYS1.AFOMHDRS,DISP=SHR
//IN0161 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AFOMHDRS,
//      LABEL=(0161,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0162 DD DSN=MASTER.SYS1.SACBCNTL,DISP=SHR
//IN0162 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SACBCNTL,
//      LABEL=(0162,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0163 DD DSN=MASTER.SYS1.AACBCNTL,DISP=SHR
//IN0163 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AACBCNTL,
//      LABEL=(0163,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0164 DD DSN=MASTER.TCPIP.SEZANPNL,DISP=SHR
//IN0164 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZANPNL,
//      LABEL=(0164,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0165 DD DSN=MASTER.TCPIP.SEZADSIL,DISP=SHR
//IN0165 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADSIL,
//      LABEL=(0165,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0166 DD DSN=MASTER.CEE.SCEEH.SYS.H,DISP=SHR
//IN0166 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH.SYS.H,
//      LABEL=(0166,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0167 DD DSN=MASTER.EOY.SEOX3ENU,DISP=SHR
//IN0167 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOX3ENU,
//      LABEL=(0167,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0168 DD DSN=MASTER.SYS1.AGFTAMD1,DISP=SHR
//IN0168 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AGFTAMD1,
//      LABEL=(0168,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0169 DD DSN=MASTER.EOY.AEOX3ENU,DISP=SHR
//IN0169 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOX3ENU,
//      LABEL=(0169,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0170 DD DSN=MASTER.ING.SINGNPRM,DISP=SHR
//IN0170 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGNPRM,
//      LABEL=(0170,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0171 DD DSN=MASTER.ING.AINGNPRM,DISP=SHR
//IN0171 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGNPRM,
//      LABEL=(0171,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0172 DD DSN=PRIME.EUV.SEUVLIB,DISP=SHR
//IN0172 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVLIB,
//      LABEL=(0172,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0173 DD DSN=PRIME.EUV.AEUVLIB,DISP=SHR
//IN0173 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVLIB,
//      LABEL=(0173,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0174 DD DSN=MASTER.SYS1.SCBDMENU,DISP=SHR
//IN0174 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCBDMENU,
//      LABEL=(0174,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0175 DD DSN=MASTER.SYS1.ACBDMENU,DISP=SHR
//IN0175 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDMENU,
//      LABEL=(0175,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0176 DD DSN=MASTER.EOY.AEOXOENU,DISP=SHR
//IN0176 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOXOENU,
//      LABEL=(0176,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0177 DD DSN=MASTER.EOY.SEOXOENU,DISP=SHR
//IN0177 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOXOENU,
//      LABEL=(0177,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0178 DD DSN=MASTER.GIM.AGIMCLS0,DISP=SHR
//IN0178 DD DISP=(OLD,PASS),DSN=CPP.GIM.AGIMCLS0,
//      LABEL=(0178,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0179 DD DSN=MASTER.ISP.AISPCLIB,DISP=SHR
//IN0179 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPCLIB,
//      LABEL=(0179,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0180 DD DSN=MASTER.ISP.AISPSLIB,DISP=SHR
//IN0180 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPSLIB,
//      LABEL=(0180,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0181 DD DSN=MASTER.GIM.SGIMCLS0,DISP=SHR
//IN0181 DD DISP=(OLD,PASS),DSN=CPP.GIM.SGIMCLS0,
//      LABEL=(0181,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0182 DD DSN=MASTER.ISP.SISPCLIB,DISP=SHR
//IN0182 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPCLIB,
//      LABEL=(0182,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0183 DD DSN=MASTER.ISP.SISPSLIB,DISP=SHR
//IN0183 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPSLIB,
//      LABEL=(0183,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0184 DD DSN=MASTER.SYS1.NFSTARB,DISP=SHR
//IN0184 DD DISP=(OLD,PASS),DSN=CPP.SYS1.NFSTARB,
//      LABEL=(0184,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0185 DD DSN=MASTER.SYS1.ANFSTARB,DISP=SHR
//IN0185 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ANFSTARB,
//      LABEL=(0185,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0186 DD DSN=MASTER.SYS1.SBDTLIB,DISP=SHR
//IN0186 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTLIB,
//      LABEL=(0186,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0187 DD DSN=MASTER.CEE.ACEESRC3,DISP=SHR
//IN0187 DD DISP=(OLD,PASS),DSN=CPP.CEE.ACEESRC3,
//      LABEL=(0187,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0188 DD DSN=MASTER.CEE.SCEEH.T,DISP=SHR
//IN0188 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH.T,
//      LABEL=(0188,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0189 DD DSN=MASTER.SYS1.ACBDTEMP,DISP=SHR
//IN0189 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDTEMP,
//      LABEL=(0189,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0190 DD DSN=MASTER.GIM.SGIMSENU,DISP=SHR
//IN0190 DD DISP=(OLD,PASS),DSN=CPP.GIM.SGIMSENU,
//      LABEL=(0190,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0191 DD DSN=MASTER.GIM.AGIMSENU,DISP=SHR
//IN0191 DD DISP=(OLD,PASS),DSN=CPP.GIM.AGIMSENU,
//      LABEL=(0191,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0192 DD DSN=MASTER.SYS1.ALPALIB,DISP=SHR
//IN0192 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ALPALIB,
//      LABEL=(0192,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0193 DD DSN=MASTER.EOY.AEOYOENU,DISP=SHR
//IN0193 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYOENU,
//      LABEL=(0193,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0194 DD DSN=MASTER.EOY.SEOYOENU,DISP=SHR
//IN0194 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYOENU,
//      LABEL=(0194,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0195 DD DSN=MASTER.SYS1.SCBDTEMP,DISP=SHR
//IN0195 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCBDTEMP,
//      LABEL=(0195,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0196 DD DSN=MASTER.TCPIP.AEZAROE2,DISP=SHR
//IN0196 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAROE2,
//      LABEL=(0196,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0197 DD DSN=MASTER.TCPIP.SEZAROE2,DISP=SHR
//IN0197 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAROE2,
//      LABEL=(0197,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0198 DD DSN=PRIME.EQAW.SEQASAMP,DISP=SHR
//IN0198 DD DISP=(OLD,PASS),DSN=CPP.EQAW.SEQASAMP,
//      LABEL=(0198,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0199 DD DSN=MASTER.SYS1.SFOMHDRS,DISP=SHR
//IN0199 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SFOMHDRS,
//      LABEL=(0199,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0200 DD DSN=PRIME.ICQ.ICQMLIB,DISP=SHR
//IN0200 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQMLIB,
//      LABEL=(0200,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0201 DD DSN=PRIME.EQAW.AEQASRC2,DISP=SHR
//IN0201 DD DISP=(OLD,PASS),DSN=CPP.EQAW.AEQASRC2,
//      LABEL=(0201,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0202 DD DSN=MASTER.SYS1.AICQMAC3,DISP=SHR
//IN0202 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQMAC3,
//      LABEL=(0202,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0203 DD DSN=MASTER.SYS1.IMAGELIB,DISP=SHR
//IN0203 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IMAGELIB,
//      LABEL=(0203,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0204 DD DSN=MASTER.ING.SINGMOD2,DISP=SHR
//IN0204 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGMOD2,
//      LABEL=(0204,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0205 DD DSN=MASTER.EOY.SEOY1ENU,DISP=SHR
//IN0205 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOY1ENU,
//      LABEL=(0205,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0206 DD DSN=MASTER.EOY.AEOY1ENU,DISP=SHR
//IN0206 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOY1ENU,
//      LABEL=(0206,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0209 DD DSN=MASTER.SYS1.AEDGSRC1,DISP=SHR
//IN0209 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AEDGSRC1,
//      LABEL=(0209,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0210 DD DSN=MASTER.ISF.SISFJCL,DISP=SHR
//IN0210 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFJCL,
//      LABEL=(0210,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0211 DD DSN=MASTER.SYS1.SBPXEXEC,DISP=SHR
//IN0211 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBPXEXEC,
//      LABEL=(0211,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0212 DD DSN=MASTER.SYS1.ABPXEXEC,DISP=SHR
//IN0212 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABPXEXEC,
//      LABEL=(0212,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0213 DD DSN=MASTER.ISF.AISFJCL,DISP=SHR
//IN0213 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFJCL,
//      LABEL=(0213,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0214 DD DSN=MASTER.SYS1.AISTMAC1,DISP=SHR
//IN0214 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTMAC1,
//      LABEL=(0214,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0215 DD DSN=MASTER.SYS1.SISTMAC1,DISP=SHR
//IN0215 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTMAC1,
//      LABEL=(0215,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0216 DD DSN=MASTER.SYS1.AOSD8,DISP=SHR
//IN0216 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSD8,
//      LABEL=(0216,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0217 DD DSN=MASTER.EOX.SEPHLOD1,DISP=SHR
//IN0217 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHLOD1,
//      LABEL=(0217,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0218 DD DSN=MASTER.EOX.AEPHLOD1,DISP=SHR
//IN0218 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHLOD1,
//      LABEL=(0218,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0219 DD DSN=MASTER.CEE.SAFHFORT,DISP=SHR
//IN0219 DD DISP=(OLD,PASS),DSN=CPP.CEE.SAFHFORT,
//      LABEL=(0219,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0220 DD DSN=MASTER.SYS1.ISAMLPA,DISP=SHR
//IN0220 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ISAMLPA,
//      LABEL=(0220,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0221 DD DSN=MASTER.EUVF.AEUVFHFS,DISP=SHR
//IN0221 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFHFS,
//      LABEL=(0221,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0222 DD DSN=MASTER.TCPIP.SEZAXTLB,DISP=SHR
//IN0222 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAXTLB,
//      LABEL=(0222,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0223 DD DSN=MASTER.TCPIP.SEZARNT2,DISP=SHR
//IN0223 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZARNT2,
//      LABEL=(0223,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0224 DD DSN=MASTER.TCPIP.AEZARNT2,DISP=SHR
//IN0224 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZARNT2,
//      LABEL=(0224,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0225 DD DSN=MASTER.EOY.AEOY4ENU,DISP=SHR
//IN0225 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOY4ENU,
//      LABEL=(0225,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0226 DD DSN=MASTER.EOY.SEOY4ENU,DISP=SHR
//IN0226 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOY4ENU,
//      LABEL=(0226,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0227 DD DSN=PRIME.ECN.AECNHINC,DISP=SHR
//IN0227 DD DISP=(OLD,PASS),DSN=CPP.ECN.AECNHINC,
//      LABEL=(0227,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0228 DD DSN=MASTER.SYS1.ACUNSAMP,DISP=SHR
//IN0228 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNSAMP,
//      LABEL=(0228,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0230 DD DSN=MASTER.SYS1.AICEUSER,DISP=SHR
//IN0230 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICEUSER,
//      LABEL=(0230,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0231 DD DSN=MASTER.SYS1.SICEUSER,DISP=SHR
//IN0231 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICEUSER,
//      LABEL=(0231,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0232 DD DSN=MASTER.SYS1.AOST3,DISP=SHR
//IN0232 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOST3,
//      LABEL=(0232,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0233 DD DSN=PRIME.CIM.ACIMMOD1,DISP=SHR
//IN0233 DD DISP=(OLD,PASS),DSN=CPP.CIM.ACIMMOD1,
//      LABEL=(0233,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0234 DD DSN=MASTER.NETVIEW.BNJPNL1,DISP=SHR
//IN0234 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.BNJPNL1,
//      LABEL=(0234,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0235 DD DSN=MASTER.TCPIP.SEZANMAC,DISP=SHR
//IN0235 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZANMAC,
//      LABEL=(0235,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0236 DD DSN=MASTER.CEE.SCEECPP,DISP=SHR
//IN0236 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEECPP,
//      LABEL=(0236,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0237 DD DSN=MASTER.NETVIEW.ABNJPNL1,DISP=SHR
//IN0237 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ABNJPNL1,
//      LABEL=(0237,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0238 DD DSN=MASTER.CEE.AEDCCPP1,DISP=SHR
//IN0238 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCCPP1,
//      LABEL=(0238,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0239 DD DSN=MASTER.EOY.AEOYXENU,DISP=SHR
//IN0239 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYXENU,
//      LABEL=(0239,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0240 DD DSN=MASTER.EOY.SEOYXENU,DISP=SHR
//IN0240 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYXENU,
//      LABEL=(0240,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0241 DD DSN=MASTER.ICA.AICAHLBR,DISP=SHR
//IN0241 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICAHLBR,
//      LABEL=(0241,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0242 DD DSN=MASTER.NETVIEW.CNMINST,DISP=SHR
//IN0242 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.CNMINST,
//      LABEL=(0242,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0243 DD DSN=MASTER.SYS1.IBM.PARMLIB,DISP=SHR
//IN0243 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IBM.PARMLIB,
//      LABEL=(0243,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0244 DD DSN=MASTER.ISF.AISFEXEC,DISP=SHR
//IN0244 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFEXEC,
//      LABEL=(0244,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0245 DD DSN=MASTER.ISF.SISFEXEC,DISP=SHR
//IN0245 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFEXEC,
//      LABEL=(0245,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0246 DD DSN=MASTER.NETVIEW.ACNMINST,DISP=SHR
//IN0246 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ACNMINST,
//      LABEL=(0246,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0248 DD DSN=MASTER.ASM.AASMSAM1,DISP=SHR
//IN0248 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMSAM1,
//      LABEL=(0248,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0249 DD DSN=MASTER.ASM.SASMSAM1,DISP=SHR
//IN0249 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMSAM1,
//      LABEL=(0249,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0250 DD DSN=MASTER.FFST.V120ESA.AEPWSRC1,DISP=SHR
//IN0250 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.AEPWSRC1,
//      LABEL=(0250,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0252 DD DSN=MASTER.FFST.V120ESA.SEPWMOD1,DISP=SHR
//IN0252 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWMOD1,
//      LABEL=(0252,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0253 DD DSN=MASTER.CEE.SIBMMATH,DISP=SHR
//IN0253 DD DISP=(OLD,PASS),DSN=CPP.CEE.SIBMMATH,
//      LABEL=(0253,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0254 DD DSN=MASTER.TCPIP.SEZALNK2,DISP=SHR
//IN0254 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZALNK2,
//      LABEL=(0254,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0255 DD DSN=MASTER.TCPIP.SEZAXAWL,DISP=SHR
//IN0255 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAXAWL,
//      LABEL=(0255,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0256 DD DSN=MASTER.CBC.SCTVMOD,DISP=SHR
//IN0256 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCTVMOD,
//      LABEL=(0256,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0257 DD DSN=MASTER.EXMP.PROCLIB,DISP=SHR
//IN0257 DD DISP=(OLD,PASS),DSN=CPP.EXMP.PROCLIB,
//      LABEL=(0257,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0258 DD DSN=MASTER.EXMP.PARMLIB,DISP=SHR
//IN0258 DD DISP=(OLD,PASS),DSN=CPP.EXMP.PARMLIB,
//      LABEL=(0258,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0259 DD DSN=MASTER.EXMP.IVPLIB,DISP=SHR
//IN0259 DD DISP=(OLD,PASS),DSN=CPP.EXMP.IVPLIB,
//      LABEL=(0259,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0260 DD DSN=MASTER.EXMP.ISPPLIB,DISP=SHR
//IN0260 DD DISP=(OLD,PASS),DSN=CPP.EXMP.ISPPLIB,
//      LABEL=(0260,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0261 DD DSN=MASTER.IOE.AIOEHLIB,DISP=SHR
//IN0261 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEHLIB,
//      LABEL=(0261,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0262 DD DSN=MASTER.EXMP.VTAMLIB,DISP=SHR
//IN0262 DD DISP=(OLD,PASS),DSN=CPP.EXMP.VTAMLIB,
//      LABEL=(0262,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0263 DD DSN=MASTER.EOY.SEOYMC30,DISP=SHR
//IN0263 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYMC30,
//      LABEL=(0263,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0264 DD DSN=MASTER.CBC.ACTVMOD,DISP=SHR
//IN0264 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACTVMOD,
//      LABEL=(0264,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0265 DD DSN=MASTER.EOY.AEOYMC30,DISP=SHR
//IN0265 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYMC30,
//      LABEL=(0265,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0266 DD DSN=MASTER.SYS1.IBM.APARMLIB,DISP=SHR
//IN0266 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IBM.APARMLIB,
//      LABEL=(0266,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0267 DD DSN=MASTER.SYS1.ABPXMENU,DISP=SHR
//IN0267 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABPXMENU,
//      LABEL=(0267,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0268 DD DSN=MASTER.SYS1.SBPXMENU,DISP=SHR
//IN0268 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBPXMENU,
//      LABEL=(0268,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0269 DD DSN=MASTER.SYS1.ADFQPSRC,DISP=SHR
//IN0269 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADFQPSRC,
//      LABEL=(0269,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0270 DD DSN=MASTER.SYS1.SDFQPSRC,DISP=SHR
//IN0270 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SDFQPSRC,
//      LABEL=(0270,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0271 DD DSN=MASTER.SYS1.AOS00,DISP=SHR
//IN0271 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS00,
//      LABEL=(0271,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0272 DD DSN=MASTER.SYS1.AOS06,DISP=SHR
//IN0272 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS06,
//      LABEL=(0272,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0273 DD DSN=MASTER.SYS1.SEDGMENU,DISP=SHR
//IN0273 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SEDGMENU,
//      LABEL=(0273,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0274 DD DSN=MASTER.ASM.AASMSAM2,DISP=SHR
//IN0274 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMSAM2,
//      LABEL=(0274,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0275 DD DSN=MASTER.SYS1.ABDTSAMP,DISP=SHR
//IN0275 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTSAMP,
//      LABEL=(0275,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0276 DD DSN=MASTER.SYS1.HRFCLST,DISP=SHR
//IN0276 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HRFCLST,
//      LABEL=(0276,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0277 DD DSN=MASTER.ASM.SASMSAM2,DISP=SHR
//IN0277 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMSAM2,
//      LABEL=(0277,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0278 DD DSN=MASTER.ASM.AASMMAC1,DISP=SHR
//IN0278 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMMAC1,
//      LABEL=(0278,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0279 DD DSN=MASTER.SYS1.SBDTSAMP,DISP=SHR
//IN0279 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTSAMP,
//      LABEL=(0279,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0280 DD DSN=MASTER.SYS1.HHRFCLST,DISP=SHR
//IN0280 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HHRFCLST,
//      LABEL=(0280,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0281 DD DSN=MASTER.ASM.SASMMAC1,DISP=SHR
//IN0281 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMMAC1,
//      LABEL=(0281,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0282 DD DSN=MASTER.SYS1.AEDGMENU,DISP=SHR
//IN0282 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AEDGMENU,
//      LABEL=(0282,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0283 DD DSN=MASTER.SYS1.SISTASN1,DISP=SHR
//IN0283 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTASN1,
//      LABEL=(0283,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0284 DD DSN=MASTER.SYS1.AISTASN1,DISP=SHR
//IN0284 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTASN1,
//      LABEL=(0284,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0285 DD DSN=MASTER.CEE.SCEESPC,DISP=SHR
//IN0285 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEESPC,
//      LABEL=(0285,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0286 DD DSN=MASTER.EUVF.SEUVFHDR,DISP=SHR
//IN0286 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFHDR,
//      LABEL=(0286,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0287 DD DSN=MASTER.SYS1.AADRYLIB,DISP=SHR
//IN0287 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AADRYLIB,
//      LABEL=(0287,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0288 DD DSN=MASTER.SYS1.AICESAMP,DISP=SHR
//IN0288 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICESAMP,
//      LABEL=(0288,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0289 DD DSN=MASTER.CEE.AEDCOBJ1,DISP=SHR
//IN0289 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCOBJ1,
//      LABEL=(0289,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0290 DD DSN=MASTER.SYS1.SADRYLIB,DISP=SHR
//IN0290 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SADRYLIB,
//      LABEL=(0290,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0291 DD DSN=MASTER.SYS1.SICESAMP,DISP=SHR
//IN0291 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICESAMP,
//      LABEL=(0291,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0292 DD DSN=MASTER.EUVF.AEUVFHDR,DISP=SHR
//IN0292 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFHDR,
//      LABEL=(0292,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0293 DD DSN=PRIME.ASU.AASUHSAM,DISP=SHR
//IN0293 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUHSAM,
//      LABEL=(0293,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0294 DD DSN=MASTER.CEE.AEDCMOD2,DISP=SHR
//IN0294 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCMOD2,
//      LABEL=(0294,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0295 DD DSN=PRIME.ASU.AASUSAMP,DISP=SHR
//IN0295 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUSAMP,
//      LABEL=(0295,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0297 DD DSN=MASTER.SYS1.HHRFMSG,DISP=SHR
//IN0297 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HHRFMSG,
//      LABEL=(0297,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0298 DD DSN=MASTER.ING.AINGSRC,DISP=SHR
//IN0298 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGSRC,
//      LABEL=(0298,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0299 DD DSN=MASTER.ING.SINGSRC,DISP=SHR
//IN0299 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGSRC,
//      LABEL=(0299,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0300 DD DSN=PRIME.ASU.SASUSAMP,DISP=SHR
//IN0300 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUSAMP,
//      LABEL=(0300,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0301 DD DSN=MASTER.TCPIP.SEZAPENU,DISP=SHR
//IN0301 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAPENU,
//      LABEL=(0301,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0302 DD DSN=MASTER.SYS1.ANFSSAMP,DISP=SHR
//IN0302 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ANFSSAMP,
//      LABEL=(0302,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0304 DD DSN=MASTER.GIM.AGIMMENU,DISP=SHR
//IN0304 DD DISP=(OLD,PASS),DSN=CPP.GIM.AGIMMENU,
//      LABEL=(0304,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0305 DD DSN=MASTER.GIM.SGIMMENU,DISP=SHR
//IN0305 DD DISP=(OLD,PASS),DSN=CPP.GIM.SGIMMENU,
//      LABEL=(0305,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0306 DD DSN=MASTER.SYS1.HRFMSG,DISP=SHR
//IN0306 DD DISP=(OLD,PASS),DSN=CPP.SYS1.HRFMSG,
//      LABEL=(0306,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0307 DD DSN=MASTER.SYS1.NFSSAMP,DISP=SHR
//IN0307 DD DISP=(OLD,PASS),DSN=CPP.SYS1.NFSSAMP,
//      LABEL=(0307,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0308 DD DSN=MASTER.SYS1.AOS11,DISP=SHR
//IN0308 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS11,
//      LABEL=(0308,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0309 DD DSN=MASTER.SYS1.AIFALIB,DISP=SHR
//IN0309 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIFALIB,
//      LABEL=(0309,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0310 DD DSN=MASTER.SYS1.AHASPNL0,DISP=SHR
//IN0310 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASPNL0,
//      LABEL=(0310,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0311 DD DSN=MASTER.SYS1.SHASPNL0,DISP=SHR
//IN0311 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASPNL0,
//      LABEL=(0311,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0312 DD DSN=PRIME.CDS.ACDSHFS,DISP=SHR
//IN0312 DD DISP=(OLD,PASS),DSN=CPP.CDS.ACDSHFS,
//      LABEL=(0312,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0313 DD DSN=MASTER.SYS1.AIMFMOD0,DISP=SHR
//IN0313 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIMFMOD0,
//      LABEL=(0313,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0314 DD DSN=MASTER.GDDM.AADMGDF,DISP=SHR
//IN0314 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMGDF,
//      LABEL=(0314,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0315 DD DSN=MASTER.GDDM.SADMGDF,DISP=SHR
//IN0315 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMGDF,
//      LABEL=(0315,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0316 DD DSN=PRIME.ICQ.ICQTABLS,DISP=SHR
//IN0316 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQTABLS,
//      LABEL=(0316,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0317 DD DSN=MASTER.TCPIP.SEZATCPX,DISP=SHR
//IN0317 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZATCPX,
//      LABEL=(0317,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0318 DD DSN=PRIME.IMW.AIMWSAM1,DISP=SHR
//IN0318 DD DISP=(OLD,PASS),DSN=CPP.IMW.AIMWSAM1,
//      LABEL=(0318,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0319 DD DSN=MASTER.TCPIP.AEZAXLT1,DISP=SHR
//IN0319 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAXLT1,
//      LABEL=(0319,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0320 DD DSN=MASTER.SYS1.AICQMAC4,DISP=SHR
//IN0320 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQMAC4,
//      LABEL=(0320,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0321 DD DSN=PRIME.EUV.AEUVHETC,DISP=SHR
//IN0321 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHETC,
//      LABEL=(0321,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0322 DD DSN=MASTER.SYS1.ACDRMODS,DISP=SHR
//IN0322 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACDRMODS,
//      LABEL=(0322,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0323 DD DSN=MASTER.TCPIP.AEZARNT4,DISP=SHR
//IN0323 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZARNT4,
//      LABEL=(0323,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0324 DD DSN=MASTER.SYS1.ABLSMSG0,DISP=SHR
//IN0324 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABLSMSG0,
//      LABEL=(0324,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0325 DD DSN=MASTER.SYS1.AERBT,DISP=SHR
//IN0325 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBT,
//      LABEL=(0325,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0326 DD DSN=MASTER.ING.SINGNMSG,DISP=SHR
//IN0326 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGNMSG,
//      LABEL=(0326,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0327 DD DSN=MASTER.SYS1.SBLSMSG0,DISP=SHR
//IN0327 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBLSMSG0,
//      LABEL=(0327,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0328 DD DSN=MASTER.EOY.SEOYSAMP,DISP=SHR
//IN0328 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYSAMP,
//      LABEL=(0328,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0329 DD DSN=MASTER.EOY.AEOYSAMP,DISP=SHR
//IN0329 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYSAMP,
//      LABEL=(0329,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0330 DD DSN=MASTER.ING.AINGNMSG,DISP=SHR
//IN0330 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGNMSG,
//      LABEL=(0330,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0331 DD DSN=MASTER.TCPIP.SEZARNT4,DISP=SHR
//IN0331 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZARNT4,
//      LABEL=(0331,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0332 DD DSN=MASTER.SYS1.SERBT,DISP=SHR
//IN0332 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBT,
//      LABEL=(0332,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0333 DD DSN=MASTER.CEE.SCEECLST,DISP=SHR
//IN0333 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEECLST,
//      LABEL=(0333,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0334 DD DSN=MASTER.CBC.SCCNUTL,DISP=SHR
//IN0334 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNUTL,
//      LABEL=(0334,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0335 DD DSN=MASTER.IOE.AIOEEXEC,DISP=SHR
//IN0335 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEEXEC,
//      LABEL=(0335,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0336 DD DSN=MASTER.CBC.SCBCUTL,DISP=SHR
//IN0336 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCUTL,
//      LABEL=(0336,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0337 DD DSN=MASTER.SYS1.SBLSKEL0,DISP=SHR
//IN0337 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBLSKEL0,
//      LABEL=(0337,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0338 DD DSN=PRIME.ASU.SASUPENU,DISP=SHR
//IN0338 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUPENU,
//      LABEL=(0338,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0339 DD DSN=MASTER.SYS1.SBDTPNL0,DISP=SHR
//IN0339 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTPNL0,
//      LABEL=(0339,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0340 DD DSN=MASTER.IOE.SIOEEXEC,DISP=SHR
//IN0340 DD DISP=(OLD,PASS),DSN=CPP.IOE.SIOEEXEC,
//      LABEL=(0340,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0341 DD DSN=MASTER.SYS1.ABLSKEL0,DISP=SHR
//IN0341 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABLSKEL0,
//      LABEL=(0341,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0342 DD DSN=PRIME.ASU.AASUPENU,DISP=SHR
//IN0342 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUPENU,
//      LABEL=(0342,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0343 DD DSN=MASTER.SYS1.ABDTPNL0,DISP=SHR
//IN0343 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTPNL0,
//      LABEL=(0343,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0344 DD DSN=MASTER.SYS1.SIFALIB,DISP=SHR
//IN0344 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SIFALIB,
//      LABEL=(0344,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0345 DD DSN=MASTER.SYS1.AOSC6,DISP=SHR
//IN0345 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSC6,
//      LABEL=(0345,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0346 DD DSN=MASTER.GDDM.SADMOPS,DISP=SHR
//IN0346 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMOPS,
//      LABEL=(0346,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0347 DD DSN=MASTER.GDDM.AADMOPS,DISP=SHR
//IN0347 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMOPS,
//      LABEL=(0347,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0348 DD DSN=MASTER.GDDM.SADMMAP,DISP=SHR
//IN0348 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMMAP,
//      LABEL=(0348,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0349 DD DSN=MASTER.SYS1.AOS24,DISP=SHR
//IN0349 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS24,
//      LABEL=(0349,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0350 DD DSN=MASTER.TCPIP.SEZARPCL,DISP=SHR
//IN0350 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZARPCL,
//      LABEL=(0350,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0351 DD DSN=MASTER.SYS1.AOSCE,DISP=SHR
//IN0351 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSCE,
//      LABEL=(0351,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0352 DD DSN=MASTER.SYS1.MSGENP,DISP=SHR
//IN0352 DD DISP=(OLD,PASS),DSN=CPP.SYS1.MSGENP,
//      LABEL=(0352,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0353 DD DSN=MASTER.SYS1.AMSGENP,DISP=SHR
//IN0353 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AMSGENP,
//      LABEL=(0353,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0354 DD DSN=MASTER.EOX.SEPHPNL1,DISP=SHR
//IN0354 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHPNL1,
//      LABEL=(0354,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0355 DD DSN=MASTER.CSF.SCSFOBJ,DISP=SHR
//IN0355 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFOBJ,
//      LABEL=(0355,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0356 DD DSN=MASTER.EOY.SEOXIENU,DISP=SHR
//IN0356 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOXIENU,
//      LABEL=(0356,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0357 DD DSN=MASTER.SYS1.SERBTENU,DISP=SHR
//IN0357 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBTENU,
//      LABEL=(0357,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0358 DD DSN=MASTER.EOX.AEPHPNL1,DISP=SHR
//IN0358 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHPNL1,
//      LABEL=(0358,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0359 DD DSN=MASTER.SYS1.SERBMENU,DISP=SHR
//IN0359 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBMENU,
//      LABEL=(0359,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0360 DD DSN=MASTER.CSF.ACSFOBJ,DISP=SHR
//IN0360 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFOBJ,
//      LABEL=(0360,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0361 DD DSN=MASTER.SYS1.AERBTENU,DISP=SHR
//IN0361 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBTENU,
//      LABEL=(0361,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0362 DD DSN=MASTER.SYS1.AERBMENU,DISP=SHR
//IN0362 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AERBMENU,
//      LABEL=(0362,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0363 DD DSN=MASTER.SYS1.SBLSTBL0,DISP=SHR
//IN0363 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBLSTBL0,
//      LABEL=(0363,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0364 DD DSN=MASTER.SYS1.ABLSTBL0,DISP=SHR
//IN0364 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABLSTBL0,
//      LABEL=(0364,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0365 DD DSN=MASTER.EOY.AEOXIENU,DISP=SHR
//IN0365 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOXIENU,
//      LABEL=(0365,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0366 DD DSN=MASTER.TCPIP.SEZALIBN,DISP=SHR
//IN0366 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZALIBN,
//      LABEL=(0366,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0367 DD DSN=MASTER.SYS1.CIPLIB,DISP=SHR
//IN0367 DD DISP=(OLD,PASS),DSN=CPP.SYS1.CIPLIB,
//      LABEL=(0367,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0368 DD DSN=MASTER.EUVF.AEUVFLIB,DISP=SHR
//IN0368 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFLIB,
//      LABEL=(0368,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0369 DD DSN=MASTER.CSF.ACSFHDRS,DISP=SHR
//IN0369 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFHDRS,
//      LABEL=(0369,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0370 DD DSN=MASTER.EUVF.SEUVFLIB,DISP=SHR
//IN0370 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFLIB,
//      LABEL=(0370,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0371 DD DSN=MASTER.SYS1.AGENLIB,DISP=SHR
//IN0371 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AGENLIB,
//      LABEL=(0371,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0372 DD DSN=MASTER.GLD.AGLDSAMP,DISP=SHR
//IN0372 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDSAMP,
//      LABEL=(0372,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0373 DD DSN=MASTER.FFST.V120ESA.SEPWSRC1,DISP=SHR
//IN0373 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWSRC1,
//      LABEL=(0373,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0374 DD DSN=MASTER.GLD.SGLDSAMP,DISP=SHR
//IN0374 DD DISP=(OLD,PASS),DSN=CPP.GLD.SGLDSAMP,
//      LABEL=(0374,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0375 DD DSN=MASTER.CSF.SCSFHDRS,DISP=SHR
//IN0375 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFHDRS,
//      LABEL=(0375,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0376 DD DSN=MASTER.EOY.SEOX4ENU,DISP=SHR
//IN0376 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOX4ENU,
//      LABEL=(0376,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0377 DD DSN=MASTER.EOY.AEOX4ENU,DISP=SHR
//IN0377 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOX4ENU,
//      LABEL=(0377,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0378 DD DSN=MASTER.SYS1.AOSD7,DISP=SHR
//IN0378 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSD7,
//      LABEL=(0378,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0379 DD DSN=MASTER.SYS1.AOS04,DISP=SHR
//IN0379 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS04,
//      LABEL=(0379,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0380 DD DSN=MASTER.CEE.SCEEBIND,DISP=SHR
//IN0380 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEBIND,
//      LABEL=(0380,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0381 DD DSN=MASTER.SYS1.SERBLPA,DISP=SHR
//IN0381 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SERBLPA,
//      LABEL=(0381,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0382 DD DSN=PRIME.EUV.AEUVHDCP,DISP=SHR
//IN0382 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHDCP,
//      LABEL=(0382,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0383 DD DSN=MASTER.FFST.V120ESA.SEPWBENU,DISP=SHR
//IN0383 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWBENU,
//      LABEL=(0383,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0384 DD DSN=MASTER.FFST.V120ESA.AEPWBENU,DISP=SHR
//IN0384 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.AEPWBENU,
//      LABEL=(0384,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0385 DD DSN=MASTER.EOY.SEOX1ENU,DISP=SHR
//IN0385 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOX1ENU,
//      LABEL=(0385,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0386 DD DSN=MASTER.EOY.AEOX1ENU,DISP=SHR
//IN0386 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOX1ENU,
//      LABEL=(0386,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0387 DD DSN=MASTER.SYS1.DFQLLIB,DISP=SHR
//IN0387 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DFQLLIB,
//      LABEL=(0387,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0388 DD DSN=MASTER.SYS1.DGTTLIB,DISP=SHR
//IN0388 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DGTTLIB,
//      LABEL=(0388,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0389 DD DSN=MASTER.SYS1.ADGTTLIB,DISP=SHR
//IN0389 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTTLIB,
//      LABEL=(0389,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0390 DD DSN=PRIME.EUV.SEUVHDRK,DISP=SHR
//IN0390 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVHDRK,
//      LABEL=(0390,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0391 DD DSN=PRIME.EUV.SEUVLIBK,DISP=SHR
//IN0391 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVLIBK,
//      LABEL=(0391,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0392 DD DSN=PRIME.EUV.SEUVEXP,DISP=SHR
//IN0392 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVEXP,
//      LABEL=(0392,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0393 DD DSN=MASTER.ING.SINGSAMP,DISP=SHR
//IN0393 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGSAMP,
//      LABEL=(0393,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0394 DD DSN=MASTER.SYS1.IBM.APROCLIB,DISP=SHR
//IN0394 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IBM.APROCLIB,
//      LABEL=(0394,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0395 DD DSN=MASTER.IOE.SIOESAMP,DISP=SHR
//IN0395 DD DISP=(OLD,PASS),DSN=CPP.IOE.SIOESAMP,
//      LABEL=(0395,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0396 DD DSN=MASTER.TCPIP.SEZATELX,DISP=SHR
//IN0396 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZATELX,
//      LABEL=(0396,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0397 DD DSN=MASTER.CSF.SCSFMSG0,DISP=SHR
//IN0397 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFMSG0,
//      LABEL=(0397,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0398 DD DSN=MASTER.SYS1.IBM.PROCLIB,DISP=SHR
//IN0398 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IBM.PROCLIB,
//      LABEL=(0398,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0399 DD DSN=PRIME.ICQ.ICQABTXT,DISP=SHR
//IN0399 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQABTXT,
//      LABEL=(0399,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0400 DD DSN=MASTER.NETVIEW.SCNMMAC1,DISP=SHR
//IN0400 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SCNMMAC1,
//      LABEL=(0400,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0401 DD DSN=MASTER.SYS1.AICQAB,DISP=SHR
//IN0401 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQAB,
//      LABEL=(0401,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0402 DD DSN=MASTER.EOY.AEOYMENU,DISP=SHR
//IN0402 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYMENU,
//      LABEL=(0402,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0403 DD DSN=PRIME.EUV.AEUVHDRK,DISP=SHR
//IN0403 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHDRK,
//      LABEL=(0403,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0404 DD DSN=PRIME.EUV.AEUVLIBK,DISP=SHR
//IN0404 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVLIBK,
//      LABEL=(0404,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0405 DD DSN=PRIME.EUV.AEUVEXP,DISP=SHR
//IN0405 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVEXP,
//      LABEL=(0405,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0406 DD DSN=MASTER.EOY.SEOYMENU,DISP=SHR
//IN0406 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYMENU,
//      LABEL=(0406,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0407 DD DSN=MASTER.IOE.AIOESAMP,DISP=SHR
//IN0407 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOESAMP,
//      LABEL=(0407,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0408 DD DSN=MASTER.ING.AINGSAMP,DISP=SHR
//IN0408 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGSAMP,
//      LABEL=(0408,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0409 DD DSN=MASTER.CBC.SCCNJCL,DISP=SHR
//IN0409 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNJCL,
//      LABEL=(0409,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0410 DD DSN=MASTER.TCPIP.AEZAXLT2,DISP=SHR
//IN0410 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZAXLT2,
//      LABEL=(0410,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0411 DD DSN=MASTER.CBC.SCBCPRC,DISP=SHR
//IN0411 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCPRC,
//      LABEL=(0411,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0412 DD DSN=MASTER.CSF.ACSFMSG0,DISP=SHR
//IN0412 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFMSG0,
//      LABEL=(0412,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0413 DD DSN=MASTER.NETVIEW.ACNMMAC1,DISP=SHR
//IN0413 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ACNMMAC1,
//      LABEL=(0413,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0414 DD DSN=MASTER.CBC.SCCNPRC,DISP=SHR
//IN0414 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNPRC,
//      LABEL=(0414,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0415 DD DSN=MASTER.CBC.SCBCJCL,DISP=SHR
//IN0415 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCJCL,
//      LABEL=(0415,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0416 DD DSN=MASTER.EOY.SEOY2ENU,DISP=SHR
//IN0416 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOY2ENU,
//      LABEL=(0416,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0417 DD DSN=MASTER.EOY.AEOY2ENU,DISP=SHR
//IN0417 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOY2ENU,
//      LABEL=(0417,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0418 DD DSN=PRIME.ECN.AECNHEXP,DISP=SHR
//IN0418 DD DISP=(OLD,PASS),DSN=CPP.ECN.AECNHEXP,
//      LABEL=(0418,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0420 DD DSN=MASTER.EOY.SEOYIENU,DISP=SHR
//IN0420 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYIENU,
//      LABEL=(0420,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0421 DD DSN=MASTER.EOY.AEOYIENU,DISP=SHR
//IN0421 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYIENU,
//      LABEL=(0421,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0422 DD DSN=MASTER.SYS1.CBRDBRM,DISP=SHR
//IN0422 DD DISP=(OLD,PASS),DSN=CPP.SYS1.CBRDBRM,
//      LABEL=(0422,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0423 DD DSN=MASTER.ASM.SASMMAC2,DISP=SHR
//IN0423 DD DISP=(OLD,PASS),DSN=CPP.ASM.SASMMAC2,
//      LABEL=(0423,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0424 DD DSN=MASTER.SYS1.ACBRDBRM,DISP=SHR
//IN0424 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBRDBRM,
//      LABEL=(0424,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0425 DD DSN=MASTER.SYS1.SAPPSAMP,DISP=SHR
//IN0425 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SAPPSAMP,
//      LABEL=(0425,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0426 DD DSN=MASTER.SYS1.SICEMENU,DISP=SHR
//IN0426 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICEMENU,
//      LABEL=(0426,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0427 DD DSN=MASTER.SYS1.AICEMENU,DISP=SHR
//IN0427 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICEMENU,
//      LABEL=(0427,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0428 DD DSN=PRIME.ECN.AECNEXP,DISP=SHR
//IN0428 DD DISP=(OLD,PASS),DSN=CPP.ECN.AECNEXP,
//      LABEL=(0428,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0429 DD DSN=PRIME.ECN.SECNEXP,DISP=SHR
//IN0429 DD DISP=(OLD,PASS),DSN=CPP.ECN.SECNEXP,
//      LABEL=(0429,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0430 DD DSN=MASTER.ASM.AASMMAC2,DISP=SHR
//IN0430 DD DISP=(OLD,PASS),DSN=CPP.ASM.AASMMAC2,
//      LABEL=(0430,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0431 DD DSN=MASTER.SYS1.AAPPSAMP,DISP=SHR
//IN0431 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AAPPSAMP,
//      LABEL=(0431,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0432 DD DSN=MASTER.SYS1.AISTDAT2,DISP=SHR
//IN0432 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTDAT2,
//      LABEL=(0432,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0433 DD DSN=MASTER.SYS1.SISTDAT2,DISP=SHR
//IN0433 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTDAT2,
//      LABEL=(0433,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0434 DD DSN=MASTER.ING.AINGMOD2,DISP=SHR
//IN0434 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGMOD2,
//      LABEL=(0434,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0435 DD DSN=MASTER.SYS1.ACBDMOD2,DISP=SHR
//IN0435 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDMOD2,
//      LABEL=(0435,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0436 DD DSN=MASTER.NETVIEW.ANVULIB,DISP=SHR
//IN0436 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ANVULIB,
//      LABEL=(0436,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0437 DD DSN=MASTER.NETVIEW.NVULIB,DISP=SHR
//IN0437 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.NVULIB,
//      LABEL=(0437,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0438 DD DSN=MASTER.GDDM.SADMPNL,DISP=SHR
//IN0438 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMPNL,
//      LABEL=(0438,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0439 DD DSN=MASTER.CEE.SCEEOBJ,DISP=SHR
//IN0439 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEOBJ,
//      LABEL=(0439,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0440 DD DSN=MASTER.SYS1.AICECLIB,DISP=SHR
//IN0440 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICECLIB,
//      LABEL=(0440,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0441 DD DSN=MASTER.GDDM.AADMPNL,DISP=SHR
//IN0441 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMPNL,
//      LABEL=(0441,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0442 DD DSN=MASTER.ICA.AICASAMP,DISP=SHR
//IN0442 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICASAMP,
//      LABEL=(0442,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0443 DD DSN=MASTER.SYS1.PARMLIB,DISP=SHR
//IN0443 DD DISP=(OLD,PASS),DSN=CPP.SYS1.PARMLIB,
//      LABEL=(0443,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0444 DD DSN=MASTER.SYS1.SICECLIB,DISP=SHR
//IN0444 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICECLIB,
//      LABEL=(0444,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0445 DD DSN=MASTER.CBC.SCCNPNL,DISP=SHR
//IN0445 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNPNL,
//      LABEL=(0445,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0446 DD DSN=MASTER.CBC.SCBCPNL,DISP=SHR
//IN0446 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCPNL,
//      LABEL=(0446,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0447 DD DSN=MASTER.CBC.SCBCDOC,DISP=SHR
//IN0447 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCDOC,
//      LABEL=(0447,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0448 DD DSN=MASTER.ICA.SICASAMP,DISP=SHR
//IN0448 DD DISP=(OLD,PASS),DSN=CPP.ICA.SICASAMP,
//      LABEL=(0448,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0449 DD DSN=PRIME.EUV.AEUVEXEC,DISP=SHR
//IN0449 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVEXEC,
//      LABEL=(0449,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0450 DD DSN=PRIME.IMW.SIMWSDCK,DISP=SHR
//IN0450 DD DISP=(OLD,PASS),DSN=CPP.IMW.SIMWSDCK,
//      LABEL=(0450,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0451 DD DSN=PRIME.EPH.AEPHSAMP,DISP=SHR
//IN0451 DD DISP=(OLD,PASS),DSN=CPP.EPH.AEPHSAMP,
//      LABEL=(0451,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0452 DD DSN=MASTER.EOY.AEOYTENU,DISP=SHR
//IN0452 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYTENU,
//      LABEL=(0452,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0453 DD DSN=PRIME.IMW.SIMWTBL1,DISP=SHR
//IN0453 DD DISP=(OLD,PASS),DSN=CPP.IMW.SIMWTBL1,
//      LABEL=(0453,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0454 DD DSN=MASTER.EOY.SEOYTENU,DISP=SHR
//IN0454 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYTENU,
//      LABEL=(0454,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0455 DD DSN=PRIME.EPH.SEPHSAMP,DISP=SHR
//IN0455 DD DISP=(OLD,PASS),DSN=CPP.EPH.SEPHSAMP,
//      LABEL=(0455,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0456 DD DSN=PRIME.EUV.SEUVEXEC,DISP=SHR
//IN0456 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVEXEC,
//      LABEL=(0456,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0457 DD DSN=MASTER.FFST.V120ESA.SEPWSRC2,DISP=SHR
//IN0457 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWSRC2,
//      LABEL=(0457,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0458 DD DSN=MASTER.SYS1.AIGDVBS1,DISP=SHR
//IN0458 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AIGDVBS1,
//      LABEL=(0458,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0459 DD DSN=MASTER.SYS1.IGDVBS1,DISP=SHR
//IN0459 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IGDVBS1,
//      LABEL=(0459,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0460 DD DSN=MASTER.SYS1.AOSCA,DISP=SHR
//IN0460 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSCA,
//      LABEL=(0460,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0461 DD DSN=MASTER.CEE.SCEESPCO,DISP=SHR
//IN0461 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEESPCO,
//      LABEL=(0461,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0462 DD DSN=PRIME.AOP.AAOPMENU,DISP=SHR
//IN0462 DD DISP=(OLD,PASS),DSN=CPP.AOP.AAOPMENU,
//      LABEL=(0462,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0463 DD DSN=PRIME.AOP.AAOPEXEC,DISP=SHR
//IN0463 DD DISP=(OLD,PASS),DSN=CPP.AOP.AAOPEXEC,
//      LABEL=(0463,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0464 DD DSN=MASTER.CEE.SCEEH.NETINET.H,DISP=SHR
//IN0464 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH.NETINET.H,
//      LABEL=(0464,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0465 DD DSN=MASTER.GLD.SGLDHDRC,DISP=SHR
//IN0465 DD DISP=(OLD,PASS),DSN=CPP.GLD.SGLDHDRC,
//      LABEL=(0465,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0466 DD DSN=MASTER.CEE.SCEEBND2,DISP=SHR
//IN0466 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEBND2,
//      LABEL=(0466,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0467 DD DSN=MASTER.CBC.SCCNDOC,DISP=SHR
//IN0467 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNDOC,
//      LABEL=(0467,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0468 DD DSN=MASTER.GSK.SGSKSAMP,DISP=SHR
//IN0468 DD DISP=(OLD,PASS),DSN=CPP.GSK.SGSKSAMP,
//      LABEL=(0468,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0469 DD DSN=MASTER.SYS1.SBDTCLI0,DISP=SHR
//IN0469 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTCLI0,
//      LABEL=(0469,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0470 DD DSN=MASTER.GLD.AGLDHDRC,DISP=SHR
//IN0470 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDHDRC,
//      LABEL=(0470,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0471 DD DSN=MASTER.GSK.AGSKSAMP,DISP=SHR
//IN0471 DD DISP=(OLD,PASS),DSN=CPP.GSK.AGSKSAMP,
//      LABEL=(0471,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0472 DD DSN=PRIME.AOP.SAOPMENU,DISP=SHR
//IN0472 DD DISP=(OLD,PASS),DSN=CPP.AOP.SAOPMENU,
//      LABEL=(0472,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0473 DD DSN=PRIME.AOP.SAOPEXEC,DISP=SHR
//IN0473 DD DISP=(OLD,PASS),DSN=CPP.AOP.SAOPEXEC,
//      LABEL=(0473,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0474 DD DSN=PRIME.EUV.SEUVPNL,DISP=SHR
//IN0474 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVPNL,
//      LABEL=(0474,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0475 DD DSN=PRIME.EUV.AEUVPNL,DISP=SHR
//IN0475 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVPNL,
//      LABEL=(0475,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0476 DD DSN=MASTER.EUVF.AEUVFSAM,DISP=SHR
//IN0476 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFSAM,
//      LABEL=(0476,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0477 DD DSN=MASTER.EUVF.SEUVFSAM,DISP=SHR
//IN0477 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFSAM,
//      LABEL=(0477,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0478 DD DSN=MASTER.SYS1.ABDTCLI0,DISP=SHR
//IN0478 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTCLI0,
//      LABEL=(0478,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0479 DD DSN=MASTER.ING.SINGMOD3,DISP=SHR
//IN0479 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGMOD3,
//      LABEL=(0479,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0480 DD DSN=MASTER.SYS1.ABPXSPC,DISP=SHR
//IN0480 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABPXSPC,
//      LABEL=(0480,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0481 DD DSN=MASTER.SYS1.SAPPDAT2,DISP=SHR
//IN0481 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SAPPDAT2,
//      LABEL=(0481,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0482 DD DSN=MASTER.SYS1.AAPPDAT2,DISP=SHR
//IN0482 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AAPPDAT2,
//      LABEL=(0482,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0483 DD DSN=MASTER.SYS1.AHASMENU,DISP=SHR
//IN0483 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASMENU,
//      LABEL=(0483,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0484 DD DSN=MASTER.SYS1.SHASMENU,DISP=SHR
//IN0484 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASMENU,
//      LABEL=(0484,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0485 DD DSN=PRIME.ASU.AASUHHDR,DISP=SHR
//IN0485 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUHHDR,
//      LABEL=(0485,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0486 DD DSN=MASTER.SYS1.ABDTHELP,DISP=SHR
//IN0486 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTHELP,
//      LABEL=(0486,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0487 DD DSN=PRIME.EUV.AEUVPRC,DISP=SHR
//IN0487 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVPRC,
//      LABEL=(0487,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0488 DD DSN=PRIME.EUV.AEUVDBRM,DISP=SHR
//IN0488 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVDBRM,
//      LABEL=(0488,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0489 DD DSN=PRIME.EUV.AEUVLIBS,DISP=SHR
//IN0489 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVLIBS,
//      LABEL=(0489,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0490 DD DSN=PRIME.EUV.SEUVDBRM,DISP=SHR
//IN0490 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVDBRM,
//      LABEL=(0490,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0491 DD DSN=MASTER.CBC.ACLDSR1,DISP=SHR
//IN0491 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACLDSR1,
//      LABEL=(0491,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0492 DD DSN=PRIME.CDS.ACDSSAMP,DISP=SHR
//IN0492 DD DISP=(OLD,PASS),DSN=CPP.CDS.ACDSSAMP,
//      LABEL=(0492,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0493 DD DSN=PRIME.EUV.SEUVLIBS,DISP=SHR
//IN0493 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVLIBS,
//      LABEL=(0493,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0494 DD DSN=PRIME.EUV.SEUVPRC,DISP=SHR
//IN0494 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVPRC,
//      LABEL=(0494,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0495 DD DSN=MASTER.ING.SINGINST,DISP=SHR
//IN0495 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGINST,
//      LABEL=(0495,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0496 DD DSN=MASTER.FFST.V120ESA.SEPWCENU,DISP=SHR
//IN0496 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWCENU,
//      LABEL=(0496,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0497 DD DSN=MASTER.IMO.SIMOJCL1,DISP=SHR
//IN0497 DD DISP=(OLD,PASS),DSN=CPP.IMO.SIMOJCL1,
//      LABEL=(0497,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0498 DD DSN=PRIME.CDS.SCDSSAMP,DISP=SHR
//IN0498 DD DISP=(OLD,PASS),DSN=CPP.CDS.SCDSSAMP,
//      LABEL=(0498,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0499 DD DSN=MASTER.SYS1.SICESRCE,DISP=SHR
//IN0499 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICESRCE,
//      LABEL=(0499,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0500 DD DSN=MASTER.CEE.SCEEPROC,DISP=SHR
//IN0500 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEPROC,
//      LABEL=(0500,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0501 DD DSN=MASTER.CBC.SCLDJCL,DISP=SHR
//IN0501 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCLDJCL,
//      LABEL=(0501,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0502 DD DSN=MASTER.SYS1.SICESLIB,DISP=SHR
//IN0502 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICESLIB,
//      LABEL=(0502,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0503 DD DSN=PRIME.JAVA.AAJVSMP1,DISP=SHR
//IN0503 DD DISP=(OLD,PASS),DSN=CPP.JAVA.AAJVSMP1,
//      LABEL=(0503,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0504 DD DSN=MASTER.SYS1.AICESLIB,DISP=SHR
//IN0504 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICESLIB,
//      LABEL=(0504,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0505 DD DSN=MASTER.SYS1.AICESRCE,DISP=SHR
//IN0505 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICESRCE,
//      LABEL=(0505,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0506 DD DSN=MASTER.SYS1.ANFSMAC,DISP=SHR
//IN0506 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ANFSMAC,
//      LABEL=(0506,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0507 DD DSN=MASTER.CBC.ACTVSRC,DISP=SHR
//IN0507 DD DISP=(OLD,PASS),DSN=CPP.CBC.ACTVSRC,
//      LABEL=(0507,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0508 DD DSN=MASTER.SYS1.ACUNJCL,DISP=SHR
//IN0508 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNJCL,
//      LABEL=(0508,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0509 DD DSN=PRIME.JAVA.SAJVSMP1,DISP=SHR
//IN0509 DD DISP=(OLD,PASS),DSN=CPP.JAVA.SAJVSMP1,
//      LABEL=(0509,SL),
//      UNIT=AFF=IN0001,
//      VOL=(,RETAIN,,,SER=(M999AK))
//SYSIN    DD *
 COPYMOD INDD=IN0001,OUTDD=OUT0001,LIST=NO
 COPYMOD INDD=IN0002,OUTDD=OUT0002,LIST=NO
 COPYMOD INDD=IN0003,OUTDD=OUT0003,LIST=NO
 COPY    INDD=IN0004,OUTDD=OUT0004,LIST=NO
 COPY    INDD=IN0005,OUTDD=OUT0005,LIST=NO
 COPYMOD INDD=IN0006,OUTDD=OUT0006,LIST=NO
 COPYMOD INDD=IN0007,OUTDD=OUT0007,LIST=NO
 COPYMOD INDD=IN0008,OUTDD=OUT0008,LIST=NO
 COPY    INDD=IN0009,OUTDD=OUT0009,LIST=NO
 COPY    INDD=IN0010,OUTDD=OUT0010,LIST=NO
 COPY    INDD=IN0011,OUTDD=OUT0011,LIST=NO
 COPY    INDD=IN0012,OUTDD=OUT0012,LIST=NO
 COPY    INDD=IN0013,OUTDD=OUT0013,LIST=NO
 COPYMOD INDD=IN0014,OUTDD=OUT0014,LIST=NO
 COPYMOD INDD=IN0015,OUTDD=OUT0015,LIST=NO
 COPY    INDD=IN0016,OUTDD=OUT0016,LIST=NO
 COPY    INDD=IN0017,OUTDD=OUT0017,LIST=NO
 COPY    INDD=IN0018,OUTDD=OUT0018,LIST=NO
 COPY    INDD=IN0019,OUTDD=OUT0019,LIST=NO
 COPY    INDD=IN0020,OUTDD=OUT0020,LIST=NO
 COPY    INDD=IN0021,OUTDD=OUT0021,LIST=NO
 COPYMOD INDD=IN0022,OUTDD=OUT0022,LIST=NO
 COPYMOD INDD=IN0023,OUTDD=OUT0023,LIST=NO
 COPY    INDD=IN0024,OUTDD=OUT0024,LIST=NO
 COPY    INDD=IN0025,OUTDD=OUT0025,LIST=NO
 COPYMOD INDD=IN0026,OUTDD=OUT0026,LIST=NO
 COPYMOD INDD=IN0027,OUTDD=OUT0027,LIST=NO
 COPYMOD INDD=IN0028,OUTDD=OUT0028,LIST=NO
 COPY    INDD=IN0029,OUTDD=OUT0029,LIST=NO
 COPY    INDD=IN0030,OUTDD=OUT0030,LIST=NO
 COPYMOD INDD=IN0031,OUTDD=OUT0031,LIST=NO
 COPY    INDD=IN0032,OUTDD=OUT0032,LIST=NO
 COPY    INDD=IN0033,OUTDD=OUT0033,LIST=NO
 COPYMOD INDD=IN0034,OUTDD=OUT0034,LIST=NO
 COPY    INDD=IN0035,OUTDD=OUT0035,LIST=NO
 COPY    INDD=IN0036,OUTDD=OUT0036,LIST=NO
 COPYMOD INDD=IN0037,OUTDD=OUT0037,LIST=NO
 COPY    INDD=IN0038,OUTDD=OUT0038,LIST=NO
 COPY    INDD=IN0039,OUTDD=OUT0039,LIST=NO
 COPY    INDD=IN0040,OUTDD=OUT0040,LIST=NO
 COPY    INDD=IN0041,OUTDD=OUT0041,LIST=NO
 COPY    INDD=IN0042,OUTDD=OUT0042,LIST=NO
 COPY    INDD=IN0043,OUTDD=OUT0043,LIST=NO
 COPY    INDD=IN0044,OUTDD=OUT0044,LIST=NO
 COPY    INDD=IN0045,OUTDD=OUT0045,LIST=NO
 COPY    INDD=IN0046,OUTDD=OUT0046,LIST=NO
 COPY    INDD=IN0047,OUTDD=OUT0047,LIST=NO
 COPY    INDD=IN0048,OUTDD=OUT0048,LIST=NO
 COPYMOD INDD=IN0049,OUTDD=OUT0049,LIST=NO
 COPYMOD INDD=IN0050,OUTDD=OUT0050,LIST=NO
 COPY    INDD=IN0051,OUTDD=OUT0051,LIST=NO
 COPYMOD INDD=IN0052,OUTDD=OUT0052,LIST=NO
 COPY    INDD=IN0053,OUTDD=OUT0053,LIST=NO
 COPY    INDD=IN0054,OUTDD=OUT0054,LIST=NO
 COPY    INDD=IN0055,OUTDD=OUT0055,LIST=NO
 COPYMOD INDD=IN0056,OUTDD=OUT0056,LIST=NO
 COPYMOD INDD=IN0057,OUTDD=OUT0057,LIST=NO
 COPY    INDD=IN0058,OUTDD=OUT0058,LIST=NO
 COPY    INDD=IN0059,OUTDD=OUT0059,LIST=NO
 COPY    INDD=IN0060,OUTDD=OUT0060,LIST=NO
 COPY    INDD=IN0061,OUTDD=OUT0061,LIST=NO
 COPY    INDD=IN0062,OUTDD=OUT0062,LIST=NO
 COPY    INDD=IN0063,OUTDD=OUT0063,LIST=NO
 COPYMOD INDD=IN0064,OUTDD=OUT0064,LIST=NO
 COPY    INDD=IN0065,OUTDD=OUT0065,LIST=NO
 COPY    INDD=IN0066,OUTDD=OUT0066,LIST=NO
 COPYMOD INDD=IN0068,OUTDD=OUT0068,LIST=NO
 COPYMOD INDD=IN0069,OUTDD=OUT0069,LIST=NO
 COPYMOD INDD=IN0070,OUTDD=OUT0070,LIST=NO
 COPY    INDD=IN0071,OUTDD=OUT0071,LIST=NO
 COPY    INDD=IN0072,OUTDD=OUT0072,LIST=NO
 COPY    INDD=IN0073,OUTDD=OUT0073,LIST=NO
 COPY    INDD=IN0074,OUTDD=OUT0074,LIST=NO
 COPY    INDD=IN0075,OUTDD=OUT0075,LIST=NO
 COPY    INDD=IN0076,OUTDD=OUT0076,LIST=NO
 COPY    INDD=IN0077,OUTDD=OUT0077,LIST=NO
 COPY    INDD=IN0078,OUTDD=OUT0078,LIST=NO
 COPYMOD INDD=IN0079,OUTDD=OUT0079,LIST=NO
 COPYMOD INDD=IN0080,OUTDD=OUT0080,LIST=NO
 COPY    INDD=IN0081,OUTDD=OUT0081,LIST=NO
 COPY    INDD=IN0082,OUTDD=OUT0082,LIST=NO
 COPY    INDD=IN0083,OUTDD=OUT0083,LIST=NO
 COPY    INDD=IN0084,OUTDD=OUT0084,LIST=NO
 COPY    INDD=IN0085,OUTDD=OUT0085,LIST=NO
 COPY    INDD=IN0086,OUTDD=OUT0086,LIST=NO
 COPY    INDD=IN0087,OUTDD=OUT0087,LIST=NO
 COPY    INDD=IN0088,OUTDD=OUT0088,LIST=NO
 COPYMOD INDD=IN0089,OUTDD=OUT0089,LIST=NO
 COPYMOD INDD=IN0090,OUTDD=OUT0090,LIST=NO
 COPY    INDD=IN0091,OUTDD=OUT0091,LIST=NO
 COPYMOD INDD=IN0092,OUTDD=OUT0092,LIST=NO
 COPYMOD INDD=IN0093,OUTDD=OUT0093,LIST=NO
 COPYMOD INDD=IN0094,OUTDD=OUT0094,LIST=NO
 COPYMOD INDD=IN0095,OUTDD=OUT0095,LIST=NO
 COPY    INDD=IN0096,OUTDD=OUT0096,LIST=NO
 COPY    INDD=IN0097,OUTDD=OUT0097,LIST=NO
 COPY    INDD=IN0098,OUTDD=OUT0098,LIST=NO
 COPY    INDD=IN0099,OUTDD=OUT0099,LIST=NO
 COPY    INDD=IN0100,OUTDD=OUT0100,LIST=NO
 COPYMOD INDD=IN0101,OUTDD=OUT0101,LIST=NO
 COPYMOD INDD=IN0102,OUTDD=OUT0102,LIST=NO
 COPYMOD INDD=IN0103,OUTDD=OUT0103,LIST=NO
 COPY    INDD=IN0104,OUTDD=OUT0104,LIST=NO
 COPY    INDD=IN0105,OUTDD=OUT0105,LIST=NO
 COPYMOD INDD=IN0106,OUTDD=OUT0106,LIST=NO
 COPY    INDD=IN0107,OUTDD=OUT0107,LIST=NO
 COPY    INDD=IN0108,OUTDD=OUT0108,LIST=NO
 COPYMOD INDD=IN0109,OUTDD=OUT0109,LIST=NO
 COPYMOD INDD=IN0110,OUTDD=OUT0110,LIST=NO
 COPYMOD INDD=IN0111,OUTDD=OUT0111,LIST=NO
 COPY    INDD=IN0112,OUTDD=OUT0112,LIST=NO
 COPYMOD INDD=IN0113,OUTDD=OUT0113,LIST=NO
 COPY    INDD=IN0114,OUTDD=OUT0114,LIST=NO
 COPY    INDD=IN0115,OUTDD=OUT0115,LIST=NO
 COPY    INDD=IN0116,OUTDD=OUT0116,LIST=NO
 COPY    INDD=IN0117,OUTDD=OUT0117,LIST=NO
 COPY    INDD=IN0118,OUTDD=OUT0118,LIST=NO
 COPY    INDD=IN0119,OUTDD=OUT0119,LIST=NO
 COPY    INDD=IN0120,OUTDD=OUT0120,LIST=NO
 COPY    INDD=IN0121,OUTDD=OUT0121,LIST=NO
 COPYMOD INDD=IN0122,OUTDD=OUT0122,LIST=NO
 COPYMOD INDD=IN0123,OUTDD=OUT0123,LIST=NO
 COPY    INDD=IN0124,OUTDD=OUT0124,LIST=NO
 COPY    INDD=IN0125,OUTDD=OUT0125,LIST=NO
 COPY    INDD=IN0126,OUTDD=OUT0126,LIST=NO
 COPY    INDD=IN0127,OUTDD=OUT0127,LIST=NO
 COPY    INDD=IN0128,OUTDD=OUT0128,LIST=NO
 COPYMOD INDD=IN0129,OUTDD=OUT0129,LIST=NO
 COPYMOD INDD=IN0130,OUTDD=OUT0130,LIST=NO
 COPY    INDD=IN0131,OUTDD=OUT0131,LIST=NO
 COPY    INDD=IN0132,OUTDD=OUT0132,LIST=NO
 COPY    INDD=IN0133,OUTDD=OUT0133,LIST=NO
 COPY    INDD=IN0134,OUTDD=OUT0134,LIST=NO
 COPY    INDD=IN0135,OUTDD=OUT0135,LIST=NO
 COPY    INDD=IN0136,OUTDD=OUT0136,LIST=NO
 COPY    INDD=IN0137,OUTDD=OUT0137,LIST=NO
 COPY    INDD=IN0138,OUTDD=OUT0138,LIST=NO
 COPY    INDD=IN0139,OUTDD=OUT0139,LIST=NO
 COPY    INDD=IN0140,OUTDD=OUT0140,LIST=NO
 COPYMOD INDD=IN0141,OUTDD=OUT0141,LIST=NO
 COPY    INDD=IN0142,OUTDD=OUT0142,LIST=NO
 COPY    INDD=IN0143,OUTDD=OUT0143,LIST=NO
 COPY    INDD=IN0144,OUTDD=OUT0144,LIST=NO
 COPYMOD INDD=IN0145,OUTDD=OUT0145,LIST=NO
 COPYMOD INDD=IN0146,OUTDD=OUT0146,LIST=NO
 COPYMOD INDD=IN0147,OUTDD=OUT0147,LIST=NO
 COPYMOD INDD=IN0148,OUTDD=OUT0148,LIST=NO
 COPY    INDD=IN0149,OUTDD=OUT0149,LIST=NO
 COPY    INDD=IN0150,OUTDD=OUT0150,LIST=NO
 COPY    INDD=IN0151,OUTDD=OUT0151,LIST=NO
 COPY    INDD=IN0152,OUTDD=OUT0152,LIST=NO
 COPY    INDD=IN0153,OUTDD=OUT0153,LIST=NO
 COPYMOD INDD=IN0154,OUTDD=OUT0154,LIST=NO
 COPY    INDD=IN0155,OUTDD=OUT0155,LIST=NO
 COPY    INDD=IN0156,OUTDD=OUT0156,LIST=NO
 COPY    INDD=IN0157,OUTDD=OUT0157,LIST=NO
 COPY    INDD=IN0158,OUTDD=OUT0158,LIST=NO
 COPY    INDD=IN0159,OUTDD=OUT0159,LIST=NO
 COPYMOD INDD=IN0160,OUTDD=OUT0160,LIST=NO
 COPY    INDD=IN0161,OUTDD=OUT0161,LIST=NO
 COPY    INDD=IN0162,OUTDD=OUT0162,LIST=NO
 COPY    INDD=IN0163,OUTDD=OUT0163,LIST=NO
 COPY    INDD=IN0164,OUTDD=OUT0164,LIST=NO
 COPYMOD INDD=IN0165,OUTDD=OUT0165,LIST=NO
 COPY    INDD=IN0166,OUTDD=OUT0166,LIST=NO
 COPY    INDD=IN0167,OUTDD=OUT0167,LIST=NO
 COPYMOD INDD=IN0168,OUTDD=OUT0168,LIST=NO
 COPY    INDD=IN0169,OUTDD=OUT0169,LIST=NO
 COPY    INDD=IN0170,OUTDD=OUT0170,LIST=NO
 COPY    INDD=IN0171,OUTDD=OUT0171,LIST=NO
 COPY    INDD=IN0172,OUTDD=OUT0172,LIST=NO
 COPY    INDD=IN0173,OUTDD=OUT0173,LIST=NO
 COPY    INDD=IN0174,OUTDD=OUT0174,LIST=NO
 COPY    INDD=IN0175,OUTDD=OUT0175,LIST=NO
 COPY    INDD=IN0176,OUTDD=OUT0176,LIST=NO
 COPY    INDD=IN0177,OUTDD=OUT0177,LIST=NO
 COPY    INDD=IN0178,OUTDD=OUT0178,LIST=NO
 COPY    INDD=IN0179,OUTDD=OUT0179,LIST=NO
 COPY    INDD=IN0180,OUTDD=OUT0180,LIST=NO
 COPY    INDD=IN0181,OUTDD=OUT0181,LIST=NO
 COPY    INDD=IN0182,OUTDD=OUT0182,LIST=NO
 COPY    INDD=IN0183,OUTDD=OUT0183,LIST=NO
 COPY    INDD=IN0184,OUTDD=OUT0184,LIST=NO
 COPY    INDD=IN0185,OUTDD=OUT0185,LIST=NO
 COPYMOD INDD=IN0186,OUTDD=OUT0186,LIST=NO
 COPY    INDD=IN0187,OUTDD=OUT0187,LIST=NO
 COPY    INDD=IN0188,OUTDD=OUT0188,LIST=NO
 COPY    INDD=IN0189,OUTDD=OUT0189,LIST=NO
 COPY    INDD=IN0190,OUTDD=OUT0190,LIST=NO
 COPY    INDD=IN0191,OUTDD=OUT0191,LIST=NO
 COPYMOD INDD=IN0192,OUTDD=OUT0192,LIST=NO
 COPY    INDD=IN0193,OUTDD=OUT0193,LIST=NO
 COPY    INDD=IN0194,OUTDD=OUT0194,LIST=NO
 COPY    INDD=IN0195,OUTDD=OUT0195,LIST=NO
 COPY    INDD=IN0196,OUTDD=OUT0196,LIST=NO
 COPY    INDD=IN0197,OUTDD=OUT0197,LIST=NO
 COPY    INDD=IN0198,OUTDD=OUT0198,LIST=NO
 COPY    INDD=IN0199,OUTDD=OUT0199,LIST=NO
 COPY    INDD=IN0200,OUTDD=OUT0200,LIST=NO
 COPY    INDD=IN0201,OUTDD=OUT0201,LIST=NO
 COPY    INDD=IN0202,OUTDD=OUT0202,LIST=NO
 COPYMOD INDD=IN0203,OUTDD=OUT0203,LIST=NO
 COPYMOD INDD=IN0204,OUTDD=OUT0204,LIST=NO
 COPY    INDD=IN0205,OUTDD=OUT0205,LIST=NO
 COPY    INDD=IN0206,OUTDD=OUT0206,LIST=NO
 COPY    INDD=IN0209,OUTDD=OUT0209,LIST=NO
 COPY    INDD=IN0210,OUTDD=OUT0210,LIST=NO
 COPY    INDD=IN0211,OUTDD=OUT0211,LIST=NO
 COPY    INDD=IN0212,OUTDD=OUT0212,LIST=NO
 COPY    INDD=IN0213,OUTDD=OUT0213,LIST=NO
 COPY    INDD=IN0214,OUTDD=OUT0214,LIST=NO
 COPY    INDD=IN0215,OUTDD=OUT0215,LIST=NO
 COPYMOD INDD=IN0216,OUTDD=OUT0216,LIST=NO
 COPYMOD INDD=IN0217,OUTDD=OUT0217,LIST=NO
 COPYMOD INDD=IN0218,OUTDD=OUT0218,LIST=NO
 COPYMOD INDD=IN0219,OUTDD=OUT0219,LIST=NO
 COPYMOD INDD=IN0220,OUTDD=OUT0220,LIST=NO
 COPY    INDD=IN0221,OUTDD=OUT0221,LIST=NO
 COPYMOD INDD=IN0222,OUTDD=OUT0222,LIST=NO
 COPY    INDD=IN0223,OUTDD=OUT0223,LIST=NO
 COPY    INDD=IN0224,OUTDD=OUT0224,LIST=NO
 COPY    INDD=IN0225,OUTDD=OUT0225,LIST=NO
 COPY    INDD=IN0226,OUTDD=OUT0226,LIST=NO
 COPY    INDD=IN0227,OUTDD=OUT0227,LIST=NO
 COPY    INDD=IN0228,OUTDD=OUT0228,LIST=NO
 COPY    INDD=IN0230,OUTDD=OUT0230,LIST=NO
 COPY    INDD=IN0231,OUTDD=OUT0231,LIST=NO
 COPYMOD INDD=IN0232,OUTDD=OUT0232,LIST=NO
 COPYMOD INDD=IN0233,OUTDD=OUT0233,LIST=NO
 COPY    INDD=IN0234,OUTDD=OUT0234,LIST=NO
 COPY    INDD=IN0235,OUTDD=OUT0235,LIST=NO
 COPY    INDD=IN0236,OUTDD=OUT0236,LIST=NO
 COPY    INDD=IN0237,OUTDD=OUT0237,LIST=NO
 COPY    INDD=IN0238,OUTDD=OUT0238,LIST=NO
 COPY    INDD=IN0239,OUTDD=OUT0239,LIST=NO
 COPY    INDD=IN0240,OUTDD=OUT0240,LIST=NO
 COPY    INDD=IN0241,OUTDD=OUT0241,LIST=NO
 COPY    INDD=IN0242,OUTDD=OUT0242,LIST=NO
 COPY    INDD=IN0243,OUTDD=OUT0243,LIST=NO
 COPY    INDD=IN0244,OUTDD=OUT0244,LIST=NO
 COPY    INDD=IN0245,OUTDD=OUT0245,LIST=NO
 COPY    INDD=IN0246,OUTDD=OUT0246,LIST=NO
 COPY    INDD=IN0248,OUTDD=OUT0248,LIST=NO
 COPY    INDD=IN0249,OUTDD=OUT0249,LIST=NO
 COPY    INDD=IN0250,OUTDD=OUT0250,LIST=NO
 COPYMOD INDD=IN0252,OUTDD=OUT0252,LIST=NO
 COPYMOD INDD=IN0253,OUTDD=OUT0253,LIST=NO
 COPYMOD INDD=IN0254,OUTDD=OUT0254,LIST=NO
 COPYMOD INDD=IN0255,OUTDD=OUT0255,LIST=NO
 COPYMOD INDD=IN0256,OUTDD=OUT0256,LIST=NO
 COPY    INDD=IN0257,OUTDD=OUT0257,LIST=NO
 COPY    INDD=IN0258,OUTDD=OUT0258,LIST=NO
 COPY    INDD=IN0259,OUTDD=OUT0259,LIST=NO
 COPY    INDD=IN0260,OUTDD=OUT0260,LIST=NO
 COPY    INDD=IN0261,OUTDD=OUT0261,LIST=NO
 COPYMOD INDD=IN0262,OUTDD=OUT0262,LIST=NO
 COPY    INDD=IN0263,OUTDD=OUT0263,LIST=NO
 COPYMOD INDD=IN0264,OUTDD=OUT0264,LIST=NO
 COPY    INDD=IN0265,OUTDD=OUT0265,LIST=NO
 COPY    INDD=IN0266,OUTDD=OUT0266,LIST=NO
 COPY    INDD=IN0267,OUTDD=OUT0267,LIST=NO
 COPY    INDD=IN0268,OUTDD=OUT0268,LIST=NO
 COPY    INDD=IN0269,OUTDD=OUT0269,LIST=NO
 COPY    INDD=IN0270,OUTDD=OUT0270,LIST=NO
 COPYMOD INDD=IN0271,OUTDD=OUT0271,LIST=NO
 COPYMOD INDD=IN0272,OUTDD=OUT0272,LIST=NO
 COPY    INDD=IN0273,OUTDD=OUT0273,LIST=NO
 COPY    INDD=IN0274,OUTDD=OUT0274,LIST=NO
 COPY    INDD=IN0275,OUTDD=OUT0275,LIST=NO
 COPY    INDD=IN0276,OUTDD=OUT0276,LIST=NO
 COPY    INDD=IN0277,OUTDD=OUT0277,LIST=NO
 COPY    INDD=IN0278,OUTDD=OUT0278,LIST=NO
 COPY    INDD=IN0279,OUTDD=OUT0279,LIST=NO
 COPY    INDD=IN0280,OUTDD=OUT0280,LIST=NO
 COPY    INDD=IN0281,OUTDD=OUT0281,LIST=NO
 COPY    INDD=IN0282,OUTDD=OUT0282,LIST=NO
 COPY    INDD=IN0283,OUTDD=OUT0283,LIST=NO
 COPY    INDD=IN0284,OUTDD=OUT0284,LIST=NO
 COPYMOD INDD=IN0285,OUTDD=OUT0285,LIST=NO
 COPY    INDD=IN0286,OUTDD=OUT0286,LIST=NO
 COPY    INDD=IN0287,OUTDD=OUT0287,LIST=NO
 COPY    INDD=IN0288,OUTDD=OUT0288,LIST=NO
 COPY    INDD=IN0289,OUTDD=OUT0289,LIST=NO
 COPY    INDD=IN0290,OUTDD=OUT0290,LIST=NO
 COPY    INDD=IN0291,OUTDD=OUT0291,LIST=NO
 COPY    INDD=IN0292,OUTDD=OUT0292,LIST=NO
 COPY    INDD=IN0293,OUTDD=OUT0293,LIST=NO
 COPYMOD INDD=IN0294,OUTDD=OUT0294,LIST=NO
 COPY    INDD=IN0295,OUTDD=OUT0295,LIST=NO
 COPY    INDD=IN0297,OUTDD=OUT0297,LIST=NO
 COPY    INDD=IN0298,OUTDD=OUT0298,LIST=NO
 COPY    INDD=IN0299,OUTDD=OUT0299,LIST=NO
 COPY    INDD=IN0300,OUTDD=OUT0300,LIST=NO
 COPY    INDD=IN0301,OUTDD=OUT0301,LIST=NO
 COPY    INDD=IN0302,OUTDD=OUT0302,LIST=NO
 COPY    INDD=IN0304,OUTDD=OUT0304,LIST=NO
 COPY    INDD=IN0305,OUTDD=OUT0305,LIST=NO
 COPY    INDD=IN0306,OUTDD=OUT0306,LIST=NO
 COPY    INDD=IN0307,OUTDD=OUT0307,LIST=NO
 COPYMOD INDD=IN0308,OUTDD=OUT0308,LIST=NO
 COPYMOD INDD=IN0309,OUTDD=OUT0309,LIST=NO
 COPY    INDD=IN0310,OUTDD=OUT0310,LIST=NO
 COPY    INDD=IN0311,OUTDD=OUT0311,LIST=NO
 COPY    INDD=IN0312,OUTDD=OUT0312,LIST=NO
 COPYMOD INDD=IN0313,OUTDD=OUT0313,LIST=NO
 COPY    INDD=IN0314,OUTDD=OUT0314,LIST=NO
 COPY    INDD=IN0315,OUTDD=OUT0315,LIST=NO
 COPY    INDD=IN0316,OUTDD=OUT0316,LIST=NO
 COPY    INDD=IN0317,OUTDD=OUT0317,LIST=NO
 COPY    INDD=IN0318,OUTDD=OUT0318,LIST=NO
 COPY    INDD=IN0319,OUTDD=OUT0319,LIST=NO
 COPY    INDD=IN0320,OUTDD=OUT0320,LIST=NO
 COPY    INDD=IN0321,OUTDD=OUT0321,LIST=NO
 COPYMOD INDD=IN0322,OUTDD=OUT0322,LIST=NO
 COPY    INDD=IN0323,OUTDD=OUT0323,LIST=NO
 COPY    INDD=IN0324,OUTDD=OUT0324,LIST=NO
 COPY    INDD=IN0325,OUTDD=OUT0325,LIST=NO
 COPY    INDD=IN0326,OUTDD=OUT0326,LIST=NO
 COPY    INDD=IN0327,OUTDD=OUT0327,LIST=NO
 COPY    INDD=IN0328,OUTDD=OUT0328,LIST=NO
 COPY    INDD=IN0329,OUTDD=OUT0329,LIST=NO
 COPY    INDD=IN0330,OUTDD=OUT0330,LIST=NO
 COPY    INDD=IN0331,OUTDD=OUT0331,LIST=NO
 COPY    INDD=IN0332,OUTDD=OUT0332,LIST=NO
 COPY    INDD=IN0333,OUTDD=OUT0333,LIST=NO
 COPY    INDD=IN0334,OUTDD=OUT0334,LIST=NO
 COPY    INDD=IN0335,OUTDD=OUT0335,LIST=NO
 COPY    INDD=IN0336,OUTDD=OUT0336,LIST=NO
 COPY    INDD=IN0337,OUTDD=OUT0337,LIST=NO
 COPY    INDD=IN0338,OUTDD=OUT0338,LIST=NO
 COPY    INDD=IN0339,OUTDD=OUT0339,LIST=NO
 COPY    INDD=IN0340,OUTDD=OUT0340,LIST=NO
 COPY    INDD=IN0341,OUTDD=OUT0341,LIST=NO
 COPY    INDD=IN0342,OUTDD=OUT0342,LIST=NO
 COPY    INDD=IN0343,OUTDD=OUT0343,LIST=NO
 COPYMOD INDD=IN0344,OUTDD=OUT0344,LIST=NO
 COPYMOD INDD=IN0345,OUTDD=OUT0345,LIST=NO
 COPY    INDD=IN0346,OUTDD=OUT0346,LIST=NO
 COPY    INDD=IN0347,OUTDD=OUT0347,LIST=NO
 COPY    INDD=IN0348,OUTDD=OUT0348,LIST=NO
 COPYMOD INDD=IN0349,OUTDD=OUT0349,LIST=NO
 COPYMOD INDD=IN0350,OUTDD=OUT0350,LIST=NO
 COPYMOD INDD=IN0351,OUTDD=OUT0351,LIST=NO
 COPY    INDD=IN0352,OUTDD=OUT0352,LIST=NO
 COPY    INDD=IN0353,OUTDD=OUT0353,LIST=NO
 COPY    INDD=IN0354,OUTDD=OUT0354,LIST=NO
 COPY    INDD=IN0355,OUTDD=OUT0355,LIST=NO
 COPY    INDD=IN0356,OUTDD=OUT0356,LIST=NO
 COPY    INDD=IN0357,OUTDD=OUT0357,LIST=NO
 COPY    INDD=IN0358,OUTDD=OUT0358,LIST=NO
 COPY    INDD=IN0359,OUTDD=OUT0359,LIST=NO
 COPY    INDD=IN0360,OUTDD=OUT0360,LIST=NO
 COPY    INDD=IN0361,OUTDD=OUT0361,LIST=NO
 COPY    INDD=IN0362,OUTDD=OUT0362,LIST=NO
 COPY    INDD=IN0363,OUTDD=OUT0363,LIST=NO
 COPY    INDD=IN0364,OUTDD=OUT0364,LIST=NO
 COPY    INDD=IN0365,OUTDD=OUT0365,LIST=NO
 COPYMOD INDD=IN0366,OUTDD=OUT0366,LIST=NO
 COPYMOD INDD=IN0367,OUTDD=OUT0367,LIST=NO
 COPY    INDD=IN0368,OUTDD=OUT0368,LIST=NO
 COPY    INDD=IN0369,OUTDD=OUT0369,LIST=NO
 COPY    INDD=IN0370,OUTDD=OUT0370,LIST=NO
 COPY    INDD=IN0371,OUTDD=OUT0371,LIST=NO
 COPY    INDD=IN0372,OUTDD=OUT0372,LIST=NO
 COPY    INDD=IN0373,OUTDD=OUT0373,LIST=NO
 COPY    INDD=IN0374,OUTDD=OUT0374,LIST=NO
 COPY    INDD=IN0375,OUTDD=OUT0375,LIST=NO
 COPY    INDD=IN0376,OUTDD=OUT0376,LIST=NO
 COPY    INDD=IN0377,OUTDD=OUT0377,LIST=NO
 COPYMOD INDD=IN0378,OUTDD=OUT0378,LIST=NO
 COPYMOD INDD=IN0379,OUTDD=OUT0379,LIST=NO
 COPYMOD INDD=IN0380,OUTDD=OUT0380,LIST=NO
 COPYMOD INDD=IN0381,OUTDD=OUT0381,LIST=NO
 COPY    INDD=IN0382,OUTDD=OUT0382,LIST=NO
 COPY    INDD=IN0383,OUTDD=OUT0383,LIST=NO
 COPY    INDD=IN0384,OUTDD=OUT0384,LIST=NO
 COPY    INDD=IN0385,OUTDD=OUT0385,LIST=NO
 COPY    INDD=IN0386,OUTDD=OUT0386,LIST=NO
 COPYMOD INDD=IN0387,OUTDD=OUT0387,LIST=NO
 COPY    INDD=IN0388,OUTDD=OUT0388,LIST=NO
 COPY    INDD=IN0389,OUTDD=OUT0389,LIST=NO
 COPY    INDD=IN0390,OUTDD=OUT0390,LIST=NO
 COPY    INDD=IN0391,OUTDD=OUT0391,LIST=NO
 COPY    INDD=IN0392,OUTDD=OUT0392,LIST=NO
 COPY    INDD=IN0393,OUTDD=OUT0393,LIST=NO
 COPY    INDD=IN0394,OUTDD=OUT0394,LIST=NO
 COPY    INDD=IN0395,OUTDD=OUT0395,LIST=NO
 COPY    INDD=IN0396,OUTDD=OUT0396,LIST=NO
 COPY    INDD=IN0397,OUTDD=OUT0397,LIST=NO
 COPY    INDD=IN0398,OUTDD=OUT0398,LIST=NO
 COPY    INDD=IN0399,OUTDD=OUT0399,LIST=NO
 COPY    INDD=IN0400,OUTDD=OUT0400,LIST=NO
 COPY    INDD=IN0401,OUTDD=OUT0401,LIST=NO
 COPY    INDD=IN0402,OUTDD=OUT0402,LIST=NO
 COPY    INDD=IN0403,OUTDD=OUT0403,LIST=NO
 COPY    INDD=IN0404,OUTDD=OUT0404,LIST=NO
 COPY    INDD=IN0405,OUTDD=OUT0405,LIST=NO
 COPY    INDD=IN0406,OUTDD=OUT0406,LIST=NO
 COPY    INDD=IN0407,OUTDD=OUT0407,LIST=NO
 COPY    INDD=IN0408,OUTDD=OUT0408,LIST=NO
 COPY    INDD=IN0409,OUTDD=OUT0409,LIST=NO
 COPY    INDD=IN0410,OUTDD=OUT0410,LIST=NO
 COPY    INDD=IN0411,OUTDD=OUT0411,LIST=NO
 COPY    INDD=IN0412,OUTDD=OUT0412,LIST=NO
 COPY    INDD=IN0413,OUTDD=OUT0413,LIST=NO
 COPY    INDD=IN0414,OUTDD=OUT0414,LIST=NO
 COPY    INDD=IN0415,OUTDD=OUT0415,LIST=NO
 COPY    INDD=IN0416,OUTDD=OUT0416,LIST=NO
 COPY    INDD=IN0417,OUTDD=OUT0417,LIST=NO
 COPY    INDD=IN0418,OUTDD=OUT0418,LIST=NO
 COPY    INDD=IN0420,OUTDD=OUT0420,LIST=NO
 COPY    INDD=IN0421,OUTDD=OUT0421,LIST=NO
 COPY    INDD=IN0422,OUTDD=OUT0422,LIST=NO
 COPY    INDD=IN0423,OUTDD=OUT0423,LIST=NO
 COPY    INDD=IN0424,OUTDD=OUT0424,LIST=NO
 COPY    INDD=IN0425,OUTDD=OUT0425,LIST=NO
 COPY    INDD=IN0426,OUTDD=OUT0426,LIST=NO
 COPY    INDD=IN0427,OUTDD=OUT0427,LIST=NO
 COPY    INDD=IN0428,OUTDD=OUT0428,LIST=NO
 COPY    INDD=IN0429,OUTDD=OUT0429,LIST=NO
 COPY    INDD=IN0430,OUTDD=OUT0430,LIST=NO
 COPY    INDD=IN0431,OUTDD=OUT0431,LIST=NO
 COPY    INDD=IN0432,OUTDD=OUT0432,LIST=NO
 COPY    INDD=IN0433,OUTDD=OUT0433,LIST=NO
 COPYMOD INDD=IN0434,OUTDD=OUT0434,LIST=NO
 COPYMOD INDD=IN0435,OUTDD=OUT0435,LIST=NO
 COPYMOD INDD=IN0436,OUTDD=OUT0436,LIST=NO
 COPYMOD INDD=IN0437,OUTDD=OUT0437,LIST=NO
 COPY    INDD=IN0438,OUTDD=OUT0438,LIST=NO
 COPY    INDD=IN0439,OUTDD=OUT0439,LIST=NO
 COPY    INDD=IN0440,OUTDD=OUT0440,LIST=NO
 COPY    INDD=IN0441,OUTDD=OUT0441,LIST=NO
 COPY    INDD=IN0442,OUTDD=OUT0442,LIST=NO
 COPY    INDD=IN0443,OUTDD=OUT0443,LIST=NO
 COPY    INDD=IN0444,OUTDD=OUT0444,LIST=NO
 COPY    INDD=IN0445,OUTDD=OUT0445,LIST=NO
 COPY    INDD=IN0446,OUTDD=OUT0446,LIST=NO
 COPY    INDD=IN0447,OUTDD=OUT0447,LIST=NO
 COPY    INDD=IN0448,OUTDD=OUT0448,LIST=NO
 COPY    INDD=IN0449,OUTDD=OUT0449,LIST=NO
 COPY    INDD=IN0450,OUTDD=OUT0450,LIST=NO
 COPY    INDD=IN0451,OUTDD=OUT0451,LIST=NO
 COPY    INDD=IN0452,OUTDD=OUT0452,LIST=NO
 COPY    INDD=IN0453,OUTDD=OUT0453,LIST=NO
 COPY    INDD=IN0454,OUTDD=OUT0454,LIST=NO
 COPY    INDD=IN0455,OUTDD=OUT0455,LIST=NO
 COPY    INDD=IN0456,OUTDD=OUT0456,LIST=NO
 COPY    INDD=IN0457,OUTDD=OUT0457,LIST=NO
 COPY    INDD=IN0458,OUTDD=OUT0458,LIST=NO
 COPY    INDD=IN0459,OUTDD=OUT0459,LIST=NO
 COPYMOD INDD=IN0460,OUTDD=OUT0460,LIST=NO
 COPY    INDD=IN0461,OUTDD=OUT0461,LIST=NO
 COPY    INDD=IN0462,OUTDD=OUT0462,LIST=NO
 COPY    INDD=IN0463,OUTDD=OUT0463,LIST=NO
 COPY    INDD=IN0464,OUTDD=OUT0464,LIST=NO
 COPY    INDD=IN0465,OUTDD=OUT0465,LIST=NO
 COPY    INDD=IN0466,OUTDD=OUT0466,LIST=NO
 COPY    INDD=IN0467,OUTDD=OUT0467,LIST=NO
 COPY    INDD=IN0468,OUTDD=OUT0468,LIST=NO
 COPY    INDD=IN0469,OUTDD=OUT0469,LIST=NO
 COPY    INDD=IN0470,OUTDD=OUT0470,LIST=NO
 COPY    INDD=IN0471,OUTDD=OUT0471,LIST=NO
 COPY    INDD=IN0472,OUTDD=OUT0472,LIST=NO
 COPY    INDD=IN0473,OUTDD=OUT0473,LIST=NO
 COPY    INDD=IN0474,OUTDD=OUT0474,LIST=NO
 COPY    INDD=IN0475,OUTDD=OUT0475,LIST=NO
 COPY    INDD=IN0476,OUTDD=OUT0476,LIST=NO
 COPY    INDD=IN0477,OUTDD=OUT0477,LIST=NO
 COPY    INDD=IN0478,OUTDD=OUT0478,LIST=NO
 COPYMOD INDD=IN0479,OUTDD=OUT0479,LIST=NO
 COPYMOD INDD=IN0480,OUTDD=OUT0480,LIST=NO
 COPY    INDD=IN0481,OUTDD=OUT0481,LIST=NO
 COPY    INDD=IN0482,OUTDD=OUT0482,LIST=NO
 COPY    INDD=IN0483,OUTDD=OUT0483,LIST=NO
 COPY    INDD=IN0484,OUTDD=OUT0484,LIST=NO
 COPY    INDD=IN0485,OUTDD=OUT0485,LIST=NO
 COPY    INDD=IN0486,OUTDD=OUT0486,LIST=NO
 COPY    INDD=IN0487,OUTDD=OUT0487,LIST=NO
 COPY    INDD=IN0488,OUTDD=OUT0488,LIST=NO
 COPY    INDD=IN0489,OUTDD=OUT0489,LIST=NO
 COPY    INDD=IN0490,OUTDD=OUT0490,LIST=NO
 COPY    INDD=IN0491,OUTDD=OUT0491,LIST=NO
 COPY    INDD=IN0492,OUTDD=OUT0492,LIST=NO
 COPY    INDD=IN0493,OUTDD=OUT0493,LIST=NO
 COPY    INDD=IN0494,OUTDD=OUT0494,LIST=NO
 COPY    INDD=IN0495,OUTDD=OUT0495,LIST=NO
 COPY    INDD=IN0496,OUTDD=OUT0496,LIST=NO
 COPY    INDD=IN0497,OUTDD=OUT0497,LIST=NO
 COPY    INDD=IN0498,OUTDD=OUT0498,LIST=NO
 COPY    INDD=IN0499,OUTDD=OUT0499,LIST=NO
 COPY    INDD=IN0500,OUTDD=OUT0500,LIST=NO
 COPY    INDD=IN0501,OUTDD=OUT0501,LIST=NO
 COPY    INDD=IN0502,OUTDD=OUT0502,LIST=NO
 COPY    INDD=IN0503,OUTDD=OUT0503,LIST=NO
 COPY    INDD=IN0504,OUTDD=OUT0504,LIST=NO
 COPY    INDD=IN0505,OUTDD=OUT0505,LIST=NO
 COPY    INDD=IN0506,OUTDD=OUT0506,LIST=NO
 COPY    INDD=IN0507,OUTDD=OUT0507,LIST=NO
 COPY    INDD=IN0508,OUTDD=OUT0508,LIST=NO
 COPY    INDD=IN0509,OUTDD=OUT0509,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAK#1),(4000,LT))
//*
//IEBCAK#2  EXEC PGM=IEBCOPY,COND=(4000,LT),
//      PARM='CMWA=256K,SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(TRK,(75,10))
//*
//OUT0510 DD DSN=MASTER.EOY.AEOX2ENU,DISP=SHR
//IN0510 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOX2ENU,
//      LABEL=(0510,SL),
//      UNIT=(SYS3480R,1,DEFER),
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0511 DD DSN=MASTER.SYS1.SBDTHELP,DISP=SHR
//IN0511 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTHELP,
//      LABEL=(0511,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0512 DD DSN=MASTER.SYS1.SCUNJCL,DISP=SHR
//IN0512 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNJCL,
//      LABEL=(0512,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0513 DD DSN=MASTER.SYS1.NFSMAC,DISP=SHR
//IN0513 DD DISP=(OLD,PASS),DSN=CPP.SYS1.NFSMAC,
//      LABEL=(0513,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0514 DD DSN=MASTER.CBC.SCTVJCL,DISP=SHR
//IN0514 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCTVJCL,
//      LABEL=(0514,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0515 DD DSN=MASTER.IMO.AIMOJCL1,DISP=SHR
//IN0515 DD DISP=(OLD,PASS),DSN=CPP.IMO.AIMOJCL1,
//      LABEL=(0515,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0516 DD DSN=MASTER.ING.AINGINST,DISP=SHR
//IN0516 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGINST,
//      LABEL=(0516,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0517 DD DSN=MASTER.EOY.SEOX2ENU,DISP=SHR
//IN0517 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOX2ENU,
//      LABEL=(0517,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0518 DD DSN=MASTER.TCPIP.SEZADPIL,DISP=SHR
//IN0518 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADPIL,
//      LABEL=(0518,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0519 DD DSN=MASTER.FFST.V120ESA.SEPWMOD2,DISP=SHR
//IN0519 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWMOD2,
//      LABEL=(0519,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0520 DD DSN=MASTER.EOY.SEOXFONT,DISP=SHR
//IN0520 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOXFONT,
//      LABEL=(0520,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0521 DD DSN=MASTER.EOY.AEOXFONT,DISP=SHR
//IN0521 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOXFONT,
//      LABEL=(0521,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0522 DD DSN=MASTER.CEE.SCEERTLS,DISP=SHR
//IN0522 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEERTLS,
//      LABEL=(0522,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0523 DD DSN=MASTER.CEE.SCEEH.NET.H,DISP=SHR
//IN0523 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH.NET.H,
//      LABEL=(0523,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0524 DD DSN=MASTER.NETVIEW.ADSIPRF,DISP=SHR
//IN0524 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ADSIPRF,
//      LABEL=(0524,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0525 DD DSN=MASTER.NETVIEW.ADSIOPEN,DISP=SHR
//IN0525 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ADSIOPEN,
//      LABEL=(0525,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0526 DD DSN=MASTER.CEE.SCEEH.ARPA.H,DISP=SHR
//IN0526 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEH.ARPA.H,
//      LABEL=(0526,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0527 DD DSN=MASTER.ISP.SISPHELP,DISP=SHR
//IN0527 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPHELP,
//      LABEL=(0527,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0528 DD DSN=MASTER.ISP.AISPHELP,DISP=SHR
//IN0528 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPHELP,
//      LABEL=(0528,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0529 DD DSN=MASTER.SYS1.AICQILIB,DISP=SHR
//IN0529 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQILIB,
//      LABEL=(0529,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0530 DD DSN=MASTER.NETVIEW.SDSIOPEN,DISP=SHR
//IN0530 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SDSIOPEN,
//      LABEL=(0530,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0531 DD DSN=MASTER.SYS1.ADFQMLIB,DISP=SHR
//IN0531 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADFQMLIB,
//      LABEL=(0531,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0532 DD DSN=PRIME.ASU.SASUIDL,DISP=SHR
//IN0532 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUIDL,
//      LABEL=(0532,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0533 DD DSN=MASTER.TCPIP.SEZADSIM,DISP=SHR
//IN0533 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADSIM,
//      LABEL=(0533,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0534 DD DSN=PRIME.ICQ.ICQILIB,DISP=SHR
//IN0534 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQILIB,
//      LABEL=(0534,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0535 DD DSN=MASTER.TCPIP.SEZAMENU,DISP=SHR
//IN0535 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAMENU,
//      LABEL=(0535,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0536 DD DSN=MASTER.FFST.V120ESA.SEPWPENU,DISP=SHR
//IN0536 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWPENU,
//      LABEL=(0536,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0537 DD DSN=MASTER.NETVIEW.DSIPRF,DISP=SHR
//IN0537 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.DSIPRF,
//      LABEL=(0537,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0538 DD DSN=PRIME.ASU.AASUIDL,DISP=SHR
//IN0538 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUIDL,
//      LABEL=(0538,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0539 DD DSN=MASTER.SYS1.DFQMLIB,DISP=SHR
//IN0539 DD DISP=(OLD,PASS),DSN=CPP.SYS1.DFQMLIB,
//      LABEL=(0539,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0540 DD DSN=MASTER.IOE.AIOEHSAM,DISP=SHR
//IN0540 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEHSAM,
//      LABEL=(0540,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0541 DD DSN=MASTER.ICA.AICAHETC,DISP=SHR
//IN0541 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICAHETC,
//      LABEL=(0541,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0542 DD DSN=MASTER.GLD.AGLDHCLI,DISP=SHR
//IN0542 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDHCLI,
//      LABEL=(0542,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0543 DD DSN=MASTER.SYS1.AOSB0,DISP=SHR
//IN0543 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSB0,
//      LABEL=(0543,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0544 DD DSN=MASTER.SYS1.AOSJSC,DISP=SHR
//IN0544 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSJSC,
//      LABEL=(0544,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0545 DD DSN=MASTER.SYS1.SDGTTSRC,DISP=SHR
//IN0545 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SDGTTSRC,
//      LABEL=(0545,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0546 DD DSN=MASTER.SYS1.ADGTTSRC,DISP=SHR
//IN0546 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADGTTSRC,
//      LABEL=(0546,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0547 DD DSN=MASTER.SYS1.AINDLMD,DISP=SHR
//IN0547 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AINDLMD,
//      LABEL=(0547,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0548 DD DSN=MASTER.SYS1.AOS05,DISP=SHR
//IN0548 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOS05,
//      LABEL=(0548,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0549 DD DSN=MASTER.SYS1.SBDTLPA,DISP=SHR
//IN0549 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTLPA,
//      LABEL=(0549,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0550 DD DSN=PRIME.ASU.SASUHDR,DISP=SHR
//IN0550 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUHDR,
//      LABEL=(0550,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0551 DD DSN=MASTER.NETVIEW.BNJPNL2,DISP=SHR
//IN0551 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.BNJPNL2,
//      LABEL=(0551,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0552 DD DSN=MASTER.SYS1.ACUNREXX,DISP=SHR
//IN0552 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNREXX,
//      LABEL=(0552,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0553 DD DSN=MASTER.SYS1.ADFMAC1,DISP=SHR
//IN0553 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ADFMAC1,
//      LABEL=(0553,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0554 DD DSN=MASTER.CSF.ACSFSKL0,DISP=SHR
//IN0554 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFSKL0,
//      LABEL=(0554,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0555 DD DSN=MASTER.IOE.AIOEPROC,DISP=SHR
//IN0555 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEPROC,
//      LABEL=(0555,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0556 DD DSN=MASTER.NETVIEW.ADSIMSG1,DISP=SHR
//IN0556 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ADSIMSG1,
//      LABEL=(0556,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0557 DD DSN=MASTER.CEE.AEDCMSEP,DISP=SHR
//IN0557 DD DISP=(OLD,PASS),DSN=CPP.CEE.AEDCMSEP,
//      LABEL=(0557,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0558 DD DSN=MASTER.IOE.AIOEPNLE,DISP=SHR
//IN0558 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEPNLE,
//      LABEL=(0558,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0559 DD DSN=MASTER.SYS1.AGFTAJL1,DISP=SHR
//IN0559 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AGFTAJL1,
//      LABEL=(0559,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0560 DD DSN=MASTER.GLD.AGLDEXEC,DISP=SHR
//IN0560 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDEXEC,
//      LABEL=(0560,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0561 DD DSN=MASTER.NETVIEW.SDSIMSG1,DISP=SHR
//IN0561 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SDSIMSG1,
//      LABEL=(0561,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0562 DD DSN=MASTER.CEE.SCEEMSGP,DISP=SHR
//IN0562 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEEMSGP,
//      LABEL=(0562,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0563 DD DSN=MASTER.SYS1.SCUNREXX,DISP=SHR
//IN0563 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNREXX,
//      LABEL=(0563,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0565 DD DSN=MASTER.SYS1.AICETLIB,DISP=SHR
//IN0565 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICETLIB,
//      LABEL=(0565,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0566 DD DSN=MASTER.ICA.AICAPROC,DISP=SHR
//IN0566 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICAPROC,
//      LABEL=(0566,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0567 DD DSN=MASTER.SYS1.AHASPARM,DISP=SHR
//IN0567 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AHASPARM,
//      LABEL=(0567,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0569 DD DSN=MASTER.CSF.SCSFSKL0,DISP=SHR
//IN0569 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFSKL0,
//      LABEL=(0569,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0570 DD DSN=MASTER.SYS1.SCBDTENU,DISP=SHR
//IN0570 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCBDTENU,
//      LABEL=(0570,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0571 DD DSN=MASTER.ISF.AISFMLIB,DISP=SHR
//IN0571 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFMLIB,
//      LABEL=(0571,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0572 DD DSN=MASTER.ISP.AISPTENU,DISP=SHR
//IN0572 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPTENU,
//      LABEL=(0572,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0573 DD DSN=MASTER.ISF.AISFTLIB,DISP=SHR
//IN0573 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFTLIB,
//      LABEL=(0573,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0574 DD DSN=MASTER.SYS1.SCBDCLST,DISP=SHR
//IN0574 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCBDCLST,
//      LABEL=(0574,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0575 DD DSN=MASTER.CBC.SCCNSKL,DISP=SHR
//IN0575 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNSKL,
//      LABEL=(0575,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0576 DD DSN=MASTER.CBC.SCBCSKL,DISP=SHR
//IN0576 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCSKL,
//      LABEL=(0576,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0577 DD DSN=MASTER.ISF.SISFTLIB,DISP=SHR
//IN0577 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFTLIB,
//      LABEL=(0577,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0578 DD DSN=MASTER.SYS1.AADFMAC1,DISP=SHR
//IN0578 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AADFMAC1,
//      LABEL=(0578,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0579 DD DSN=MASTER.ISP.SISPTENU,DISP=SHR
//IN0579 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPTENU,
//      LABEL=(0579,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0580 DD DSN=MASTER.IOE.SIOEPROC,DISP=SHR
//IN0580 DD DISP=(OLD,PASS),DSN=CPP.IOE.SIOEPROC,
//      LABEL=(0580,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0581 DD DSN=MASTER.NETVIEW.ABNJPNL2,DISP=SHR
//IN0581 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ABNJPNL2,
//      LABEL=(0581,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0582 DD DSN=PRIME.ASU.AASUHDR,DISP=SHR
//IN0582 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUHDR,
//      LABEL=(0582,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0583 DD DSN=MASTER.IOE.SIOEPNLE,DISP=SHR
//IN0583 DD DISP=(OLD,PASS),DSN=CPP.IOE.SIOEPNLE,
//      LABEL=(0583,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0585 DD DSN=MASTER.SYS1.SHASPARM,DISP=SHR
//IN0585 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SHASPARM,
//      LABEL=(0585,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0587 DD DSN=MASTER.ICA.SICAPROC,DISP=SHR
//IN0587 DD DISP=(OLD,PASS),DSN=CPP.ICA.SICAPROC,
//      LABEL=(0587,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0588 DD DSN=MASTER.GLD.SGLDEXEC,DISP=SHR
//IN0588 DD DISP=(OLD,PASS),DSN=CPP.GLD.SGLDEXEC,
//      LABEL=(0588,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0589 DD DSN=MASTER.SYS1.SICETLIB,DISP=SHR
//IN0589 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICETLIB,
//      LABEL=(0589,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0590 DD DSN=MASTER.SYS1.ACBDCLST,DISP=SHR
//IN0590 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDCLST,
//      LABEL=(0590,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0591 DD DSN=MASTER.SYS1.ACBDTENU,DISP=SHR
//IN0591 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDTENU,
//      LABEL=(0591,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0592 DD DSN=MASTER.ISF.SISFMLIB,DISP=SHR
//IN0592 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFMLIB,
//      LABEL=(0592,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0593 DD DSN=MASTER.EUVF.AEUVFEXP,DISP=SHR
//IN0593 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFEXP,
//      LABEL=(0593,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0594 DD DSN=MASTER.EUVF.AEUVFEXC,DISP=SHR
//IN0594 DD DISP=(OLD,PASS),DSN=CPP.EUVF.AEUVFEXC,
//      LABEL=(0594,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0595 DD DSN=MASTER.EUVF.SEUVFEXP,DISP=SHR
//IN0595 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFEXP,
//      LABEL=(0595,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0596 DD DSN=MASTER.EOY.AEOYPROC,DISP=SHR
//IN0596 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYPROC,
//      LABEL=(0596,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0597 DD DSN=MASTER.EOX.AEPHMSG1,DISP=SHR
//IN0597 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHMSG1,
//      LABEL=(0597,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0598 DD DSN=MASTER.EOX.AEPHSAM1,DISP=SHR
//IN0598 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHSAM1,
//      LABEL=(0598,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0599 DD DSN=MASTER.EOY.AEOYGENU,DISP=SHR
//IN0599 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYGENU,
//      LABEL=(0599,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0600 DD DSN=MASTER.EOY.AEOYBENU,DISP=SHR
//IN0600 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYBENU,
//      LABEL=(0600,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0601 DD DSN=MASTER.EUVF.SEUVFEXC,DISP=SHR
//IN0601 DD DISP=(OLD,PASS),DSN=CPP.EUVF.SEUVFEXC,
//      LABEL=(0601,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0602 DD DSN=MASTER.EOY.SEOYPROC,DISP=SHR
//IN0602 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYPROC,
//      LABEL=(0602,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0603 DD DSN=MASTER.EOX.SEPHMSG1,DISP=SHR
//IN0603 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHMSG1,
//      LABEL=(0603,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0604 DD DSN=MASTER.EOY.SEOYGENU,DISP=SHR
//IN0604 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYGENU,
//      LABEL=(0604,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0605 DD DSN=MASTER.EOX.SEPHSAM1,DISP=SHR
//IN0605 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHSAM1,
//      LABEL=(0605,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0606 DD DSN=MASTER.EOY.SEOYBENU,DISP=SHR
//IN0606 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYBENU,
//      LABEL=(0606,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0607 DD DSN=MASTER.EOY.SEOYAENU,DISP=SHR
//IN0607 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYAENU,
//      LABEL=(0607,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0608 DD DSN=MASTER.TCPIP.SEZALPA,DISP=SHR
//IN0608 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZALPA,
//      LABEL=(0608,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0609 DD DSN=MASTER.EOY.AEOYAENU,DISP=SHR
//IN0609 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYAENU,
//      LABEL=(0609,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0610 DD DSN=MASTER.GDDM.AADMIMG,DISP=SHR
//IN0610 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMIMG,
//      LABEL=(0610,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0611 DD DSN=MASTER.GDDM.SADMIMG,DISP=SHR
//IN0611 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMIMG,
//      LABEL=(0611,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0612 DD DSN=PRIME.ECN.AECNHETC,DISP=SHR
//IN0612 DD DISP=(OLD,PASS),DSN=CPP.ECN.AECNHETC,
//      LABEL=(0612,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0613 DD DSN=MASTER.SYS1.ACUNMENU,DISP=SHR
//IN0613 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNMENU,
//      LABEL=(0613,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0614 DD DSN=MASTER.SYS1.SCUNMENU,DISP=SHR
//IN0614 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNMENU,
//      LABEL=(0614,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0615 DD DSN=MASTER.SYS1.SBDTLINK,DISP=SHR
//IN0615 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTLINK,
//      LABEL=(0615,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0616 DD DSN=MASTER.TCPIP.SEZAOLDX,DISP=SHR
//IN0616 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAOLDX,
//      LABEL=(0616,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0617 DD DSN=MASTER.SYS1.ACUNHF,DISP=SHR
//IN0617 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNHF,
//      LABEL=(0617,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0618 DD DSN=MASTER.SYS1.SCUNHF,DISP=SHR
//IN0618 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNHF,
//      LABEL=(0618,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0619 DD DSN=MASTER.NETVIEW.SCNMLPA1,DISP=SHR
//IN0619 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SCNMLPA1,
//      LABEL=(0619,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0620 DD DSN=PRIME.EQAW.SEQAAUTH,DISP=SHR
//IN0620 DD DISP=(OLD,PASS),DSN=CPP.EQAW.SEQAAUTH,
//      LABEL=(0620,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0621 DD DSN=PRIME.EUV.AEUVHTCL,DISP=SHR
//IN0621 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVHTCL,
//      LABEL=(0621,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0622 DD DSN=MASTER.FFST.V120ESA.SEPWMOD3,DISP=SHR
//IN0622 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWMOD3,
//      LABEL=(0622,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0623 DD DSN=MASTER.SYS1.SVCLIB,DISP=SHR
//IN0623 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SVCLIB,
//      LABEL=(0623,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0624 DD DSN=MASTER.EOX.SEPHDAT1,DISP=SHR
//IN0624 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHDAT1,
//      LABEL=(0624,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0625 DD DSN=MASTER.EOX.AEPHDAT1,DISP=SHR
//IN0625 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHDAT1,
//      LABEL=(0625,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0626 DD DSN=MASTER.EOX.AEPHTBL1,DISP=SHR
//IN0626 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHTBL1,
//      LABEL=(0626,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0627 DD DSN=MASTER.EOX.AEPHCLB1,DISP=SHR
//IN0627 DD DISP=(OLD,PASS),DSN=CPP.EOX.AEPHCLB1,
//      LABEL=(0627,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0628 DD DSN=MASTER.EOY.AEOYLENU,DISP=SHR
//IN0628 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYLENU,
//      LABEL=(0628,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0629 DD DSN=MASTER.EOY.AEOYIPRF,DISP=SHR
//IN0629 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYIPRF,
//      LABEL=(0629,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0630 DD DSN=PRIME.EPH.SEPHCLIB,DISP=SHR
//IN0630 DD DISP=(OLD,PASS),DSN=CPP.EPH.SEPHCLIB,
//      LABEL=(0630,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0631 DD DSN=MASTER.EOX.SEPHCLB1,DISP=SHR
//IN0631 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHCLB1,
//      LABEL=(0631,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0632 DD DSN=MASTER.EOX.SEPHTBL1,DISP=SHR
//IN0632 DD DISP=(OLD,PASS),DSN=CPP.EOX.SEPHTBL1,
//      LABEL=(0632,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0633 DD DSN=MASTER.FFST.V120ESA.SEPWMAC1,DISP=SHR
//IN0633 DD DISP=(OLD,PASS),DSN=CPP.FFST.V120ESA.SEPWMAC1,
//      LABEL=(0633,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0634 DD DSN=MASTER.EOY.SEOYLENU,DISP=SHR
//IN0634 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYLENU,
//      LABEL=(0634,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0635 DD DSN=MASTER.EOY.SEOYIPRF,DISP=SHR
//IN0635 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYIPRF,
//      LABEL=(0635,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0636 DD DSN=MASTER.SYS1.IPLPARM,DISP=SHR
//IN0636 DD DISP=(OLD,PASS),DSN=CPP.SYS1.IPLPARM,
//      LABEL=(0636,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0637 DD DSN=MASTER.CBC.SCBCIMG,DISP=SHR
//IN0637 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCBCIMG,
//      LABEL=(0637,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0638 DD DSN=MASTER.CBC.SCCNIMG,DISP=SHR
//IN0638 DD DISP=(OLD,PASS),DSN=CPP.CBC.SCCNIMG,
//      LABEL=(0638,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0639 DD DSN=MASTER.SYS1.SBPXTENU,DISP=SHR
//IN0639 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBPXTENU,
//      LABEL=(0639,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0640 DD DSN=MASTER.ISP.SISPALIB,DISP=SHR
//IN0640 DD DISP=(OLD,PASS),DSN=CPP.ISP.SISPALIB,
//      LABEL=(0640,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0641 DD DSN=MASTER.ISF.AISFSLIB,DISP=SHR
//IN0641 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFSLIB,
//      LABEL=(0641,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0642 DD DSN=MASTER.ISP.AISPALIB,DISP=SHR
//IN0642 DD DISP=(OLD,PASS),DSN=CPP.ISP.AISPALIB,
//      LABEL=(0642,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0643 DD DSN=MASTER.SYS1.AISTCMIP,DISP=SHR
//IN0643 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AISTCMIP,
//      LABEL=(0643,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0644 DD DSN=MASTER.SYS1.VTAMLST,DISP=SHR
//IN0644 DD DISP=(OLD,PASS),DSN=CPP.SYS1.VTAMLST,
//      LABEL=(0644,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0645 DD DSN=MASTER.NETVIEW.SEKGSMP1,DISP=SHR
//IN0645 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGSMP1,
//      LABEL=(0645,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0646 DD DSN=MASTER.NETVIEW.SEKGPNL1,DISP=SHR
//IN0646 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGPNL1,
//      LABEL=(0646,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0647 DD DSN=MASTER.NETVIEW.SDUIMSG1,DISP=SHR
//IN0647 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SDUIMSG1,
//      LABEL=(0647,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0648 DD DSN=MASTER.CSF.SCSFTLIB,DISP=SHR
//IN0648 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFTLIB,
//      LABEL=(0648,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0649 DD DSN=MASTER.NETVIEW.SEKGLANG,DISP=SHR
//IN0649 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGLANG,
//      LABEL=(0649,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0650 DD DSN=MASTER.NETVIEW.SEKGCAS1,DISP=SHR
//IN0650 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGCAS1,
//      LABEL=(0650,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0651 DD DSN=MASTER.NETVIEW.SEKGLUTB,DISP=SHR
//IN0651 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGLUTB,
//      LABEL=(0651,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0652 DD DSN=MASTER.SYS1.SISTCMIP,DISP=SHR
//IN0652 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SISTCMIP,
//      LABEL=(0652,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0654 DD DSN=MASTER.SYS1.AICQMAC2,DISP=SHR
//IN0654 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AICQMAC2,
//      LABEL=(0654,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0655 DD DSN=MASTER.ISF.SISFSLIB,DISP=SHR
//IN0655 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFSLIB,
//      LABEL=(0655,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0656 DD DSN=MASTER.NETVIEW.SEZLSAMP,DISP=SHR
//IN0656 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEZLSAMP,
//      LABEL=(0656,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0657 DD DSN=MASTER.NETVIEW.SEZLPNLU,DISP=SHR
//IN0657 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEZLPNLU,
//      LABEL=(0657,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0658 DD DSN=MASTER.NETVIEW.SEZLINST,DISP=SHR
//IN0658 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEZLINST,
//      LABEL=(0658,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0659 DD DSN=MASTER.NETVIEW.SEZLCLST,DISP=SHR
//IN0659 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEZLCLST,
//      LABEL=(0659,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0660 DD DSN=MASTER.TCPIP.SEZADSIP,DISP=SHR
//IN0660 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADSIP,
//      LABEL=(0660,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0661 DD DSN=PRIME.TCPIVP.TCPPARMS,DISP=SHR
//IN0661 DD DISP=(OLD,PASS),DSN=CPP.TCPIVP.TCPPARMS,
//      LABEL=(0661,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0662 DD DSN=MASTER.NETVIEW.AEZLSAMP,DISP=SHR
//IN0662 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEZLSAMP,
//      LABEL=(0662,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0663 DD DSN=MASTER.CSF.ACSFTLIB,DISP=SHR
//IN0663 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFTLIB,
//      LABEL=(0663,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0664 DD DSN=MASTER.GLD.AGLDEXPC,DISP=SHR
//IN0664 DD DISP=(OLD,PASS),DSN=CPP.GLD.AGLDEXPC,
//      LABEL=(0664,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0665 DD DSN=MASTER.NETVIEW.AEZLPNLU,DISP=SHR
//IN0665 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEZLPNLU,
//      LABEL=(0665,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0666 DD DSN=MASTER.NETVIEW.AEZLINST,DISP=SHR
//IN0666 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEZLINST,
//      LABEL=(0666,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0667 DD DSN=MASTER.NETVIEW.AEZLCLST,DISP=SHR
//IN0667 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEZLCLST,
//      LABEL=(0667,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0668 DD DSN=MASTER.SYS1.AUADS,DISP=SHR
//IN0668 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AUADS,
//      LABEL=(0668,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0669 DD DSN=MASTER.NETVIEW.AEKGSMP1,DISP=SHR
//IN0669 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEKGSMP1,
//      LABEL=(0669,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0670 DD DSN=MASTER.NETVIEW.AEKGPNL1,DISP=SHR
//IN0670 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEKGPNL1,
//      LABEL=(0670,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0671 DD DSN=MASTER.NETVIEW.AEKGLUTB,DISP=SHR
//IN0671 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEKGLUTB,
//      LABEL=(0671,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0672 DD DSN=MASTER.NETVIEW.AEKGLANG,DISP=SHR
//IN0672 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEKGLANG,
//      LABEL=(0672,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0673 DD DSN=MASTER.NETVIEW.AEKGCAS1,DISP=SHR
//IN0673 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEKGCAS1,
//      LABEL=(0673,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0674 DD DSN=MASTER.NETVIEW.ADUIMSG1,DISP=SHR
//IN0674 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ADUIMSG1,
//      LABEL=(0674,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0675 DD DSN=MASTER.GDDM.SADMMSG,DISP=SHR
//IN0675 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMMSG,
//      LABEL=(0675,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0676 DD DSN=MASTER.GDDM.AADMMSG,DISP=SHR
//IN0676 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMMSG,
//      LABEL=(0676,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0677 DD DSN=MASTER.SYS1.AAPPDAT4,DISP=SHR
//IN0677 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AAPPDAT4,
//      LABEL=(0677,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0678 DD DSN=PRIME.ICQ.ICQSLIB,DISP=SHR
//IN0678 DD DISP=(OLD,PASS),DSN=CPP.ICQ.ICQSLIB,
//      LABEL=(0678,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0679 DD DSN=PRIME.MSOPS.SHARED.DSIPARM,DISP=SHR
//IN0679 DD DISP=(OLD,PASS),DSN=CPP.MSOPS.SHARED.DSIPARM,
//      LABEL=(0679,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0680 DD DSN=MASTER.IOE.AIOEMSGE,DISP=SHR
//IN0680 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEMSGE,
//      LABEL=(0680,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0681 DD DSN=MASTER.ISF.AISFHELP,DISP=SHR
//IN0681 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFHELP,
//      LABEL=(0681,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0682 DD DSN=MASTER.ING.AINGNPRF,DISP=SHR
//IN0682 DD DISP=(OLD,PASS),DSN=CPP.ING.AINGNPRF,
//      LABEL=(0682,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0683 DD DSN=MASTER.NETVIEW.BNJSRC1,DISP=SHR
//IN0683 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.BNJSRC1,
//      LABEL=(0683,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0684 DD DSN=MASTER.TCPIP.AEZADBR1,DISP=SHR
//IN0684 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.AEZADBR1,
//      LABEL=(0684,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0685 DD DSN=PRIME.EUV.AEUVACF,DISP=SHR
//IN0685 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVACF,
//      LABEL=(0685,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0686 DD DSN=PRIME.EUV.AEUVMSG,DISP=SHR
//IN0686 DD DISP=(OLD,PASS),DSN=CPP.EUV.AEUVMSG,
//      LABEL=(0686,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0687 DD DSN=PRIME.EUV.SEUVMSG,DISP=SHR
//IN0687 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVMSG,
//      LABEL=(0687,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0688 DD DSN=MASTER.SYS1.SAPPDAT4,DISP=SHR
//IN0688 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SAPPDAT4,
//      LABEL=(0688,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0689 DD DSN=PRIME.ASU.SASUMENU,DISP=SHR
//IN0689 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUMENU,
//      LABEL=(0689,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0690 DD DSN=PRIME.ASU.SASUTLIB,DISP=SHR
//IN0690 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUTLIB,
//      LABEL=(0690,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0691 DD DSN=PRIME.ASU.SASUEXEC,DISP=SHR
//IN0691 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUEXEC,
//      LABEL=(0691,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0692 DD DSN=PRIME.ASU.SASUCIDL,DISP=SHR
//IN0692 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUCIDL,
//      LABEL=(0692,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0693 DD DSN=PRIME.ASU.SASUACF,DISP=SHR
//IN0693 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUACF,
//      LABEL=(0693,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0694 DD DSN=MASTER.SYS1.SBDTMSG,DISP=SHR
//IN0694 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTMSG,
//      LABEL=(0694,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0695 DD DSN=MASTER.TCPIP.SEZADEFS,DISP=SHR
//IN0695 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADEFS,
//      LABEL=(0695,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0696 DD DSN=MASTER.TCPIP.SEZADBRM,DISP=SHR
//IN0696 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZADBRM,
//      LABEL=(0696,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0697 DD DSN=PRIME.EUV.SEUVACF,DISP=SHR
//IN0697 DD DISP=(OLD,PASS),DSN=CPP.EUV.SEUVACF,
//      LABEL=(0697,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0698 DD DSN=MASTER.SYS1.SICEPROC,DISP=SHR
//IN0698 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICEPROC,
//      LABEL=(0698,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0699 DD DSN=MASTER.GLD.SGLDEXPC,DISP=SHR
//IN0699 DD DISP=(OLD,PASS),DSN=CPP.GLD.SGLDEXPC,
//      LABEL=(0699,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0701 DD DSN=MASTER.ING.SINGNPRF,DISP=SHR
//IN0701 DD DISP=(OLD,PASS),DSN=CPP.ING.SINGNPRF,
//      LABEL=(0701,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0702 DD DSN=PRIME.ASU.AASUEXEC,DISP=SHR
//IN0702 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUEXEC,
//      LABEL=(0702,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0703 DD DSN=PRIME.ASU.AASUCIDL,DISP=SHR
//IN0703 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUCIDL,
//      LABEL=(0703,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0704 DD DSN=PRIME.ASU.AASUACF,DISP=SHR
//IN0704 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUACF,
//      LABEL=(0704,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0705 DD DSN=MASTER.NETVIEW.ABNJSRC1,DISP=SHR
//IN0705 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.ABNJSRC1,
//      LABEL=(0705,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0706 DD DSN=MASTER.SYS1.ABDTMSG,DISP=SHR
//IN0706 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABDTMSG,
//      LABEL=(0706,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0707 DD DSN=MASTER.SYS1.ABPXTENU,DISP=SHR
//IN0707 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ABPXTENU,
//      LABEL=(0707,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0708 DD DSN=PRIME.ASU.AASUTLIB,DISP=SHR
//IN0708 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUTLIB,
//      LABEL=(0708,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0709 DD DSN=PRIME.ASU.AASUMENU,DISP=SHR
//IN0709 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUMENU,
//      LABEL=(0709,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0710 DD DSN=MASTER.ISF.SISFHELP,DISP=SHR
//IN0710 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFHELP,
//      LABEL=(0710,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0711 DD DSN=MASTER.IOE.SIOEMSGE,DISP=SHR
//IN0711 DD DISP=(OLD,PASS),DSN=CPP.IOE.SIOEMSGE,
//      LABEL=(0711,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0712 DD DSN=MASTER.GDDM.AADMCFO,DISP=SHR
//IN0712 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMCFO,
//      LABEL=(0712,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0713 DD DSN=MASTER.GDDM.AADMCDA,DISP=SHR
//IN0713 DD DISP=(OLD,PASS),DSN=CPP.GDDM.AADMCDA,
//      LABEL=(0713,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0714 DD DSN=MASTER.GDDM.SADMCFO,DISP=SHR
//IN0714 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMCFO,
//      LABEL=(0714,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0715 DD DSN=MASTER.GDDM.SADMCDA,DISP=SHR
//IN0715 DD DISP=(OLD,PASS),DSN=CPP.GDDM.SADMCDA,
//      LABEL=(0715,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0716 DD DSN=MASTER.CEE.SCEECICS,DISP=SHR
//IN0716 DD DISP=(OLD,PASS),DSN=CPP.CEE.SCEECICS,
//      LABEL=(0716,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0717 DD DSN=MASTER.CEE.SIBMTASK,DISP=SHR
//IN0717 DD DISP=(OLD,PASS),DSN=CPP.CEE.SIBMTASK,
//      LABEL=(0717,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0718 DD DSN=MASTER.IOE.AIOEHSRC,DISP=SHR
//IN0718 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEHSRC,
//      LABEL=(0718,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0719 DD DSN=MASTER.IOE.AIOEHSHL,DISP=SHR
//IN0719 DD DISP=(OLD,PASS),DSN=CPP.IOE.AIOEHSHL,
//      LABEL=(0719,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0720 DD DSN=PRIME.IOA.AIOAMMOD,DISP=SHR
//IN0720 DD DISP=(OLD,PASS),DSN=CPP.IOA.AIOAMMOD,
//      LABEL=(0720,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0721 DD DSN=MASTER.SYS1.ACUNMJPN,DISP=SHR
//IN0721 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACUNMJPN,
//      LABEL=(0721,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0722 DD DSN=MASTER.ICA.AICAHSAM,DISP=SHR
//IN0722 DD DISP=(OLD,PASS),DSN=CPP.ICA.AICAHSAM,
//      LABEL=(0722,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0723 DD DSN=MASTER.SYS1.SCUNMJPN,DISP=SHR
//IN0723 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SCUNMJPN,
//      LABEL=(0723,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0724 DD DSN=PRIME.EQAW.SEQADUM,DISP=SHR
//IN0724 DD DISP=(OLD,PASS),DSN=CPP.EQAW.SEQADUM,
//      LABEL=(0724,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0725 DD DSN=PRIME.IOA.SIOAMMOD,DISP=SHR
//IN0725 DD DISP=(OLD,PASS),DSN=CPP.IOA.SIOAMMOD,
//      LABEL=(0725,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0726 DD DSN=MASTER.NETVIEW.SCNMLNK1,DISP=SHR
//IN0726 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SCNMLNK1,
//      LABEL=(0726,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0727 DD DSN=MASTER.SYS1.ACBDEHFS,DISP=SHR
//IN0727 DD DISP=(OLD,PASS),DSN=CPP.SYS1.ACBDEHFS,
//      LABEL=(0727,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0728 DD DSN=MASTER.EOY.AEOYSENU,DISP=SHR
//IN0728 DD DISP=(OLD,PASS),DSN=CPP.EOY.AEOYSENU,
//      LABEL=(0728,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0729 DD DSN=MASTER.EOY.SEOYSENU,DISP=SHR
//IN0729 DD DISP=(OLD,PASS),DSN=CPP.EOY.SEOYSENU,
//      LABEL=(0729,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0730 DD DSN=PRIME.ASU.AASUSTUB,DISP=SHR
//IN0730 DD DISP=(OLD,PASS),DSN=CPP.ASU.AASUSTUB,
//      LABEL=(0730,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0731 DD DSN=MASTER.SYS1.AOSG0,DISP=SHR
//IN0731 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSG0,
//      LABEL=(0731,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0732 DD DSN=MASTER.ISF.AISFLINK,DISP=SHR
//IN0732 DD DISP=(OLD,PASS),DSN=CPP.ISF.AISFLINK,
//      LABEL=(0732,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0733 DD DSN=MASTER.NETVIEW.AEKGMOD1,DISP=SHR
//IN0733 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEKGMOD1,
//      LABEL=(0733,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0734 DD DSN=MASTER.SYS1.SICELPA,DISP=SHR
//IN0734 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SICELPA,
//      LABEL=(0734,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0735 DD DSN=MASTER.SYS1.SDMSSVMS,DISP=SHR
//IN0735 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SDMSSVMS,
//      LABEL=(0735,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0736 DD DSN=MASTER.SYS1.SDWWDLPA,DISP=SHR
//IN0736 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SDWWDLPA,
//      LABEL=(0736,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0737 DD DSN=MASTER.CEE.SIBMCAL2,DISP=SHR
//IN0737 DD DISP=(OLD,PASS),DSN=CPP.CEE.SIBMCAL2,
//      LABEL=(0737,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0738 DD DSN=MASTER.ISF.SISFLPA,DISP=SHR
//IN0738 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFLPA,
//      LABEL=(0738,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0739 DD DSN=MASTER.SYS1.SBDTCMD,DISP=SHR
//IN0739 DD DISP=(OLD,PASS),DSN=CPP.SYS1.SBDTCMD,
//      LABEL=(0739,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0740 DD DSN=PRIME.ASU.SASUSTUB,DISP=SHR
//IN0740 DD DISP=(OLD,PASS),DSN=CPP.ASU.SASUSTUB,
//      LABEL=(0740,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0741 DD DSN=MASTER.ISF.SISFLINK,DISP=SHR
//IN0741 DD DISP=(OLD,PASS),DSN=CPP.ISF.SISFLINK,
//      LABEL=(0741,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0742 DD DSN=MASTER.NETVIEW.SFLBDAT1,DISP=SHR
//IN0742 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SFLBDAT1,
//      LABEL=(0742,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0743 DD DSN=MASTER.NETVIEW.SEZLLINK,DISP=SHR
//IN0743 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEZLLINK,
//      LABEL=(0743,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0744 DD DSN=MASTER.NETVIEW.AEZLLINK,DISP=SHR
//IN0744 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.AEZLLINK,
//      LABEL=(0744,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0745 DD DSN=MASTER.CSF.SCSFMOD1,DISP=SHR
//IN0745 DD DISP=(OLD,PASS),DSN=CPP.CSF.SCSFMOD1,
//      LABEL=(0745,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0746 DD DSN=MASTER.SYS1.AOSC2,DISP=SHR
//IN0746 DD DISP=(OLD,PASS),DSN=CPP.SYS1.AOSC2,
//      LABEL=(0746,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0747 DD DSN=MASTER.CEE.SIBMCALL,DISP=SHR
//IN0747 DD DISP=(OLD,PASS),DSN=CPP.CEE.SIBMCALL,
//      LABEL=(0747,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0748 DD DSN=MASTER.CSF.ACSFMOD1,DISP=SHR
//IN0748 DD DISP=(OLD,PASS),DSN=CPP.CSF.ACSFMOD1,
//      LABEL=(0748,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0749 DD DSN=MASTER.NETVIEW.SEKGMOD2,DISP=SHR
//IN0749 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGMOD2,
//      LABEL=(0749,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0750 DD DSN=MASTER.NETVIEW.SEKGMOD1,DISP=SHR
//IN0750 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGMOD1,
//      LABEL=(0750,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0751 DD DSN=MASTER.NETVIEW.SEKGLNK1,DISP=SHR
//IN0751 DD DISP=(OLD,PASS),DSN=CPP.NETVIEW.SEKGLNK1,
//      LABEL=(0751,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,RETAIN,,,SER=(M999AK))
//OUT0752 DD DSN=MASTER.TCPIP.SEZAXLD1,DISP=SHR
//IN0752 DD DISP=(OLD,PASS),DSN=CPP.TCPIP.SEZAXLD1,
//      LABEL=(0752,SL),
//      UNIT=AFF=IN0510,
//      VOL=(,,,,SER=(M999AK))
//SYSIN    DD *
 COPY    INDD=IN0510,OUTDD=OUT0510,LIST=NO
 COPY    INDD=IN0511,OUTDD=OUT0511,LIST=NO
 COPY    INDD=IN0512,OUTDD=OUT0512,LIST=NO
 COPY    INDD=IN0513,OUTDD=OUT0513,LIST=NO
 COPY    INDD=IN0514,OUTDD=OUT0514,LIST=NO
 COPY    INDD=IN0515,OUTDD=OUT0515,LIST=NO
 COPY    INDD=IN0516,OUTDD=OUT0516,LIST=NO
 COPY    INDD=IN0517,OUTDD=OUT0517,LIST=NO
 COPYMOD INDD=IN0518,OUTDD=OUT0518,LIST=NO
 COPYMOD INDD=IN0519,OUTDD=OUT0519,LIST=NO
 COPY    INDD=IN0520,OUTDD=OUT0520,LIST=NO
 COPY    INDD=IN0521,OUTDD=OUT0521,LIST=NO
 COPYMOD INDD=IN0522,OUTDD=OUT0522,LIST=NO
 COPY    INDD=IN0523,OUTDD=OUT0523,LIST=NO
 COPY    INDD=IN0524,OUTDD=OUT0524,LIST=NO
 COPY    INDD=IN0525,OUTDD=OUT0525,LIST=NO
 COPY    INDD=IN0526,OUTDD=OUT0526,LIST=NO
 COPY    INDD=IN0527,OUTDD=OUT0527,LIST=NO
 COPY    INDD=IN0528,OUTDD=OUT0528,LIST=NO
 COPY    INDD=IN0529,OUTDD=OUT0529,LIST=NO
 COPY    INDD=IN0530,OUTDD=OUT0530,LIST=NO
 COPY    INDD=IN0531,OUTDD=OUT0531,LIST=NO
 COPY    INDD=IN0532,OUTDD=OUT0532,LIST=NO
 COPY    INDD=IN0533,OUTDD=OUT0533,LIST=NO
 COPY    INDD=IN0534,OUTDD=OUT0534,LIST=NO
 COPY    INDD=IN0535,OUTDD=OUT0535,LIST=NO
 COPY    INDD=IN0536,OUTDD=OUT0536,LIST=NO
 COPY    INDD=IN0537,OUTDD=OUT0537,LIST=NO
 COPY    INDD=IN0538,OUTDD=OUT0538,LIST=NO
 COPY    INDD=IN0539,OUTDD=OUT0539,LIST=NO
 COPY    INDD=IN0540,OUTDD=OUT0540,LIST=NO
 COPY    INDD=IN0541,OUTDD=OUT0541,LIST=NO
 COPY    INDD=IN0542,OUTDD=OUT0542,LIST=NO
 COPYMOD INDD=IN0543,OUTDD=OUT0543,LIST=NO
 COPYMOD INDD=IN0544,OUTDD=OUT0544,LIST=NO
 COPY    INDD=IN0545,OUTDD=OUT0545,LIST=NO
 COPY    INDD=IN0546,OUTDD=OUT0546,LIST=NO
 COPYMOD INDD=IN0547,OUTDD=OUT0547,LIST=NO
 COPYMOD INDD=IN0548,OUTDD=OUT0548,LIST=NO
 COPYMOD INDD=IN0549,OUTDD=OUT0549,LIST=NO
 COPY    INDD=IN0550,OUTDD=OUT0550,LIST=NO
 COPY    INDD=IN0551,OUTDD=OUT0551,LIST=NO
 COPY    INDD=IN0552,OUTDD=OUT0552,LIST=NO
 COPY    INDD=IN0553,OUTDD=OUT0553,LIST=NO
 COPY    INDD=IN0554,OUTDD=OUT0554,LIST=NO
 COPY    INDD=IN0555,OUTDD=OUT0555,LIST=NO
 COPY    INDD=IN0556,OUTDD=OUT0556,LIST=NO
 COPY    INDD=IN0557,OUTDD=OUT0557,LIST=NO
 COPY    INDD=IN0558,OUTDD=OUT0558,LIST=NO
 COPY    INDD=IN0559,OUTDD=OUT0559,LIST=NO
 COPY    INDD=IN0560,OUTDD=OUT0560,LIST=NO
 COPY    INDD=IN0561,OUTDD=OUT0561,LIST=NO
 COPY    INDD=IN0562,OUTDD=OUT0562,LIST=NO
 COPY    INDD=IN0563,OUTDD=OUT0563,LIST=NO
 COPY    INDD=IN0565,OUTDD=OUT0565,LIST=NO
 COPY    INDD=IN0566,OUTDD=OUT0566,LIST=NO
 COPY    INDD=IN0567,OUTDD=OUT0567,LIST=NO
 COPY    INDD=IN0569,OUTDD=OUT0569,LIST=NO
 COPY    INDD=IN0570,OUTDD=OUT0570,LIST=NO
 COPY    INDD=IN0571,OUTDD=OUT0571,LIST=NO
 COPY    INDD=IN0572,OUTDD=OUT0572,LIST=NO
 COPY    INDD=IN0573,OUTDD=OUT0573,LIST=NO
 COPY    INDD=IN0574,OUTDD=OUT0574,LIST=NO
 COPY    INDD=IN0575,OUTDD=OUT0575,LIST=NO
 COPY    INDD=IN0576,OUTDD=OUT0576,LIST=NO
 COPY    INDD=IN0577,OUTDD=OUT0577,LIST=NO
 COPY    INDD=IN0578,OUTDD=OUT0578,LIST=NO
 COPY    INDD=IN0579,OUTDD=OUT0579,LIST=NO
 COPY    INDD=IN0580,OUTDD=OUT0580,LIST=NO
 COPY    INDD=IN0581,OUTDD=OUT0581,LIST=NO
 COPY    INDD=IN0582,OUTDD=OUT0582,LIST=NO
 COPY    INDD=IN0583,OUTDD=OUT0583,LIST=NO
 COPY    INDD=IN0585,OUTDD=OUT0585,LIST=NO
 COPY    INDD=IN0587,OUTDD=OUT0587,LIST=NO
 COPY    INDD=IN0588,OUTDD=OUT0588,LIST=NO
 COPY    INDD=IN0589,OUTDD=OUT0589,LIST=NO
 COPY    INDD=IN0590,OUTDD=OUT0590,LIST=NO
 COPY    INDD=IN0591,OUTDD=OUT0591,LIST=NO
 COPY    INDD=IN0592,OUTDD=OUT0592,LIST=NO
 COPY    INDD=IN0593,OUTDD=OUT0593,LIST=NO
 COPY    INDD=IN0594,OUTDD=OUT0594,LIST=NO
 COPY    INDD=IN0595,OUTDD=OUT0595,LIST=NO
 COPY    INDD=IN0596,OUTDD=OUT0596,LIST=NO
 COPY    INDD=IN0597,OUTDD=OUT0597,LIST=NO
 COPY    INDD=IN0598,OUTDD=OUT0598,LIST=NO
 COPY    INDD=IN0599,OUTDD=OUT0599,LIST=NO
 COPY    INDD=IN0600,OUTDD=OUT0600,LIST=NO
 COPY    INDD=IN0601,OUTDD=OUT0601,LIST=NO
 COPY    INDD=IN0602,OUTDD=OUT0602,LIST=NO
 COPY    INDD=IN0603,OUTDD=OUT0603,LIST=NO
 COPY    INDD=IN0604,OUTDD=OUT0604,LIST=NO
 COPY    INDD=IN0605,OUTDD=OUT0605,LIST=NO
 COPY    INDD=IN0606,OUTDD=OUT0606,LIST=NO
 COPY    INDD=IN0607,OUTDD=OUT0607,LIST=NO
 COPYMOD INDD=IN0608,OUTDD=OUT0608,LIST=NO
 COPY    INDD=IN0609,OUTDD=OUT0609,LIST=NO
 COPY    INDD=IN0610,OUTDD=OUT0610,LIST=NO
 COPY    INDD=IN0611,OUTDD=OUT0611,LIST=NO
 COPY    INDD=IN0612,OUTDD=OUT0612,LIST=NO
 COPY    INDD=IN0613,OUTDD=OUT0613,LIST=NO
 COPY    INDD=IN0614,OUTDD=OUT0614,LIST=NO
 COPYMOD INDD=IN0615,OUTDD=OUT0615,LIST=NO
 COPYMOD INDD=IN0616,OUTDD=OUT0616,LIST=NO
 COPY    INDD=IN0617,OUTDD=OUT0617,LIST=NO
 COPY    INDD=IN0618,OUTDD=OUT0618,LIST=NO
 COPYMOD INDD=IN0619,OUTDD=OUT0619,LIST=NO
 COPYMOD INDD=IN0620,OUTDD=OUT0620,LIST=NO
 COPY    INDD=IN0621,OUTDD=OUT0621,LIST=NO
 COPYMOD INDD=IN0622,OUTDD=OUT0622,LIST=NO
 COPYMOD INDD=IN0623,OUTDD=OUT0623,LIST=NO
 COPY    INDD=IN0624,OUTDD=OUT0624,LIST=NO
 COPY    INDD=IN0625,OUTDD=OUT0625,LIST=NO
 COPY    INDD=IN0626,OUTDD=OUT0626,LIST=NO
 COPY    INDD=IN0627,OUTDD=OUT0627,LIST=NO
 COPY    INDD=IN0628,OUTDD=OUT0628,LIST=NO
 COPY    INDD=IN0629,OUTDD=OUT0629,LIST=NO
 COPY    INDD=IN0630,OUTDD=OUT0630,LIST=NO
 COPY    INDD=IN0631,OUTDD=OUT0631,LIST=NO
 COPY    INDD=IN0632,OUTDD=OUT0632,LIST=NO
 COPY    INDD=IN0633,OUTDD=OUT0633,LIST=NO
 COPY    INDD=IN0634,OUTDD=OUT0634,LIST=NO
 COPY    INDD=IN0635,OUTDD=OUT0635,LIST=NO
 COPY    INDD=IN0636,OUTDD=OUT0636,LIST=NO
 COPY    INDD=IN0637,OUTDD=OUT0637,LIST=NO
 COPY    INDD=IN0638,OUTDD=OUT0638,LIST=NO
 COPY    INDD=IN0639,OUTDD=OUT0639,LIST=NO
 COPY    INDD=IN0640,OUTDD=OUT0640,LIST=NO
 COPY    INDD=IN0641,OUTDD=OUT0641,LIST=NO
 COPY    INDD=IN0642,OUTDD=OUT0642,LIST=NO
 COPY    INDD=IN0643,OUTDD=OUT0643,LIST=NO
 COPY    INDD=IN0644,OUTDD=OUT0644,LIST=NO
 COPY    INDD=IN0645,OUTDD=OUT0645,LIST=NO
 COPY    INDD=IN0646,OUTDD=OUT0646,LIST=NO
 COPY    INDD=IN0647,OUTDD=OUT0647,LIST=NO
 COPY    INDD=IN0648,OUTDD=OUT0648,LIST=NO
 COPY    INDD=IN0649,OUTDD=OUT0649,LIST=NO
 COPY    INDD=IN0650,OUTDD=OUT0650,LIST=NO
 COPY    INDD=IN0651,OUTDD=OUT0651,LIST=NO
 COPY    INDD=IN0652,OUTDD=OUT0652,LIST=NO
 COPY    INDD=IN0654,OUTDD=OUT0654,LIST=NO
 COPY    INDD=IN0655,OUTDD=OUT0655,LIST=NO
 COPY    INDD=IN0656,OUTDD=OUT0656,LIST=NO
 COPY    INDD=IN0657,OUTDD=OUT0657,LIST=NO
 COPY    INDD=IN0658,OUTDD=OUT0658,LIST=NO
 COPY    INDD=IN0659,OUTDD=OUT0659,LIST=NO
 COPY    INDD=IN0660,OUTDD=OUT0660,LIST=NO
 COPY    INDD=IN0661,OUTDD=OUT0661,LIST=NO
 COPY    INDD=IN0662,OUTDD=OUT0662,LIST=NO
 COPY    INDD=IN0663,OUTDD=OUT0663,LIST=NO
 COPY    INDD=IN0664,OUTDD=OUT0664,LIST=NO
 COPY    INDD=IN0665,OUTDD=OUT0665,LIST=NO
 COPY    INDD=IN0666,OUTDD=OUT0666,LIST=NO
 COPY    INDD=IN0667,OUTDD=OUT0667,LIST=NO
 COPY    INDD=IN0668,OUTDD=OUT0668,LIST=NO
 COPY    INDD=IN0669,OUTDD=OUT0669,LIST=NO
 COPY    INDD=IN0670,OUTDD=OUT0670,LIST=NO
 COPY    INDD=IN0671,OUTDD=OUT0671,LIST=NO
 COPY    INDD=IN0672,OUTDD=OUT0672,LIST=NO
 COPY    INDD=IN0673,OUTDD=OUT0673,LIST=NO
 COPY    INDD=IN0674,OUTDD=OUT0674,LIST=NO
 COPY    INDD=IN0675,OUTDD=OUT0675,LIST=NO
 COPY    INDD=IN0676,OUTDD=OUT0676,LIST=NO
 COPY    INDD=IN0677,OUTDD=OUT0677,LIST=NO
 COPY    INDD=IN0678,OUTDD=OUT0678,LIST=NO
 COPY    INDD=IN0679,OUTDD=OUT0679,LIST=NO
 COPY    INDD=IN0680,OUTDD=OUT0680,LIST=NO
 COPY    INDD=IN0681,OUTDD=OUT0681,LIST=NO
 COPY    INDD=IN0682,OUTDD=OUT0682,LIST=NO
 COPY    INDD=IN0683,OUTDD=OUT0683,LIST=NO
 COPY    INDD=IN0684,OUTDD=OUT0684,LIST=NO
 COPY    INDD=IN0685,OUTDD=OUT0685,LIST=NO
 COPY    INDD=IN0686,OUTDD=OUT0686,LIST=NO
 COPY    INDD=IN0687,OUTDD=OUT0687,LIST=NO
 COPY    INDD=IN0688,OUTDD=OUT0688,LIST=NO
 COPY    INDD=IN0689,OUTDD=OUT0689,LIST=NO
 COPY    INDD=IN0690,OUTDD=OUT0690,LIST=NO
 COPY    INDD=IN0691,OUTDD=OUT0691,LIST=NO
 COPY    INDD=IN0692,OUTDD=OUT0692,LIST=NO
 COPY    INDD=IN0693,OUTDD=OUT0693,LIST=NO
 COPY    INDD=IN0694,OUTDD=OUT0694,LIST=NO
 COPY    INDD=IN0695,OUTDD=OUT0695,LIST=NO
 COPY    INDD=IN0696,OUTDD=OUT0696,LIST=NO
 COPY    INDD=IN0697,OUTDD=OUT0697,LIST=NO
 COPY    INDD=IN0698,OUTDD=OUT0698,LIST=NO
 COPY    INDD=IN0699,OUTDD=OUT0699,LIST=NO
 COPY    INDD=IN0701,OUTDD=OUT0701,LIST=NO
 COPY    INDD=IN0702,OUTDD=OUT0702,LIST=NO
 COPY    INDD=IN0703,OUTDD=OUT0703,LIST=NO
 COPY    INDD=IN0704,OUTDD=OUT0704,LIST=NO
 COPY    INDD=IN0705,OUTDD=OUT0705,LIST=NO
 COPY    INDD=IN0706,OUTDD=OUT0706,LIST=NO
 COPY    INDD=IN0707,OUTDD=OUT0707,LIST=NO
 COPY    INDD=IN0708,OUTDD=OUT0708,LIST=NO
 COPY    INDD=IN0709,OUTDD=OUT0709,LIST=NO
 COPY    INDD=IN0710,OUTDD=OUT0710,LIST=NO
 COPY    INDD=IN0711,OUTDD=OUT0711,LIST=NO
 COPY    INDD=IN0712,OUTDD=OUT0712,LIST=NO
 COPY    INDD=IN0713,OUTDD=OUT0713,LIST=NO
 COPY    INDD=IN0714,OUTDD=OUT0714,LIST=NO
 COPY    INDD=IN0715,OUTDD=OUT0715,LIST=NO
 COPYMOD INDD=IN0716,OUTDD=OUT0716,LIST=NO
 COPYMOD INDD=IN0717,OUTDD=OUT0717,LIST=NO
 COPY    INDD=IN0718,OUTDD=OUT0718,LIST=NO
 COPY    INDD=IN0719,OUTDD=OUT0719,LIST=NO
 COPYMOD INDD=IN0720,OUTDD=OUT0720,LIST=NO
 COPY    INDD=IN0721,OUTDD=OUT0721,LIST=NO
 COPY    INDD=IN0722,OUTDD=OUT0722,LIST=NO
 COPY    INDD=IN0723,OUTDD=OUT0723,LIST=NO
 COPYMOD INDD=IN0724,OUTDD=OUT0724,LIST=NO
 COPYMOD INDD=IN0725,OUTDD=OUT0725,LIST=NO
 COPYMOD INDD=IN0726,OUTDD=OUT0726,LIST=NO
 COPY    INDD=IN0727,OUTDD=OUT0727,LIST=NO
 COPY    INDD=IN0728,OUTDD=OUT0728,LIST=NO
 COPY    INDD=IN0729,OUTDD=OUT0729,LIST=NO
 COPYMOD INDD=IN0730,OUTDD=OUT0730,LIST=NO
 COPYMOD INDD=IN0731,OUTDD=OUT0731,LIST=NO
 COPYMOD INDD=IN0732,OUTDD=OUT0732,LIST=NO
 COPYMOD INDD=IN0733,OUTDD=OUT0733,LIST=NO
 COPYMOD INDD=IN0734,OUTDD=OUT0734,LIST=NO
 COPYMOD INDD=IN0735,OUTDD=OUT0735,LIST=NO
 COPYMOD INDD=IN0736,OUTDD=OUT0736,LIST=NO
 COPYMOD INDD=IN0737,OUTDD=OUT0737,LIST=NO
 COPYMOD INDD=IN0738,OUTDD=OUT0738,LIST=NO
 COPYMOD INDD=IN0739,OUTDD=OUT0739,LIST=NO
 COPYMOD INDD=IN0740,OUTDD=OUT0740,LIST=NO
 COPYMOD INDD=IN0741,OUTDD=OUT0741,LIST=NO
 COPY    INDD=IN0742,OUTDD=OUT0742,LIST=NO
 COPYMOD INDD=IN0743,OUTDD=OUT0743,LIST=NO
 COPYMOD INDD=IN0744,OUTDD=OUT0744,LIST=NO
 COPYMOD INDD=IN0745,OUTDD=OUT0745,LIST=NO
 COPYMOD INDD=IN0746,OUTDD=OUT0746,LIST=NO
 COPYMOD INDD=IN0747,OUTDD=OUT0747,LIST=NO
 COPYMOD INDD=IN0748,OUTDD=OUT0748,LIST=NO
 COPYMOD INDD=IN0749,OUTDD=OUT0749,LIST=NO
 COPYMOD INDD=IN0750,OUTDD=OUT0750,LIST=NO
 COPYMOD INDD=IN0751,OUTDD=OUT0751,LIST=NO
 COPY    INDD=IN0752,OUTDD=OUT0752,LIST=NO
/*
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBCAK#2),(4000,LT))
//*
//IEBG0001 EXEC PGM=IDCAMS,COND=(4000,LT)
//*
//SYSIN    DD *
  REPRO    INFILE(SYSUT1)   OUTFILE(SYSUT2) REPLACE
//SYSUT2   DD DISP=SHR,DSN=MASTER.SYS1.DFSMS.ACDS
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=(OLD,PASS),DSN=CPP.EXMP.ACDSSEQ,
//      UNIT=(SYS3480R,1,DEFER),
//      LABEL=(0001,SL),
//      VOL=(,RETAIN,,,SER=(M999AL))
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBG0001),(4000,LT))
//*
//IEBG0002 EXEC PGM=IDCAMS,COND=(4000,LT)
//*
//SYSIN    DD *
  REPRO    INFILE(SYSUT1)   OUTFILE(SYSUT2) REPLACE
//SYSUT2   DD DISP=SHR,DSN=MASTER.SYS1.DFSMS.SCDS
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=(OLD,PASS),DSN=CPP.EXMP.SCDSSEQ,
//      UNIT=(SYS3480R,1,DEFER),
//      LABEL=(0002,SL),
//      VOL=(,RETAIN,,,SER=(M999AL))
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBG0002),(4000,LT))
//*--------------------------------------------------------------------
//* DOC: THIS STEP COPIES 'ICKDSF' FROM THE UNLOADED LINKLIB TO AN
//*      AUTHORIZED LIBRARY.  THE AUTHORIZED LIBRARY WE WILL USE IS
//*      USER.LINKLIB.
//*      THE MODULE USED ABOUT 18 TRKS FOR 3380 OR 15 TRKS FOR 3390.
//*      IF YOU ALREADY HAVE A COPY OF 'ICKDSF' IN THIS DATASET,
//*      THIS STEP IS OPTIONAL.
//*--------------------------------------------------------------------
//COPYICK  EXEC PGM=IEBCOPY,COND=(4000,LT),PARM='SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//         DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DSN=USER.LINKLIB,
//         DISP=SHR
//SYSIN    DD *
  COPYMOD INDD=INPUT1,OUTDD=OUTPUT1
  SELECT MEMBER=((ICKDSF,,R))
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,COPYICK),(4000,LT))
//*
//MSYSOPI EXEC PGM=IDCAMS,COND=(4000,LT)
//*--------------------------------------------------------------------
//* SEEDING IPLDATA FOR MSYS FOR OPERATIONS
//* NOTE: 20 HEX ZERO (X"00") CHARACTERS FOLLOWED BY THE STRING '10Y'
//*--------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//IN       DD *
                    10Y
/*
//OUT      DD DISP=SHR,DSN=PRIME.MSOPS.SHARED.IPLDATA
//SYSIN    DD *
  REPRO INFILE(IN) OUTFILE(OUT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,MSYSOPI),(4000,LT))
./ ADD NAME=B5RESTOS 0114-04350-04350-1300-00057-00046-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//IEBG0002 EXEC PGM=IDCAMS,COND=(4000,LT)
//*
//SYSIN    DD *
  REPRO    INFILE(SYSUT1)   OUTFILE(SYSUT2) REPLACE
//SYSUT2   DD DISP=SHR,DSN=MASTER.SYS1.DFSMS.SCDS
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DISP=(OLD,PASS),DSN=CPP.EXMP.SCDSSEQ,
//      UNIT=562,
//      LABEL=(0002,SL),
//      VOL=(,RETAIN,,,SER=(M999AL))
//*
//NOTOK  EXEC PGM=MAXRETCD,COND=((4,GE,IEBG0002),(4000,LT))
//*--------------------------------------------------------------------
//* DOC: THIS STEP COPIES 'ICKDSF' FROM THE UNLOADED LINKLIB TO AN
//*      AUTHORIZED LIBRARY.  THE AUTHORIZED LIBRARY WE WILL USE IS
//*      USER.LINKLIB.
//*      THE MODULE USED ABOUT 18 TRKS FOR 3380 OR 15 TRKS FOR 3390.
//*      IF YOU ALREADY HAVE A COPY OF 'ICKDSF' IN THIS DATASET,
//*      THIS STEP IS OPTIONAL.
//*--------------------------------------------------------------------
//COPYICK  EXEC PGM=IEBCOPY,COND=(4000,LT),PARM='SPCLCMOD'
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//         DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DSN=USER.LINKLIB,
//         DISP=SHR
//SYSIN    DD *
  COPYMOD INDD=INPUT1,OUTDD=OUTPUT1
  SELECT MEMBER=((ICKDSF,,R))
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,COPYICK),(4000,LT))
//*
//MSYSOPI EXEC PGM=IDCAMS,COND=(4000,LT)
//*--------------------------------------------------------------------
//* SEEDING IPLDATA FOR MSYS FOR OPERATIONS
//* NOTE: 20 HEX ZERO (X"00") CHARACTERS FOLLOWED BY THE STRING '10Y'
//*--------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//IN       DD *
                    10Y
/*
//OUT      DD DISP=SHR,DSN=PRIME.MSOPS.SHARED.IPLDATA
//SYSIN    DD *
  REPRO INFILE(IN) OUTFILE(OUT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,MSYSOPI),(4000,LT))
./ ADD NAME=B6CPPUPD 0114-04350-04350-1300-04874-04875-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: CPPUPDTE EXECUTES THE UPDATING PROGRAM CPPUPDTE.
//*      IT UPDATES ALL ELIGIBLE LIBRARIES BY GLOBALLY CHANGING
//*      SELECTED FIELDS.
//*-------------------------------------------------------------------
//CPPPROC  PROC
//CPPUPDTE EXEC PGM=CPPUPDTE,PARM='UPDATE',COND=(4000,LT)
//STEPLIB  DD DISP=SHR,
//            DSN=SUPPLIED.LOADLIB
//SYSPRINT DD SYSOUT=*
//@CMDP   DD DISP=SHR,
//            DSN=MASTER.EXMP.CMDPROC
//@ISPP   DD DISP=SHR,
//            DSN=MASTER.EXMP.ISPPLIB
//@IVPL   DD DISP=SHR,
//            DSN=MASTER.EXMP.IVPLIB
//@PARM   DD DISP=SHR,
//            DSN=MASTER.EXMP.PARMLIB
//@PROC   DD DISP=SHR,
//            DSN=MASTER.EXMP.PROCLIB
//@DSIPM  DD DISP=SHR,
//            DSN=PRIME.MSOPS.SHARED.DSIPARM
//@PARM1  DD DISP=SHR,
//            DSN=MASTER.SYS1.IPLPARM
//@PARM2  DD DISP=SHR,
//            DSN=MASTER.SYS1.PARMLIB
//@TCPP   DD DISP=SHR,
//            DSN=PRIME.TCPIVP.TCPPARMS
//SYSIN    DD DUMMY
//         PEND
//CPPPROC1 PROC
//CPPUPDTE EXEC PGM=CPPUPDTE,PARM='UPDATE',COND=(4000,LT)
//STEPLIB  DD DISP=SHR,
//            DSN=SUPPLIED.LOADLIB
//SYSPRINT DD SYSOUT=*
//@CMDP   DD DISP=SHR,
//            DSN=MASTER.EXMP.CMDPROC
//@ISPP   DD DISP=SHR,
//            DSN=MASTER.EXMP.ISPPLIB
//@IVPL   DD DISP=SHR,
//            DSN=MASTER.EXMP.IVPLIB
//@PARM   DD DISP=SHR,
//            DSN=MASTER.EXMP.PARMLIB
//@PROC   DD DISP=SHR,
//            DSN=MASTER.EXMP.PROCLIB
//@DSIPM  DD DISP=SHR,
//            DSN=PRIME.MSOPS.SHARED.DSIPARM
//SYSIN    DD DUMMY
//         PEND
//*
//*
//CPP1 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSILOGP<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSILOGS<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSISVRT<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSITRCP<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSITRCS<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.STATS<                                           .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.SHARED.IPLDATA<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.LINKLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.LPALIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.MACLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.MIGLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.CSSLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.MODGEN<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.LINKLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.VTAMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTMAC1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWMAC1<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZALOAD<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICEUSER<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFSRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMMAC1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMSAM1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCSAM<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEMAC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPMACS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.NFSMAC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZANMAC<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SCNMMAC1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZACMAC<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SORTLPA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICELPA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SORTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICELINK<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMMAC2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMSAM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  AOP.AAOPEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  AOP.AAOPHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  AOP.AAOPMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  AOP.AAOPMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  AOP.AAOPPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  AOP.SAOPEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  AOP.SAOPMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  AOP.SAOPPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMMAC1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMMAC2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMMOD2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMPUT2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMSAM1<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP1.CPPUPDTE),(4000,LT))
//*
//CPP2 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASM.AASMSAM2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMMOD2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMPUT2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASM.SASMSAM2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUACF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUCIDL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUHDR<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUHHDR<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUHLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUHSAM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUIDL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASULINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUSTUB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ASU.AASUTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUACF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUCIDL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUHDR<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUIDL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUSTUB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ASU.SASUTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  BDT1.BDTSPOOL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  BDT1.MSG0001<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  BDT1.TQIBITS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  BDT1.TQIDATA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  BPA.ABPAHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CBC.ACBCCMP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CBC.ACBCSR1<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CBC.ACCNCMP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CBC.ACCNSR1<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBDLL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBDLL2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBHFS1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBOBJ<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBOBJ2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBSR1<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBSR2<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBSR3<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACLBSR4<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CBC.ACLDHFS1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CBC.ACLDSR1<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACTVMOD<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CBC.ACTVSRC<                                                 .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP2.CPPUPDTE),(4000,LT))
//*
//CPP3 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCCMP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCDOC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCIMG<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCPNL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCPRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCSKL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCBCUTL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNCMP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNDOC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNIMG<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNPNL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNPRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNSAM<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNSKL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCCNUTL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBCPP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBCPP2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBDLL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBDLL2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBH.C<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBH.H<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBH.HPP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBH.INL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLBSID<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCLDJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCTVJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CBC.SCTVMOD<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CDS.ACDSHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CDS.ACDSLINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CDS.ACDSSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CDS.SCDSSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AAFHMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AAFHSRC1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.ACEEMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.ACEEMOD2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.ACEESRC1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.ACEESRC2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.ACEESRC3<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCCPP1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCMOD2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCMSEP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCOBJ1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCSRC6<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AEDCSRC7<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AIBMMOD3<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AIBMSRC3<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP3.CPPUPDTE),(4000,LT))
//*
//CPP4 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AIGZMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CEE.AIGZSRC1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SAFHFORT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEBIND<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEBND2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEECICS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEECLST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEECMAP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEECPP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEGXLT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH.ARPA.H<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH.H<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH.NET.H<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH.NETINET.H<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH.SYS.H<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEH.T<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEELIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEELKED<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEELKEX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEELOCL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEELOCX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEELPA<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEMSGP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEOBJ<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEERTLS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEERUN<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEERUN2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEESAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEESPC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEESPCO<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEUMAP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SCEEUTBL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SIBMCALL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SIBMCAL2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SIBMMATH<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CEE.SIBMTASK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CIM.ACIMHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CIM.ACIMMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  CIM.ACIMPLUG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  CIM.SCIMXML<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CMX.ACMXDBRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CMX.ACMXHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CMX.SCMXDBRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.ACDSSEQ<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.CMDPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.DOCLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.HFSFILE<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.ISPPLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.IVPLIB<                                                 .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP4.CPPUPDTE),(4000,LT))
//*
//CPP5 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.PARMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.PGMDIR<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.PROCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.REPORTS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.SAMPLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.SCDSSEQ<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  EXMP.VTAMLST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFCLI0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFHDRS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFMOD0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFMSG0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFOBJ<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFPNL0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFSKL0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  CSF.ACSFTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFCLI0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFHDRS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFMOD0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFMSG0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFOBJ<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFPNL0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFSKL0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  CSF.SCSFTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ECN.AECNEXP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ECN.AECNHETC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ECN.AECNHEXP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ECN.AECNHINC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ECN.AECNHLBR<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ECN.AECNLINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ECN.SECNEXP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHBOK1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHCLB1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHDAT1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHLOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHMSG1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHPNL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHSAM1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOX.AEPHTBL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHBOK1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHCLB1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHDAT1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHLOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHMSG1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHPNL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHSAM1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOX.SEPHTBL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOXFONT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOXIENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOXOENU<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP5.CPPUPDTE),(4000,LT))
//*
//CPP6 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOX1ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOX2ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOX3ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOX4ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYAENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYBENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYGENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYIENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYIPRF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYLENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYLEXS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYMC30<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYMC40<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYOENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYSENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYTENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOYXENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOY1ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOY2ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EOY.AEOY4ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  EOY.BKLSHELF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOXFONT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOXIENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOXOENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOX1ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOX2ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOX3ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOX4ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYAENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYBENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYGENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYIENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYIPRF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYLENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYLEXS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYLPA<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYMC30<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYMC40<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYOENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYSAMP<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP6.CPPUPDTE),(4000,LT))
//*
//CPP7 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYSENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYTENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOYXENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOY1ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOY2ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EOY.SEOY4ENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EPH.AEPHBOOK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EPH.AEPHCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EPH.AEPHGIF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EPH.AEPHLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EPH.AEPHSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EPH.SEPHCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EPH.SEPHSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EPH.SEPHTAB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EQAW.AEQAMOD2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EQAW.AEQASRC2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EQAW.SEQAAUTH<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EQAW.SEQADUM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EQAW.SEQAMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EQAW.SEQASAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVACF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVDBRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVEXP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHDCP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHDR<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHDRK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHETC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHINC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHLBR<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHTCL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVHXMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVIDL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVLIBK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVLIBS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVLINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVMSG<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVPNL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUV.AEUVPRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVACF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVDBRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVEXP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVHDR<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVHDRK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVIDL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVLIBK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVLIBS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVMSG<                                                 .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP7.CPPUPDTE),(4000,LT))
//*
//CPP8 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVPNL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUV.SEUVPRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFEXC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFEXP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFHDR<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFHFS<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFLNK<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  EUVF.AEUVFSAM<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFEXC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFEXP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFHDR<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFLNK<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFLPA<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  EUVF.SEUVFSAM<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  FFST.V120ESA.AEPWBENU<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  FFST.V120ESA.AEPWMOD1<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  FFST.V120ESA.AEPWSRC1<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  FFST.V120ESA.EPWCKPT<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  FFST.V120ESA.EPWDUMP<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  FFST.V120ESA.EPWLOG1<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  FFST.V120ESA.EPWLOG2<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  FFST.V120ESA.EPWPARM<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWBENU<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWCENU<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWMOD1<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWMOD2<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWMOD3<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWMOD4<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWPENU<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWSRC1<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  FFST.V120ESA.SEPWSRC2<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMCDA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMCFO<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMDAT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMGDF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMIMG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMMAP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMOPS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMPCF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMPNL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMSAM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GDDM.AADMSYM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMCDA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMCFO<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMDAT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMGDF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMIMG<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP8.CPPUPDTE),(4000,LT))
//*
//CPP9 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMMAP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMOPS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMPCF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMPNL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GDDM.SADMSYM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GIM.AGIMCLS0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GIM.AGIMMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GIM.AGIMPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GIM.AGIMSENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GIM.AGIMTENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GIM.SGIMCLS0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GIM.SGIMLMD0<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GIM.SGIMMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GIM.SGIMPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GIM.SGIMSENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GIM.SGIMTENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDEXPC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDHCLI<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDHDRC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDLNK<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GLD.AGLDSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GLD.SGLDEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GLD.SGLDEXPC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GLD.SGLDHDRC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GLD.SGLDLNK<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GLD.SGLDSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GSK.AGSKHFS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GSK.AGSKLINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  GSK.AGSKSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GSK.SGSKLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  GSK.SGSKSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  HCM.AEEQINST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  HCM.SEEQINST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICAHETC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICAHLBR<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICAHSAM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICAHSCR<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICALINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICAPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ICA.AICASAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICA.SICALMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICA.SICAPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICA.SICASAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQABTXT<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQCCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQILIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQMLIB<                                                 .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP9.CPPUPDTE),(4000,LT))
//*
//CPP10 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQPLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQSLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ICQ.ICQTABLS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IMO.AIMOHFS1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IMO.AIMOJCL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IMO.AIMOMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IMO.SIMOJCL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IMO.SIMOMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IMW.AIMWEMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IMW.AIMWHENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IMW.AIMWSAM1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IMW.SIMWSDCK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IMW.SIMWTBL1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AEVIMOD6<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AEVIMOD7<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AEVIMOD8<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGIMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGIMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGINST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGIPDB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGIPNL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGIREX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGISKL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGITBL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGMODC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGMOD2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGNMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGNPNL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGNPRF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGNPRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGNREX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGPWS1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ING.AINGSRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SEVIMOD6<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SEVIMOD7<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SEVIMOD8<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGIMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGIMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGINST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGIPDB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGIPNL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGIREX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGISKL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGITBL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGMODC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGMOD2<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGMOD3<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGNMSG<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP10.CPPUPDTE),(4000,LT))
//*
//CPP11 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGNPNL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGNPRF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGNPRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGNREX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGPWS1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ING.SINGSRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOA.AIOAIBIN<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOA.AIOAJAVA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOA.AIOALMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOA.AIOAMMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOA.AIOASAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOA.SIOAIBIN<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOA.SIOAJAVA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOA.SIOAMMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOA.SIOASAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEHLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEHSAM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEHSHL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEHSRC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOELMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEMSGE<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEPNLE<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOEPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  IOE.AIOESAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOE.SIOEEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOE.SIOELMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOE.SIOEMSGE<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOE.SIOEPNLE<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOE.SIOEPROC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  IOE.SIOESAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFHELP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFLINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFPLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFSRC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISF.AISFTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  ISF.HASPINDX<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFHELP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFJCL<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFLINK<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFLPA<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFPLIB<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP11.CPPUPDTE),(4000,LT))
//*
//CPP12 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISF.SISFTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPALIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPGENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPGMLI<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPGUI<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPHELP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPMACS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPMOD1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPSASC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPSENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  ISP.AISPTENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPALIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPEXEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPGENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPGMLI<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPGUI<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPHELP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPLOAD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPLPA<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPMENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPPENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPSAMP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPSASC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPSENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  ISP.SISPTENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  JAVA.AAJVSMP1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  JAVA.AAJVS390<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  JAVA.SAJVSMP1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSIARPT<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSIASRC<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.MSOAC.DSILIST<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  MSOPS.SHARED.DSIPARM<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ABNJPNL1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ABNJPNL2<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ABNJSRC1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ACNMCLST<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ACNMINST<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ACNMLINK<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ACNMMAC1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ACNMPNL1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ACNMSAMP<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ADSIMSG1<                                            .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP12.CPPUPDTE),(4000,LT))
//*
//CPP13 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ADSIOPEN<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ADSIPARM<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ADSIPRF<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ADUIMSG1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEKGCAS1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEKGLANG<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEKGLUTB<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEKGMOD1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEKGPNL1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEKGSMP1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEZLCLST<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEZLINST<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEZLLINK<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEZLPNLU<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AEZLSAMP<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.AFLBDAT1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  NETVIEW.ANVULIB<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.BNJPNL1<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.BNJPNL2<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.BNJSRC1<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.CNMCLST<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.CNMINST<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.CNMLINK<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.CNMPNL1<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.CNMSAMP<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.DSIPARM<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.DSIPRF<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.NVULIB<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SCNMLNK1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SCNMLPA1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SDSIMSG1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SDSIOPEN<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SDUIMSG1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGCAS1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGLANG<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGLNK1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGLUTB<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGMOD1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGMOD2<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGPNL1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEKGSMP1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEZLCLST<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEZLINST<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEZLLINK<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEZLPNLU<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SEZLSAMP<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  NETVIEW.SFLBDAT1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  OMVS.ETC<                                                    .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  OMVS.JV390<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4USS1<+                                        <==
  OMVS.ROOT<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  OMVS.VAR<                                                    .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP13.CPPUPDTE),(4000,LT))
//*
//CPP14 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  PAGE.EXMP.COMMON<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  PAGE.EXMP.LOCAL1<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  PAGE.EXMP.PLPA<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.GLOBAL.CSI<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SMPE.MVS.DLIB.CSI<                                           .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SMPE.MVS.TARGET.CSI<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.MVSD100.SMPDLOG<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.MVSD100.SMPDLOGA<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SMPE.MVST100.SMPLTS<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SMPE.MVST100.SMPMTS<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.MVST100.SMPSCDS<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SMPE.MVST100.SMPSTS<                                         .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.MVST100.SMPTLOG<                                        .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.MVST100.SMPTLOGA<                                       .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.SMPGLOG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.SMPGLOGA<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SMPE.SMPPTS<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AACBCNTL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AADFMAC1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AADRLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AADRYLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AAPPDAT2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AAPPDAT4<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AAPPMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AAPPMOD2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AAPPSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTCLI0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTHELP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTPNL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABDTSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABLSCLI0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABLSKEL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABLSMSG0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABLSPNL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABLSTBL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ABMFMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABPXEXEC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABPXMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABPXMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABPXPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABPXSPC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ABPXTENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDCLST<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDEHFS<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDHENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDMOD2<                                               .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP14.CPPUPDTE),(4000,LT))
//*
//CPP15 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDTEMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBDTENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBRDBRM<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACBRMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACDMMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACDRMODS<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACDRTABL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ACLMMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACMDLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACSSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNHF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNIMG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNJCL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNMJPN<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNREXX<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ACUNTBL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADBBLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.ADFMAC1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADFPMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADFQMLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADFQPLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADFQPSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTCLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTLLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTMLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTPLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTPSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTSLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTTLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADGTTSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ADMSSVM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AEDGEXE1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AEDGMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AEDGMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AEDGPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AEDGPSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AEDGSRC1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBCLS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBMAC1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBPWSV<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBT<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AERBTENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AFOMDATA<                                               .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP15.CPPUPDTE),(4000,LT))
//*
//CPP16 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AFOMHDRS<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AFOMHFS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AFOMMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AFOMOBJ<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AGDEMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AGENLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AGFTAJL1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AGFTAMD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AGFUMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASMOD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASPARM<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASPNL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHASSRC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AHELP<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AHELPENP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICECLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICELIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICEMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICEPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICESAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICESLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICESRCE<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICETLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICEUSER<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQAB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQILIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQMAC1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQMAC2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQMAC3<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQMAC4<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AICQMAC5<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AIEAHDR<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AIEWMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AIFALIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AIGDVBS1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AIKYHFS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AIMAGE<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AIMFMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AINDLMD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTASGD<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTASN1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTCMIP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTDAT1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTDAT2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTGDMO<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AISTMAC1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AITYHFS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ALINKLIB<                                               .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP16.CPPUPDTE),(4000,LT))
//*
//CPP17 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ALPALIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AMACLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AMIGLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AMODGEN<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AMSGENP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AMSGENU<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ANFSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ANFSMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ANFSSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ANFSTARB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ANUCLEUS<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSACB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSA0<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSA1<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSBN<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSB0<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSB3<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSCA<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSCD<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSCE<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSC2<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSC5<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSC6<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSD0<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSD7<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSD8<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSG0<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSJSC<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOST3<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOST4<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOSU0<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOSXCF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS00<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS04<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS05<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS06<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS11<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS12<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOS24<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOS26<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AOS28<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.AOS32<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ASAMPLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.ASSFMOD0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.ATSOMAC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.AUADS<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.BDT.INITS<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.BRODCAST<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.CBRDBRM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.CIPLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.CMDLIB<                                                 .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP17.CPPUPDTE),(4000,LT))
//*
//CPP18 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.EXMP.LOGREC<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DAE<                                                    .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DBBLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DFQLLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DFQMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DFQPLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DFSMS.ACDS<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DFSMS.COMMDS<                                           .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DFSMS.SCDS<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DGTCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DGTLLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DGTMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DGTPLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DGTSLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.DGTTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DUMP00<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DUMP01<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.DUMP02<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.GMJD<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.HASPACE<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.HASPCKPT<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.HASPCKP2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.HELP<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.HELPENP<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.HHRFCLST<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.HHRFMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.HHRFPANL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  SYS1.HHRFSKEL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.HRFCLST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.HRFMSG<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.HRFPANL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.HRFSKEL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.IBM.APARMLIB<                                           .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  SYS1.IBM.APROCLIB<                                           .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.IBM.PARMLIB<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.IBM.PROCLIB<                                            .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.IGDVBS1<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.IMAGELIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.IODF00<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.IPLPARM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.ISAMLPA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.LOGR.CDS01<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.LOGR.CDS02<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.LOGR.CDS03<                                             .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.MAN1<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.MAN2<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.MAN3<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.MSGENP<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.MSGENU<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.NFSLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.NFSSAMP<                                                .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP18.CPPUPDTE),(4000,LT))
//*
//CPP19 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.NFSTARB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.NUCLEUS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.PAGEDUMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.PARMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.PROCLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.RACF<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.RACFSEC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SACBCNTL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SADRYLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SAMPLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SAPPDAT2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SAPPDAT4<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AF<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SAPPMOD1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SAPPSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTCLI0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTCMD<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTHELP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTLINK<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTLPA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTMSG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTPNL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SBDTSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBLSCLI0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBLSKEL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBLSMSG0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBLSPNL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBLSTBL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBPXEXEC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBPXMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBPXPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SBPXTENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCBDCLST<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCBDHENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCBDMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCBDPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCBDTEMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCBDTENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SCDRTABL<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNHF<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNIMG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNJCL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNMJPN<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNREXX<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SCUNTBL<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SDFQPSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SDGTPSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SDGTTSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SDMSSVM<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SDMSSVMS<                                               .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP19.CPPUPDTE),(4000,LT))
//*
//CPP20 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SDWWDLPA<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SEDGEXE1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SEDGMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SEDGPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SEDGPSRC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBCLS<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBLINK<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBLPA<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBPWSV<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBT<                                                  .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SERBTENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4USS1<+                                        <==
  SYS1.SFOMDATA<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4USS1<+                                        <==
  SYS1.SFOMHDRS<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4USS1<+                                        <==
  SYS1.SFOMOBJ<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASLINK<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASMIG<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASPARM<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASPNL0<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASSAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SHASSRC<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICECLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICEMENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICEPENU<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICEPROC<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICESAMP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICESLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICESRCE<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SICETLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SIEAHDR.H<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SIFALIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SIOALMOD<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTASGD<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTASN1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTCLIB<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTCMIP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTDAT1<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTDAT2<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.SISTGDMO<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES1<+                                        <==
  SYS1.SVCLIB<                                                 .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.UADS<                                                   .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  SYS1.VTAMLIB<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT2<+                                        <==
  SYS1.VTAMLST<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.WLM.CDS01<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.WLM.CDS02<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.WLM.CDS03<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.WLM.DEF<                                                .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.XCF.CDS01<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.XCF.CDS02<                                              .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP20.CPPUPDTE),(4000,LT))
//*
//CPP21 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  SYS1.XCF.CDS03<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZADBR1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAMAC1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAMAC2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAMAC3<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAMODS<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZARNT1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  TCPIP.AEZARNT2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  TCPIP.AEZARNT3<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZARNT4<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAROE1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  TCPIP.AEZAROE2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB2<+                                        <==
  TCPIP.AEZAROE3<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZASMP1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAXLTD<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAXLTK<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAXLT1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A2<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAXLT2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4DLB1<+                                        <==
  TCPIP.AEZAXLT3<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZACMTX<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADBCX<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADBRM<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADEFS<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADPIL<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADSIL<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADSIM<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZADSIP<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAINST<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZALIBN<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZALNK2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZALPA<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAMENU<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZANCLS<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZANPNL<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAOLDX<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAPENU<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZARNT1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZARNT2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZARNT3<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZARNT4<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAROE1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAROE2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAROE3<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A3<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZARPCL<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZATCP<                                               .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZATCPX<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZATELX<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAXAWL<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A1<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAXLD1<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAXLD2<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAXMLB<                                              .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP21.CPPUPDTE),(4000,LT))
//*
//CPP22 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</*----- UPDATE VOLSERS
UL98AE<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAXTLB<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A4<+                                                       .NU..RU.
 C4RES2<+                                        <==
  TCPIP.SEZAX11L<                                              .NU..RU.
</*----- UPDATE VOLSERS
UL98A0<+                                                       .NU..RU.
 C4CAT1<+                                        <==
  TCPIVP.TCPPARMS<                                             .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP22.CPPUPDTE),(4000,LT))
//*
//CPP23 EXEC PROC=CPPPROC
//SYSIN    DD DATA,DLM='%%'
</********************************************************************
</*----------------ACCOUNT--------------------------------------------
ACCT#<+                                                        .NU..RU.
 ACCT#<+
  JOB<                                                         .NU..RU.
</*----------------PGMRNAME-------------------------------------------
PGMRNAME<+                                                     .NU..RU.
 PROGRMMER<+
  JOB<                                                         .NU..RU.
</*---------------RACF------------------------------------------------
USER=,GROUP=,PASSWORD=,<+                                      .NU..RU.
 USER=RACFUSR,GROUP=RACFGRP,PASSWORD=RACFPWD,<+
 /*RACF*/<                                                     .NU..RU.
</*---------------NOTIFY----------------------------------------------
NOTIFY=,<+                                                     .NU..RU.
 NOTIFY=&SYSUID,<<
</*
</*---------------CLASS-----------------------------------------------
CLASS=A<+                                                      .NU..RU.
 CLASS=A<+
  MSGCLASS<                                                    .NU..RU.
</*---------------MSGCLASS--------------------------------------------
MSGCLASS=X<+                                                   .NU..RU.
 MSGCLASS=X<<
</*---------------JES2/JES3 CONTROL STATEMENT-------------------------
//*<+                                                          .NU..RU.
 //*<+
 /*JCTRL*/<                                                    .NU..RU.
</*
</********************************************************************
</*
</*---------------CHANGE SMF IDENTIFIER      -------------------------
SID(EXMP)<+                                                    .NU..RU.
 SID(MVS1)<<
</*---------------CHANGE SYSPLEX PARAMETER   -------------------------
SYSPLEX  SYSPLEX1<+                                            .NU..RU.
 SYSPLEX  LOCAL<<
</*---------------CHANGE ILMLIB  PARAMETER   -------------------------
</*---------------CHANGE EPHWP00 PARAMETER   -------------------------
EPH.SEPHTAB<+                                                 .NU..RU.
 EPH.SEPHTAB<<
</*
</********************************************************************
</*
</*---------------TARGET SYSTEM MASTER CATALOG------------------------
CATALOG.MVSICFM.VUL98AE<+                                  .NU..RU.
 CATALOG.C14.MASTER<<
</*
</********************************************************************
</*
</*---------------VOLSER OF TARGET SYSTEM'S IPL VOLUME----------------
UL98AE<+                                                   .NU..RU.
 C4RES1<<
</*---------------DEVICE TYPE OF TARGET SYSTEM'S IPL VOLUME-----------
3380<+                                                         .NU..RU.
 3390<+
 RES001<                                                       .NU..RU.
</*
</********************************************************************
</*
</*---------------COMMON PAGE DS--------------------------------------
PAGE.VUL98AE.COMMON<+                                      .NU..RU.
 PAGE.EXMP.COMMON<<
</*---------------LOCAL PAGE DS---------------------------------------
PAGE.VUL98AE.LOCAL1<+                                      .NU..RU.
 PAGE.EXMP.LOCAL1<<
</*---------------PLPA PAGE DS----------------------------------------
PAGE.VUL98AE.PLPA<+                                        .NU..RU.
 PAGE.EXMP.PLPA<<
</********************************************************************
</*
</*---------------COMMON PAGE DS--------------------------------------
PAGE.&SYSNAME..COMMON<+                                       .NU..RU.
 PAGE.EXMP.COMMON<<
</*---------------LOCAL PAGE DS---------------------------------------
PAGE.&SYSNAME..LOCAL1<+                                       .NU..RU.
 PAGE.EXMP.LOCAL1<<
</*---------------PLPA PAGE DS----------------------------------------
PAGE.&SYSNAME..PLPA<+                                         .NU..RU.
 PAGE.EXMP.PLPA<<
</*--------------- LOGREC   DS----------------------------------------
SYS1.&SYSNAME..LOGREC<+                                       .NU..RU.
 SYS1.EXMP.LOGREC<<
</*--------------- ACDS     DS----------------------------------------
ACDS(SYS1.DFSMS.ACDS)<+                                        .NU..RU.
 ACDS(SYS1.DFSMS.ACDS)<<
</*--------------- SCDS     DS----------------------------------------
COMMDS(SYS1.DFSMS.COMMDS)<+                                    .NU..RU.
 COMMDS(SYS1.DFSMS.COMMDS)<<
</*--------------- NEWSYSTEM LOGR DS ---------------------------------
SYS1.LOGR.CDS01<+                                              .NU..RU.
 SYS1.LOGR.CDS01<<
</*--------------- NEWSYSTEM LOGR DS ---------------------------------
SYS1.LOGR.CDS02<+                                              .NU..RU.
 SYS1.LOGR.CDS02<<
</*--------------- NEWSYSTEM LOGR DS ---------------------------------
SYS1.LOGR.CDS03<+                                              .NU..RU.
 SYS1.LOGR.CDS03<<
</*--------------- NEWSYSTEM WLM DS  ---------------------------------
SYS1.WLM.CDS01<+                                               .NU..RU.
 SYS1.WLM.CDS01<<
</*--------------- NEWSYSTEM WLM DS  ---------------------------------
SYS1.WLM.CDS02<+                                               .NU..RU.
 SYS1.WLM.CDS02<<
</*--------------- NEWSYSTEM WLM DS  ---------------------------------
SYS1.WLM.CDS03<+                                               .NU..RU.
 SYS1.WLM.CDS03<<
</*--------------- NEWSYSTEM XCF DS  ---------------------------------
SYS1.XCF.CDS01<+                                               .NU..RU.
 SYS1.XCF.CDS01<<
</*--------------- NEWSYSTEM XCF DS  ---------------------------------
SYS1.XCF.CDS02<+                                               .NU..RU.
 SYS1.XCF.CDS02<<
</*--------------- NEWSYSTEM XCF DS  ---------------------------------
SYS1.XCF.CDS03<+                                               .NU..RU.
 SYS1.XCF.CDS03<<
</*
</*
</********************************************************************
</*
</*---------------VOLSER OF TARGET SYSTEM'S CATALOG VOLUME------------
UL98AE<+                                                    .NU..RU.
 C4CAT1<<
</*---------------DEVICE TYPE OF TARGET SYSTEM'S CATALOG VOLUME-------
3390<+                                                    .NU..RU.
 3390<<
</*
</********************************************************************
</*
</*---------------SYSOUT CLASS----------------------------------------
SYSOUT=*<+                                                     .NU..RU.
 SYSOUT=*<<
</*---------------UNIT TYPE FOR TAPES---------------------------------
UNIT=3400-6<+                                                  .NU..RU.
 UNIT=SYS3480R<<
</*---------------TIME ZONE-------------------------------------------
TIMEZONE W.00.00.00<+                                          .NU..RU.
 TIMEZONE W.04.00.00<<
</*---------------SPOOL VOLUME----------------------------------------
UL98A<+                                                      .NU..RU.
 C4SPL<+
 SPOOL<                                                        .NU..RU.
</*---------------IPCS  VOLUME FOR BLSCDDIR CLIST---------------------
UL98AE<+                                                    .NU..RU.
 C4WRK1<+
 SET VOLUME=UL98AE<                                         .NU..RU.
</*
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP23.CPPUPDTE),(4000,LT))
//*
//*
//CPP24 EXEC PROC=CPPPROC1
//SYSIN    DD DATA,DLM='%%'
</********************************************************************
</*
</*---------------NAME OF DRIVING SYSTEM'S MASTER CATALOG-------------
CATALOG.VSYSCAT<+                                              .NU..RU.
 CATALOG.ZOS.MASTER<<
</*---------------UPDATE PASSWORD FOR DRIVING SYSTEM'S MASTER CATALOG-
PWUPDATE<+                                                     .NU..RU.
 /PWUPDATE<+
 CATALOG.VSYSCAT<                                              .NU..RU.
</*---------------VOLSER OF DRIVING SYSTEM'S CATALOG VOLUME-----------
SYSCAT<+                                                       .NU..RU.
 Z3SYS1<<
</*---------------DEVICE TYPE OF DRIVING SYSTEM'S CATALOG VOLUME------
3380<+                                                         .NU..RU.
 3390<+
 SYSCAT<                                                       .NU..RU.
</********************************************************************
%%
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CPP24.CPPUPDTE),(4000,LT))
//*
//UPDATE   EXEC PGM=IEBUPDTE,PARM=NEW,COND=(4000,LT)
//SYSUT2   DD DISP=SHR,
//            DSN=MASTER.EXMP.PARMLIB
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
>< ADD NAME=LPALST00
SYS1.LPALIB,
CEE.SCEELPA,
EOY.SEOYLPA,
EUVF.SEUVFLPA,
ING.SINGMOD3,
ISF.SISFLPA,
ISP.SISPLPA,
NETVIEW.SCNMLPA1,
SYS1.ISAMLPA,
SYS1.SBDTLPA,
SYS1.SDWWDLPA,
SYS1.SERBLPA,
TCPIP.SEZALPA
>< ADD NAME=PROG00
APF FORMAT(DYNAMIC)
APF ADD
    DSNAME(SYS1.LINKLIB)                                 VOLUME(C4RES1)
APF ADD
    DSNAME(SYS1.LPALIB)                                  VOLUME(C4RES1)
APF ADD
    DSNAME(SYS1.MIGLIB)                                  VOLUME(C4RES1)
APF ADD
    DSNAME(SYS1.CSSLIB)                                  VOLUME(C4RES1)
APF ADD
    DSNAME(EXMP.LINKLIB)                                 VOLUME(C4CAT1)
APF ADD
    DSNAME(EXMP.VTAMLIB)                                 VOLUME(C4CAT1)
APF ADD
    DSNAME(TCPIP.SEZALOAD)                               VOLUME(C4RES2)
APF ADD
    DSNAME(ASM.SASMMOD1)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(CBC.SCBCCMP)                                  VOLUME(C4RES2)
APF ADD
    DSNAME(CBC.SCCNCMP)                                  VOLUME(C4RES2)
APF ADD
    DSNAME(CBC.SCLBDLL)                                  VOLUME(C4RES2)
APF ADD
    DSNAME(CBC.SCLBDLL2)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(CEE.SCEERUN)                                  VOLUME(C4RES1)
APF ADD
    DSNAME(CSF.SCSFMOD0)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(EUVF.SEUVFLNK)                                VOLUME(C4RES2)
APF ADD
    DSNAME(EUVF.SEUVFLPA)                                VOLUME(C4RES2)
APF ADD
    DSNAME(FFST.V120ESA.SEPWMOD1)                        VOLUME(C4RES2)
APF ADD
    DSNAME(FFST.V120ESA.SEPWMOD2)                        VOLUME(C4RES2)
APF ADD
    DSNAME(GLD.SGLDLNK)                                  VOLUME(C4RES2)
APF ADD
    DSNAME(GSK.SGSKLOAD)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ICA.SICALMOD)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ING.SEVIMOD7)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ING.SINGMOD1)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ING.SINGMOD2)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ING.SINGMOD3)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(IOE.SIOELMOD)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ISF.SISFLOAD)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ISP.SISPLOAD)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(ISP.SISPSASC)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.CNMLINK)                              VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.SCNMLNK1)                             VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.SCNMLPA1)                             VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.SEKGLNK1)                             VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.SEKGMOD1)                             VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.SEKGMOD2)                             VOLUME(C4RES2)
APF ADD
    DSNAME(NETVIEW.SEZLLINK)                             VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.CMDLIB)                                  VOLUME(C4RES1)
APF ADD
    DSNAME(SYS1.ISAMLPA)                                 VOLUME(C4RES1)
APF ADD
    DSNAME(SYS1.NFSLIB)                                  VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SBDTCMD)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SBDTLIB)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SBDTLINK)                                VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SDWWDLPA)                                VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SERBLINK)                                VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SHASLINK)                                VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SHASMIG)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SIOALMOD)                                VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.SISTCLIB)                                VOLUME(C4RES2)
APF ADD
    DSNAME(SYS1.VTAMLIB)                                 VOLUME(C4RES2)
APF ADD
    DSNAME(TCPIP.SEZADSIL)                               VOLUME(C4RES2)
APF ADD
    DSNAME(TCPIP.SEZALNK2)                               VOLUME(C4RES2)
APF ADD
    DSNAME(TCPIP.SEZATCP)                                VOLUME(C4RES2)
LNKLST DEFINE NAME(LNKLST00)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.LINKLIB)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.MIGLIB)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.CSSLIB)
LNKLST ADD NAME(LNKLST00) DSN(EXMP.LINKLIB)
LNKLST ADD NAME(LNKLST00) DSN(EXMP.VTAMLIB)
LNKLST ADD NAME(LNKLST00) DSN(TCPIP.SEZALOAD)
LNKLST ADD NAME(LNKLST00) DSN(ASM.SASMMOD1)
LNKLST ADD NAME(LNKLST00) DSN(CBC.SCBCCMP)
LNKLST ADD NAME(LNKLST00) DSN(CBC.SCCNCMP)
LNKLST ADD NAME(LNKLST00) DSN(CBC.SCLBDLL)
LNKLST ADD NAME(LNKLST00) DSN(CBC.SCLBDLL2)
LNKLST ADD NAME(LNKLST00) DSN(CEE.SCEERUN)
LNKLST ADD NAME(LNKLST00) DSN(CEE.SCEERUN2)
LNKLST ADD NAME(LNKLST00) DSN(CSF.SCSFMOD0)
LNKLST ADD NAME(LNKLST00) DSN(EOX.SEPHLOD1)
LNKLST ADD NAME(LNKLST00) DSN(EOY.SEOYLOAD)
LNKLST ADD NAME(LNKLST00) DSN(EUVF.SEUVFLNK)
LNKLST ADD NAME(LNKLST00) DSN(FFST.V120ESA.SEPWMOD2)
LNKLST ADD NAME(LNKLST00) DSN(FFST.V120ESA.SEPWMOD4)
LNKLST ADD NAME(LNKLST00) DSN(GIM.SGIMLMD0)
LNKLST ADD NAME(LNKLST00) DSN(GLD.SGLDLNK)
LNKLST ADD NAME(LNKLST00) DSN(GSK.SGSKLOAD)
LNKLST ADD NAME(LNKLST00) DSN(ICA.SICALMOD)
LNKLST ADD NAME(LNKLST00) DSN(IMO.SIMOMOD1)
LNKLST ADD NAME(LNKLST00) DSN(ING.SEVIMOD7)
LNKLST ADD NAME(LNKLST00) DSN(ING.SINGMOD1)
LNKLST ADD NAME(LNKLST00) DSN(ING.SINGMOD2)
LNKLST ADD NAME(LNKLST00) DSN(IOE.SIOELMOD)
LNKLST ADD NAME(LNKLST00) DSN(ISF.SISFLINK)
LNKLST ADD NAME(LNKLST00) DSN(ISF.SISFLOAD)
LNKLST ADD NAME(LNKLST00) DSN(ISP.SISPLOAD)
LNKLST ADD NAME(LNKLST00) DSN(ISP.SISPSASC)
LNKLST ADD NAME(LNKLST00) DSN(NETVIEW.CNMLINK)
LNKLST ADD NAME(LNKLST00) DSN(NETVIEW.SEKGLNK1)
LNKLST ADD NAME(LNKLST00) DSN(NETVIEW.SEKGMOD1)
LNKLST ADD NAME(LNKLST00) DSN(NETVIEW.SEKGMOD2)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.CMDLIB)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.DGTLLIB)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SBDTCMD)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SBDTLIB)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SBDTLINK)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SCBDHENU)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SERBLINK)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SHASLINK)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SHASMIG)
LNKLST ADD NAME(LNKLST00) DSN(SYS1.SIOALMOD)
LNKLST ACTIVATE NAME(LNKLST00)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,UPDATE),(4000,LT))
//*
//*
//*----------------------------------------------------------------
//*
//* REMOVE ANY REFERENCES TO DATA SETS, THAT WERE NOT RESTORED
//* FROM TAPE, FROM THE IKJACCNT LOGON PROC, AS WELL AS FROM THE
//* ISPPDF AND ISPFENU ALLOCATION CLISTS.
//*
//*----------------------------------------------------------------
//PRCUPD   EXEC PGM=IKJEFT01,DYNAMNBR=99,COND=(4000,LT)
//ISPTABL  DD UNIT=SYSALLDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1,1)),
//            DCB=(RECFM=FB,LRECL=255,BLKSIZE=2550)
//ISPPROF  DD UNIT=SYSALLDA,DISP=(NEW,PASS),SPACE=(TRK,(1,1,1)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)
//ISPWRK1  DD UNIT=SYSALLDA,DISP=(NEW,PASS),SPACE=(TRK,(10,1)),
//            DCB=(LRECL=256,BLKSIZE=2560,RECFM=FB)
//ISPLOG   DD SYSOUT=*,DCB=(RECFM=VA,LRECL=125,BLKSIZE=129)
//*
//ISPMLIB  DD DISP=SHR,DSN=ISP.SISPMENU
//ISPPLIB  DD DISP=SHR,DSN=ISP.SISPPENU
//ISPSLIB  DD DISP=SHR,DSN=ISP.SISPSENU
//ISPTLIB  DD DISP=SHR,DSN=ISP.SISPTENU
//         DD DISP=SHR,DSN=SUPPLIED.SCPPTENU
//SYSEXEC  DD DISP=SHR,DSN=SUPPLIED.EXAMPL.SCPPCENU
//CPPCMDP  DD DISP=SHR,DSN=MASTER.EXMP.CMDPROC
//CPPPROC  DD DISP=SHR,DSN=MASTER.EXMP.PROCLIB
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
   ISPSTART CMD(CPPECMD 111 )
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,PRCUPD),(4000,LT))
//*
./ ADD NAME=B7RESTFS 0114-04350-04350-1300-00106-00106-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*******************************************************************
//* This JOB uses the CPPEHFS exec to restore your HFS filesystem.  *
//*                                                                 *
//* This job must be run from a userid that has the following       *
//* RACF authority.                                                 *
//* 1. UID(0) or READ access to the BPX.SUPERUSER facility class    *
//* 2. READ access to the BPX.FILEATTR.APF and BPX.FILEATTR.PROGCTL *
//*    facility classes.                                            *
//* The following RACF profiles (or equivalent profiles) must exist *
//* in your security database.                                      *
//* 1. Groups - TTY and UUCPG                                       *
//*    Users  - UUCP                                                *
//*                                                                 *
//* NOTE: All SYSTSIN parameters are required and must be in the    *
//*       order specified.                                          *
//*******************************************************************
//STEP1    EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSEXEC  DD  DSN=SUPPLIED.SCPPCENU,DISP=SHR
//SYSTSPRT DD   SYSOUT=*
//SYSTSIN  DD   *
  %CPPEHFS  +
  /Service +
  "//'MASTER.EXMP.HFSFILE(BACKUP)'" +
  / +
  HFS +
  HFSCAT.OMVS.ROOT +
  /etc +
  HFS +
  HFSCAT.OMVS.ETC +
  /var +
  HFS +
  HFSCAT.OMVS.VAR +
  /usr/lpp/java +
  HFS +
  HFSCAT.OMVS.JV390
/*
//NOTOK EXEC  PGM=MAXRETCD,COND=((0,GE,STEP1),(4000,LT))
//*
//*************************************************************
//* This step does the following:
//* 1. Run IEBUPDTE to replace the BPXPRMFS member in your
//*    PARMLIB dataset with the new filesystem structure
//*
//* NOTE: Concatenate this FS member in your IEASYSxx member
//*************************************************************
//BPXS01 EXEC PGM=IEBUPDTE,PARM=NEW,COND=(4000,LT)
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD DSN=MASTER.EXMP.PARMLIB,
//            DISP=SHR
//SYSUT2   DD DSN=MASTER.EXMP.PARMLIB,
//            DISP=SHR
//SYSIN    DD   DATA,DLM='%%'
><    ADD  NAME=BPXPRMFS,LIST=ALL
/*************************************************************/
/*  This member, as specified in IEASYS00, will cause        */
/*  OpenEdition to come up with all filesystems mounted.     */
/*************************************************************/
MOUNT FILESYSTEM('/tmp')         /* TFS for /tmp directory   */
      MOUNTPOINT('/tmp')
         TYPE(TFS)               /* Filesystem type TFS      */
         MODE(RDWR)              /* Mounted for read/write   */
                                 /*                          */
MOUNT FILESYSTEM('/dev')         /* TFS for /dev directory   */
      MOUNTPOINT('/dev')
         TYPE(TFS)               /* Filesystem type TFS      */
         MODE(RDWR)              /* Mounted for read/write   */
         PARM('-s 4')
                                 /*                          */
ROOT     FILESYSTEM('OMVS.ROOT')
                                 /* Root file system         */
         TYPE(HFS)         /* Filesystem type          */
         MODE(RDWR)              /* Mounted for read/write   */
                                 /*                          */
MOUNT FILESYSTEM('OMVS.ETC')
                                 /* DSN for /etc directory   */
      MOUNTPOINT('/etc')
         TYPE(HFS)          /* Filesystem type          */
         MODE(RDWR)              /* Mounted for read/write   */
                                 /*                          */
MOUNT FILESYSTEM('OMVS.VAR')
                                 /* DSN for /var directory   */
      MOUNTPOINT('/var')
         TYPE(HFS)          /* Filesystem type          */
         MODE(RDWR)              /* Mounted for read/write   */
                                 /*                          */
MOUNT FILESYSTEM('OMVS.JV390')
                                 /* HFS for Java             */
      MOUNTPOINT('/usr/lpp/java')
         TYPE(HFS)
         MODE(RDWR)
%%
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,BPXS01),(4000,LT))
//*
./ ADD NAME=C0ADEFUX 0114-04350-04350-1300-00126-00126-00000-HOWTO
z/OS 1.4 UNIX System Services Application Services


For information about placing the shell  and  utilities  in
operational status, see z/OS UNIX System Services Planning,

GA22-7800.


COPYING YOUR EXISTING /ETC AND /VAR DIRECTORIES

If you have existing  /etc  and  /var  directories  on your
driving system,  you  might  want to copy the configuration
and customization data  from  these  directories  into your
target system's /etc and /var directories.

To do so, follow these steps:

1.  Ensure that nothing is  already  mounted at your target
    system's directory  (/Service  is  the  default  name).
    Enter the command  D OMVS,F  to  display  the UNIX file
    system for your order.   If  you find data sets mounted
    at the service directory,  you  can  unmount  the  data
    sets,  or  use  another,  empty, directory for the next
    steps in this procedure.

2.  Mount the target system's  /etc  and  /var  data  sets.
    Here is an example of a job that you can use:

      //STEP1   EXEC PGM=IKJEFT1B,COND=(4000,LT)
      //SYSTSPRT DD   SYSOUT=*
      //SYSTSIN  DD   *
        PROF MSGID WTPMSG
        MKDIR '/Service/etc' MODE(7,5,5)
        MOUNT FILESYSTEM('SSA.OMVS.ETC') +
          MOUNTPOINT('/Service/etc') +
          TYPE(HFS) MODE(RDWR)
        MKDIR '/Service/var' MODE(7,5,5)
        MOUNT FILESYSTEM('SSA.OMVS.VAR') +
          MOUNTPOINT('/Service/var') +
          TYPE(HFS) MODE(RDWR)
      //*

3.  From the OMVS shell, enter the following commands:

      cd /etc
      pax -rwkv -p e . /Service/etc
      cd /var
      pax -rwkv -p e . /Service/var

    where /Service is the  directory  into  which  you  are
    restoring  files.   Note  that  the  commands  in  this
    example include several options, as follows:

    o   The -k option is used to  prevent  the  pax utility
        from overlaying any existing symbolic links.

    o   The -v option is used to display the symbolic links
        and files being copied,  so  that you can determine
        which configuration data is being copied.

4.  Unmount the target system's etc and var data sets.
    Here is an example of a job that you can use:

      //UNMETC  EXEC PGM=IKJEFT1B
      //SYSTSPRT DD SYSOUT=*
      //SYSTSIN  DD   *
        PROF MSGID WTPMSG
        UNMOUNT FILESYSTEM('SSA.OMVS.ETC') IMMEDIATE
        UNMOUNT FILESYSTEM('SSA.OMVS.VAR') IMMEDIATE
      //*

After copying the existing data,  review  the configuration
data for any changed parameters  or  new customization data
that  is  required   for   changed  products.     For  more
information, see the following:

  o z/OS UNIX System Services Planning, GA22-7800
  o z/OS and z/OS.e Planning for Installation, GA22-7504
  o Migration and customization information for individual
    products.


SYNCHRONIZING YOUR SECURITY DATABASES

The installation of z/OS Version 1, Release 4 requires that
certain user IDs (UUCP)  and  group  IDs (TTY and UUCPG) be
defined in your security database.

IBM recommends that you synchronize the  required  user IDs
and group IDs  among  your  security databases.  These user
IDs and group IDs  should  be  duplicated  in  all  of your
security databases,  including  the same unique UID and GID
values in the OMVS segment  on  all  of your driving, test,
and production systems.  Doing so allows you to more easily
move the  HFS data sets  from  test  systems  to production
systems.

If synchronizing your databases  is  not possible for these
entries at this time,  you  must  run  the FOMISCHO job for
each  of  your  systems  after  the  installation  of  this
product.   However,  this  method  is  not  recommended and
should  be  avoided.   Job  FOMISCHO  is  provided  in  the
SAMPLIB data set.


FINDING HELP FOR CUSTOMIZING UNIX SYSTEM SERVICES

For help  with  customizing  UNIX System Services, consider
using the Web-based wizard.   You  can access the wizard at
this URL:

  http://www.ibm.com/servers/eserver/zseries/zos/wizards/

The wizard creates two BPXPRMxx parmlib members;  one  with
system  processing parameters  and  one  with  file  system
statements.   The  wizard  also  creates  a  batch job that
performs the initial RACF  security  set-up for UNIX System
Services.   Users  installing  UNIX System Services for the
first time  can  use  this wizard, as well as current users
who want to verify settings.

The wizard also allows  sysplex  users  to  create a single
BPXPRMxx parmlib member to define all the file systems used
by systems participating in a shared HFS.

./ ADD NAME=C0BDEFDF 0114-04350-04350-1300-00020-00020-00000-HOWTO
z/OS 1.4 DFSMSdfp


PERFORMING PRE-APPLY ACTIONS

In DFSMS, you  cannot  use  your ACDS as a Source Control
Data Set (SCDS).   If  you do so, SMS will fail to start.

If your current ACDS is an SCDS, do the following:

1.  Allocate a new empty ACDS.

2.  Activate an SCDS through the following command:

      SETSMS SCDS(scds_name) ACDS(new_acds_name)

    You can specify  the  name  of  the  old ACDS in SCDS
    format  as  the  source  scds_name  in  this  command
    because the data set is an SCDS.

./ ADD NAME=C0CDFSMP 0114-04350-04350-1300-00067-00057-00000-HOWTO
SETTING UP THE SMP/E ENVIRONMENT

This section  describes  the  jobs  that you use to
set up the SMP/E environment for the target system.

JOB C1LODCSI

The C1LODCSI job unloads the SMP/E CSIs from the RIM tape.
C1LODCSI uses IDCAMS REPRO to copy the CSIs to the target
system CSIs, which you allocated earlier.
C1LODCSI loads all of the zones in your order, including
the JES zones you selected in the JES Element Selection
panel of the installation dialog.
If, during the dialog, you chose to merge JES zones with
the BCP zones, C1LODCSI merges the zones.  When merging
JES2 (and SDSF) with the BCP, C1LODCSI includes a step for
generating the required UCLIN.  This step, RUNUCL, may end
with  a return code  of 8, which  is  acceptable  if  the
subentries already exist.

If C1LODCSI contains an ISPF EDIT step and there is an Initial Macro
specified in the ISPF EDIT default profile, you must concatenate the
library containing the Initial Macro to the SYSEXEC DD for that
jobstep. Otherwise, the step will fail with message "Macro does not
exist - Initial or recovery macro 'macroname' could not
be executed".

C1LODCSI should complete with return code zero.

If you need to rerun the job after the UCLIN step has run
previously, you can expect return code 8.

REVIEWING THE DEFAULTS FOR YOUR SMP/E ENVIRONMENT

Before continuing,  review the  SMP/E  settings that were supplied.
For example:

o   Verify that the  maximum acceptable link-edit return code associated
    with the SMP/E UTILITY option is  acceptable for your  environment.
    In your order, IBM has set this value to 4 (the usual default is 8).
    If you want to change this value, refer to the program directories
    in your order to determine an appropriate setting.
o   IBM does not recommend merging data sets that appear in the SMP/E
    SYSLIB concatenations.  If you did not do so, no action is necessary
    However, if you used the data set merge function to merge any data
    sets in the SMP/E SYSLIB concatenations for any zones in the order,
    you must verify that the concatenations are correct.
    For more information about the correct SYSLIB concatenation,
    see the z/OS Program Directory (under "SMP/E Customization"
    in the chapter on installing Wave 0).  Also, ensure that z/OS
    data sets are first in the concatenation, followed by any
    non-z/OS data sets.
    DDnames added to the SYSLIB concatenations require corresponding
    DDDEF entries in the same zones.

JOB C2UPDDDD

The C2UPDDDD job updates your new CSIs (global, target and DLIB) with the
DDDEFs  for the  newly-allocated SMP/E data sets. C2UPDDDD also removes
the UNIT and VOLSER information  for the  data sets in your new system.
The  C2UPDDDD  job  also  executes  the  REPORT CALLLIBS  command
for the  target zone.   This  command  identifies  and  relinks
load modules  from  your  target system,  which  have  external
references to products and services not included in this order.
Before you run this job, make sure that the  STEPLIB  library  (usually
ssa.SYS1.MIGLIB) is an authorized  library in  the  APF list (PROGxx)
of the driving system PARMLIB.
./ ADD NAME=C1LODCSI 0114-04350-04350-1300-04863-04864-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//C1LODCSI EXEC PGM=IDCAMS,COND=(4000,LT)
//*--------------------------------------------------------------------
//* DOC: REPRO CSI'S FROM THE RIM TAPE TO THE NEWLY ALLOCATED
//*      CSI DATASETS.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 04
//*      STEP RUNUCL MAY GET A 08 WHICH IS ACCEPTABLE.
//*--------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//IN1      DD DISP=(OLD,PASS),UNIT=SYS3480R,
//            VOL=(,RETAIN,SER=R9999A),
//            DCB=(RECFM=VB,LRECL=32756,BLKSIZE=32760),
//            LABEL=(27,SL),
//            DSN=SYS1.OS999999.GLOBAL.CSI
//OUT1     DD DISP=SHR,
//         DSN=PRIME.SMPE.GLOBAL.CSI
//IN3      DD DISP=(OLD,PASS),UNIT=SYS3480R,
//            VOL=(,RETAIN,SER=R9999A),
//            DCB=(RECFM=VB,LRECL=32756,BLKSIZE=32760),
//            LABEL=(29,SL),
//            DSN=SYS1.OS999999.MVS.DLIB.CSI
//OUT3     DD DISP=SHR,
//         DSN=PRIME.SMPE.MVS.DLIB.CSI
//IN2      DD DISP=(OLD,PASS),UNIT=SYS3480R,
//            VOL=(,RETAIN,SER=R9999A),
//            DCB=(RECFM=VB,LRECL=32756,BLKSIZE=32760),
//            LABEL=(28,SL),
//            DSN=SYS1.OS999999.MVS.TARGET.CSI
//OUT2     DD DISP=SHR,
//         DSN=PRIME.SMPE.MVS.TARGET.CSI
//SYSIN    DD *
  REPRO INFILE(IN1) OUTFILE(OUT1) REPLACE
  REPRO INFILE(IN2) OUTFILE(OUT2) REPLACE
  REPRO INFILE(IN3) OUTFILE(OUT3) REPLACE
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,C1LODCSI),(4000,LT))
//*
//*--------------------------------------------------------------------
//* CREATE ZONEINDEXES FOR ALL ZONES, EXCEPT JES AND JES3
//* RENAME ALL ZONES TO FINAL NAME (EXCEPT JES2 AND JES3) IF REQUIRED
//*--------------------------------------------------------------------
//INDEX    EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    UCLIN .
      REP GLOBALZONE ZONEINDEX (
      (MVSD100,PRIME.SMPE.MVS.DLIB.CSI,DLIB)
      (MVST100,PRIME.SMPE.MVS.TARGET.CSI,TARGET)
                                   ).
    ENDUCL .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,INDEX),(4000,LT))
//*
//IMPORT   EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//*--------------------------------------------------------------------
//* IMPORT JES2 AND JES3 ZONES IF REQUIRED
//* JES INSTALLATION OPTIONS
//*--------------------------------------------------------------------
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//INJ2TGT  DD DISP=(OLD,PASS),UNIT=SYS3480R,
//            VOL=(,RETAIN,SER=R9999A),
//            DCB=(RECFM=VB,LRECL=32756,BLKSIZE=32760),
//            LABEL=(39,SL),
//            DSN=SYS1.OS999999.JES2.TARGET.ZONE
//INJ2DLB  DD DISP=(OLD,PASS),UNIT=SYS3480R,
//            VOL=(,RETAIN,SER=R9999A),
//            DCB=(RECFM=VB,LRECL=32756,BLKSIZE=32760),
//            LABEL=(40,SL),
//            DSN=SYS1.OS999999.JES2.DLIB.ZONE
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    UCLIN .
     ADD  GZONE ZINDEX(
      (MVST110,PRIME.SMPE.MVS.TARGET.CSI,TARGET)
      (MVSD110,PRIME.SMPE.MVS.DLIB.CSI,DLIB)
                                    ) .
    ENDUCL .
  SET BDY(MVST110) .
    ZONEIMPORT (MVST110) INFILE(INJ2TGT)
               INTO(MVST110) RELATED(MVSD110) .
  SET BDY(MVSD110) .
    ZONEIMPORT (MVSD110) INFILE(INJ2DLB)
               INTO(MVSD110) RELATED(MVST110) .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,IMPORT),(4000,LT))
//*
//*----------------------------------------------------------------
//* MERGE JES2 AND JES3 ZONES INTO BCP IF REQUIRED
//* JES INSTALLATION OPTIONS
//*----------------------------------------------------------------
//MERGE    EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(MVST100) .
    UCLIN .
      DEL  SYSMOD(HJE1367) CIFREQ(
           (UW65077,UY06072)
                              ) .
      DEL  SYSMOD(HJE2215) CIFREQ(
           (UW65077,UY06073)
                              ) .
      DEL  SYSMOD(HJE2329) CIFREQ(
           (UW65077,UY06070)
                              ) .
      DEL  SYSMOD(HJE2330) CIFREQ(
           (UW65077,UY06071)
                              ) .
    ENDUCL .
  SET BDY(MVSD100) .
    UCLIN .
      DEL  SYSMOD(HJE1367) CIFREQ(
           (UW65077,UY06072)
                              ) .
      DEL  SYSMOD(HJE2215) CIFREQ(
           (UW65077,UY06073)
                              ) .
      DEL  SYSMOD(HJE2329) CIFREQ(
           (UW65077,UY06070)
                              ) .
      DEL  SYSMOD(HJE2330) CIFREQ(
           (UW65077,UY06071)
                              ) .
    ENDUCL .
  SET BDY(MVST100) .
    ZONEMERGE (MVST110) INTO(MVST100)
              CONTENT DEFINITION NOREPLACE .
  SET BDY(MVST110) .
    ZONEDELETE TARGETZONE(MVST110) .
  SET BDY(MVSD100) .
    ZONEMERGE (MVSD110) INTO(MVSD100)
              CONTENT DEFINITION NOREPLACE .
  SET BDY(MVSD110) .
    ZONEDELETE DLIBZONE(MVSD110) .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,MERGE),(4000,LT))
//*
//*----------------------------------------------------------------
//* PERFORM UCLIN
//*----------------------------------------------------------------
//UCLIN    EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(MVST100) .
    UCLIN .
      ADD  SYSMOD(HJE1367) CIFREQ(
           (UW65077,UY06072)
                              ) .
      ADD  SYSMOD(HJE2215) CIFREQ(
           (UW65077,UY06073)
                              ) .
      ADD  SYSMOD(HJE2329) CIFREQ(
           (UW65077,UY06070)
                              ) .
      ADD  SYSMOD(HJE2330) CIFREQ(
           (UW65077,UY06071)
                              ) .
    ENDUCL .
  SET BDY(MVSD100) .
    UCLIN .
      ADD  SYSMOD(HJE1367) CIFREQ(
           (UW65077,UY06072)
                              ) .
      ADD  SYSMOD(HJE2215) CIFREQ(
           (UW65077,UY06073)
                              ) .
      ADD  SYSMOD(HJE2329) CIFREQ(
           (UW65077,UY06070)
                              ) .
      ADD  SYSMOD(HJE2330) CIFREQ(
           (UW65077,UY06071)
                              ) .
    ENDUCL .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,UCLIN),(4000,LT))
//*
//*----------------------------------------------------------------
//* PERFORM UCLIN FOR SDSF FROM PRODUCT SUPPLIED UCLIN
//*
//* NOTE:
//*   A RETURN CODE OF 08 IS ACCEPTABLE ON THIS STEP
//*   IF THE SUBENTRIES ALREADY EXIST.
//*----------------------------------------------------------------
//*
//RUNUCL   EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(MVST100) .
//         DD DSN=MASTER.ISF.SISFJCL(ISFZZUCL),DISP=SHR
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((8,GE,RUNUCL),(4000,LT))
//*
//*--------------------------------------------------------------------
//* REMOVE DELETED JES FMIDS FROM GLOBAL CSI FMID LIST
//* JES INSTALLATION OPTIONS
//*--------------------------------------------------------------------
//DELFMID EXEC PGM=GIMSMP,REGION=0M,COND=(4000,LT)
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
   SET BOUNDARY(GLOBAL).
   UCLIN .
    DEL GLOBALZONE
              FMID (
HJS7707
                    ) .
   ENDUCL .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DELFMID),(4000,LT))
//*
//*--------------------------------------------------------------------
//* REMOVE DELETED JES PROC AND PARMS
//* JES INSTALLATION OPTIONS
//*--------------------------------------------------------------------
//DELPARM   EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD   *
   DELETE MASTER.EXMP.PROCLIB(JES3)
   DELETE MASTER.EXMP.PARMLIB(JES3IN00)
   DELETE MASTER.EXMP.PARMLIB(JES3INFT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DELPARM),(4000,LT))
//*
//*--------------------------------------------------------------------
//* ADD DDDEFs
//*--------------------------------------------------------------------
//CSIUPD  EXEC PGM=GIMSMP,REGION=0M,COND=(4000,LT)
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    UCLIN .
      REP UTILITY(ASMA90)
          NAME(ASMA90)
          PRINT(SYSPRINT)
          RC(0)
          .
      REP OPTIONS(ZOSOPT)
        ASM(ASMA90)
          .
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
      REP TARGETZONE(MVST100) RELATED(MVSD100) .
    ENDUCL .
  SET BDY(MVSD100) .
    UCLIN .
      REP DLIBZONE(MVSD100) RELATED(MVST100) .
    ENDUCL .
  SET BDY(MVSD100) .
    UCLIN .
      REP DDDEF(AAOPEXEC)
          DA(PRIME.AOP.AAOPEXEC)
          SHR .
      REP DDDEF(AAOPHFS)
          DA(PRIME.AOP.AAOPHFS)
          SHR .
      REP DDDEF(AAOPMENU)
          DA(PRIME.AOP.AAOPMENU)
          SHR .
      REP DDDEF(AAOPMOD1)
          DA(PRIME.AOP.AAOPMOD1)
          SHR .
      REP DDDEF(AAOPPENU)
          DA(PRIME.AOP.AAOPPENU)
          SHR .
      REP DDDEF(AASMMAC1)
          DA(MASTER.ASM.AASMMAC1)
          SHR .
      REP DDDEF(AASMMAC2)
          DA(MASTER.ASM.AASMMAC2)
          SHR .
      REP DDDEF(AASMMOD1)
          DA(MASTER.ASM.AASMMOD1)
          SHR .
      REP DDDEF(AASMMOD2)
          DA(MASTER.ASM.AASMMOD2)
          SHR .
      REP DDDEF(AASMPUT2)
          DA(MASTER.ASM.AASMPUT2)
          SHR .
      REP DDDEF(AASMSAM1)
          DA(MASTER.ASM.AASMSAM1)
          SHR .
      REP DDDEF(AASMSAM2)
          DA(MASTER.ASM.AASMSAM2)
          SHR .
      REP DDDEF(AASUACF)
          DA(PRIME.ASU.AASUACF)
          SHR .
      REP DDDEF(AASUCIDL)
          DA(PRIME.ASU.AASUCIDL)
          SHR .
      REP DDDEF(AASUEXEC)
          DA(PRIME.ASU.AASUEXEC)
          SHR .
      REP DDDEF(AASUHDR)
          DA(PRIME.ASU.AASUHDR)
          SHR .
      REP DDDEF(AASUHHDR)
          DA(PRIME.ASU.AASUHHDR)
          SHR .
      REP DDDEF(AASUHLIB)
          DA(PRIME.ASU.AASUHLIB)
          SHR .
      REP DDDEF(AASUHSAM)
          DA(PRIME.ASU.AASUHSAM)
          SHR .
      REP DDDEF(AASUIDL)
          DA(PRIME.ASU.AASUIDL)
          SHR .
      REP DDDEF(AASULINK)
          DA(PRIME.ASU.AASULINK)
          SHR .
      REP DDDEF(AASUMENU)
          DA(PRIME.ASU.AASUMENU)
          SHR .
      REP DDDEF(AASUPENU)
          DA(PRIME.ASU.AASUPENU)
          SHR .
      REP DDDEF(AASUSAMP)
          DA(PRIME.ASU.AASUSAMP)
          SHR .
      REP DDDEF(AASUSTUB)
          DA(PRIME.ASU.AASUSTUB)
          SHR .
      REP DDDEF(AASUTLIB)
          DA(PRIME.ASU.AASUTLIB)
          SHR .
      REP DDDEF(ABPAHFS)
          DA(PRIME.BPA.ABPAHFS)
          SHR .
      REP DDDEF(ACBCCMP)
          DA(MASTER.CBC.ACBCCMP)
          SHR .
      REP DDDEF(ACBCSR1)
          DA(MASTER.CBC.ACBCSR1)
          SHR .
      REP DDDEF(ACCNCMP)
          DA(MASTER.CBC.ACCNCMP)
          SHR .
      REP DDDEF(ACCNSR1)
          DA(MASTER.CBC.ACCNSR1)
          SHR .
      REP DDDEF(ACLBDLL)
          DA(MASTER.CBC.ACLBDLL)
          SHR .
      REP DDDEF(ACLBDLL2)
          DA(MASTER.CBC.ACLBDLL2)
          SHR .
      REP DDDEF(ACLBHFS1)
          DA(MASTER.CBC.ACLBHFS1)
          SHR .
      REP DDDEF(ACLBOBJ)
          DA(MASTER.CBC.ACLBOBJ)
          SHR .
      REP DDDEF(ACLBOBJ2)
          DA(MASTER.CBC.ACLBOBJ2)
          SHR .
      REP DDDEF(ACLBSR1)
          DA(MASTER.CBC.ACLBSR1)
          SHR .
      REP DDDEF(ACLBSR2)
          DA(MASTER.CBC.ACLBSR2)
          SHR .
      REP DDDEF(ACLBSR3)
          DA(MASTER.CBC.ACLBSR3)
          SHR .
      REP DDDEF(ACLBSR4)
          DA(MASTER.CBC.ACLBSR4)
          SHR .
      REP DDDEF(ACLDHFS1)
          DA(MASTER.CBC.ACLDHFS1)
          SHR .
      REP DDDEF(ACLDSR1)
          DA(MASTER.CBC.ACLDSR1)
          SHR .
      REP DDDEF(ACTVMOD)
          DA(MASTER.CBC.ACTVMOD)
          SHR .
      REP DDDEF(ACTVSRC)
          DA(MASTER.CBC.ACTVSRC)
          SHR .
      REP DDDEF(ACDSHFS)
          DA(PRIME.CDS.ACDSHFS)
          SHR .
      REP DDDEF(ACDSLINK)
          DA(PRIME.CDS.ACDSLINK)
          SHR .
      REP DDDEF(ACDSSAMP)
          DA(PRIME.CDS.ACDSSAMP)
          SHR .
      REP DDDEF(AAFHMOD1)
          DA(MASTER.CEE.AAFHMOD1)
          SHR .
      REP DDDEF(AAFHSRC1)
          DA(MASTER.CEE.AAFHSRC1)
          SHR .
      REP DDDEF(ACEEMOD1)
          DA(MASTER.CEE.ACEEMOD1)
          SHR .
      REP DDDEF(ACEEMOD2)
          DA(MASTER.CEE.ACEEMOD2)
          SHR .
      REP DDDEF(ACEESRC1)
          DA(MASTER.CEE.ACEESRC1)
          SHR .
      REP DDDEF(ACEESRC2)
          DA(MASTER.CEE.ACEESRC2)
          SHR .
      REP DDDEF(ACEESRC3)
          DA(MASTER.CEE.ACEESRC3)
          SHR .
      REP DDDEF(AEDCCPP1)
          DA(MASTER.CEE.AEDCCPP1)
          SHR .
      REP DDDEF(AEDCHFS)
          DA(MASTER.CEE.AEDCHFS)
          SHR .
      REP DDDEF(AEDCMOD1)
          DA(MASTER.CEE.AEDCMOD1)
          SHR .
      REP DDDEF(AEDCMOD2)
          DA(MASTER.CEE.AEDCMOD2)
          SHR .
      REP DDDEF(AEDCMSEP)
          DA(MASTER.CEE.AEDCMSEP)
          SHR .
      REP DDDEF(AEDCOBJ1)
          DA(MASTER.CEE.AEDCOBJ1)
          SHR .
      REP DDDEF(AEDCSRC6)
          DA(MASTER.CEE.AEDCSRC6)
          SHR .
      REP DDDEF(AEDCSRC7)
          DA(MASTER.CEE.AEDCSRC7)
          SHR .
      REP DDDEF(AIBMMOD3)
          DA(MASTER.CEE.AIBMMOD3)
          SHR .
      REP DDDEF(AIBMSRC3)
          DA(MASTER.CEE.AIBMSRC3)
          SHR .
      REP DDDEF(AIGZMOD1)
          DA(MASTER.CEE.AIGZMOD1)
          SHR .
      REP DDDEF(AIGZSRC1)
          DA(MASTER.CEE.AIGZSRC1)
          SHR .
      REP DDDEF(ACIMHFS)
          DA(PRIME.CIM.ACIMHFS)
          SHR .
      REP DDDEF(ACIMMOD1)
          DA(PRIME.CIM.ACIMMOD1)
          SHR .
      REP DDDEF(ACIMPLUG)
          DA(PRIME.CIM.ACIMPLUG)
          SHR .
      REP DDDEF(ACMXDBRM)
          DA(PRIME.CMX.ACMXDBRM)
          SHR .
      REP DDDEF(ACMXHFS)
          DA(PRIME.CMX.ACMXHFS)
          SHR .
      REP DDDEF(ACSFCLI0)
          DA(MASTER.CSF.ACSFCLI0)
          SHR .
      REP DDDEF(ACSFHDRS)
          DA(MASTER.CSF.ACSFHDRS)
          SHR .
      REP DDDEF(ACSFMOD0)
          DA(MASTER.CSF.ACSFMOD0)
          SHR .
      REP DDDEF(ACSFMOD1)
          DA(MASTER.CSF.ACSFMOD1)
          SHR .
      REP DDDEF(ACSFMSG0)
          DA(MASTER.CSF.ACSFMSG0)
          SHR .
      REP DDDEF(ACSFOBJ)
          DA(MASTER.CSF.ACSFOBJ)
          SHR .
      REP DDDEF(ACSFPNL0)
          DA(MASTER.CSF.ACSFPNL0)
          SHR .
      REP DDDEF(ACSFSKL0)
          DA(MASTER.CSF.ACSFSKL0)
          SHR .
      REP DDDEF(ACSFTLIB)
          DA(MASTER.CSF.ACSFTLIB)
          SHR .
      REP DDDEF(AECNEXP)
          DA(PRIME.ECN.AECNEXP)
          SHR .
      REP DDDEF(AECNHETC)
          DA(PRIME.ECN.AECNHETC)
          SHR .
      REP DDDEF(AECNHEXP)
          DA(PRIME.ECN.AECNHEXP)
          SHR .
      REP DDDEF(AECNHINC)
          DA(PRIME.ECN.AECNHINC)
          SHR .
      REP DDDEF(AECNHLBR)
          DA(PRIME.ECN.AECNHLBR)
          SHR .
      REP DDDEF(AECNLINK)
          DA(PRIME.ECN.AECNLINK)
          SHR .
      REP DDDEF(AEPHBOK1)
          DA(MASTER.EOX.AEPHBOK1)
          SHR .
      REP DDDEF(AEPHCLB1)
          DA(MASTER.EOX.AEPHCLB1)
          SHR .
      REP DDDEF(AEPHDAT1)
          DA(MASTER.EOX.AEPHDAT1)
          SHR .
      REP DDDEF(AEPHLOD1)
          DA(MASTER.EOX.AEPHLOD1)
          SHR .
      REP DDDEF(AEPHMSG1)
          DA(MASTER.EOX.AEPHMSG1)
          SHR .
      REP DDDEF(AEPHPNL1)
          DA(MASTER.EOX.AEPHPNL1)
          SHR .
      REP DDDEF(AEPHSAM1)
          DA(MASTER.EOX.AEPHSAM1)
          SHR .
      REP DDDEF(AEPHTBL1)
          DA(MASTER.EOX.AEPHTBL1)
          SHR .
      REP DDDEF(AEOXFONT)
          DA(MASTER.EOY.AEOXFONT)
          SHR .
      REP DDDEF(AEOXIENU)
          DA(MASTER.EOY.AEOXIENU)
          SHR .
      REP DDDEF(AEOXOENU)
          DA(MASTER.EOY.AEOXOENU)
          SHR .
      REP DDDEF(AEOX1ENU)
          DA(MASTER.EOY.AEOX1ENU)
          SHR .
      REP DDDEF(AEOX2ENU)
          DA(MASTER.EOY.AEOX2ENU)
          SHR .
      REP DDDEF(AEOX3ENU)
          DA(MASTER.EOY.AEOX3ENU)
          SHR .
      REP DDDEF(AEOX4ENU)
          DA(MASTER.EOY.AEOX4ENU)
          SHR .
      REP DDDEF(AEOYAENU)
          DA(MASTER.EOY.AEOYAENU)
          SHR .
      REP DDDEF(AEOYBENU)
          DA(MASTER.EOY.AEOYBENU)
          SHR .
      REP DDDEF(AEOYCLIB)
          DA(MASTER.EOY.AEOYCLIB)
          SHR .
      REP DDDEF(AEOYGENU)
          DA(MASTER.EOY.AEOYGENU)
          SHR .
      REP DDDEF(AEOYIENU)
          DA(MASTER.EOY.AEOYIENU)
          SHR .
      REP DDDEF(AEOYIPRF)
          DA(MASTER.EOY.AEOYIPRF)
          SHR .
      REP DDDEF(AEOYLENU)
          DA(MASTER.EOY.AEOYLENU)
          SHR .
      REP DDDEF(AEOYLEXS)
          DA(MASTER.EOY.AEOYLEXS)
          SHR .
      REP DDDEF(AEOYLOAD)
          DA(MASTER.EOY.AEOYLOAD)
          SHR .
      REP DDDEF(AEOYMC30)
          DA(MASTER.EOY.AEOYMC30)
          SHR .
      REP DDDEF(AEOYMC40)
          DA(MASTER.EOY.AEOYMC40)
          SHR .
      REP DDDEF(AEOYMENU)
          DA(MASTER.EOY.AEOYMENU)
          SHR .
      REP DDDEF(AEOYOENU)
          DA(MASTER.EOY.AEOYOENU)
          SHR .
      REP DDDEF(AEOYPENU)
          DA(MASTER.EOY.AEOYPENU)
          SHR .
      REP DDDEF(AEOYPROC)
          DA(MASTER.EOY.AEOYPROC)
          SHR .
      REP DDDEF(AEOYSAMP)
          DA(MASTER.EOY.AEOYSAMP)
          SHR .
      REP DDDEF(AEOYSENU)
          DA(MASTER.EOY.AEOYSENU)
          SHR .
      REP DDDEF(AEOYTENU)
          DA(MASTER.EOY.AEOYTENU)
          SHR .
      REP DDDEF(AEOYXENU)
          DA(MASTER.EOY.AEOYXENU)
          SHR .
      REP DDDEF(AEOY1ENU)
          DA(MASTER.EOY.AEOY1ENU)
          SHR .
      REP DDDEF(AEOY2ENU)
          DA(MASTER.EOY.AEOY2ENU)
          SHR .
      REP DDDEF(AEOY4ENU)
          DA(MASTER.EOY.AEOY4ENU)
          SHR .
      REP DDDEF(AEPHBOOK)
          DA(PRIME.EPH.AEPHBOOK)
          SHR .
      REP DDDEF(AEPHCLIB)
          DA(PRIME.EPH.AEPHCLIB)
          SHR .
      REP DDDEF(AEPHGIF)
          DA(PRIME.EPH.AEPHGIF)
          SHR .
      REP DDDEF(AEPHLOAD)
          DA(PRIME.EPH.AEPHLOAD)
          SHR .
      REP DDDEF(AEPHSAMP)
          DA(PRIME.EPH.AEPHSAMP)
          SHR .
      REP DDDEF(AEQAMOD2)
          DA(PRIME.EQAW.AEQAMOD2)
          SHR .
      REP DDDEF(AEQASRC2)
          DA(PRIME.EQAW.AEQASRC2)
          SHR .
      REP DDDEF(AEUVACF)
          DA(PRIME.EUV.AEUVACF)
          SHR .
      REP DDDEF(AEUVDBRM)
          DA(PRIME.EUV.AEUVDBRM)
          SHR .
      REP DDDEF(AEUVEXEC)
          DA(PRIME.EUV.AEUVEXEC)
          SHR .
      REP DDDEF(AEUVEXP)
          DA(PRIME.EUV.AEUVEXP)
          SHR .
      REP DDDEF(AEUVHDCP)
          DA(PRIME.EUV.AEUVHDCP)
          SHR .
      REP DDDEF(AEUVHDR)
          DA(PRIME.EUV.AEUVHDR)
          SHR .
      REP DDDEF(AEUVHDRK)
          DA(PRIME.EUV.AEUVHDRK)
          SHR .
      REP DDDEF(AEUVHETC)
          DA(PRIME.EUV.AEUVHETC)
          SHR .
      REP DDDEF(AEUVHINC)
          DA(PRIME.EUV.AEUVHINC)
          SHR .
      REP DDDEF(AEUVHLBR)
          DA(PRIME.EUV.AEUVHLBR)
          SHR .
      REP DDDEF(AEUVHTCL)
          DA(PRIME.EUV.AEUVHTCL)
          SHR .
      REP DDDEF(AEUVHXMP)
          DA(PRIME.EUV.AEUVHXMP)
          SHR .
      REP DDDEF(AEUVIDL)
          DA(PRIME.EUV.AEUVIDL)
          SHR .
      REP DDDEF(AEUVLIB)
          DA(PRIME.EUV.AEUVLIB)
          SHR .
      REP DDDEF(AEUVLIBK)
          DA(PRIME.EUV.AEUVLIBK)
          SHR .
      REP DDDEF(AEUVLIBS)
          DA(PRIME.EUV.AEUVLIBS)
          SHR .
      REP DDDEF(AEUVLINK)
          DA(PRIME.EUV.AEUVLINK)
          SHR .
      REP DDDEF(AEUVMSG)
          DA(PRIME.EUV.AEUVMSG)
          SHR .
      REP DDDEF(AEUVPNL)
          DA(PRIME.EUV.AEUVPNL)
          SHR .
      REP DDDEF(AEUVPRC)
          DA(PRIME.EUV.AEUVPRC)
          SHR .
      REP DDDEF(AEUVFEXC)
          DA(MASTER.EUVF.AEUVFEXC)
          SHR .
      REP DDDEF(AEUVFEXP)
          DA(MASTER.EUVF.AEUVFEXP)
          SHR .
      REP DDDEF(AEUVFHDR)
          DA(MASTER.EUVF.AEUVFHDR)
          SHR .
      REP DDDEF(AEUVFHFS)
          DA(MASTER.EUVF.AEUVFHFS)
          SHR .
      REP DDDEF(AEUVFLIB)
          DA(MASTER.EUVF.AEUVFLIB)
          SHR .
      REP DDDEF(AEUVFLNK)
          DA(MASTER.EUVF.AEUVFLNK)
          SHR .
      REP DDDEF(AEUVFSAM)
          DA(MASTER.EUVF.AEUVFSAM)
          SHR .
      REP DDDEF(AEPWBENU)
          DA(MASTER.FFST.V120ESA.AEPWBENU)
          SHR .
      REP DDDEF(AEPWMOD1)
          DA(MASTER.FFST.V120ESA.AEPWMOD1)
          SHR .
      REP DDDEF(AEPWSRC1)
          DA(MASTER.FFST.V120ESA.AEPWSRC1)
          SHR .
      REP DDDEF(AADMCDA)
          DA(MASTER.GDDM.AADMCDA)
          SHR .
      REP DDDEF(AADMCFO)
          DA(MASTER.GDDM.AADMCFO)
          SHR .
      REP DDDEF(AADMDAT)
          DA(MASTER.GDDM.AADMDAT)
          SHR .
      REP DDDEF(AADMGDF)
          DA(MASTER.GDDM.AADMGDF)
          SHR .
      REP DDDEF(AADMIMG)
          DA(MASTER.GDDM.AADMIMG)
          SHR .
      REP DDDEF(AADMMAP)
          DA(MASTER.GDDM.AADMMAP)
          SHR .
      REP DDDEF(AADMMOD)
          DA(MASTER.GDDM.AADMMOD)
          SHR .
      REP DDDEF(AADMMSG)
          DA(MASTER.GDDM.AADMMSG)
          SHR .
      REP DDDEF(AADMOPS)
          DA(MASTER.GDDM.AADMOPS)
          SHR .
      REP DDDEF(AADMPCF)
          DA(MASTER.GDDM.AADMPCF)
          SHR .
      REP DDDEF(AADMPNL)
          DA(MASTER.GDDM.AADMPNL)
          SHR .
      REP DDDEF(AADMSAM)
          DA(MASTER.GDDM.AADMSAM)
          SHR .
      REP DDDEF(AADMSYM)
          DA(MASTER.GDDM.AADMSYM)
          SHR .
      REP DDDEF(AGIMCLS0)
          DA(MASTER.GIM.AGIMCLS0)
          SHR .
      REP DDDEF(AGIMMENU)
          DA(MASTER.GIM.AGIMMENU)
          SHR .
      REP DDDEF(AGIMPENU)
          DA(MASTER.GIM.AGIMPENU)
          SHR .
      REP DDDEF(AGIMSENU)
          DA(MASTER.GIM.AGIMSENU)
          SHR .
      REP DDDEF(AGIMTENU)
          DA(MASTER.GIM.AGIMTENU)
          SHR .
      REP DDDEF(AGLDEXEC)
          DA(MASTER.GLD.AGLDEXEC)
          SHR .
      REP DDDEF(AGLDEXPC)
          DA(MASTER.GLD.AGLDEXPC)
          SHR .
      REP DDDEF(AGLDHCLI)
          DA(MASTER.GLD.AGLDHCLI)
          SHR .
      REP DDDEF(AGLDHDRC)
          DA(MASTER.GLD.AGLDHDRC)
          SHR .
      REP DDDEF(AGLDHFS)
          DA(MASTER.GLD.AGLDHFS)
          SHR .
      REP DDDEF(AGLDLNK)
          DA(MASTER.GLD.AGLDLNK)
          SHR .
      REP DDDEF(AGLDSAMP)
          DA(MASTER.GLD.AGLDSAMP)
          SHR .
      REP DDDEF(AGSKHFS)
          DA(MASTER.GSK.AGSKHFS)
          SHR .
      REP DDDEF(AGSKLINK)
          DA(MASTER.GSK.AGSKLINK)
          SHR .
      REP DDDEF(AGSKSAMP)
          DA(MASTER.GSK.AGSKSAMP)
          SHR .
      REP DDDEF(AEEQINST)
          DA(PRIME.HCM.AEEQINST)
          SHR .
      REP DDDEF(AICAHETC)
          DA(MASTER.ICA.AICAHETC)
          SHR .
      REP DDDEF(AICAHLBR)
          DA(MASTER.ICA.AICAHLBR)
          SHR .
      REP DDDEF(AICAHSAM)
          DA(MASTER.ICA.AICAHSAM)
          SHR .
      REP DDDEF(AICAHSCR)
          DA(MASTER.ICA.AICAHSCR)
          SHR .
      REP DDDEF(AICALINK)
          DA(MASTER.ICA.AICALINK)
          SHR .
      REP DDDEF(AICAPROC)
          DA(MASTER.ICA.AICAPROC)
          SHR .
      REP DDDEF(AICASAMP)
          DA(MASTER.ICA.AICASAMP)
          SHR .
      REP DDDEF(AIMOHFS1)
          DA(MASTER.IMO.AIMOHFS1)
          SHR .
      REP DDDEF(AIMOJCL1)
          DA(MASTER.IMO.AIMOJCL1)
          SHR .
      REP DDDEF(AIMOMOD1)
          DA(MASTER.IMO.AIMOMOD1)
          SHR .
      REP DDDEF(AIMWEMOD)
          DA(PRIME.IMW.AIMWEMOD)
          SHR .
      REP DDDEF(AIMWHENU)
          DA(PRIME.IMW.AIMWHENU)
          SHR .
      REP DDDEF(AIMWSAM1)
          DA(PRIME.IMW.AIMWSAM1)
          SHR .
      REP DDDEF(AEVIMOD6)
          DA(MASTER.ING.AEVIMOD6)
          SHR .
      REP DDDEF(AEVIMOD7)
          DA(MASTER.ING.AEVIMOD7)
          SHR .
      REP DDDEF(AEVIMOD8)
          DA(MASTER.ING.AEVIMOD8)
          SHR .
      REP DDDEF(AINGIMOD)
          DA(MASTER.ING.AINGIMOD)
          SHR .
      REP DDDEF(AINGIMSG)
          DA(MASTER.ING.AINGIMSG)
          SHR .
      REP DDDEF(AINGINST)
          DA(MASTER.ING.AINGINST)
          SHR .
      REP DDDEF(AINGIPDB)
          DA(MASTER.ING.AINGIPDB)
          SHR .
      REP DDDEF(AINGIPNL)
          DA(MASTER.ING.AINGIPNL)
          SHR .
      REP DDDEF(AINGIREX)
          DA(MASTER.ING.AINGIREX)
          SHR .
      REP DDDEF(AINGISKL)
          DA(MASTER.ING.AINGISKL)
          SHR .
      REP DDDEF(AINGITBL)
          DA(MASTER.ING.AINGITBL)
          SHR .
      REP DDDEF(AINGMODC)
          DA(MASTER.ING.AINGMODC)
          SHR .
      REP DDDEF(AINGMOD1)
          DA(MASTER.ING.AINGMOD1)
          SHR .
      REP DDDEF(AINGMOD2)
          DA(MASTER.ING.AINGMOD2)
          SHR .
      REP DDDEF(AINGNMSG)
          DA(MASTER.ING.AINGNMSG)
          SHR .
      REP DDDEF(AINGNPNL)
          DA(MASTER.ING.AINGNPNL)
          SHR .
      REP DDDEF(AINGNPRF)
          DA(MASTER.ING.AINGNPRF)
          SHR .
      REP DDDEF(AINGNPRM)
          DA(MASTER.ING.AINGNPRM)
          SHR .
      REP DDDEF(AINGNREX)
          DA(MASTER.ING.AINGNREX)
          SHR .
      REP DDDEF(AINGPWS1)
          DA(MASTER.ING.AINGPWS1)
          SHR .
      REP DDDEF(AINGSAMP)
          DA(MASTER.ING.AINGSAMP)
          SHR .
      REP DDDEF(AINGSRC)
          DA(MASTER.ING.AINGSRC)
          SHR .
      REP DDDEF(AIOAIBIN)
          DA(PRIME.IOA.AIOAIBIN)
          SHR .
      REP DDDEF(AIOAJAVA)
          DA(PRIME.IOA.AIOAJAVA)
          SHR .
      REP DDDEF(AIOALMOD)
          DA(PRIME.IOA.AIOALMOD)
          SHR .
      REP DDDEF(AIOAMMOD)
          DA(PRIME.IOA.AIOAMMOD)
          SHR .
      REP DDDEF(AIOASAMP)
          DA(PRIME.IOA.AIOASAMP)
          SHR .
      REP DDDEF(AIOEEXEC)
          DA(MASTER.IOE.AIOEEXEC)
          SHR .
      REP DDDEF(AIOEHLIB)
          DA(MASTER.IOE.AIOEHLIB)
          SHR .
      REP DDDEF(AIOEHSAM)
          DA(MASTER.IOE.AIOEHSAM)
          SHR .
      REP DDDEF(AIOEHSHL)
          DA(MASTER.IOE.AIOEHSHL)
          SHR .
      REP DDDEF(AIOEHSRC)
          DA(MASTER.IOE.AIOEHSRC)
          SHR .
      REP DDDEF(AIOELMOD)
          DA(MASTER.IOE.AIOELMOD)
          SHR .
      REP DDDEF(AIOEMSGE)
          DA(MASTER.IOE.AIOEMSGE)
          SHR .
      REP DDDEF(AIOEPNLE)
          DA(MASTER.IOE.AIOEPNLE)
          SHR .
      REP DDDEF(AIOEPROC)
          DA(MASTER.IOE.AIOEPROC)
          SHR .
      REP DDDEF(AIOESAMP)
          DA(MASTER.IOE.AIOESAMP)
          SHR .
      REP DDDEF(AISFEXEC)
          DA(MASTER.ISF.AISFEXEC)
          SHR .
      REP DDDEF(AISFHELP)
          DA(MASTER.ISF.AISFHELP)
          SHR .
      REP DDDEF(AISFJCL)
          DA(MASTER.ISF.AISFJCL)
          SHR .
      REP DDDEF(AISFLINK)
          DA(MASTER.ISF.AISFLINK)
          SHR .
      REP DDDEF(AISFLOAD)
          DA(MASTER.ISF.AISFLOAD)
          SHR .
      REP DDDEF(AISFMLIB)
          DA(MASTER.ISF.AISFMLIB)
          SHR .
      REP DDDEF(AISFPLIB)
          DA(MASTER.ISF.AISFPLIB)
          SHR .
      REP DDDEF(AISFSLIB)
          DA(MASTER.ISF.AISFSLIB)
          SHR .
      REP DDDEF(AISFSRC)
          DA(MASTER.ISF.AISFSRC)
          SHR .
      REP DDDEF(AISFTLIB)
          DA(MASTER.ISF.AISFTLIB)
          SHR .
      REP DDDEF(AISPALIB)
          DA(MASTER.ISP.AISPALIB)
          SHR .
      REP DDDEF(AISPCLIB)
          DA(MASTER.ISP.AISPCLIB)
          SHR .
      REP DDDEF(AISPEXEC)
          DA(MASTER.ISP.AISPEXEC)
          SHR .
      REP DDDEF(AISPGENU)
          DA(MASTER.ISP.AISPGENU)
          SHR .
      REP DDDEF(AISPGMLI)
          DA(MASTER.ISP.AISPGMLI)
          SHR .
      REP DDDEF(AISPGUI)
          DA(MASTER.ISP.AISPGUI)
          SHR .
      REP DDDEF(AISPHELP)
          DA(MASTER.ISP.AISPHELP)
          SHR .
      REP DDDEF(AISPMACS)
          DA(MASTER.ISP.AISPMACS)
          SHR .
      REP DDDEF(AISPMENU)
          DA(MASTER.ISP.AISPMENU)
          SHR .
      REP DDDEF(AISPMOD1)
          DA(MASTER.ISP.AISPMOD1)
          SHR .
      REP DDDEF(AISPPENU)
          DA(MASTER.ISP.AISPPENU)
          SHR .
      REP DDDEF(AISPSAMP)
          DA(MASTER.ISP.AISPSAMP)
          SHR .
      REP DDDEF(AISPSASC)
          DA(MASTER.ISP.AISPSASC)
          SHR .
      REP DDDEF(AISPSENU)
          DA(MASTER.ISP.AISPSENU)
          SHR .
      REP DDDEF(AISPSLIB)
          DA(MASTER.ISP.AISPSLIB)
          SHR .
      REP DDDEF(AISPTENU)
          DA(MASTER.ISP.AISPTENU)
          SHR .
      REP DDDEF(AAJVSMP1)
          DA(PRIME.JAVA.AAJVSMP1)
          SHR .
      REP DDDEF(AAJVS390)
          DA(PRIME.JAVA.AAJVS390)
          SHR .
      REP DDDEF(ABNJPNL1)
          DA(MASTER.NETVIEW.ABNJPNL1)
          SHR .
      REP DDDEF(ABNJPNL2)
          DA(MASTER.NETVIEW.ABNJPNL2)
          SHR .
      REP DDDEF(ABNJSRC1)
          DA(MASTER.NETVIEW.ABNJSRC1)
          SHR .
      REP DDDEF(ACNMCLST)
          DA(MASTER.NETVIEW.ACNMCLST)
          SHR .
      REP DDDEF(ACNMINST)
          DA(MASTER.NETVIEW.ACNMINST)
          SHR .
      REP DDDEF(ACNMLINK)
          DA(MASTER.NETVIEW.ACNMLINK)
          SHR .
      REP DDDEF(ACNMMAC1)
          DA(MASTER.NETVIEW.ACNMMAC1)
          SHR .
      REP DDDEF(ACNMPNL1)
          DA(MASTER.NETVIEW.ACNMPNL1)
          SHR .
      REP DDDEF(ACNMSAMP)
          DA(MASTER.NETVIEW.ACNMSAMP)
          SHR .
      REP DDDEF(ADSIMSG1)
          DA(MASTER.NETVIEW.ADSIMSG1)
          SHR .
      REP DDDEF(ADSIOPEN)
          DA(MASTER.NETVIEW.ADSIOPEN)
          SHR .
      REP DDDEF(ADSIPARM)
          DA(MASTER.NETVIEW.ADSIPARM)
          SHR .
      REP DDDEF(ADSIPRF)
          DA(MASTER.NETVIEW.ADSIPRF)
          SHR .
      REP DDDEF(ADUIMSG1)
          DA(MASTER.NETVIEW.ADUIMSG1)
          SHR .
      REP DDDEF(AEKGCAS1)
          DA(MASTER.NETVIEW.AEKGCAS1)
          SHR .
      REP DDDEF(AEKGLANG)
          DA(MASTER.NETVIEW.AEKGLANG)
          SHR .
      REP DDDEF(AEKGLUTB)
          DA(MASTER.NETVIEW.AEKGLUTB)
          SHR .
      REP DDDEF(AEKGMOD1)
          DA(MASTER.NETVIEW.AEKGMOD1)
          SHR .
      REP DDDEF(AEKGPNL1)
          DA(MASTER.NETVIEW.AEKGPNL1)
          SHR .
      REP DDDEF(AEKGSMP1)
          DA(MASTER.NETVIEW.AEKGSMP1)
          SHR .
      REP DDDEF(AEZLCLST)
          DA(MASTER.NETVIEW.AEZLCLST)
          SHR .
      REP DDDEF(AEZLINST)
          DA(MASTER.NETVIEW.AEZLINST)
          SHR .
      REP DDDEF(AEZLLINK)
          DA(MASTER.NETVIEW.AEZLLINK)
          SHR .
      REP DDDEF(AEZLPNLU)
          DA(MASTER.NETVIEW.AEZLPNLU)
          SHR .
      REP DDDEF(AEZLSAMP)
          DA(MASTER.NETVIEW.AEZLSAMP)
          SHR .
      REP DDDEF(AFLBDAT1)
          DA(MASTER.NETVIEW.AFLBDAT1)
          SHR .
      REP DDDEF(ANVULIB)
          DA(MASTER.NETVIEW.ANVULIB)
          SHR .
      REP DDDEF(AACBCNTL)
          DA(MASTER.SYS1.AACBCNTL)
          SHR .
      REP DDDEF(AADFMAC1)
          DA(MASTER.SYS1.AADFMAC1)
          SHR .
      REP DDDEF(AADRLIB)
          DA(MASTER.SYS1.AADRLIB)
          SHR .
      REP DDDEF(AADRYLIB)
          DA(MASTER.SYS1.AADRYLIB)
          SHR .
      REP DDDEF(AAPPDAT2)
          DA(MASTER.SYS1.AAPPDAT2)
          SHR .
      REP DDDEF(AAPPDAT4)
          DA(MASTER.SYS1.AAPPDAT4)
          SHR .
      REP DDDEF(AAPPMOD1)
          DA(MASTER.SYS1.AAPPMOD1)
          SHR .
      REP DDDEF(AAPPMOD2)
          DA(MASTER.SYS1.AAPPMOD2)
          SHR .
      REP DDDEF(AAPPSAMP)
          DA(MASTER.SYS1.AAPPSAMP)
          SHR .
      REP DDDEF(ABDTCLI0)
          DA(MASTER.SYS1.ABDTCLI0)
          SHR .
      REP DDDEF(ABDTHELP)
          DA(MASTER.SYS1.ABDTHELP)
          SHR .
      REP DDDEF(ABDTMAC)
          DA(MASTER.SYS1.ABDTMAC)
          SHR .
      REP DDDEF(ABDTMOD)
          DA(MASTER.SYS1.ABDTMOD)
          SHR .
      REP DDDEF(ABDTMSG)
          DA(MASTER.SYS1.ABDTMSG)
          SHR .
      REP DDDEF(ABDTPNL0)
          DA(MASTER.SYS1.ABDTPNL0)
          SHR .
      REP DDDEF(ABDTSAMP)
          DA(MASTER.SYS1.ABDTSAMP)
          SHR .
      REP DDDEF(ABLSCLI0)
          DA(MASTER.SYS1.ABLSCLI0)
          SHR .
      REP DDDEF(ABLSKEL0)
          DA(MASTER.SYS1.ABLSKEL0)
          SHR .
      REP DDDEF(ABLSMSG0)
          DA(MASTER.SYS1.ABLSMSG0)
          SHR .
      REP DDDEF(ABLSPNL0)
          DA(MASTER.SYS1.ABLSPNL0)
          SHR .
      REP DDDEF(ABLSTBL0)
          DA(MASTER.SYS1.ABLSTBL0)
          SHR .
      REP DDDEF(ABMFMOD0)
          DA(MASTER.SYS1.ABMFMOD0)
          SHR .
      REP DDDEF(ABPXEXEC)
          DA(MASTER.SYS1.ABPXEXEC)
          SHR .
      REP DDDEF(ABPXMENU)
          DA(MASTER.SYS1.ABPXMENU)
          SHR .
      REP DDDEF(ABPXMOD1)
          DA(MASTER.SYS1.ABPXMOD1)
          SHR .
      REP DDDEF(ABPXPENU)
          DA(MASTER.SYS1.ABPXPENU)
          SHR .
      REP DDDEF(ABPXSPC)
          DA(MASTER.SYS1.ABPXSPC)
          SHR .
      REP DDDEF(ABPXTENU)
          DA(MASTER.SYS1.ABPXTENU)
          SHR .
      REP DDDEF(ACBDCLST)
          DA(MASTER.SYS1.ACBDCLST)
          SHR .
      REP DDDEF(ACBDEHFS)
          DA(MASTER.SYS1.ACBDEHFS)
          SHR .
      REP DDDEF(ACBDHENU)
          DA(MASTER.SYS1.ACBDHENU)
          SHR .
      REP DDDEF(ACBDMENU)
          DA(MASTER.SYS1.ACBDMENU)
          SHR .
      REP DDDEF(ACBDMOD1)
          DA(MASTER.SYS1.ACBDMOD1)
          SHR .
      REP DDDEF(ACBDMOD2)
          DA(MASTER.SYS1.ACBDMOD2)
          SHR .
      REP DDDEF(ACBDPENU)
          DA(MASTER.SYS1.ACBDPENU)
          SHR .
      REP DDDEF(ACBDTEMP)
          DA(MASTER.SYS1.ACBDTEMP)
          SHR .
      REP DDDEF(ACBDTENU)
          DA(MASTER.SYS1.ACBDTENU)
          SHR .
      REP DDDEF(ACBRDBRM)
          DA(MASTER.SYS1.ACBRDBRM)
          SHR .
      REP DDDEF(ACBRMOD0)
          DA(MASTER.SYS1.ACBRMOD0)
          SHR .
      REP DDDEF(ACDMMOD0)
          DA(MASTER.SYS1.ACDMMOD0)
          SHR .
      REP DDDEF(ACDRMODS)
          DA(MASTER.SYS1.ACDRMODS)
          SHR .
      REP DDDEF(ACDRTABL)
          DA(MASTER.SYS1.ACDRTABL)
          SHR .
      REP DDDEF(ACLMMOD0)
          DA(MASTER.SYS1.ACLMMOD0)
          SHR .
      REP DDDEF(ACMDLIB)
          DA(MASTER.SYS1.ACMDLIB)
          SHR .
      REP DDDEF(ACSSLIB)
          DA(MASTER.SYS1.ACSSLIB)
          SHR .
      REP DDDEF(ACUNHF)
          DA(MASTER.SYS1.ACUNHF)
          SHR .
      REP DDDEF(ACUNIMG)
          DA(MASTER.SYS1.ACUNIMG)
          SHR .
      REP DDDEF(ACUNJCL)
          DA(MASTER.SYS1.ACUNJCL)
          SHR .
      REP DDDEF(ACUNMAC)
          DA(MASTER.SYS1.ACUNMAC)
          SHR .
      REP DDDEF(ACUNMENU)
          DA(MASTER.SYS1.ACUNMENU)
          SHR .
      REP DDDEF(ACUNMJPN)
          DA(MASTER.SYS1.ACUNMJPN)
          SHR .
      REP DDDEF(ACUNMOD)
          DA(MASTER.SYS1.ACUNMOD)
          SHR .
      REP DDDEF(ACUNREXX)
          DA(MASTER.SYS1.ACUNREXX)
          SHR .
      REP DDDEF(ACUNSAMP)
          DA(MASTER.SYS1.ACUNSAMP)
          SHR .
      REP DDDEF(ACUNTBL)
          DA(MASTER.SYS1.ACUNTBL)
          SHR .
      REP DDDEF(ADBBLIB)
          DA(MASTER.SYS1.ADBBLIB)
          SHR .
      REP DDDEF(ADFPMOD0)
          DA(MASTER.SYS1.ADFPMOD0)
          SHR .
      REP DDDEF(ADFQMLIB)
          DA(MASTER.SYS1.ADFQMLIB)
          SHR .
      REP DDDEF(ADFQPLIB)
          DA(MASTER.SYS1.ADFQPLIB)
          SHR .
      REP DDDEF(ADFQPSRC)
          DA(MASTER.SYS1.ADFQPSRC)
          SHR .
      REP DDDEF(ADGTCLIB)
          DA(MASTER.SYS1.ADGTCLIB)
          SHR .
      REP DDDEF(ADGTLLIB)
          DA(MASTER.SYS1.ADGTLLIB)
          SHR .
      REP DDDEF(ADGTMLIB)
          DA(MASTER.SYS1.ADGTMLIB)
          SHR .
      REP DDDEF(ADGTPLIB)
          DA(MASTER.SYS1.ADGTPLIB)
          SHR .
      REP DDDEF(ADGTPSRC)
          DA(MASTER.SYS1.ADGTPSRC)
          SHR .
      REP DDDEF(ADGTSLIB)
          DA(MASTER.SYS1.ADGTSLIB)
          SHR .
      REP DDDEF(ADGTTLIB)
          DA(MASTER.SYS1.ADGTTLIB)
          SHR .
      REP DDDEF(ADGTTSRC)
          DA(MASTER.SYS1.ADGTTSRC)
          SHR .
      REP DDDEF(ADMSSVM)
          DA(MASTER.SYS1.ADMSSVM)
          SHR .
      REP DDDEF(AEDGEXE1)
          DA(MASTER.SYS1.AEDGEXE1)
          SHR .
      REP DDDEF(AEDGMENU)
          DA(MASTER.SYS1.AEDGMENU)
          SHR .
      REP DDDEF(AEDGMOD1)
          DA(MASTER.SYS1.AEDGMOD1)
          SHR .
      REP DDDEF(AEDGPENU)
          DA(MASTER.SYS1.AEDGPENU)
          SHR .
      REP DDDEF(AEDGPSRC)
          DA(MASTER.SYS1.AEDGPSRC)
          SHR .
      REP DDDEF(AEDGSRC1)
          DA(MASTER.SYS1.AEDGSRC1)
          SHR .
      REP DDDEF(AERBCLS)
          DA(MASTER.SYS1.AERBCLS)
          SHR .
      REP DDDEF(AERBMAC1)
          DA(MASTER.SYS1.AERBMAC1)
          SHR .
      REP DDDEF(AERBMENU)
          DA(MASTER.SYS1.AERBMENU)
          SHR .
      REP DDDEF(AERBMOD1)
          DA(MASTER.SYS1.AERBMOD1)
          SHR .
      REP DDDEF(AERBPENU)
          DA(MASTER.SYS1.AERBPENU)
          SHR .
      REP DDDEF(AERBPWSV)
          DA(MASTER.SYS1.AERBPWSV)
          SHR .
      REP DDDEF(AERBT)
          DA(MASTER.SYS1.AERBT)
          SHR .
      REP DDDEF(AERBTENU)
          DA(MASTER.SYS1.AERBTENU)
          SHR .
      REP DDDEF(AFOMDATA)
          DA(MASTER.SYS1.AFOMDATA)
          SHR .
      REP DDDEF(AFOMHDRS)
          DA(MASTER.SYS1.AFOMHDRS)
          SHR .
      REP DDDEF(AFOMHFS)
          DA(MASTER.SYS1.AFOMHFS)
          SHR .
      REP DDDEF(AFOMMOD1)
          DA(MASTER.SYS1.AFOMMOD1)
          SHR .
      REP DDDEF(AFOMOBJ)
          DA(MASTER.SYS1.AFOMOBJ)
          SHR .
      REP DDDEF(AGDEMOD0)
          DA(MASTER.SYS1.AGDEMOD0)
          SHR .
      REP DDDEF(AGENLIB)
          DA(MASTER.SYS1.AGENLIB)
          SHR .
      REP DDDEF(AGFTAJL1)
          DA(MASTER.SYS1.AGFTAJL1)
          SHR .
      REP DDDEF(AGFTAMD1)
          DA(MASTER.SYS1.AGFTAMD1)
          SHR .
      REP DDDEF(AGFUMOD1)
          DA(MASTER.SYS1.AGFUMOD1)
          SHR .
      REP DDDEF(AHASMAC)
          DA(MASTER.SYS1.AHASMAC)
          SHR .
      REP DDDEF(AHASMENU)
          DA(MASTER.SYS1.AHASMENU)
          SHR .
      REP DDDEF(AHASMOD)
          DA(MASTER.SYS1.AHASMOD)
          SHR .
      REP DDDEF(AHASPARM)
          DA(MASTER.SYS1.AHASPARM)
          SHR .
      REP DDDEF(AHASPNL0)
          DA(MASTER.SYS1.AHASPNL0)
          SHR .
      REP DDDEF(AHASSAMP)
          DA(MASTER.SYS1.AHASSAMP)
          SHR .
      REP DDDEF(AHASSRC)
          DA(MASTER.SYS1.AHASSRC)
          SHR .
      REP DDDEF(AHELP)
          DA(MASTER.SYS1.AHELP)
          SHR .
      REP DDDEF(AHELPENP)
          DA(MASTER.SYS1.AHELPENP)
          SHR .
      REP DDDEF(AICECLIB)
          DA(MASTER.SYS1.AICECLIB)
          SHR .
      REP DDDEF(AICELIB)
          DA(MASTER.SYS1.AICELIB)
          SHR .
      REP DDDEF(AICEMENU)
          DA(MASTER.SYS1.AICEMENU)
          SHR .
      REP DDDEF(AICEPENU)
          DA(MASTER.SYS1.AICEPENU)
          SHR .
      REP DDDEF(AICESAMP)
          DA(MASTER.SYS1.AICESAMP)
          SHR .
      REP DDDEF(AICESLIB)
          DA(MASTER.SYS1.AICESLIB)
          SHR .
      REP DDDEF(AICESRCE)
          DA(MASTER.SYS1.AICESRCE)
          SHR .
      REP DDDEF(AICETLIB)
          DA(MASTER.SYS1.AICETLIB)
          SHR .
      REP DDDEF(AICEUSER)
          DA(MASTER.SYS1.AICEUSER)
          SHR .
      REP DDDEF(AICQAB)
          DA(MASTER.SYS1.AICQAB)
          SHR .
      REP DDDEF(AICQILIB)
          DA(MASTER.SYS1.AICQILIB)
          SHR .
      REP DDDEF(AICQMAC1)
          DA(MASTER.SYS1.AICQMAC1)
          SHR .
      REP DDDEF(AICQMAC2)
          DA(MASTER.SYS1.AICQMAC2)
          SHR .
      REP DDDEF(AICQMAC3)
          DA(MASTER.SYS1.AICQMAC3)
          SHR .
      REP DDDEF(AICQMAC4)
          DA(MASTER.SYS1.AICQMAC4)
          SHR .
      REP DDDEF(AICQMAC5)
          DA(MASTER.SYS1.AICQMAC5)
          SHR .
      REP DDDEF(AIEAHDR)
          DA(MASTER.SYS1.AIEAHDR)
          SHR .
      REP DDDEF(AIEWMOD0)
          DA(MASTER.SYS1.AIEWMOD0)
          SHR .
      REP DDDEF(AIFALIB)
          DA(MASTER.SYS1.AIFALIB)
          SHR .
      REP DDDEF(AIGDVBS1)
          DA(MASTER.SYS1.AIGDVBS1)
          SHR .
      REP DDDEF(AIKYHFS)
          DA(MASTER.SYS1.AIKYHFS)
          SHR .
      REP DDDEF(AIMAGE)
          DA(MASTER.SYS1.AIMAGE)
          SHR .
      REP DDDEF(AIMFMOD0)
          DA(MASTER.SYS1.AIMFMOD0)
          SHR .
      REP DDDEF(AINDLMD)
          DA(MASTER.SYS1.AINDLMD)
          SHR .
      REP DDDEF(AISTASGD)
          DA(MASTER.SYS1.AISTASGD)
          SHR .
      REP DDDEF(AISTASN1)
          DA(MASTER.SYS1.AISTASN1)
          SHR .
      REP DDDEF(AISTCMIP)
          DA(MASTER.SYS1.AISTCMIP)
          SHR .
      REP DDDEF(AISTDAT1)
          DA(MASTER.SYS1.AISTDAT1)
          SHR .
      REP DDDEF(AISTDAT2)
          DA(MASTER.SYS1.AISTDAT2)
          SHR .
      REP DDDEF(AISTGDMO)
          DA(MASTER.SYS1.AISTGDMO)
          SHR .
      REP DDDEF(AISTMAC1)
          DA(MASTER.SYS1.AISTMAC1)
          SHR .
      REP DDDEF(AITYHFS)
          DA(MASTER.SYS1.AITYHFS)
          SHR .
      REP DDDEF(ALINKLIB)
          DA(MASTER.SYS1.ALINKLIB)
          SHR .
      REP DDDEF(ALPALIB)
          DA(MASTER.SYS1.ALPALIB)
          SHR .
      REP DDDEF(AMACLIB)
          DA(MASTER.SYS1.AMACLIB)
          SHR .
      REP DDDEF(AMIGLIB)
          DA(MASTER.SYS1.AMIGLIB)
          SHR .
      REP DDDEF(AMODGEN)
          DA(MASTER.SYS1.AMODGEN)
          SHR .
      REP DDDEF(AMSGENP)
          DA(MASTER.SYS1.AMSGENP)
          SHR .
      REP DDDEF(AMSGENU)
          DA(MASTER.SYS1.AMSGENU)
          SHR .
      REP DDDEF(ANFSLIB)
          DA(MASTER.SYS1.ANFSLIB)
          SHR .
      REP DDDEF(ANFSMAC)
          DA(MASTER.SYS1.ANFSMAC)
          SHR .
      REP DDDEF(ANFSSAMP)
          DA(MASTER.SYS1.ANFSSAMP)
          SHR .
      REP DDDEF(ANFSTARB)
          DA(MASTER.SYS1.ANFSTARB)
          SHR .
      REP DDDEF(ANUCLEUS)
          DA(MASTER.SYS1.ANUCLEUS)
          SHR .
      REP DDDEF(AOSACB)
          DA(MASTER.SYS1.AOSACB)
          SHR .
      REP DDDEF(AOSA0)
          DA(MASTER.SYS1.AOSA0)
          SHR .
      REP DDDEF(AOSA1)
          DA(MASTER.SYS1.AOSA1)
          SHR .
      REP DDDEF(AOSBN)
          DA(MASTER.SYS1.AOSBN)
          SHR .
      REP DDDEF(AOSB0)
          DA(MASTER.SYS1.AOSB0)
          SHR .
      REP DDDEF(AOSB3)
          DA(MASTER.SYS1.AOSB3)
          SHR .
      REP DDDEF(AOSCA)
          DA(MASTER.SYS1.AOSCA)
          SHR .
      REP DDDEF(AOSCD)
          DA(MASTER.SYS1.AOSCD)
          SHR .
      REP DDDEF(AOSCE)
          DA(MASTER.SYS1.AOSCE)
          SHR .
      REP DDDEF(AOSC2)
          DA(MASTER.SYS1.AOSC2)
          SHR .
      REP DDDEF(AOSC5)
          DA(MASTER.SYS1.AOSC5)
          SHR .
      REP DDDEF(AOSC6)
          DA(MASTER.SYS1.AOSC6)
          SHR .
      REP DDDEF(AOSD0)
          DA(MASTER.SYS1.AOSD0)
          SHR .
      REP DDDEF(AOSD7)
          DA(MASTER.SYS1.AOSD7)
          SHR .
      REP DDDEF(AOSD8)
          DA(MASTER.SYS1.AOSD8)
          SHR .
      REP DDDEF(AOSG0)
          DA(MASTER.SYS1.AOSG0)
          SHR .
      REP DDDEF(AOSJSC)
          DA(MASTER.SYS1.AOSJSC)
          SHR .
      REP DDDEF(AOST3)
          DA(MASTER.SYS1.AOST3)
          SHR .
      REP DDDEF(AOST4)
          DA(MASTER.SYS1.AOST4)
          SHR .
      REP DDDEF(AOSU0)
          DA(MASTER.SYS1.AOSU0)
          SHR .
      REP DDDEF(AOSXCF)
          DA(MASTER.SYS1.AOSXCF)
          SHR .
      REP DDDEF(AOS00)
          DA(MASTER.SYS1.AOS00)
          SHR .
      REP DDDEF(AOS04)
          DA(MASTER.SYS1.AOS04)
          SHR .
      REP DDDEF(AOS05)
          DA(MASTER.SYS1.AOS05)
          SHR .
      REP DDDEF(AOS06)
          DA(MASTER.SYS1.AOS06)
          SHR .
      REP DDDEF(AOS11)
          DA(MASTER.SYS1.AOS11)
          SHR .
      REP DDDEF(AOS12)
          DA(MASTER.SYS1.AOS12)
          SHR .
      REP DDDEF(AOS24)
          DA(MASTER.SYS1.AOS24)
          SHR .
      REP DDDEF(AOS26)
          DA(MASTER.SYS1.AOS26)
          SHR .
      REP DDDEF(AOS28)
          DA(MASTER.SYS1.AOS28)
          SHR .
      REP DDDEF(AOS32)
          DA(MASTER.SYS1.AOS32)
          SHR .
      REP DDDEF(ASAMPLIB)
          DA(MASTER.SYS1.ASAMPLIB)
          SHR .
      REP DDDEF(ASSFMOD0)
          DA(MASTER.SYS1.ASSFMOD0)
          SHR .
      REP DDDEF(ATSOMAC)
          DA(MASTER.SYS1.ATSOMAC)
          SHR .
      REP DDDEF(AUADS)
          DA(MASTER.SYS1.AUADS)
          SHR .
      REP DDDEF(CIPLIB)
          DA(MASTER.SYS1.CIPLIB)
          SHR .
      REP DDDEF(HHRFCLST)
          DA(MASTER.SYS1.HHRFCLST)
          SHR .
      REP DDDEF(HHRFMSG)
          DA(MASTER.SYS1.HHRFMSG)
          SHR .
      REP DDDEF(HHRFPANL)
          DA(MASTER.SYS1.HHRFPANL)
          SHR .
      REP DDDEF(HHRFSKEL)
          DA(MASTER.SYS1.HHRFSKEL)
          SHR .
      REP DDDEF(APARMLIB)
          DA(MASTER.SYS1.IBM.APARMLIB)
          SHR .
      REP DDDEF(APROCLIB)
          DA(MASTER.SYS1.IBM.APROCLIB)
          SHR .
      REP DDDEF(AEZADBR1)
          DA(MASTER.TCPIP.AEZADBR1)
          SHR .
      REP DDDEF(AEZAMAC1)
          DA(MASTER.TCPIP.AEZAMAC1)
          SHR .
      REP DDDEF(AEZAMAC2)
          DA(MASTER.TCPIP.AEZAMAC2)
          SHR .
      REP DDDEF(AEZAMAC3)
          DA(MASTER.TCPIP.AEZAMAC3)
          SHR .
      REP DDDEF(AEZAMODS)
          DA(MASTER.TCPIP.AEZAMODS)
          SHR .
      REP DDDEF(AEZARNT1)
          DA(MASTER.TCPIP.AEZARNT1)
          SHR .
      REP DDDEF(AEZARNT2)
          DA(MASTER.TCPIP.AEZARNT2)
          SHR .
      REP DDDEF(AEZARNT3)
          DA(MASTER.TCPIP.AEZARNT3)
          SHR .
      REP DDDEF(AEZARNT4)
          DA(MASTER.TCPIP.AEZARNT4)
          SHR .
      REP DDDEF(AEZAROE1)
          DA(MASTER.TCPIP.AEZAROE1)
          SHR .
      REP DDDEF(AEZAROE2)
          DA(MASTER.TCPIP.AEZAROE2)
          SHR .
      REP DDDEF(AEZAROE3)
          DA(MASTER.TCPIP.AEZAROE3)
          SHR .
      REP DDDEF(AEZASMP1)
          DA(MASTER.TCPIP.AEZASMP1)
          SHR .
      REP DDDEF(AEZAXLTD)
          DA(MASTER.TCPIP.AEZAXLTD)
          SHR .
      REP DDDEF(AEZAXLTK)
          DA(MASTER.TCPIP.AEZAXLTK)
          SHR .
      REP DDDEF(AEZAXLT1)
          DA(MASTER.TCPIP.AEZAXLT1)
          SHR .
      REP DDDEF(AEZAXLT2)
          DA(MASTER.TCPIP.AEZAXLT2)
          SHR .
      REP DDDEF(AEZAXLT3)
          DA(MASTER.TCPIP.AEZAXLT3)
          SHR .
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
      REP DDDEF(AAOPEXEC)
          DA(PRIME.AOP.AAOPEXEC)
          SHR .
      REP DDDEF(AAOPHFS)
          DA(PRIME.AOP.AAOPHFS)
          SHR .
      REP DDDEF(AAOPMENU)
          DA(PRIME.AOP.AAOPMENU)
          SHR .
      REP DDDEF(AAOPMOD1)
          DA(PRIME.AOP.AAOPMOD1)
          SHR .
      REP DDDEF(AAOPPENU)
          DA(PRIME.AOP.AAOPPENU)
          SHR .
      REP DDDEF(SAOPEXEC)
          DA(PRIME.AOP.SAOPEXEC)
          SHR .
      REP DDDEF(SAOPMENU)
          DA(PRIME.AOP.SAOPMENU)
          SHR .
      REP DDDEF(SAOPPENU)
          DA(PRIME.AOP.SAOPPENU)
          SHR .
      REP DDDEF(AASMMAC1)
          DA(MASTER.ASM.AASMMAC1)
          SHR .
      REP DDDEF(AASMMAC2)
          DA(MASTER.ASM.AASMMAC2)
          SHR .
      REP DDDEF(AASMMOD1)
          DA(MASTER.ASM.AASMMOD1)
          SHR .
      REP DDDEF(AASMMOD2)
          DA(MASTER.ASM.AASMMOD2)
          SHR .
      REP DDDEF(AASMPUT2)
          DA(MASTER.ASM.AASMPUT2)
          SHR .
      REP DDDEF(AASMSAM1)
          DA(MASTER.ASM.AASMSAM1)
          SHR .
      REP DDDEF(AASMSAM2)
          DA(MASTER.ASM.AASMSAM2)
          SHR .
      REP DDDEF(SASMMAC1)
          DA(MASTER.ASM.SASMMAC1)
          SHR .
      REP DDDEF(SASMMAC2)
          DA(MASTER.ASM.SASMMAC2)
          SHR .
      REP DDDEF(SASMMOD1)
          DA(MASTER.ASM.SASMMOD1)
          SHR .
      REP DDDEF(SASMMOD2)
          DA(MASTER.ASM.SASMMOD2)
          SHR .
      REP DDDEF(SASMPUT2)
          DA(MASTER.ASM.SASMPUT2)
          SHR .
      REP DDDEF(SASMSAM1)
          DA(MASTER.ASM.SASMSAM1)
          SHR .
      REP DDDEF(SASMSAM2)
          DA(MASTER.ASM.SASMSAM2)
          SHR .
      REP DDDEF(AASUACF)
          DA(PRIME.ASU.AASUACF)
          SHR .
      REP DDDEF(AASUCIDL)
          DA(PRIME.ASU.AASUCIDL)
          SHR .
      REP DDDEF(AASUEXEC)
          DA(PRIME.ASU.AASUEXEC)
          SHR .
      REP DDDEF(AASUHDR)
          DA(PRIME.ASU.AASUHDR)
          SHR .
      REP DDDEF(AASUHHDR)
          DA(PRIME.ASU.AASUHHDR)
          SHR .
      REP DDDEF(AASUHLIB)
          DA(PRIME.ASU.AASUHLIB)
          SHR .
      REP DDDEF(AASUHSAM)
          DA(PRIME.ASU.AASUHSAM)
          SHR .
      REP DDDEF(AASUIDL)
          DA(PRIME.ASU.AASUIDL)
          SHR .
      REP DDDEF(AASULINK)
          DA(PRIME.ASU.AASULINK)
          SHR .
      REP DDDEF(AASUMENU)
          DA(PRIME.ASU.AASUMENU)
          SHR .
      REP DDDEF(AASUPENU)
          DA(PRIME.ASU.AASUPENU)
          SHR .
      REP DDDEF(AASUSAMP)
          DA(PRIME.ASU.AASUSAMP)
          SHR .
      REP DDDEF(AASUSTUB)
          DA(PRIME.ASU.AASUSTUB)
          SHR .
      REP DDDEF(AASUTLIB)
          DA(PRIME.ASU.AASUTLIB)
          SHR .
      REP DDDEF(SASUACF)
          DA(PRIME.ASU.SASUACF)
          SHR .
      REP DDDEF(SASUCIDL)
          DA(PRIME.ASU.SASUCIDL)
          SHR .
      REP DDDEF(SASUEXEC)
          DA(PRIME.ASU.SASUEXEC)
          SHR .
      REP DDDEF(SASUHDR)
          DA(PRIME.ASU.SASUHDR)
          SHR .
      REP DDDEF(SASUIDL)
          DA(PRIME.ASU.SASUIDL)
          SHR .
      REP DDDEF(SASUMENU)
          DA(PRIME.ASU.SASUMENU)
          SHR .
      REP DDDEF(SASUPENU)
          DA(PRIME.ASU.SASUPENU)
          SHR .
      REP DDDEF(SASUSAMP)
          DA(PRIME.ASU.SASUSAMP)
          SHR .
      REP DDDEF(SASUSTUB)
          DA(PRIME.ASU.SASUSTUB)
          SHR .
      REP DDDEF(SASUTLIB)
          DA(PRIME.ASU.SASUTLIB)
          SHR .
      REP DDDEF(ABPAHFS)
          DA(PRIME.BPA.ABPAHFS)
          SHR .
      REP DDDEF(ACBCCMP)
          DA(MASTER.CBC.ACBCCMP)
          SHR .
      REP DDDEF(ACBCSR1)
          DA(MASTER.CBC.ACBCSR1)
          SHR .
      REP DDDEF(ACCNCMP)
          DA(MASTER.CBC.ACCNCMP)
          SHR .
      REP DDDEF(ACCNSR1)
          DA(MASTER.CBC.ACCNSR1)
          SHR .
      REP DDDEF(ACLBDLL)
          DA(MASTER.CBC.ACLBDLL)
          SHR .
      REP DDDEF(ACLBDLL2)
          DA(MASTER.CBC.ACLBDLL2)
          SHR .
      REP DDDEF(ACLBHFS1)
          DA(MASTER.CBC.ACLBHFS1)
          SHR .
      REP DDDEF(ACLBOBJ)
          DA(MASTER.CBC.ACLBOBJ)
          SHR .
      REP DDDEF(ACLBOBJ2)
          DA(MASTER.CBC.ACLBOBJ2)
          SHR .
      REP DDDEF(ACLBSR1)
          DA(MASTER.CBC.ACLBSR1)
          SHR .
      REP DDDEF(ACLBSR2)
          DA(MASTER.CBC.ACLBSR2)
          SHR .
      REP DDDEF(ACLBSR3)
          DA(MASTER.CBC.ACLBSR3)
          SHR .
      REP DDDEF(ACLBSR4)
          DA(MASTER.CBC.ACLBSR4)
          SHR .
      REP DDDEF(ACLDHFS1)
          DA(MASTER.CBC.ACLDHFS1)
          SHR .
      REP DDDEF(ACLDSR1)
          DA(MASTER.CBC.ACLDSR1)
          SHR .
      REP DDDEF(ACTVMOD)
          DA(MASTER.CBC.ACTVMOD)
          SHR .
      REP DDDEF(ACTVSRC)
          DA(MASTER.CBC.ACTVSRC)
          SHR .
      REP DDDEF(SCBCCMP)
          DA(MASTER.CBC.SCBCCMP)
          SHR .
      REP DDDEF(SCBCDOC)
          DA(MASTER.CBC.SCBCDOC)
          SHR .
      REP DDDEF(SCBCIMG)
          DA(MASTER.CBC.SCBCIMG)
          SHR .
      REP DDDEF(SCBCJCL)
          DA(MASTER.CBC.SCBCJCL)
          SHR .
      REP DDDEF(SCBCPNL)
          DA(MASTER.CBC.SCBCPNL)
          SHR .
      REP DDDEF(SCBCPRC)
          DA(MASTER.CBC.SCBCPRC)
          SHR .
      REP DDDEF(SCBCSAM)
          DA(MASTER.CBC.SCBCSAM)
          SHR .
      REP DDDEF(SCBCSKL)
          DA(MASTER.CBC.SCBCSKL)
          SHR .
      REP DDDEF(SCBCUTL)
          DA(MASTER.CBC.SCBCUTL)
          SHR .
      REP DDDEF(SCCNCMP)
          DA(MASTER.CBC.SCCNCMP)
          SHR .
      REP DDDEF(SCCNDOC)
          DA(MASTER.CBC.SCCNDOC)
          SHR .
      REP DDDEF(SCCNIMG)
          DA(MASTER.CBC.SCCNIMG)
          SHR .
      REP DDDEF(SCCNJCL)
          DA(MASTER.CBC.SCCNJCL)
          SHR .
      REP DDDEF(SCCNPNL)
          DA(MASTER.CBC.SCCNPNL)
          SHR .
      REP DDDEF(SCCNPRC)
          DA(MASTER.CBC.SCCNPRC)
          SHR .
      REP DDDEF(SCCNSAM)
          DA(MASTER.CBC.SCCNSAM)
          SHR .
      REP DDDEF(SCCNSKL)
          DA(MASTER.CBC.SCCNSKL)
          SHR .
      REP DDDEF(SCCNUTL)
          DA(MASTER.CBC.SCCNUTL)
          SHR .
      REP DDDEF(SCLBCPP)
          DA(MASTER.CBC.SCLBCPP)
          SHR .
      REP DDDEF(SCLBCPP2)
          DA(MASTER.CBC.SCLBCPP2)
          SHR .
      REP DDDEF(SCLBDLL)
          DA(MASTER.CBC.SCLBDLL)
          SHR .
      REP DDDEF(SCLBDLL2)
          DA(MASTER.CBC.SCLBDLL2)
          SHR .
      REP DDDEF(SCLBHC)
          DA(MASTER.CBC.SCLBH.C)
          SHR .
      REP DDDEF(SCLBHH)
          DA(MASTER.CBC.SCLBH.H)
          SHR .
      REP DDDEF(SCLBHPP)
          DA(MASTER.CBC.SCLBH.HPP)
          SHR .
      REP DDDEF(SCLBHI)
          DA(MASTER.CBC.SCLBH.INL)
          SHR .
      REP DDDEF(SCLBJCL)
          DA(MASTER.CBC.SCLBJCL)
          SHR .
      REP DDDEF(SCLBSID)
          DA(MASTER.CBC.SCLBSID)
          SHR .
      REP DDDEF(SCLDJCL)
          DA(MASTER.CBC.SCLDJCL)
          SHR .
      REP DDDEF(SCTVJCL)
          DA(MASTER.CBC.SCTVJCL)
          SHR .
      REP DDDEF(SCTVMOD)
          DA(MASTER.CBC.SCTVMOD)
          SHR .
      REP DDDEF(ACDSHFS)
          DA(PRIME.CDS.ACDSHFS)
          SHR .
      REP DDDEF(ACDSLINK)
          DA(PRIME.CDS.ACDSLINK)
          SHR .
      REP DDDEF(ACDSSAMP)
          DA(PRIME.CDS.ACDSSAMP)
          SHR .
      REP DDDEF(SCDSSAMP)
          DA(PRIME.CDS.SCDSSAMP)
          SHR .
      REP DDDEF(AAFHMOD1)
          DA(MASTER.CEE.AAFHMOD1)
          SHR .
      REP DDDEF(AAFHSRC1)
          DA(MASTER.CEE.AAFHSRC1)
          SHR .
      REP DDDEF(ACEEMOD1)
          DA(MASTER.CEE.ACEEMOD1)
          SHR .
      REP DDDEF(ACEEMOD2)
          DA(MASTER.CEE.ACEEMOD2)
          SHR .
      REP DDDEF(ACEESRC1)
          DA(MASTER.CEE.ACEESRC1)
          SHR .
      REP DDDEF(ACEESRC2)
          DA(MASTER.CEE.ACEESRC2)
          SHR .
      REP DDDEF(ACEESRC3)
          DA(MASTER.CEE.ACEESRC3)
          SHR .
      REP DDDEF(AEDCCPP1)
          DA(MASTER.CEE.AEDCCPP1)
          SHR .
      REP DDDEF(AEDCHFS)
          DA(MASTER.CEE.AEDCHFS)
          SHR .
      REP DDDEF(AEDCMOD1)
          DA(MASTER.CEE.AEDCMOD1)
          SHR .
      REP DDDEF(AEDCMOD2)
          DA(MASTER.CEE.AEDCMOD2)
          SHR .
      REP DDDEF(AEDCMSEP)
          DA(MASTER.CEE.AEDCMSEP)
          SHR .
      REP DDDEF(AEDCOBJ1)
          DA(MASTER.CEE.AEDCOBJ1)
          SHR .
      REP DDDEF(AEDCSRC6)
          DA(MASTER.CEE.AEDCSRC6)
          SHR .
      REP DDDEF(AEDCSRC7)
          DA(MASTER.CEE.AEDCSRC7)
          SHR .
      REP DDDEF(AIBMMOD3)
          DA(MASTER.CEE.AIBMMOD3)
          SHR .
      REP DDDEF(AIBMSRC3)
          DA(MASTER.CEE.AIBMSRC3)
          SHR .
      REP DDDEF(AIGZMOD1)
          DA(MASTER.CEE.AIGZMOD1)
          SHR .
      REP DDDEF(AIGZSRC1)
          DA(MASTER.CEE.AIGZSRC1)
          SHR .
      REP DDDEF(SAFHFORT)
          DA(MASTER.CEE.SAFHFORT)
          SHR .
      REP DDDEF(SCEEBIND)
          DA(MASTER.CEE.SCEEBIND)
          SHR .
      REP DDDEF(SCEEBND2)
          DA(MASTER.CEE.SCEEBND2)
          SHR .
      REP DDDEF(SCEECICS)
          DA(MASTER.CEE.SCEECICS)
          SHR .
      REP DDDEF(SCEECLST)
          DA(MASTER.CEE.SCEECLST)
          SHR .
      REP DDDEF(SCEECMAP)
          DA(MASTER.CEE.SCEECMAP)
          SHR .
      REP DDDEF(SCEECPP)
          DA(MASTER.CEE.SCEECPP)
          SHR .
      REP DDDEF(SCEEGXLT)
          DA(MASTER.CEE.SCEEGXLT)
          SHR .
      REP DDDEF(SCEEH)
          DA(MASTER.CEE.SCEEH)
          SHR .
      REP DDDEF(SCEEHARP)
          DA(MASTER.CEE.SCEEH.ARPA.H)
          SHR .
      REP DDDEF(SCEEHH)
          DA(MASTER.CEE.SCEEH.H)
          SHR .
      REP DDDEF(SCEEHNET)
          DA(MASTER.CEE.SCEEH.NET.H)
          SHR .
      REP DDDEF(SCEEHNEI)
          DA(MASTER.CEE.SCEEH.NETINET.H)
          SHR .
      REP DDDEF(SCEEHSYS)
          DA(MASTER.CEE.SCEEH.SYS.H)
          SHR .
      REP DDDEF(SCEEHT)
          DA(MASTER.CEE.SCEEH.T)
          SHR .
      REP DDDEF(SCEELIB)
          DA(MASTER.CEE.SCEELIB)
          SHR .
      REP DDDEF(PLIBASE)
          DA(MASTER.CEE.SCEELKED)
          SHR .
      REP DDDEF(SCEELKED)
          DA(MASTER.CEE.SCEELKED)
          SHR .
      REP DDDEF(SEDCBASE)
          DA(MASTER.CEE.SCEELKED)
          SHR .
      REP DDDEF(SIBMBASE)
          DA(MASTER.CEE.SCEELKED)
          SHR .
      REP DDDEF(SIBMLINK)
          DA(MASTER.CEE.SCEELKED)
          SHR .
      REP DDDEF(SCEELKEX)
          DA(MASTER.CEE.SCEELKEX)
          SHR .
      REP DDDEF(SCEELOCL)
          DA(MASTER.CEE.SCEELOCL)
          SHR .
      REP DDDEF(SCEELOCX)
          DA(MASTER.CEE.SCEELOCX)
          SHR .
      REP DDDEF(SCEELPA)
          DA(MASTER.CEE.SCEELPA)
          SHR .
      REP DDDEF(SCEEMAC)
          DA(MASTER.CEE.SCEEMAC)
          SHR .
      REP DDDEF(SCEEMSGP)
          DA(MASTER.CEE.SCEEMSGP)
          SHR .
      REP DDDEF(SCEEOBJ)
          DA(MASTER.CEE.SCEEOBJ)
          SHR .
      REP DDDEF(SCEEPROC)
          DA(MASTER.CEE.SCEEPROC)
          SHR .
      REP DDDEF(SCEERTLS)
          DA(MASTER.CEE.SCEERTLS)
          SHR .
      REP DDDEF(SCEERUN)
          DA(MASTER.CEE.SCEERUN)
          SHR .
      REP DDDEF(SCEERUN2)
          DA(MASTER.CEE.SCEERUN2)
          SHR .
      REP DDDEF(SCEESAMP)
          DA(MASTER.CEE.SCEESAMP)
          SHR .
      REP DDDEF(SCEESPC)
          DA(MASTER.CEE.SCEESPC)
          SHR .
      REP DDDEF(SCEESPCO)
          DA(MASTER.CEE.SCEESPCO)
          SHR .
      REP DDDEF(SCEEUMAP)
          DA(MASTER.CEE.SCEEUMAP)
          SHR .
      REP DDDEF(SCEEUTBL)
          DA(MASTER.CEE.SCEEUTBL)
          SHR .
      REP DDDEF(SIBMCALL)
          DA(MASTER.CEE.SIBMCALL)
          SHR .
      REP DDDEF(SIBMCAL2)
          DA(MASTER.CEE.SIBMCAL2)
          SHR .
      REP DDDEF(SIBMMATH)
          DA(MASTER.CEE.SIBMMATH)
          SHR .
      REP DDDEF(SIBMTASK)
          DA(MASTER.CEE.SIBMTASK)
          SHR .
      REP DDDEF(ACIMHFS)
          DA(PRIME.CIM.ACIMHFS)
          SHR .
      REP DDDEF(ACIMMOD1)
          DA(PRIME.CIM.ACIMMOD1)
          SHR .
      REP DDDEF(ACIMPLUG)
          DA(PRIME.CIM.ACIMPLUG)
          SHR .
      REP DDDEF(SCIMXML)
          DA(PRIME.CIM.SCIMXML)
          SHR .
      REP DDDEF(ACMXDBRM)
          DA(PRIME.CMX.ACMXDBRM)
          SHR .
      REP DDDEF(ACMXHFS)
          DA(PRIME.CMX.ACMXHFS)
          SHR .
      REP DDDEF(SCMXDBRM)
          DA(PRIME.CMX.SCMXDBRM)
          SHR .
      REP DDDEF(ACSFCLI0)
          DA(MASTER.CSF.ACSFCLI0)
          SHR .
      REP DDDEF(ACSFHDRS)
          DA(MASTER.CSF.ACSFHDRS)
          SHR .
      REP DDDEF(ACSFMOD0)
          DA(MASTER.CSF.ACSFMOD0)
          SHR .
      REP DDDEF(ACSFMOD1)
          DA(MASTER.CSF.ACSFMOD1)
          SHR .
      REP DDDEF(ACSFMSG0)
          DA(MASTER.CSF.ACSFMSG0)
          SHR .
      REP DDDEF(ACSFOBJ)
          DA(MASTER.CSF.ACSFOBJ)
          SHR .
      REP DDDEF(ACSFPNL0)
          DA(MASTER.CSF.ACSFPNL0)
          SHR .
      REP DDDEF(ACSFSKL0)
          DA(MASTER.CSF.ACSFSKL0)
          SHR .
      REP DDDEF(ACSFTLIB)
          DA(MASTER.CSF.ACSFTLIB)
          SHR .
      REP DDDEF(SCSFCLI0)
          DA(MASTER.CSF.SCSFCLI0)
          SHR .
      REP DDDEF(SCSFHDRS)
          DA(MASTER.CSF.SCSFHDRS)
          SHR .
      REP DDDEF(SCSFMOD0)
          DA(MASTER.CSF.SCSFMOD0)
          SHR .
      REP DDDEF(SCSFMOD1)
          DA(MASTER.CSF.SCSFMOD1)
          SHR .
      REP DDDEF(SCSFMSG0)
          DA(MASTER.CSF.SCSFMSG0)
          SHR .
      REP DDDEF(SCSFOBJ)
          DA(MASTER.CSF.SCSFOBJ)
          SHR .
      REP DDDEF(SCSFPNL0)
          DA(MASTER.CSF.SCSFPNL0)
          SHR .
      REP DDDEF(SCSFSKL0)
          DA(MASTER.CSF.SCSFSKL0)
          SHR .
      REP DDDEF(SCSFTLIB)
          DA(MASTER.CSF.SCSFTLIB)
          SHR .
      REP DDDEF(AECNEXP)
          DA(PRIME.ECN.AECNEXP)
          SHR .
      REP DDDEF(AECNHETC)
          DA(PRIME.ECN.AECNHETC)
          SHR .
      REP DDDEF(AECNHEXP)
          DA(PRIME.ECN.AECNHEXP)
          SHR .
      REP DDDEF(AECNHINC)
          DA(PRIME.ECN.AECNHINC)
          SHR .
      REP DDDEF(AECNHLBR)
          DA(PRIME.ECN.AECNHLBR)
          SHR .
      REP DDDEF(AECNLINK)
          DA(PRIME.ECN.AECNLINK)
          SHR .
      REP DDDEF(SECNEXP)
          DA(PRIME.ECN.SECNEXP)
          SHR .
      REP DDDEF(AEPHBOK1)
          DA(MASTER.EOX.AEPHBOK1)
          SHR .
      REP DDDEF(AEPHCLB1)
          DA(MASTER.EOX.AEPHCLB1)
          SHR .
      REP DDDEF(AEPHDAT1)
          DA(MASTER.EOX.AEPHDAT1)
          SHR .
      REP DDDEF(AEPHLOD1)
          DA(MASTER.EOX.AEPHLOD1)
          SHR .
      REP DDDEF(AEPHMSG1)
          DA(MASTER.EOX.AEPHMSG1)
          SHR .
      REP DDDEF(AEPHPNL1)
          DA(MASTER.EOX.AEPHPNL1)
          SHR .
      REP DDDEF(AEPHSAM1)
          DA(MASTER.EOX.AEPHSAM1)
          SHR .
      REP DDDEF(AEPHTBL1)
          DA(MASTER.EOX.AEPHTBL1)
          SHR .
      REP DDDEF(SEPHBOK1)
          DA(MASTER.EOX.SEPHBOK1)
          SHR .
      REP DDDEF(SEPHCLB1)
          DA(MASTER.EOX.SEPHCLB1)
          SHR .
      REP DDDEF(SEPHDAT1)
          DA(MASTER.EOX.SEPHDAT1)
          SHR .
      REP DDDEF(SEPHLOD1)
          DA(MASTER.EOX.SEPHLOD1)
          SHR .
      REP DDDEF(SEPHMSG1)
          DA(MASTER.EOX.SEPHMSG1)
          SHR .
      REP DDDEF(SEPHPNL1)
          DA(MASTER.EOX.SEPHPNL1)
          SHR .
      REP DDDEF(SEPHSAM1)
          DA(MASTER.EOX.SEPHSAM1)
          SHR .
      REP DDDEF(SEPHTBL1)
          DA(MASTER.EOX.SEPHTBL1)
          SHR .
      REP DDDEF(AEOXFONT)
          DA(MASTER.EOY.AEOXFONT)
          SHR .
      REP DDDEF(AEOXIENU)
          DA(MASTER.EOY.AEOXIENU)
          SHR .
      REP DDDEF(AEOXOENU)
          DA(MASTER.EOY.AEOXOENU)
          SHR .
      REP DDDEF(AEOX1ENU)
          DA(MASTER.EOY.AEOX1ENU)
          SHR .
      REP DDDEF(AEOX2ENU)
          DA(MASTER.EOY.AEOX2ENU)
          SHR .
      REP DDDEF(AEOX3ENU)
          DA(MASTER.EOY.AEOX3ENU)
          SHR .
      REP DDDEF(AEOX4ENU)
          DA(MASTER.EOY.AEOX4ENU)
          SHR .
      REP DDDEF(AEOYAENU)
          DA(MASTER.EOY.AEOYAENU)
          SHR .
      REP DDDEF(AEOYBENU)
          DA(MASTER.EOY.AEOYBENU)
          SHR .
      REP DDDEF(AEOYCLIB)
          DA(MASTER.EOY.AEOYCLIB)
          SHR .
      REP DDDEF(AEOYGENU)
          DA(MASTER.EOY.AEOYGENU)
          SHR .
      REP DDDEF(AEOYIENU)
          DA(MASTER.EOY.AEOYIENU)
          SHR .
      REP DDDEF(AEOYIPRF)
          DA(MASTER.EOY.AEOYIPRF)
          SHR .
      REP DDDEF(AEOYLENU)
          DA(MASTER.EOY.AEOYLENU)
          SHR .
      REP DDDEF(AEOYLEXS)
          DA(MASTER.EOY.AEOYLEXS)
          SHR .
      REP DDDEF(AEOYLOAD)
          DA(MASTER.EOY.AEOYLOAD)
          SHR .
      REP DDDEF(AEOYMC30)
          DA(MASTER.EOY.AEOYMC30)
          SHR .
      REP DDDEF(AEOYMC40)
          DA(MASTER.EOY.AEOYMC40)
          SHR .
      REP DDDEF(AEOYMENU)
          DA(MASTER.EOY.AEOYMENU)
          SHR .
      REP DDDEF(AEOYOENU)
          DA(MASTER.EOY.AEOYOENU)
          SHR .
      REP DDDEF(AEOYPENU)
          DA(MASTER.EOY.AEOYPENU)
          SHR .
      REP DDDEF(AEOYPROC)
          DA(MASTER.EOY.AEOYPROC)
          SHR .
      REP DDDEF(AEOYSAMP)
          DA(MASTER.EOY.AEOYSAMP)
          SHR .
      REP DDDEF(AEOYSENU)
          DA(MASTER.EOY.AEOYSENU)
          SHR .
      REP DDDEF(AEOYTENU)
          DA(MASTER.EOY.AEOYTENU)
          SHR .
      REP DDDEF(AEOYXENU)
          DA(MASTER.EOY.AEOYXENU)
          SHR .
      REP DDDEF(AEOY1ENU)
          DA(MASTER.EOY.AEOY1ENU)
          SHR .
      REP DDDEF(AEOY2ENU)
          DA(MASTER.EOY.AEOY2ENU)
          SHR .
      REP DDDEF(AEOY4ENU)
          DA(MASTER.EOY.AEOY4ENU)
          SHR .
      REP DDDEF(SEOXFONT)
          DA(MASTER.EOY.SEOXFONT)
          SHR .
      REP DDDEF(SEOXIENU)
          DA(MASTER.EOY.SEOXIENU)
          SHR .
      REP DDDEF(SEOXOENU)
          DA(MASTER.EOY.SEOXOENU)
          SHR .
      REP DDDEF(SEOX1ENU)
          DA(MASTER.EOY.SEOX1ENU)
          SHR .
      REP DDDEF(SEOX2ENU)
          DA(MASTER.EOY.SEOX2ENU)
          SHR .
      REP DDDEF(SEOX3ENU)
          DA(MASTER.EOY.SEOX3ENU)
          SHR .
      REP DDDEF(SEOX4ENU)
          DA(MASTER.EOY.SEOX4ENU)
          SHR .
      REP DDDEF(SEOYAENU)
          DA(MASTER.EOY.SEOYAENU)
          SHR .
      REP DDDEF(SEOYBENU)
          DA(MASTER.EOY.SEOYBENU)
          SHR .
      REP DDDEF(SEOYCLIB)
          DA(MASTER.EOY.SEOYCLIB)
          SHR .
      REP DDDEF(SEOYGENU)
          DA(MASTER.EOY.SEOYGENU)
          SHR .
      REP DDDEF(SEOYIENU)
          DA(MASTER.EOY.SEOYIENU)
          SHR .
      REP DDDEF(SEOYIPRF)
          DA(MASTER.EOY.SEOYIPRF)
          SHR .
      REP DDDEF(SEOYLENU)
          DA(MASTER.EOY.SEOYLENU)
          SHR .
      REP DDDEF(SEOYLEXS)
          DA(MASTER.EOY.SEOYLEXS)
          SHR .
      REP DDDEF(SEOYLOAD)
          DA(MASTER.EOY.SEOYLOAD)
          SHR .
      REP DDDEF(SEOYLPA)
          DA(MASTER.EOY.SEOYLPA)
          SHR .
      REP DDDEF(SEOYMC30)
          DA(MASTER.EOY.SEOYMC30)
          SHR .
      REP DDDEF(SEOYMC40)
          DA(MASTER.EOY.SEOYMC40)
          SHR .
      REP DDDEF(SEOYMENU)
          DA(MASTER.EOY.SEOYMENU)
          SHR .
      REP DDDEF(SEOYOENU)
          DA(MASTER.EOY.SEOYOENU)
          SHR .
      REP DDDEF(SEOYPENU)
          DA(MASTER.EOY.SEOYPENU)
          SHR .
      REP DDDEF(SEOYPROC)
          DA(MASTER.EOY.SEOYPROC)
          SHR .
      REP DDDEF(SEOYSAMP)
          DA(MASTER.EOY.SEOYSAMP)
          SHR .
      REP DDDEF(SEOYSENU)
          DA(MASTER.EOY.SEOYSENU)
          SHR .
      REP DDDEF(SEOYTENU)
          DA(MASTER.EOY.SEOYTENU)
          SHR .
      REP DDDEF(SEOYXENU)
          DA(MASTER.EOY.SEOYXENU)
          SHR .
      REP DDDEF(SEOY1ENU)
          DA(MASTER.EOY.SEOY1ENU)
          SHR .
      REP DDDEF(SEOY2ENU)
          DA(MASTER.EOY.SEOY2ENU)
          SHR .
      REP DDDEF(SEOY4ENU)
          DA(MASTER.EOY.SEOY4ENU)
          SHR .
      REP DDDEF(AEPHBOOK)
          DA(PRIME.EPH.AEPHBOOK)
          SHR .
      REP DDDEF(AEPHCLIB)
          DA(PRIME.EPH.AEPHCLIB)
          SHR .
      REP DDDEF(AEPHGIF)
          DA(PRIME.EPH.AEPHGIF)
          SHR .
      REP DDDEF(AEPHLOAD)
          DA(PRIME.EPH.AEPHLOAD)
          SHR .
      REP DDDEF(AEPHSAMP)
          DA(PRIME.EPH.AEPHSAMP)
          SHR .
      REP DDDEF(SEPHCLIB)
          DA(PRIME.EPH.SEPHCLIB)
          SHR .
      REP DDDEF(SEPHSAMP)
          DA(PRIME.EPH.SEPHSAMP)
          SHR .
      REP DDDEF(SEPHTAB)
          DA(PRIME.EPH.SEPHTAB)
          SHR .
      REP DDDEF(AEQAMOD2)
          DA(PRIME.EQAW.AEQAMOD2)
          SHR .
      REP DDDEF(AEQASRC2)
          DA(PRIME.EQAW.AEQASRC2)
          SHR .
      REP DDDEF(SEQAAUTH)
          DA(PRIME.EQAW.SEQAAUTH)
          SHR .
      REP DDDEF(SEQADUM)
          DA(PRIME.EQAW.SEQADUM)
          SHR .
      REP DDDEF(SEQAMOD)
          DA(PRIME.EQAW.SEQAMOD)
          SHR .
      REP DDDEF(SEQASAMP)
          DA(PRIME.EQAW.SEQASAMP)
          SHR .
      REP DDDEF(AEUVACF)
          DA(PRIME.EUV.AEUVACF)
          SHR .
      REP DDDEF(AEUVDBRM)
          DA(PRIME.EUV.AEUVDBRM)
          SHR .
      REP DDDEF(AEUVEXEC)
          DA(PRIME.EUV.AEUVEXEC)
          SHR .
      REP DDDEF(AEUVEXP)
          DA(PRIME.EUV.AEUVEXP)
          SHR .
      REP DDDEF(AEUVHDCP)
          DA(PRIME.EUV.AEUVHDCP)
          SHR .
      REP DDDEF(AEUVHDR)
          DA(PRIME.EUV.AEUVHDR)
          SHR .
      REP DDDEF(AEUVHDRK)
          DA(PRIME.EUV.AEUVHDRK)
          SHR .
      REP DDDEF(AEUVHETC)
          DA(PRIME.EUV.AEUVHETC)
          SHR .
      REP DDDEF(AEUVHINC)
          DA(PRIME.EUV.AEUVHINC)
          SHR .
      REP DDDEF(AEUVHLBR)
          DA(PRIME.EUV.AEUVHLBR)
          SHR .
      REP DDDEF(AEUVHTCL)
          DA(PRIME.EUV.AEUVHTCL)
          SHR .
      REP DDDEF(AEUVHXMP)
          DA(PRIME.EUV.AEUVHXMP)
          SHR .
      REP DDDEF(AEUVIDL)
          DA(PRIME.EUV.AEUVIDL)
          SHR .
      REP DDDEF(AEUVLIB)
          DA(PRIME.EUV.AEUVLIB)
          SHR .
      REP DDDEF(AEUVLIBK)
          DA(PRIME.EUV.AEUVLIBK)
          SHR .
      REP DDDEF(AEUVLIBS)
          DA(PRIME.EUV.AEUVLIBS)
          SHR .
      REP DDDEF(AEUVLINK)
          DA(PRIME.EUV.AEUVLINK)
          SHR .
      REP DDDEF(AEUVMSG)
          DA(PRIME.EUV.AEUVMSG)
          SHR .
      REP DDDEF(AEUVPNL)
          DA(PRIME.EUV.AEUVPNL)
          SHR .
      REP DDDEF(AEUVPRC)
          DA(PRIME.EUV.AEUVPRC)
          SHR .
      REP DDDEF(SEUVACF)
          DA(PRIME.EUV.SEUVACF)
          SHR .
      REP DDDEF(SEUVDBRM)
          DA(PRIME.EUV.SEUVDBRM)
          SHR .
      REP DDDEF(SEUVEXEC)
          DA(PRIME.EUV.SEUVEXEC)
          SHR .
      REP DDDEF(SEUVEXP)
          DA(PRIME.EUV.SEUVEXP)
          SHR .
      REP DDDEF(SEUVHDR)
          DA(PRIME.EUV.SEUVHDR)
          SHR .
      REP DDDEF(SEUVHDRK)
          DA(PRIME.EUV.SEUVHDRK)
          SHR .
      REP DDDEF(SEUVIDL)
          DA(PRIME.EUV.SEUVIDL)
          SHR .
      REP DDDEF(SEUVLIB)
          DA(PRIME.EUV.SEUVLIB)
          SHR .
      REP DDDEF(SEUVLIBK)
          DA(PRIME.EUV.SEUVLIBK)
          SHR .
      REP DDDEF(SEUVLIBS)
          DA(PRIME.EUV.SEUVLIBS)
          SHR .
      REP DDDEF(SEUVMSG)
          DA(PRIME.EUV.SEUVMSG)
          SHR .
      REP DDDEF(SEUVPNL)
          DA(PRIME.EUV.SEUVPNL)
          SHR .
      REP DDDEF(SEUVPRC)
          DA(PRIME.EUV.SEUVPRC)
          SHR .
      REP DDDEF(AEUVFEXC)
          DA(MASTER.EUVF.AEUVFEXC)
          SHR .
      REP DDDEF(AEUVFEXP)
          DA(MASTER.EUVF.AEUVFEXP)
          SHR .
      REP DDDEF(AEUVFHDR)
          DA(MASTER.EUVF.AEUVFHDR)
          SHR .
      REP DDDEF(AEUVFHFS)
          DA(MASTER.EUVF.AEUVFHFS)
          SHR .
      REP DDDEF(AEUVFLIB)
          DA(MASTER.EUVF.AEUVFLIB)
          SHR .
      REP DDDEF(AEUVFLNK)
          DA(MASTER.EUVF.AEUVFLNK)
          SHR .
      REP DDDEF(AEUVFSAM)
          DA(MASTER.EUVF.AEUVFSAM)
          SHR .
      REP DDDEF(SEUVFEXC)
          DA(MASTER.EUVF.SEUVFEXC)
          SHR .
      REP DDDEF(SEUVFEXP)
          DA(MASTER.EUVF.SEUVFEXP)
          SHR .
      REP DDDEF(SEUVFHDR)
          DA(MASTER.EUVF.SEUVFHDR)
          SHR .
      REP DDDEF(SEUVFLIB)
          DA(MASTER.EUVF.SEUVFLIB)
          SHR .
      REP DDDEF(SEUVFLNK)
          DA(MASTER.EUVF.SEUVFLNK)
          SHR .
      REP DDDEF(SEUVFLPA)
          DA(MASTER.EUVF.SEUVFLPA)
          SHR .
      REP DDDEF(SEUVFSAM)
          DA(MASTER.EUVF.SEUVFSAM)
          SHR .
      REP DDDEF(AEPWBENU)
          DA(MASTER.FFST.V120ESA.AEPWBENU)
          SHR .
      REP DDDEF(AEPWMOD1)
          DA(MASTER.FFST.V120ESA.AEPWMOD1)
          SHR .
      REP DDDEF(AEPWSRC1)
          DA(MASTER.FFST.V120ESA.AEPWSRC1)
          SHR .
      REP DDDEF(SEPWBENU)
          DA(MASTER.FFST.V120ESA.SEPWBENU)
          SHR .
      REP DDDEF(SEPWCENU)
          DA(MASTER.FFST.V120ESA.SEPWCENU)
          SHR .
      REP DDDEF(SEPWMAC1)
          DA(MASTER.FFST.V120ESA.SEPWMAC1)
          SHR .
      REP DDDEF(SEPWMOD1)
          DA(MASTER.FFST.V120ESA.SEPWMOD1)
          SHR .
      REP DDDEF(SEPWMOD2)
          DA(MASTER.FFST.V120ESA.SEPWMOD2)
          SHR .
      REP DDDEF(SEPWMOD3)
          DA(MASTER.FFST.V120ESA.SEPWMOD3)
          SHR .
      REP DDDEF(SEPWMOD4)
          DA(MASTER.FFST.V120ESA.SEPWMOD4)
          SHR .
      REP DDDEF(SEPWPENU)
          DA(MASTER.FFST.V120ESA.SEPWPENU)
          SHR .
      REP DDDEF(SEPWSRC1)
          DA(MASTER.FFST.V120ESA.SEPWSRC1)
          SHR .
      REP DDDEF(SEPWSRC2)
          DA(MASTER.FFST.V120ESA.SEPWSRC2)
          SHR .
      REP DDDEF(AADMCDA)
          DA(MASTER.GDDM.AADMCDA)
          SHR .
      REP DDDEF(AADMCFO)
          DA(MASTER.GDDM.AADMCFO)
          SHR .
      REP DDDEF(AADMDAT)
          DA(MASTER.GDDM.AADMDAT)
          SHR .
      REP DDDEF(AADMGDF)
          DA(MASTER.GDDM.AADMGDF)
          SHR .
      REP DDDEF(AADMIMG)
          DA(MASTER.GDDM.AADMIMG)
          SHR .
      REP DDDEF(AADMMAP)
          DA(MASTER.GDDM.AADMMAP)
          SHR .
      REP DDDEF(AADMMOD)
          DA(MASTER.GDDM.AADMMOD)
          SHR .
      REP DDDEF(AADMMSG)
          DA(MASTER.GDDM.AADMMSG)
          SHR .
      REP DDDEF(AADMOPS)
          DA(MASTER.GDDM.AADMOPS)
          SHR .
      REP DDDEF(AADMPCF)
          DA(MASTER.GDDM.AADMPCF)
          SHR .
      REP DDDEF(AADMPNL)
          DA(MASTER.GDDM.AADMPNL)
          SHR .
      REP DDDEF(AADMSAM)
          DA(MASTER.GDDM.AADMSAM)
          SHR .
      REP DDDEF(AADMSYM)
          DA(MASTER.GDDM.AADMSYM)
          SHR .
      REP DDDEF(SADMCDA)
          DA(MASTER.GDDM.SADMCDA)
          SHR .
      REP DDDEF(SADMCFO)
          DA(MASTER.GDDM.SADMCFO)
          SHR .
      REP DDDEF(SADMDAT)
          DA(MASTER.GDDM.SADMDAT)
          SHR .
      REP DDDEF(SADMGDF)
          DA(MASTER.GDDM.SADMGDF)
          SHR .
      REP DDDEF(SADMIMG)
          DA(MASTER.GDDM.SADMIMG)
          SHR .
      REP DDDEF(SADMMAP)
          DA(MASTER.GDDM.SADMMAP)
          SHR .
      REP DDDEF(SADMMOD)
          DA(MASTER.GDDM.SADMMOD)
          SHR .
      REP DDDEF(SADMMSG)
          DA(MASTER.GDDM.SADMMSG)
          SHR .
      REP DDDEF(SADMOPS)
          DA(MASTER.GDDM.SADMOPS)
          SHR .
      REP DDDEF(SADMPCF)
          DA(MASTER.GDDM.SADMPCF)
          SHR .
      REP DDDEF(SADMPNL)
          DA(MASTER.GDDM.SADMPNL)
          SHR .
      REP DDDEF(SADMSAM)
          DA(MASTER.GDDM.SADMSAM)
          SHR .
      REP DDDEF(SADMSYM)
          DA(MASTER.GDDM.SADMSYM)
          SHR .
      REP DDDEF(AGIMCLS0)
          DA(MASTER.GIM.AGIMCLS0)
          SHR .
      REP DDDEF(AGIMMENU)
          DA(MASTER.GIM.AGIMMENU)
          SHR .
      REP DDDEF(AGIMPENU)
          DA(MASTER.GIM.AGIMPENU)
          SHR .
      REP DDDEF(AGIMSENU)
          DA(MASTER.GIM.AGIMSENU)
          SHR .
      REP DDDEF(AGIMTENU)
          DA(MASTER.GIM.AGIMTENU)
          SHR .
      REP DDDEF(SGIMCLS0)
          DA(MASTER.GIM.SGIMCLS0)
          SHR .
      REP DDDEF(SGIMLMD0)
          DA(MASTER.GIM.SGIMLMD0)
          SHR .
      REP DDDEF(SGIMMENU)
          DA(MASTER.GIM.SGIMMENU)
          SHR .
      REP DDDEF(SGIMPENU)
          DA(MASTER.GIM.SGIMPENU)
          SHR .
      REP DDDEF(SGIMSENU)
          DA(MASTER.GIM.SGIMSENU)
          SHR .
      REP DDDEF(SGIMTENU)
          DA(MASTER.GIM.SGIMTENU)
          SHR .
      REP DDDEF(AGLDEXEC)
          DA(MASTER.GLD.AGLDEXEC)
          SHR .
      REP DDDEF(AGLDEXPC)
          DA(MASTER.GLD.AGLDEXPC)
          SHR .
      REP DDDEF(AGLDHCLI)
          DA(MASTER.GLD.AGLDHCLI)
          SHR .
      REP DDDEF(AGLDHDRC)
          DA(MASTER.GLD.AGLDHDRC)
          SHR .
      REP DDDEF(AGLDHFS)
          DA(MASTER.GLD.AGLDHFS)
          SHR .
      REP DDDEF(AGLDLNK)
          DA(MASTER.GLD.AGLDLNK)
          SHR .
      REP DDDEF(AGLDSAMP)
          DA(MASTER.GLD.AGLDSAMP)
          SHR .
      REP DDDEF(SGLDEXEC)
          DA(MASTER.GLD.SGLDEXEC)
          SHR .
      REP DDDEF(SGLDEXPC)
          DA(MASTER.GLD.SGLDEXPC)
          SHR .
      REP DDDEF(SGLDHDRC)
          DA(MASTER.GLD.SGLDHDRC)
          SHR .
      REP DDDEF(SGLDLNK)
          DA(MASTER.GLD.SGLDLNK)
          SHR .
      REP DDDEF(SGLDSAMP)
          DA(MASTER.GLD.SGLDSAMP)
          SHR .
      REP DDDEF(AGSKHFS)
          DA(MASTER.GSK.AGSKHFS)
          SHR .
      REP DDDEF(AGSKLINK)
          DA(MASTER.GSK.AGSKLINK)
          SHR .
      REP DDDEF(AGSKSAMP)
          DA(MASTER.GSK.AGSKSAMP)
          SHR .
      REP DDDEF(SGSKLOAD)
          DA(MASTER.GSK.SGSKLOAD)
          SHR .
      REP DDDEF(SGSKSAMP)
          DA(MASTER.GSK.SGSKSAMP)
          SHR .
      REP DDDEF(AEEQINST)
          DA(PRIME.HCM.AEEQINST)
          SHR .
      REP DDDEF(SEEQINST)
          DA(PRIME.HCM.SEEQINST)
          SHR .
      REP DDDEF(AICAHETC)
          DA(MASTER.ICA.AICAHETC)
          SHR .
      REP DDDEF(AICAHLBR)
          DA(MASTER.ICA.AICAHLBR)
          SHR .
      REP DDDEF(AICAHSAM)
          DA(MASTER.ICA.AICAHSAM)
          SHR .
      REP DDDEF(AICAHSCR)
          DA(MASTER.ICA.AICAHSCR)
          SHR .
      REP DDDEF(AICALINK)
          DA(MASTER.ICA.AICALINK)
          SHR .
      REP DDDEF(AICAPROC)
          DA(MASTER.ICA.AICAPROC)
          SHR .
      REP DDDEF(AICASAMP)
          DA(MASTER.ICA.AICASAMP)
          SHR .
      REP DDDEF(SICALMOD)
          DA(MASTER.ICA.SICALMOD)
          SHR .
      REP DDDEF(SICAPROC)
          DA(MASTER.ICA.SICAPROC)
          SHR .
      REP DDDEF(SICASAMP)
          DA(MASTER.ICA.SICASAMP)
          SHR .
      REP DDDEF(ICQABTXT)
          DA(PRIME.ICQ.ICQABTXT)
          SHR .
      REP DDDEF(ICQCCLIB)
          DA(PRIME.ICQ.ICQCCLIB)
          SHR .
      REP DDDEF(ICQILIB)
          DA(PRIME.ICQ.ICQILIB)
          SHR .
      REP DDDEF(ICQMLIB)
          DA(PRIME.ICQ.ICQMLIB)
          SHR .
      REP DDDEF(ICQPLIB)
          DA(PRIME.ICQ.ICQPLIB)
          SHR .
      REP DDDEF(ICQSLIB)
          DA(PRIME.ICQ.ICQSLIB)
          SHR .
      REP DDDEF(ICQTABLS)
          DA(PRIME.ICQ.ICQTABLS)
          SHR .
      REP DDDEF(AIMOHFS1)
          DA(MASTER.IMO.AIMOHFS1)
          SHR .
      REP DDDEF(AIMOJCL1)
          DA(MASTER.IMO.AIMOJCL1)
          SHR .
      REP DDDEF(AIMOMOD1)
          DA(MASTER.IMO.AIMOMOD1)
          SHR .
      REP DDDEF(SIMOJCL1)
          DA(MASTER.IMO.SIMOJCL1)
          SHR .
      REP DDDEF(SIMOMOD1)
          DA(MASTER.IMO.SIMOMOD1)
          SHR .
      REP DDDEF(AIMWEMOD)
          DA(PRIME.IMW.AIMWEMOD)
          SHR .
      REP DDDEF(AIMWHENU)
          DA(PRIME.IMW.AIMWHENU)
          SHR .
      REP DDDEF(AIMWSAM1)
          DA(PRIME.IMW.AIMWSAM1)
          SHR .
      REP DDDEF(SIMWSDCK)
          DA(PRIME.IMW.SIMWSDCK)
          SHR .
      REP DDDEF(SIMWTBL1)
          DA(PRIME.IMW.SIMWTBL1)
          SHR .
      REP DDDEF(AEVIMOD6)
          DA(MASTER.ING.AEVIMOD6)
          SHR .
      REP DDDEF(AEVIMOD7)
          DA(MASTER.ING.AEVIMOD7)
          SHR .
      REP DDDEF(AEVIMOD8)
          DA(MASTER.ING.AEVIMOD8)
          SHR .
      REP DDDEF(AINGIMOD)
          DA(MASTER.ING.AINGIMOD)
          SHR .
      REP DDDEF(AINGIMSG)
          DA(MASTER.ING.AINGIMSG)
          SHR .
      REP DDDEF(AINGINST)
          DA(MASTER.ING.AINGINST)
          SHR .
      REP DDDEF(AINGIPDB)
          DA(MASTER.ING.AINGIPDB)
          SHR .
      REP DDDEF(AINGIPNL)
          DA(MASTER.ING.AINGIPNL)
          SHR .
      REP DDDEF(AINGIREX)
          DA(MASTER.ING.AINGIREX)
          SHR .
      REP DDDEF(AINGISKL)
          DA(MASTER.ING.AINGISKL)
          SHR .
      REP DDDEF(AINGITBL)
          DA(MASTER.ING.AINGITBL)
          SHR .
      REP DDDEF(AINGMODC)
          DA(MASTER.ING.AINGMODC)
          SHR .
      REP DDDEF(AINGMOD1)
          DA(MASTER.ING.AINGMOD1)
          SHR .
      REP DDDEF(AINGMOD2)
          DA(MASTER.ING.AINGMOD2)
          SHR .
      REP DDDEF(AINGNMSG)
          DA(MASTER.ING.AINGNMSG)
          SHR .
      REP DDDEF(AINGNPNL)
          DA(MASTER.ING.AINGNPNL)
          SHR .
      REP DDDEF(AINGNPRF)
          DA(MASTER.ING.AINGNPRF)
          SHR .
      REP DDDEF(AINGNPRM)
          DA(MASTER.ING.AINGNPRM)
          SHR .
      REP DDDEF(AINGNREX)
          DA(MASTER.ING.AINGNREX)
          SHR .
      REP DDDEF(AINGPWS1)
          DA(MASTER.ING.AINGPWS1)
          SHR .
      REP DDDEF(AINGSAMP)
          DA(MASTER.ING.AINGSAMP)
          SHR .
      REP DDDEF(AINGSRC)
          DA(MASTER.ING.AINGSRC)
          SHR .
      REP DDDEF(SEVIMOD6)
          DA(MASTER.ING.SEVIMOD6)
          SHR .
      REP DDDEF(SEVIMOD7)
          DA(MASTER.ING.SEVIMOD7)
          SHR .
      REP DDDEF(SEVIMOD8)
          DA(MASTER.ING.SEVIMOD8)
          SHR .
      REP DDDEF(SINGIMOD)
          DA(MASTER.ING.SINGIMOD)
          SHR .
      REP DDDEF(SINGIMSG)
          DA(MASTER.ING.SINGIMSG)
          SHR .
      REP DDDEF(SINGINST)
          DA(MASTER.ING.SINGINST)
          SHR .
      REP DDDEF(SINGIPDB)
          DA(MASTER.ING.SINGIPDB)
          SHR .
      REP DDDEF(SINGIPNL)
          DA(MASTER.ING.SINGIPNL)
          SHR .
      REP DDDEF(SINGIREX)
          DA(MASTER.ING.SINGIREX)
          SHR .
      REP DDDEF(SINGISKL)
          DA(MASTER.ING.SINGISKL)
          SHR .
      REP DDDEF(SINGITBL)
          DA(MASTER.ING.SINGITBL)
          SHR .
      REP DDDEF(SINGMODC)
          DA(MASTER.ING.SINGMODC)
          SHR .
      REP DDDEF(SINGMOD1)
          DA(MASTER.ING.SINGMOD1)
          SHR .
      REP DDDEF(SINGMOD2)
          DA(MASTER.ING.SINGMOD2)
          SHR .
      REP DDDEF(SINGMOD3)
          DA(MASTER.ING.SINGMOD3)
          SHR .
      REP DDDEF(SINGNMSG)
          DA(MASTER.ING.SINGNMSG)
          SHR .
      REP DDDEF(SINGNPNL)
          DA(MASTER.ING.SINGNPNL)
          SHR .
      REP DDDEF(SINGNPRF)
          DA(MASTER.ING.SINGNPRF)
          SHR .
      REP DDDEF(SINGNPRM)
          DA(MASTER.ING.SINGNPRM)
          SHR .
      REP DDDEF(SINGNREX)
          DA(MASTER.ING.SINGNREX)
          SHR .
      REP DDDEF(SINGPWS1)
          DA(MASTER.ING.SINGPWS1)
          SHR .
      REP DDDEF(SINGSAMP)
          DA(MASTER.ING.SINGSAMP)
          SHR .
      REP DDDEF(SINGSRC)
          DA(MASTER.ING.SINGSRC)
          SHR .
      REP DDDEF(AIOAIBIN)
          DA(PRIME.IOA.AIOAIBIN)
          SHR .
      REP DDDEF(AIOAJAVA)
          DA(PRIME.IOA.AIOAJAVA)
          SHR .
      REP DDDEF(AIOALMOD)
          DA(PRIME.IOA.AIOALMOD)
          SHR .
      REP DDDEF(AIOAMMOD)
          DA(PRIME.IOA.AIOAMMOD)
          SHR .
      REP DDDEF(AIOASAMP)
          DA(PRIME.IOA.AIOASAMP)
          SHR .
      REP DDDEF(SIOAIBIN)
          DA(PRIME.IOA.SIOAIBIN)
          SHR .
      REP DDDEF(SIOAJAVA)
          DA(PRIME.IOA.SIOAJAVA)
          SHR .
      REP DDDEF(SIOAMMOD)
          DA(PRIME.IOA.SIOAMMOD)
          SHR .
      REP DDDEF(SIOASAMP)
          DA(PRIME.IOA.SIOASAMP)
          SHR .
      REP DDDEF(AIOEEXEC)
          DA(MASTER.IOE.AIOEEXEC)
          SHR .
      REP DDDEF(AIOEHLIB)
          DA(MASTER.IOE.AIOEHLIB)
          SHR .
      REP DDDEF(AIOEHSAM)
          DA(MASTER.IOE.AIOEHSAM)
          SHR .
      REP DDDEF(AIOEHSHL)
          DA(MASTER.IOE.AIOEHSHL)
          SHR .
      REP DDDEF(AIOEHSRC)
          DA(MASTER.IOE.AIOEHSRC)
          SHR .
      REP DDDEF(AIOELMOD)
          DA(MASTER.IOE.AIOELMOD)
          SHR .
      REP DDDEF(AIOEMSGE)
          DA(MASTER.IOE.AIOEMSGE)
          SHR .
      REP DDDEF(AIOEPNLE)
          DA(MASTER.IOE.AIOEPNLE)
          SHR .
      REP DDDEF(AIOEPROC)
          DA(MASTER.IOE.AIOEPROC)
          SHR .
      REP DDDEF(AIOESAMP)
          DA(MASTER.IOE.AIOESAMP)
          SHR .
      REP DDDEF(SIOEEXEC)
          DA(MASTER.IOE.SIOEEXEC)
          SHR .
      REP DDDEF(SIOELMOD)
          DA(MASTER.IOE.SIOELMOD)
          SHR .
      REP DDDEF(SIOEMSGE)
          DA(MASTER.IOE.SIOEMSGE)
          SHR .
      REP DDDEF(SIOEPNLE)
          DA(MASTER.IOE.SIOEPNLE)
          SHR .
      REP DDDEF(SIOEPROC)
          DA(MASTER.IOE.SIOEPROC)
          SHR .
      REP DDDEF(SIOESAMP)
          DA(MASTER.IOE.SIOESAMP)
          SHR .
      REP DDDEF(AISFEXEC)
          DA(MASTER.ISF.AISFEXEC)
          SHR .
      REP DDDEF(AISFHELP)
          DA(MASTER.ISF.AISFHELP)
          SHR .
      REP DDDEF(AISFJCL)
          DA(MASTER.ISF.AISFJCL)
          SHR .
      REP DDDEF(AISFLINK)
          DA(MASTER.ISF.AISFLINK)
          SHR .
      REP DDDEF(AISFLOAD)
          DA(MASTER.ISF.AISFLOAD)
          SHR .
      REP DDDEF(AISFMLIB)
          DA(MASTER.ISF.AISFMLIB)
          SHR .
      REP DDDEF(AISFPLIB)
          DA(MASTER.ISF.AISFPLIB)
          SHR .
      REP DDDEF(AISFSLIB)
          DA(MASTER.ISF.AISFSLIB)
          SHR .
      REP DDDEF(AISFSRC)
          DA(MASTER.ISF.AISFSRC)
          SHR .
      REP DDDEF(AISFTLIB)
          DA(MASTER.ISF.AISFTLIB)
          SHR .
      REP DDDEF(SISFEXEC)
          DA(MASTER.ISF.SISFEXEC)
          SHR .
      REP DDDEF(SISFHELP)
          DA(MASTER.ISF.SISFHELP)
          SHR .
      REP DDDEF(SISFJCL)
          DA(MASTER.ISF.SISFJCL)
          SHR .
      REP DDDEF(SISFLINK)
          DA(MASTER.ISF.SISFLINK)
          SHR .
      REP DDDEF(SISFLOAD)
          DA(MASTER.ISF.SISFLOAD)
          SHR .
      REP DDDEF(SISFLPA)
          DA(MASTER.ISF.SISFLPA)
          SHR .
      REP DDDEF(SISFMLIB)
          DA(MASTER.ISF.SISFMLIB)
          SHR .
      REP DDDEF(SISFPLIB)
          DA(MASTER.ISF.SISFPLIB)
          SHR .
      REP DDDEF(SISFSLIB)
          DA(MASTER.ISF.SISFSLIB)
          SHR .
      REP DDDEF(SISFSRC)
          DA(MASTER.ISF.SISFSRC)
          SHR .
      REP DDDEF(SISFTLIB)
          DA(MASTER.ISF.SISFTLIB)
          SHR .
      REP DDDEF(AISPALIB)
          DA(MASTER.ISP.AISPALIB)
          SHR .
      REP DDDEF(AISPCLIB)
          DA(MASTER.ISP.AISPCLIB)
          SHR .
      REP DDDEF(AISPEXEC)
          DA(MASTER.ISP.AISPEXEC)
          SHR .
      REP DDDEF(AISPGENU)
          DA(MASTER.ISP.AISPGENU)
          SHR .
      REP DDDEF(AISPGMLI)
          DA(MASTER.ISP.AISPGMLI)
          SHR .
      REP DDDEF(AISPGUI)
          DA(MASTER.ISP.AISPGUI)
          SHR .
      REP DDDEF(AISPHELP)
          DA(MASTER.ISP.AISPHELP)
          SHR .
      REP DDDEF(AISPMACS)
          DA(MASTER.ISP.AISPMACS)
          SHR .
      REP DDDEF(AISPMENU)
          DA(MASTER.ISP.AISPMENU)
          SHR .
      REP DDDEF(AISPMOD1)
          DA(MASTER.ISP.AISPMOD1)
          SHR .
      REP DDDEF(AISPPENU)
          DA(MASTER.ISP.AISPPENU)
          SHR .
      REP DDDEF(AISPSAMP)
          DA(MASTER.ISP.AISPSAMP)
          SHR .
      REP DDDEF(AISPSASC)
          DA(MASTER.ISP.AISPSASC)
          SHR .
      REP DDDEF(AISPSENU)
          DA(MASTER.ISP.AISPSENU)
          SHR .
      REP DDDEF(AISPSLIB)
          DA(MASTER.ISP.AISPSLIB)
          SHR .
      REP DDDEF(AISPTENU)
          DA(MASTER.ISP.AISPTENU)
          SHR .
      REP DDDEF(SISPALIB)
          DA(MASTER.ISP.SISPALIB)
          SHR .
      REP DDDEF(SISPCLIB)
          DA(MASTER.ISP.SISPCLIB)
          SHR .
      REP DDDEF(SISPEXEC)
          DA(MASTER.ISP.SISPEXEC)
          SHR .
      REP DDDEF(SISPGENU)
          DA(MASTER.ISP.SISPGENU)
          SHR .
      REP DDDEF(SISPGMLI)
          DA(MASTER.ISP.SISPGMLI)
          SHR .
      REP DDDEF(SISPGUI)
          DA(MASTER.ISP.SISPGUI)
          SHR .
      REP DDDEF(SISPHELP)
          DA(MASTER.ISP.SISPHELP)
          SHR .
      REP DDDEF(SISPLOAD)
          DA(MASTER.ISP.SISPLOAD)
          SHR .
      REP DDDEF(SISPLPA)
          DA(MASTER.ISP.SISPLPA)
          SHR .
      REP DDDEF(SISPMACS)
          DA(MASTER.ISP.SISPMACS)
          SHR .
      REP DDDEF(SISPMENU)
          DA(MASTER.ISP.SISPMENU)
          SHR .
      REP DDDEF(SISPPENU)
          DA(MASTER.ISP.SISPPENU)
          SHR .
      REP DDDEF(SISPSAMP)
          DA(MASTER.ISP.SISPSAMP)
          SHR .
      REP DDDEF(SISPSASC)
          DA(MASTER.ISP.SISPSASC)
          SHR .
      REP DDDEF(SISPSENU)
          DA(MASTER.ISP.SISPSENU)
          SHR .
      REP DDDEF(SISPSLIB)
          DA(MASTER.ISP.SISPSLIB)
          SHR .
      REP DDDEF(SISPTENU)
          DA(MASTER.ISP.SISPTENU)
          SHR .
      REP DDDEF(AAJVSMP1)
          DA(PRIME.JAVA.AAJVSMP1)
          SHR .
      REP DDDEF(AAJVS390)
          DA(PRIME.JAVA.AAJVS390)
          SHR .
      REP DDDEF(SAJVSMP1)
          DA(PRIME.JAVA.SAJVSMP1)
          SHR .
      REP DDDEF(ABNJPNL1)
          DA(MASTER.NETVIEW.ABNJPNL1)
          SHR .
      REP DDDEF(ABNJPNL2)
          DA(MASTER.NETVIEW.ABNJPNL2)
          SHR .
      REP DDDEF(ABNJSRC1)
          DA(MASTER.NETVIEW.ABNJSRC1)
          SHR .
      REP DDDEF(ACNMCLST)
          DA(MASTER.NETVIEW.ACNMCLST)
          SHR .
      REP DDDEF(ACNMINST)
          DA(MASTER.NETVIEW.ACNMINST)
          SHR .
      REP DDDEF(ACNMLINK)
          DA(MASTER.NETVIEW.ACNMLINK)
          SHR .
      REP DDDEF(ACNMMAC1)
          DA(MASTER.NETVIEW.ACNMMAC1)
          SHR .
      REP DDDEF(ACNMPNL1)
          DA(MASTER.NETVIEW.ACNMPNL1)
          SHR .
      REP DDDEF(ACNMSAMP)
          DA(MASTER.NETVIEW.ACNMSAMP)
          SHR .
      REP DDDEF(ADSIMSG1)
          DA(MASTER.NETVIEW.ADSIMSG1)
          SHR .
      REP DDDEF(ADSIOPEN)
          DA(MASTER.NETVIEW.ADSIOPEN)
          SHR .
      REP DDDEF(ADSIPARM)
          DA(MASTER.NETVIEW.ADSIPARM)
          SHR .
      REP DDDEF(ADSIPRF)
          DA(MASTER.NETVIEW.ADSIPRF)
          SHR .
      REP DDDEF(ADUIMSG1)
          DA(MASTER.NETVIEW.ADUIMSG1)
          SHR .
      REP DDDEF(AEKGCAS1)
          DA(MASTER.NETVIEW.AEKGCAS1)
          SHR .
      REP DDDEF(AEKGLANG)
          DA(MASTER.NETVIEW.AEKGLANG)
          SHR .
      REP DDDEF(AEKGLUTB)
          DA(MASTER.NETVIEW.AEKGLUTB)
          SHR .
      REP DDDEF(AEKGMOD1)
          DA(MASTER.NETVIEW.AEKGMOD1)
          SHR .
      REP DDDEF(AEKGPNL1)
          DA(MASTER.NETVIEW.AEKGPNL1)
          SHR .
      REP DDDEF(AEKGSMP1)
          DA(MASTER.NETVIEW.AEKGSMP1)
          SHR .
      REP DDDEF(AEZLCLST)
          DA(MASTER.NETVIEW.AEZLCLST)
          SHR .
      REP DDDEF(AEZLINST)
          DA(MASTER.NETVIEW.AEZLINST)
          SHR .
      REP DDDEF(AEZLLINK)
          DA(MASTER.NETVIEW.AEZLLINK)
          SHR .
      REP DDDEF(AEZLPNLU)
          DA(MASTER.NETVIEW.AEZLPNLU)
          SHR .
      REP DDDEF(AEZLSAMP)
          DA(MASTER.NETVIEW.AEZLSAMP)
          SHR .
      REP DDDEF(AFLBDAT1)
          DA(MASTER.NETVIEW.AFLBDAT1)
          SHR .
      REP DDDEF(ANVULIB)
          DA(MASTER.NETVIEW.ANVULIB)
          SHR .
      REP DDDEF(BNJPNL1)
          DA(MASTER.NETVIEW.BNJPNL1)
          SHR .
      REP DDDEF(BNJPNL2)
          DA(MASTER.NETVIEW.BNJPNL2)
          SHR .
      REP DDDEF(BNJSRC1)
          DA(MASTER.NETVIEW.BNJSRC1)
          SHR .
      REP DDDEF(CNMCLST)
          DA(MASTER.NETVIEW.CNMCLST)
          SHR .
      REP DDDEF(CNMINST)
          DA(MASTER.NETVIEW.CNMINST)
          SHR .
      REP DDDEF(CNMLINK)
          DA(MASTER.NETVIEW.CNMLINK)
          SHR .
      REP DDDEF(CNMPNL1)
          DA(MASTER.NETVIEW.CNMPNL1)
          SHR .
      REP DDDEF(CNMSAMP)
          DA(MASTER.NETVIEW.CNMSAMP)
          SHR .
      REP DDDEF(DSIPARM)
          DA(MASTER.NETVIEW.DSIPARM)
          SHR .
      REP DDDEF(DSIPRF)
          DA(MASTER.NETVIEW.DSIPRF)
          SHR .
      REP DDDEF(NVULIB)
          DA(MASTER.NETVIEW.NVULIB)
          SHR .
      REP DDDEF(SCNMLNK1)
          DA(MASTER.NETVIEW.SCNMLNK1)
          SHR .
      REP DDDEF(SCNMLPA1)
          DA(MASTER.NETVIEW.SCNMLPA1)
          SHR .
      REP DDDEF(SCNMMAC1)
          DA(MASTER.NETVIEW.SCNMMAC1)
          SHR .
      REP DDDEF(SDSIMSG1)
          DA(MASTER.NETVIEW.SDSIMSG1)
          SHR .
      REP DDDEF(SDSIOPEN)
          DA(MASTER.NETVIEW.SDSIOPEN)
          SHR .
      REP DDDEF(SDUIMSG1)
          DA(MASTER.NETVIEW.SDUIMSG1)
          SHR .
      REP DDDEF(SEKGCAS1)
          DA(MASTER.NETVIEW.SEKGCAS1)
          SHR .
      REP DDDEF(SEKGLANG)
          DA(MASTER.NETVIEW.SEKGLANG)
          SHR .
      REP DDDEF(SEKGLNK1)
          DA(MASTER.NETVIEW.SEKGLNK1)
          SHR .
      REP DDDEF(SEKGLUTB)
          DA(MASTER.NETVIEW.SEKGLUTB)
          SHR .
      REP DDDEF(SEKGMOD1)
          DA(MASTER.NETVIEW.SEKGMOD1)
          SHR .
      REP DDDEF(SEKGMOD2)
          DA(MASTER.NETVIEW.SEKGMOD2)
          SHR .
      REP DDDEF(SEKGPNL1)
          DA(MASTER.NETVIEW.SEKGPNL1)
          SHR .
      REP DDDEF(SEKGSMP1)
          DA(MASTER.NETVIEW.SEKGSMP1)
          SHR .
      REP DDDEF(SEZLCLST)
          DA(MASTER.NETVIEW.SEZLCLST)
          SHR .
      REP DDDEF(SEZLINST)
          DA(MASTER.NETVIEW.SEZLINST)
          SHR .
      REP DDDEF(SEZLLINK)
          DA(MASTER.NETVIEW.SEZLLINK)
          SHR .
      REP DDDEF(SEZLPNLU)
          DA(MASTER.NETVIEW.SEZLPNLU)
          SHR .
      REP DDDEF(SEZLSAMP)
          DA(MASTER.NETVIEW.SEZLSAMP)
          SHR .
      REP DDDEF(SFLBDAT1)
          DA(MASTER.NETVIEW.SFLBDAT1)
          SHR .
      REP DDDEF(SMPLTS)
          DA(PRIME.SMPE.MVST100.SMPLTS)
          SHR .
      REP DDDEF(AACBCNTL)
          DA(MASTER.SYS1.AACBCNTL)
          SHR .
      REP DDDEF(AADFMAC1)
          DA(MASTER.SYS1.AADFMAC1)
          SHR .
      REP DDDEF(AADRLIB)
          DA(MASTER.SYS1.AADRLIB)
          SHR .
      REP DDDEF(AADRYLIB)
          DA(MASTER.SYS1.AADRYLIB)
          SHR .
      REP DDDEF(AAPPDAT2)
          DA(MASTER.SYS1.AAPPDAT2)
          SHR .
      REP DDDEF(AAPPDAT4)
          DA(MASTER.SYS1.AAPPDAT4)
          SHR .
      REP DDDEF(AAPPMOD1)
          DA(MASTER.SYS1.AAPPMOD1)
          SHR .
      REP DDDEF(AAPPMOD2)
          DA(MASTER.SYS1.AAPPMOD2)
          SHR .
      REP DDDEF(AAPPSAMP)
          DA(MASTER.SYS1.AAPPSAMP)
          SHR .
      REP DDDEF(ABDTCLI0)
          DA(MASTER.SYS1.ABDTCLI0)
          SHR .
      REP DDDEF(ABDTHELP)
          DA(MASTER.SYS1.ABDTHELP)
          SHR .
      REP DDDEF(ABDTMAC)
          DA(MASTER.SYS1.ABDTMAC)
          SHR .
      REP DDDEF(ABDTMOD)
          DA(MASTER.SYS1.ABDTMOD)
          SHR .
      REP DDDEF(ABDTMSG)
          DA(MASTER.SYS1.ABDTMSG)
          SHR .
      REP DDDEF(ABDTPNL0)
          DA(MASTER.SYS1.ABDTPNL0)
          SHR .
      REP DDDEF(ABDTSAMP)
          DA(MASTER.SYS1.ABDTSAMP)
          SHR .
      REP DDDEF(ABLSCLI0)
          DA(MASTER.SYS1.ABLSCLI0)
          SHR .
      REP DDDEF(ABLSKEL0)
          DA(MASTER.SYS1.ABLSKEL0)
          SHR .
      REP DDDEF(ABLSMSG0)
          DA(MASTER.SYS1.ABLSMSG0)
          SHR .
      REP DDDEF(ABLSPNL0)
          DA(MASTER.SYS1.ABLSPNL0)
          SHR .
      REP DDDEF(ABLSTBL0)
          DA(MASTER.SYS1.ABLSTBL0)
          SHR .
      REP DDDEF(ABMFMOD0)
          DA(MASTER.SYS1.ABMFMOD0)
          SHR .
      REP DDDEF(ABPXEXEC)
          DA(MASTER.SYS1.ABPXEXEC)
          SHR .
      REP DDDEF(ABPXMENU)
          DA(MASTER.SYS1.ABPXMENU)
          SHR .
      REP DDDEF(ABPXMOD1)
          DA(MASTER.SYS1.ABPXMOD1)
          SHR .
      REP DDDEF(ABPXPENU)
          DA(MASTER.SYS1.ABPXPENU)
          SHR .
      REP DDDEF(ABPXSPC)
          DA(MASTER.SYS1.ABPXSPC)
          SHR .
      REP DDDEF(ABPXTENU)
          DA(MASTER.SYS1.ABPXTENU)
          SHR .
      REP DDDEF(ACBDCLST)
          DA(MASTER.SYS1.ACBDCLST)
          SHR .
      REP DDDEF(ACBDEHFS)
          DA(MASTER.SYS1.ACBDEHFS)
          SHR .
      REP DDDEF(ACBDHENU)
          DA(MASTER.SYS1.ACBDHENU)
          SHR .
      REP DDDEF(ACBDMENU)
          DA(MASTER.SYS1.ACBDMENU)
          SHR .
      REP DDDEF(ACBDMOD1)
          DA(MASTER.SYS1.ACBDMOD1)
          SHR .
      REP DDDEF(ACBDMOD2)
          DA(MASTER.SYS1.ACBDMOD2)
          SHR .
      REP DDDEF(ACBDPENU)
          DA(MASTER.SYS1.ACBDPENU)
          SHR .
      REP DDDEF(ACBDTEMP)
          DA(MASTER.SYS1.ACBDTEMP)
          SHR .
      REP DDDEF(ACBDTENU)
          DA(MASTER.SYS1.ACBDTENU)
          SHR .
      REP DDDEF(ACBRDBRM)
          DA(MASTER.SYS1.ACBRDBRM)
          SHR .
      REP DDDEF(ACBRMOD0)
          DA(MASTER.SYS1.ACBRMOD0)
          SHR .
      REP DDDEF(ACDMMOD0)
          DA(MASTER.SYS1.ACDMMOD0)
          SHR .
      REP DDDEF(ACDRMODS)
          DA(MASTER.SYS1.ACDRMODS)
          SHR .
      REP DDDEF(ACDRTABL)
          DA(MASTER.SYS1.ACDRTABL)
          SHR .
      REP DDDEF(ACLMMOD0)
          DA(MASTER.SYS1.ACLMMOD0)
          SHR .
      REP DDDEF(ACMDLIB)
          DA(MASTER.SYS1.ACMDLIB)
          SHR .
      REP DDDEF(ACSSLIB)
          DA(MASTER.SYS1.ACSSLIB)
          SHR .
      REP DDDEF(ACUNHF)
          DA(MASTER.SYS1.ACUNHF)
          SHR .
      REP DDDEF(ACUNIMG)
          DA(MASTER.SYS1.ACUNIMG)
          SHR .
      REP DDDEF(ACUNJCL)
          DA(MASTER.SYS1.ACUNJCL)
          SHR .
      REP DDDEF(ACUNMAC)
          DA(MASTER.SYS1.ACUNMAC)
          SHR .
      REP DDDEF(ACUNMENU)
          DA(MASTER.SYS1.ACUNMENU)
          SHR .
      REP DDDEF(ACUNMJPN)
          DA(MASTER.SYS1.ACUNMJPN)
          SHR .
      REP DDDEF(ACUNMOD)
          DA(MASTER.SYS1.ACUNMOD)
          SHR .
      REP DDDEF(ACUNREXX)
          DA(MASTER.SYS1.ACUNREXX)
          SHR .
      REP DDDEF(ACUNSAMP)
          DA(MASTER.SYS1.ACUNSAMP)
          SHR .
      REP DDDEF(ACUNTBL)
          DA(MASTER.SYS1.ACUNTBL)
          SHR .
      REP DDDEF(ADBBLIB)
          DA(MASTER.SYS1.ADBBLIB)
          SHR .
      REP DDDEF(ADFMAC1)
          DA(MASTER.SYS1.ADFMAC1)
          SHR .
      REP DDDEF(ADFPMOD0)
          DA(MASTER.SYS1.ADFPMOD0)
          SHR .
      REP DDDEF(ADFQMLIB)
          DA(MASTER.SYS1.ADFQMLIB)
          SHR .
      REP DDDEF(ADFQPLIB)
          DA(MASTER.SYS1.ADFQPLIB)
          SHR .
      REP DDDEF(ADFQPSRC)
          DA(MASTER.SYS1.ADFQPSRC)
          SHR .
      REP DDDEF(ADGTCLIB)
          DA(MASTER.SYS1.ADGTCLIB)
          SHR .
      REP DDDEF(ADGTLLIB)
          DA(MASTER.SYS1.ADGTLLIB)
          SHR .
      REP DDDEF(ADGTMLIB)
          DA(MASTER.SYS1.ADGTMLIB)
          SHR .
      REP DDDEF(ADGTPLIB)
          DA(MASTER.SYS1.ADGTPLIB)
          SHR .
      REP DDDEF(ADGTPSRC)
          DA(MASTER.SYS1.ADGTPSRC)
          SHR .
      REP DDDEF(ADGTSLIB)
          DA(MASTER.SYS1.ADGTSLIB)
          SHR .
      REP DDDEF(ADGTTLIB)
          DA(MASTER.SYS1.ADGTTLIB)
          SHR .
      REP DDDEF(ADGTTSRC)
          DA(MASTER.SYS1.ADGTTSRC)
          SHR .
      REP DDDEF(ADMSSVM)
          DA(MASTER.SYS1.ADMSSVM)
          SHR .
      REP DDDEF(AEDGEXE1)
          DA(MASTER.SYS1.AEDGEXE1)
          SHR .
      REP DDDEF(AEDGMENU)
          DA(MASTER.SYS1.AEDGMENU)
          SHR .
      REP DDDEF(AEDGMOD1)
          DA(MASTER.SYS1.AEDGMOD1)
          SHR .
      REP DDDEF(AEDGPENU)
          DA(MASTER.SYS1.AEDGPENU)
          SHR .
      REP DDDEF(AEDGPSRC)
          DA(MASTER.SYS1.AEDGPSRC)
          SHR .
      REP DDDEF(AEDGSRC1)
          DA(MASTER.SYS1.AEDGSRC1)
          SHR .
      REP DDDEF(AERBCLS)
          DA(MASTER.SYS1.AERBCLS)
          SHR .
      REP DDDEF(AERBMAC1)
          DA(MASTER.SYS1.AERBMAC1)
          SHR .
      REP DDDEF(AERBMENU)
          DA(MASTER.SYS1.AERBMENU)
          SHR .
      REP DDDEF(AERBMOD1)
          DA(MASTER.SYS1.AERBMOD1)
          SHR .
      REP DDDEF(AERBPENU)
          DA(MASTER.SYS1.AERBPENU)
          SHR .
      REP DDDEF(AERBPWSV)
          DA(MASTER.SYS1.AERBPWSV)
          SHR .
      REP DDDEF(AERBT)
          DA(MASTER.SYS1.AERBT)
          SHR .
      REP DDDEF(AERBTENU)
          DA(MASTER.SYS1.AERBTENU)
          SHR .
      REP DDDEF(AFOMDATA)
          DA(MASTER.SYS1.AFOMDATA)
          SHR .
      REP DDDEF(AFOMHDRS)
          DA(MASTER.SYS1.AFOMHDRS)
          SHR .
      REP DDDEF(AFOMHFS)
          DA(MASTER.SYS1.AFOMHFS)
          SHR .
      REP DDDEF(AFOMMOD1)
          DA(MASTER.SYS1.AFOMMOD1)
          SHR .
      REP DDDEF(AFOMOBJ)
          DA(MASTER.SYS1.AFOMOBJ)
          SHR .
      REP DDDEF(AGDEMOD0)
          DA(MASTER.SYS1.AGDEMOD0)
          SHR .
      REP DDDEF(AGENLIB)
          DA(MASTER.SYS1.AGENLIB)
          SHR .
      REP DDDEF(AGFTAJL1)
          DA(MASTER.SYS1.AGFTAJL1)
          SHR .
      REP DDDEF(AGFTAMD1)
          DA(MASTER.SYS1.AGFTAMD1)
          SHR .
      REP DDDEF(AGFUMOD1)
          DA(MASTER.SYS1.AGFUMOD1)
          SHR .
      REP DDDEF(AHASMAC)
          DA(MASTER.SYS1.AHASMAC)
          SHR .
      REP DDDEF(AHASMENU)
          DA(MASTER.SYS1.AHASMENU)
          SHR .
      REP DDDEF(AHASMOD)
          DA(MASTER.SYS1.AHASMOD)
          SHR .
      REP DDDEF(AHASPARM)
          DA(MASTER.SYS1.AHASPARM)
          SHR .
      REP DDDEF(AHASPNL0)
          DA(MASTER.SYS1.AHASPNL0)
          SHR .
      REP DDDEF(AHASSAMP)
          DA(MASTER.SYS1.AHASSAMP)
          SHR .
      REP DDDEF(AHASSRC)
          DA(MASTER.SYS1.AHASSRC)
          SHR .
      REP DDDEF(AHELP)
          DA(MASTER.SYS1.AHELP)
          SHR .
      REP DDDEF(AHELPENP)
          DA(MASTER.SYS1.AHELPENP)
          SHR .
      REP DDDEF(AICECLIB)
          DA(MASTER.SYS1.AICECLIB)
          SHR .
      REP DDDEF(AICELIB)
          DA(MASTER.SYS1.AICELIB)
          SHR .
      REP DDDEF(AICEMENU)
          DA(MASTER.SYS1.AICEMENU)
          SHR .
      REP DDDEF(AICEPENU)
          DA(MASTER.SYS1.AICEPENU)
          SHR .
      REP DDDEF(AICESAMP)
          DA(MASTER.SYS1.AICESAMP)
          SHR .
      REP DDDEF(AICESLIB)
          DA(MASTER.SYS1.AICESLIB)
          SHR .
      REP DDDEF(AICESRCE)
          DA(MASTER.SYS1.AICESRCE)
          SHR .
      REP DDDEF(AICETLIB)
          DA(MASTER.SYS1.AICETLIB)
          SHR .
      REP DDDEF(AICEUSER)
          DA(MASTER.SYS1.AICEUSER)
          SHR .
      REP DDDEF(AICQAB)
          DA(MASTER.SYS1.AICQAB)
          SHR .
      REP DDDEF(AICQILIB)
          DA(MASTER.SYS1.AICQILIB)
          SHR .
      REP DDDEF(AICQMAC1)
          DA(MASTER.SYS1.AICQMAC1)
          SHR .
      REP DDDEF(AICQMAC2)
          DA(MASTER.SYS1.AICQMAC2)
          SHR .
      REP DDDEF(AICQMAC3)
          DA(MASTER.SYS1.AICQMAC3)
          SHR .
      REP DDDEF(AICQMAC4)
          DA(MASTER.SYS1.AICQMAC4)
          SHR .
      REP DDDEF(AICQMAC5)
          DA(MASTER.SYS1.AICQMAC5)
          SHR .
      REP DDDEF(AIEAHDR)
          DA(MASTER.SYS1.AIEAHDR)
          SHR .
      REP DDDEF(AIEWMOD0)
          DA(MASTER.SYS1.AIEWMOD0)
          SHR .
      REP DDDEF(AIFALIB)
          DA(MASTER.SYS1.AIFALIB)
          SHR .
      REP DDDEF(AIGDVBS1)
          DA(MASTER.SYS1.AIGDVBS1)
          SHR .
      REP DDDEF(AIKYHFS)
          DA(MASTER.SYS1.AIKYHFS)
          SHR .
      REP DDDEF(AIMAGE)
          DA(MASTER.SYS1.AIMAGE)
          SHR .
      REP DDDEF(AIMFMOD0)
          DA(MASTER.SYS1.AIMFMOD0)
          SHR .
      REP DDDEF(AINDLMD)
          DA(MASTER.SYS1.AINDLMD)
          SHR .
      REP DDDEF(AISTASGD)
          DA(MASTER.SYS1.AISTASGD)
          SHR .
      REP DDDEF(AISTASN1)
          DA(MASTER.SYS1.AISTASN1)
          SHR .
      REP DDDEF(AISTCMIP)
          DA(MASTER.SYS1.AISTCMIP)
          SHR .
      REP DDDEF(AISTDAT1)
          DA(MASTER.SYS1.AISTDAT1)
          SHR .
      REP DDDEF(AISTDAT2)
          DA(MASTER.SYS1.AISTDAT2)
          SHR .
      REP DDDEF(AISTGDMO)
          DA(MASTER.SYS1.AISTGDMO)
          SHR .
      REP DDDEF(AISTMAC1)
          DA(MASTER.SYS1.AISTMAC1)
          SHR .
      REP DDDEF(AITYHFS)
          DA(MASTER.SYS1.AITYHFS)
          SHR .
      REP DDDEF(ALINKLIB)
          DA(MASTER.SYS1.ALINKLIB)
          SHR .
      REP DDDEF(ALPALIB)
          DA(MASTER.SYS1.ALPALIB)
          SHR .
      REP DDDEF(AMACLIB)
          DA(MASTER.SYS1.AMACLIB)
          SHR .
      REP DDDEF(AMIGLIB)
          DA(MASTER.SYS1.AMIGLIB)
          SHR .
      REP DDDEF(AMODGEN)
          DA(MASTER.SYS1.AMODGEN)
          SHR .
      REP DDDEF(AMSGENP)
          DA(MASTER.SYS1.AMSGENP)
          SHR .
      REP DDDEF(AMSGENU)
          DA(MASTER.SYS1.AMSGENU)
          SHR .
      REP DDDEF(ANFSLIB)
          DA(MASTER.SYS1.ANFSLIB)
          SHR .
      REP DDDEF(ANFSMAC)
          DA(MASTER.SYS1.ANFSMAC)
          SHR .
      REP DDDEF(ANFSSAMP)
          DA(MASTER.SYS1.ANFSSAMP)
          SHR .
      REP DDDEF(ANFSTARB)
          DA(MASTER.SYS1.ANFSTARB)
          SHR .
      REP DDDEF(ANUCLEUS)
          DA(MASTER.SYS1.ANUCLEUS)
          SHR .
      REP DDDEF(AOSACB)
          DA(MASTER.SYS1.AOSACB)
          SHR .
      REP DDDEF(AOSA0)
          DA(MASTER.SYS1.AOSA0)
          SHR .
      REP DDDEF(AOSA1)
          DA(MASTER.SYS1.AOSA1)
          SHR .
      REP DDDEF(AOSBN)
          DA(MASTER.SYS1.AOSBN)
          SHR .
      REP DDDEF(AOSB0)
          DA(MASTER.SYS1.AOSB0)
          SHR .
      REP DDDEF(AOSB3)
          DA(MASTER.SYS1.AOSB3)
          SHR .
      REP DDDEF(AOSCA)
          DA(MASTER.SYS1.AOSCA)
          SHR .
      REP DDDEF(AOSCD)
          DA(MASTER.SYS1.AOSCD)
          SHR .
      REP DDDEF(AOSCE)
          DA(MASTER.SYS1.AOSCE)
          SHR .
      REP DDDEF(AOSC2)
          DA(MASTER.SYS1.AOSC2)
          SHR .
      REP DDDEF(AOSC5)
          DA(MASTER.SYS1.AOSC5)
          SHR .
      REP DDDEF(AOSC6)
          DA(MASTER.SYS1.AOSC6)
          SHR .
      REP DDDEF(AOSD0)
          DA(MASTER.SYS1.AOSD0)
          SHR .
      REP DDDEF(AOSD7)
          DA(MASTER.SYS1.AOSD7)
          SHR .
      REP DDDEF(AOSD8)
          DA(MASTER.SYS1.AOSD8)
          SHR .
      REP DDDEF(AOSG0)
          DA(MASTER.SYS1.AOSG0)
          SHR .
      REP DDDEF(AOSJSC)
          DA(MASTER.SYS1.AOSJSC)
          SHR .
      REP DDDEF(AOST3)
          DA(MASTER.SYS1.AOST3)
          SHR .
      REP DDDEF(AOST4)
          DA(MASTER.SYS1.AOST4)
          SHR .
      REP DDDEF(AOSU0)
          DA(MASTER.SYS1.AOSU0)
          SHR .
      REP DDDEF(AOSXCF)
          DA(MASTER.SYS1.AOSXCF)
          SHR .
      REP DDDEF(AOS00)
          DA(MASTER.SYS1.AOS00)
          SHR .
      REP DDDEF(AOS04)
          DA(MASTER.SYS1.AOS04)
          SHR .
      REP DDDEF(AOS05)
          DA(MASTER.SYS1.AOS05)
          SHR .
      REP DDDEF(AOS06)
          DA(MASTER.SYS1.AOS06)
          SHR .
      REP DDDEF(AOS11)
          DA(MASTER.SYS1.AOS11)
          SHR .
      REP DDDEF(AOS12)
          DA(MASTER.SYS1.AOS12)
          SHR .
      REP DDDEF(AOS24)
          DA(MASTER.SYS1.AOS24)
          SHR .
      REP DDDEF(AOS26)
          DA(MASTER.SYS1.AOS26)
          SHR .
      REP DDDEF(AOS28)
          DA(MASTER.SYS1.AOS28)
          SHR .
      REP DDDEF(AOS32)
          DA(MASTER.SYS1.AOS32)
          SHR .
      REP DDDEF(ASAMPLIB)
          DA(MASTER.SYS1.ASAMPLIB)
          SHR .
      REP DDDEF(ASSFMOD0)
          DA(MASTER.SYS1.ASSFMOD0)
          SHR .
      REP DDDEF(ATSOMAC)
          DA(MASTER.SYS1.ATSOMAC)
          SHR .
      REP DDDEF(AUADS)
          DA(MASTER.SYS1.AUADS)
          SHR .
      REP DDDEF(CBRDBRM)
          DA(MASTER.SYS1.CBRDBRM)
          SHR .
      REP DDDEF(CIPLIB)
          DA(MASTER.SYS1.CIPLIB)
          SHR .
      REP DDDEF(CMDLIB)
          DA(MASTER.SYS1.CMDLIB)
          SHR .
      REP DDDEF(CSSLIB)
          DA(MASTER.SYS1.CSSLIB)
          SHR .
      REP DDDEF(DBBLIB)
          DA(MASTER.SYS1.DBBLIB)
          SHR .
      REP DDDEF(DFQLLIB)
          DA(MASTER.SYS1.DFQLLIB)
          SHR .
      REP DDDEF(DFQMLIB)
          DA(MASTER.SYS1.DFQMLIB)
          SHR .
      REP DDDEF(DFQPLIB)
          DA(MASTER.SYS1.DFQPLIB)
          SHR .
      REP DDDEF(DGTCLIB)
          DA(MASTER.SYS1.DGTCLIB)
          SHR .
      REP DDDEF(DGTLLIB)
          DA(MASTER.SYS1.DGTLLIB)
          SHR .
      REP DDDEF(DGTMLIB)
          DA(MASTER.SYS1.DGTMLIB)
          SHR .
      REP DDDEF(DGTPLIB)
          DA(MASTER.SYS1.DGTPLIB)
          SHR .
      REP DDDEF(DGTSLIB)
          DA(MASTER.SYS1.DGTSLIB)
          SHR .
      REP DDDEF(DGTTLIB)
          DA(MASTER.SYS1.DGTTLIB)
          SHR .
      REP DDDEF(HELP)
          DA(MASTER.SYS1.HELP)
          SHR .
      REP DDDEF(HELPENP)
          DA(MASTER.SYS1.HELPENP)
          SHR .
      REP DDDEF(HHRFCLST)
          DA(MASTER.SYS1.HHRFCLST)
          SHR .
      REP DDDEF(HHRFMSG)
          DA(MASTER.SYS1.HHRFMSG)
          SHR .
      REP DDDEF(HHRFPANL)
          DA(MASTER.SYS1.HHRFPANL)
          SHR .
      REP DDDEF(HHRFSKEL)
          DA(MASTER.SYS1.HHRFSKEL)
          SHR .
      REP DDDEF(HRFCLST)
          DA(MASTER.SYS1.HRFCLST)
          SHR .
      REP DDDEF(HRFMSG)
          DA(MASTER.SYS1.HRFMSG)
          SHR .
      REP DDDEF(HRFPANL)
          DA(MASTER.SYS1.HRFPANL)
          SHR .
      REP DDDEF(HRFSKEL)
          DA(MASTER.SYS1.HRFSKEL)
          SHR .
      REP DDDEF(APARMLIB)
          DA(MASTER.SYS1.IBM.APARMLIB)
          SHR .
      REP DDDEF(APROCLIB)
          DA(MASTER.SYS1.IBM.APROCLIB)
          SHR .
      REP DDDEF(PARMLIB)
          DA(MASTER.SYS1.IBM.PARMLIB)
          SHR .
      REP DDDEF(PROCLIB)
          DA(MASTER.SYS1.IBM.PROCLIB)
          SHR .
      REP DDDEF(IGDVBS1)
          DA(MASTER.SYS1.IGDVBS1)
          SHR .
      REP DDDEF(IMAGELIB)
          DA(MASTER.SYS1.IMAGELIB)
          SHR .
      REP DDDEF(ISAMLPA)
          DA(MASTER.SYS1.ISAMLPA)
          SHR .
      REP DDDEF(LINKLIB)
          DA(MASTER.SYS1.LINKLIB)
          SHR .
      REP DDDEF(LPALIB)
          DA(MASTER.SYS1.LPALIB)
          SHR .
      REP DDDEF(MACLIB)
          DA(MASTER.SYS1.MACLIB)
          SHR .
      REP DDDEF(MIGLIB)
          DA(MASTER.SYS1.MIGLIB)
          SHR .
      REP DDDEF(MODGEN)
          DA(MASTER.SYS1.MODGEN)
          SHR .
      REP DDDEF(MSGENP)
          DA(MASTER.SYS1.MSGENP)
          SHR .
      REP DDDEF(MSGENU)
          DA(MASTER.SYS1.MSGENU)
          SHR .
      REP DDDEF(NFSLIB)
          DA(MASTER.SYS1.NFSLIB)
          SHR .
      REP DDDEF(NFSMAC)
          DA(MASTER.SYS1.NFSMAC)
          SHR .
      REP DDDEF(NFSSAMP)
          DA(MASTER.SYS1.NFSSAMP)
          SHR .
      REP DDDEF(NFSTARB)
          DA(MASTER.SYS1.NFSTARB)
          SHR .
      REP DDDEF(NUCLEUS)
          DA(MASTER.SYS1.NUCLEUS)
          SHR .
      REP DDDEF(SACBCNTL)
          DA(MASTER.SYS1.SACBCNTL)
          SHR .
      REP DDDEF(SADRYLIB)
          DA(MASTER.SYS1.SADRYLIB)
          SHR .
      REP DDDEF(SAMPLIB)
          DA(MASTER.SYS1.SAMPLIB)
          SHR .
      REP DDDEF(SAPPDAT2)
          DA(MASTER.SYS1.SAPPDAT2)
          SHR .
      REP DDDEF(SAPPDAT4)
          DA(MASTER.SYS1.SAPPDAT4)
          SHR .
      REP DDDEF(SAPPMOD1)
          DA(MASTER.SYS1.SAPPMOD1)
          SHR .
      REP DDDEF(SAPPSAMP)
          DA(MASTER.SYS1.SAPPSAMP)
          SHR .
      REP DDDEF(SBDTCLI0)
          DA(MASTER.SYS1.SBDTCLI0)
          SHR .
      REP DDDEF(SBDTCMD)
          DA(MASTER.SYS1.SBDTCMD)
          SHR .
      REP DDDEF(SBDTHELP)
          DA(MASTER.SYS1.SBDTHELP)
          SHR .
      REP DDDEF(SBDTLIB)
          DA(MASTER.SYS1.SBDTLIB)
          SHR .
      REP DDDEF(SBDTLINK)
          DA(MASTER.SYS1.SBDTLINK)
          SHR .
      REP DDDEF(SBDTLPA)
          DA(MASTER.SYS1.SBDTLPA)
          SHR .
      REP DDDEF(SBDTMAC)
          DA(MASTER.SYS1.SBDTMAC)
          SHR .
      REP DDDEF(SBDTMSG)
          DA(MASTER.SYS1.SBDTMSG)
          SHR .
      REP DDDEF(SBDTPNL0)
          DA(MASTER.SYS1.SBDTPNL0)
          SHR .
      REP DDDEF(SBDTSAMP)
          DA(MASTER.SYS1.SBDTSAMP)
          SHR .
      REP DDDEF(SBLSCLI0)
          DA(MASTER.SYS1.SBLSCLI0)
          SHR .
      REP DDDEF(SBLSKEL0)
          DA(MASTER.SYS1.SBLSKEL0)
          SHR .
      REP DDDEF(SBLSMSG0)
          DA(MASTER.SYS1.SBLSMSG0)
          SHR .
      REP DDDEF(SBLSPNL0)
          DA(MASTER.SYS1.SBLSPNL0)
          SHR .
      REP DDDEF(SBLSTBL0)
          DA(MASTER.SYS1.SBLSTBL0)
          SHR .
      REP DDDEF(SBPXEXEC)
          DA(MASTER.SYS1.SBPXEXEC)
          SHR .
      REP DDDEF(SBPXMENU)
          DA(MASTER.SYS1.SBPXMENU)
          SHR .
      REP DDDEF(SBPXPENU)
          DA(MASTER.SYS1.SBPXPENU)
          SHR .
      REP DDDEF(SBPXTENU)
          DA(MASTER.SYS1.SBPXTENU)
          SHR .
      REP DDDEF(SCBDCLST)
          DA(MASTER.SYS1.SCBDCLST)
          SHR .
      REP DDDEF(SCBDHENU)
          DA(MASTER.SYS1.SCBDHENU)
          SHR .
      REP DDDEF(SCBDMENU)
          DA(MASTER.SYS1.SCBDMENU)
          SHR .
      REP DDDEF(SCBDPENU)
          DA(MASTER.SYS1.SCBDPENU)
          SHR .
      REP DDDEF(SCBDTEMP)
          DA(MASTER.SYS1.SCBDTEMP)
          SHR .
      REP DDDEF(SCBDTENU)
          DA(MASTER.SYS1.SCBDTENU)
          SHR .
      REP DDDEF(SCDRTABL)
          DA(MASTER.SYS1.SCDRTABL)
          SHR .
      REP DDDEF(SCUNHF)
          DA(MASTER.SYS1.SCUNHF)
          SHR .
      REP DDDEF(SCUNIMG)
          DA(MASTER.SYS1.SCUNIMG)
          SHR .
      REP DDDEF(SCUNJCL)
          DA(MASTER.SYS1.SCUNJCL)
          SHR .
      REP DDDEF(SCUNMENU)
          DA(MASTER.SYS1.SCUNMENU)
          SHR .
      REP DDDEF(SCUNMJPN)
          DA(MASTER.SYS1.SCUNMJPN)
          SHR .
      REP DDDEF(SCUNREXX)
          DA(MASTER.SYS1.SCUNREXX)
          SHR .
      REP DDDEF(SCUNTBL)
          DA(MASTER.SYS1.SCUNTBL)
          SHR .
      REP DDDEF(SDFQPSRC)
          DA(MASTER.SYS1.SDFQPSRC)
          SHR .
      REP DDDEF(SDGTPSRC)
          DA(MASTER.SYS1.SDGTPSRC)
          SHR .
      REP DDDEF(SDGTTSRC)
          DA(MASTER.SYS1.SDGTTSRC)
          SHR .
      REP DDDEF(SDMSSVM)
          DA(MASTER.SYS1.SDMSSVM)
          SHR .
      REP DDDEF(SDMSSVMS)
          DA(MASTER.SYS1.SDMSSVMS)
          SHR .
      REP DDDEF(SDWWDLPA)
          DA(MASTER.SYS1.SDWWDLPA)
          SHR .
      REP DDDEF(SEDGEXE1)
          DA(MASTER.SYS1.SEDGEXE1)
          SHR .
      REP DDDEF(SEDGMENU)
          DA(MASTER.SYS1.SEDGMENU)
          SHR .
      REP DDDEF(SEDGPENU)
          DA(MASTER.SYS1.SEDGPENU)
          SHR .
      REP DDDEF(SEDGPSRC)
          DA(MASTER.SYS1.SEDGPSRC)
          SHR .
      REP DDDEF(SERBCLS)
          DA(MASTER.SYS1.SERBCLS)
          SHR .
      REP DDDEF(SERBLINK)
          DA(MASTER.SYS1.SERBLINK)
          SHR .
      REP DDDEF(SERBLPA)
          DA(MASTER.SYS1.SERBLPA)
          SHR .
      REP DDDEF(SERBMENU)
          DA(MASTER.SYS1.SERBMENU)
          SHR .
      REP DDDEF(SERBPENU)
          DA(MASTER.SYS1.SERBPENU)
          SHR .
      REP DDDEF(SERBPWSV)
          DA(MASTER.SYS1.SERBPWSV)
          SHR .
      REP DDDEF(SERBT)
          DA(MASTER.SYS1.SERBT)
          SHR .
      REP DDDEF(SERBTENU)
          DA(MASTER.SYS1.SERBTENU)
          SHR .
      REP DDDEF(SFOMDATA)
          DA(MASTER.SYS1.SFOMDATA)
          SHR .
      REP DDDEF(SFOMHDRS)
          DA(MASTER.SYS1.SFOMHDRS)
          SHR .
      REP DDDEF(SFOMOBJ)
          DA(MASTER.SYS1.SFOMOBJ)
          SHR .
      REP DDDEF(SHASLINK)
          DA(MASTER.SYS1.SHASLINK)
          SHR .
      REP DDDEF(SHASMAC)
          DA(MASTER.SYS1.SHASMAC)
          SHR .
      REP DDDEF(SHASMENU)
          DA(MASTER.SYS1.SHASMENU)
          SHR .
      REP DDDEF(SHASMIG)
          DA(MASTER.SYS1.SHASMIG)
          SHR .
      REP DDDEF(SHASPARM)
          DA(MASTER.SYS1.SHASPARM)
          SHR .
      REP DDDEF(SHASPNL0)
          DA(MASTER.SYS1.SHASPNL0)
          SHR .
      REP DDDEF(SHASSAMP)
          DA(MASTER.SYS1.SHASSAMP)
          SHR .
      REP DDDEF(SHASSRC)
          DA(MASTER.SYS1.SHASSRC)
          SHR .
      REP DDDEF(SICECLIB)
          DA(MASTER.SYS1.SICECLIB)
          SHR .
      REP DDDEF(SICELINK)
          DA(MASTER.SYS1.SICELINK)
          SHR .
      REP DDDEF(SICELPA)
          DA(MASTER.SYS1.SICELPA)
          SHR .
      REP DDDEF(SICEMENU)
          DA(MASTER.SYS1.SICEMENU)
          SHR .
      REP DDDEF(SICEPENU)
          DA(MASTER.SYS1.SICEPENU)
          SHR .
      REP DDDEF(SICEPROC)
          DA(MASTER.SYS1.SICEPROC)
          SHR .
      REP DDDEF(SICESAMP)
          DA(MASTER.SYS1.SICESAMP)
          SHR .
      REP DDDEF(SICESLIB)
          DA(MASTER.SYS1.SICESLIB)
          SHR .
      REP DDDEF(SICESRCE)
          DA(MASTER.SYS1.SICESRCE)
          SHR .
      REP DDDEF(SICETLIB)
          DA(MASTER.SYS1.SICETLIB)
          SHR .
      REP DDDEF(SICEUSER)
          DA(MASTER.SYS1.SICEUSER)
          SHR .
      REP DDDEF(SIEAHDR)
          DA(MASTER.SYS1.SIEAHDR.H)
          SHR .
      REP DDDEF(SIFALIB)
          DA(MASTER.SYS1.SIFALIB)
          SHR .
      REP DDDEF(SIOALMOD)
          DA(MASTER.SYS1.SIOALMOD)
          SHR .
      REP DDDEF(SISTASGD)
          DA(MASTER.SYS1.SISTASGD)
          SHR .
      REP DDDEF(SISTASN1)
          DA(MASTER.SYS1.SISTASN1)
          SHR .
      REP DDDEF(SISTCLIB)
          DA(MASTER.SYS1.SISTCLIB)
          SHR .
      REP DDDEF(SISTCMIP)
          DA(MASTER.SYS1.SISTCMIP)
          SHR .
      REP DDDEF(SISTDAT1)
          DA(MASTER.SYS1.SISTDAT1)
          SHR .
      REP DDDEF(SISTDAT2)
          DA(MASTER.SYS1.SISTDAT2)
          SHR .
      REP DDDEF(SISTGDMO)
          DA(MASTER.SYS1.SISTGDMO)
          SHR .
      REP DDDEF(SISTMAC1)
          DA(MASTER.SYS1.SISTMAC1)
          SHR .
      REP DDDEF(SORTLIB)
          DA(MASTER.SYS1.SORTLIB)
          SHR .
      REP DDDEF(SORTLPA)
          DA(MASTER.SYS1.SORTLPA)
          SHR .
      REP DDDEF(SVCLIB)
          DA(MASTER.SYS1.SVCLIB)
          SHR .
      REP DDDEF(UADS)
          DA(MASTER.SYS1.UADS)
          SHR .
      REP DDDEF(VTAMLIB)
          DA(MASTER.SYS1.VTAMLIB)
          SHR .
      REP DDDEF(AEZADBR1)
          DA(MASTER.TCPIP.AEZADBR1)
          SHR .
      REP DDDEF(AEZAMAC1)
          DA(MASTER.TCPIP.AEZAMAC1)
          SHR .
      REP DDDEF(AEZAMAC2)
          DA(MASTER.TCPIP.AEZAMAC2)
          SHR .
      REP DDDEF(AEZAMAC3)
          DA(MASTER.TCPIP.AEZAMAC3)
          SHR .
      REP DDDEF(AEZAMODS)
          DA(MASTER.TCPIP.AEZAMODS)
          SHR .
      REP DDDEF(AEZARNT1)
          DA(MASTER.TCPIP.AEZARNT1)
          SHR .
      REP DDDEF(AEZARNT2)
          DA(MASTER.TCPIP.AEZARNT2)
          SHR .
      REP DDDEF(AEZARNT3)
          DA(MASTER.TCPIP.AEZARNT3)
          SHR .
      REP DDDEF(AEZARNT4)
          DA(MASTER.TCPIP.AEZARNT4)
          SHR .
      REP DDDEF(AEZAROE1)
          DA(MASTER.TCPIP.AEZAROE1)
          SHR .
      REP DDDEF(AEZAROE2)
          DA(MASTER.TCPIP.AEZAROE2)
          SHR .
      REP DDDEF(AEZAROE3)
          DA(MASTER.TCPIP.AEZAROE3)
          SHR .
      REP DDDEF(AEZASMP1)
          DA(MASTER.TCPIP.AEZASMP1)
          SHR .
      REP DDDEF(AEZAXLTD)
          DA(MASTER.TCPIP.AEZAXLTD)
          SHR .
      REP DDDEF(AEZAXLTK)
          DA(MASTER.TCPIP.AEZAXLTK)
          SHR .
      REP DDDEF(AEZAXLT1)
          DA(MASTER.TCPIP.AEZAXLT1)
          SHR .
      REP DDDEF(AEZAXLT2)
          DA(MASTER.TCPIP.AEZAXLT2)
          SHR .
      REP DDDEF(AEZAXLT3)
          DA(MASTER.TCPIP.AEZAXLT3)
          SHR .
      REP DDDEF(SEZACMAC)
          DA(MASTER.TCPIP.SEZACMAC)
          SHR .
      REP DDDEF(SEZACMTX)
          DA(MASTER.TCPIP.SEZACMTX)
          SHR .
      REP DDDEF(SEZADBCX)
          DA(MASTER.TCPIP.SEZADBCX)
          SHR .
      REP DDDEF(SEZADBRM)
          DA(MASTER.TCPIP.SEZADBRM)
          SHR .
      REP DDDEF(SEZADEFS)
          DA(MASTER.TCPIP.SEZADEFS)
          SHR .
      REP DDDEF(SEZADPIL)
          DA(MASTER.TCPIP.SEZADPIL)
          SHR .
      REP DDDEF(SEZADSIL)
          DA(MASTER.TCPIP.SEZADSIL)
          SHR .
      REP DDDEF(SEZADSIM)
          DA(MASTER.TCPIP.SEZADSIM)
          SHR .
      REP DDDEF(SEZADSIP)
          DA(MASTER.TCPIP.SEZADSIP)
          SHR .
      REP DDDEF(SEZAINST)
          DA(MASTER.TCPIP.SEZAINST)
          SHR .
      REP DDDEF(SEZALIBN)
          DA(MASTER.TCPIP.SEZALIBN)
          SHR .
      REP DDDEF(SEZALNK2)
          DA(MASTER.TCPIP.SEZALNK2)
          SHR .
      REP DDDEF(SEZALOAD)
          DA(MASTER.TCPIP.SEZALOAD)
          SHR .
      REP DDDEF(SEZALPA)
          DA(MASTER.TCPIP.SEZALPA)
          SHR .
      REP DDDEF(SEZAMENU)
          DA(MASTER.TCPIP.SEZAMENU)
          SHR .
      REP DDDEF(SEZANCLS)
          DA(MASTER.TCPIP.SEZANCLS)
          SHR .
      REP DDDEF(SEZANMAC)
          DA(MASTER.TCPIP.SEZANMAC)
          SHR .
      REP DDDEF(SEZANPNL)
          DA(MASTER.TCPIP.SEZANPNL)
          SHR .
      REP DDDEF(SEZAOLDX)
          DA(MASTER.TCPIP.SEZAOLDX)
          SHR .
      REP DDDEF(SEZAPENU)
          DA(MASTER.TCPIP.SEZAPENU)
          SHR .
      REP DDDEF(SEZARNT1)
          DA(MASTER.TCPIP.SEZARNT1)
          SHR .
      REP DDDEF(SEZARNT2)
          DA(MASTER.TCPIP.SEZARNT2)
          SHR .
      REP DDDEF(SEZARNT3)
          DA(MASTER.TCPIP.SEZARNT3)
          SHR .
      REP DDDEF(SEZARNT4)
          DA(MASTER.TCPIP.SEZARNT4)
          SHR .
      REP DDDEF(SEZAROE1)
          DA(MASTER.TCPIP.SEZAROE1)
          SHR .
      REP DDDEF(SEZAROE2)
          DA(MASTER.TCPIP.SEZAROE2)
          SHR .
      REP DDDEF(SEZAROE3)
          DA(MASTER.TCPIP.SEZAROE3)
          SHR .
      REP DDDEF(SEZARPCL)
          DA(MASTER.TCPIP.SEZARPCL)
          SHR .
      REP DDDEF(SEZATCP)
          DA(MASTER.TCPIP.SEZATCP)
          SHR .
      REP DDDEF(SEZATCPX)
          DA(MASTER.TCPIP.SEZATCPX)
          SHR .
      REP DDDEF(SEZATELX)
          DA(MASTER.TCPIP.SEZATELX)
          SHR .
      REP DDDEF(SEZAXAWL)
          DA(MASTER.TCPIP.SEZAXAWL)
          SHR .
      REP DDDEF(SEZAXLD1)
          DA(MASTER.TCPIP.SEZAXLD1)
          SHR .
      REP DDDEF(SEZAXLD2)
          DA(MASTER.TCPIP.SEZAXLD2)
          SHR .
      REP DDDEF(SEZAXMLB)
          DA(MASTER.TCPIP.SEZAXMLB)
          SHR .
      REP DDDEF(SEZAXTLB)
          DA(MASTER.TCPIP.SEZAXTLB)
          SHR .
      REP DDDEF(SEZAX11L)
          DA(MASTER.TCPIP.SEZAX11L)
          SHR .
    ENDUCL .
  SET BDY(MVSD100) .
    UCLIN .
    REP DDDEF(SYSLIB) CONCAT(
                AAFHSRC1
                AASMMAC1
                AASMMAC2
                ACEESRC1
                ACNMMAC1
                ACUNMAC
                AEDCSRC6
                AEPWSRC1
                AERBMAC1
                AEZAMAC1
                AEZAMAC2
                AEZAMAC3
                AGENLIB
                AHASMAC
                AICEUSER
                AIGZSRC1
                AISFSRC
                AISTMAC1
                AMACLIB
                AMODGEN
                ATSOMAC
                            ) .
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
    REP DDDEF(SYSLIB) CONCAT(
                SMPMTS
                MACLIB
                MODGEN
                SISTMAC1
                SEPWMAC1
                SICEUSER
                SISFSRC
                SASMMAC1
                SASMSAM1
                SCEEMAC
                SHASMAC
                SCNMMAC1
                SEZACMAC
                SADMSAM
                SASMMAC2
                AAFHSRC1
                AASMMAC1
                AASMMAC2
                ACEESRC1
                ACNMMAC1
                ACUNMAC
                AEDCSRC6
                AEPWSRC1
                AERBMAC1
                AEZAMAC1
                AEZAMAC2
                AEZAMAC3
                AGENLIB
                AHASMAC
                AICEUSER
                AIGZSRC1
                AISFSRC
                AISTMAC1
                AMACLIB
                AMODGEN
                ATSOMAC
                            ) .
    ENDUCL .
  RESETRC .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,CSIUPD),(4000,LT))
//*
//*--------------------------------------------------------------------
//* LIST A FUNCTION SYSMOD IN EACH ZONE TO VERIFY EVERYTHING IS OK
//*--------------------------------------------------------------------
//ZTEST   EXEC PGM=GIMSMP,REGION=0M,COND=(4000,LT)
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,DISP=SHR
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
   SET BDY(MVST100) .
   LIST SYSMOD(HJVA130) .
   SET BDY(MVSD100) .
   LIST SYSMOD(HJVA130) .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ZTEST),(4000,LT))
//*
./ ADD NAME=C2UPDDDD 0114-04350-04350-1300-00309-00310-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*----------------------------------------------------------------
//* DOC: C2UPDDDD UPDATES DDDEFS IN THE GLOBAL, TARGET AND DLIB ZONES.
//*      IT ALSO BUILDS THE CALLLINK JOB IF IT IS NEEDED.
//*
//*
//* IN THIS JOB:
//*
//* - STEP C2UPDDDD UPDATES THE DDDEFS.
//* - STEP CHKSMP SETS THE RETURN CODE BASED ON THE SMP/E LEVEL
//*   USED FOR THE INSTALLATION. (STEP WILL BE GENERATED IF
//*   THERE ARE CALLLIBS SPECIFIED)
//* - STEP STOREJOB CREATES A CALLLINK JOB THAT USES THE SMP/E
//*   LINK LMODS COMMAND ON SYSTEMS WITH LEVELS OF SMP/E HIGHER THEN
//*   THAN V3R1.
//* - STEP CALLREP RUNS WHEN THE DETECTED LEVEL OF SMP/E IS BELOW
//*   THE LEVEL SPECIFIED ON THE SMPLEVEL PARAMETER IN THE CHKSMP
//*   STEP.
//* - STEP COMJOBC RUNS WHEN THE DETECTED LEVEL OF SMP/E IS BELOW
//*   THE LEVEL SPECIFIED ON THE SMPLEVEL PARAMETER IN THE CHKSMP
//*   STEP.
//*
//* NOTE: RUN THE CALLREP AND COMJOBC STEPS IF YOUR SMP/E IS LOWER
//*       THAN THAT SPECIFIED ON THE SMPLEVEL PARAMETER OF THE
//*       CHKSMP STEP.
//*
//* STEP       MAXIMUM ACCEPTABLE RETURN CODE
//* ---------  ------------------------------
//* C2UPDDDD                 4
//* CHKSMP                   4 (IF RUN)
//* STOREJOB                 0 (IF RUN)
//* CALLREP                  4 (IF RUN)
//* COMJOBC                  0 (IF RUN)
//*
//* -------------------------------------------------------------
//C2UPDDDD  EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DISP=SHR,DSN=MASTER.SYS1.MIGLIB
//SMPCSI   DD DISP=SHR,
//         DSN=PRIME.SMPE.GLOBAL.CSI
//SMPPTS   DD DISP=SHR,
//         DSN=PRIME.SMPE.SMPPTS
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPPUNCH DD DUMMY
//SMPJCLIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
    UCLIN .
    REP DDDEF(SYSUT1  ) UNIT(SYSALLDA).
    REP DDDEF(SYSUT2  ) UNIT(SYSALLDA).
    REP DDDEF(SYSUT3  ) UNIT(SYSALLDA).
    REP DDDEF(SYSUT4  ) UNIT(SYSALLDA).
      REP DDDEF(SMPLOG)
          DATASET(PRIME.SMPE.SMPGLOG)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(PRIME.SMPE.SMPGLOGA)
          MOD .
      REP DDDEF(SMPPTS)
          DATASET(PRIME.SMPE.SMPPTS)
          SHR .
      REP DDDEF(SMPTLIB)
          DSPREFIX(SYS1.MVS)
          VOLUME(C4RES1)
          UNIT(SYSALLDA) .
    ENDUCL .
  SET BDY(MVST100) .
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
      CHANGE   PATH('/Service/'*,
                    '/'*) .
      CHANGE   PATH('/'*,
                    '/Service/'*) .
    ENDZEDIT .
    UCLIN .
    REP DDDEF(SYSUT1  ) UNIT(SYSALLDA)
      CYL SPACE(350,50).
    REP DDDEF(SYSUT2  ) UNIT(SYSALLDA)
      CYL SPACE(60,50).
    REP DDDEF(SYSUT3  ) UNIT(SYSALLDA)
      CYL SPACE(60,50).
    REP DDDEF(SYSUT4  ) UNIT(SYSALLDA)
      CYL SPACE(60,50).
    REP DDDEF(SMPWRK1 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(2106 210) BLK(3120) DIR(150).
    REP DDDEF(SMPWRK2 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(2106 210) BLK(3120) DIR(150).
    REP DDDEF(SMPWRK3 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(9000 9000) BLK(3120) DIR(990).
    REP DDDEF(SMPWRK4 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(2106 210) BLK(3120) DIR(150).
    REP DDDEF(SMPWRK6 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(30 30) CYL DIR(1500).
      REP DDDEF(SMPLTS)
          DATASET(PRIME.SMPE.MVST100.SMPLTS)
          SHR .
      REP DDDEF(SMPMTS)
          DATASET(PRIME.SMPE.MVST100.SMPMTS)
          SHR .
      REP DDDEF(SMPSCDS)
          DATASET(PRIME.SMPE.MVST100.SMPSCDS)
          SHR .
      REP DDDEF(SMPSTS)
          DATASET(PRIME.SMPE.MVST100.SMPSTS)
          SHR .
      REP DDDEF(SMPLOG)
          DATASET(PRIME.SMPE.MVST100.SMPTLOG)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(PRIME.SMPE.MVST100.SMPTLOGA)
          MOD .
      REP DDDEF(SMPPTS)
          DATASET(PRIME.SMPE.SMPPTS)
          SHR .
    ENDUCL .
  SET BDY(MVSD100) .
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
    UCLIN .
    REP DDDEF(SYSUT1  ) UNIT(SYSALLDA)
      CYL SPACE(350,50).
    REP DDDEF(SYSUT2  ) UNIT(SYSALLDA)
      CYL SPACE(60,50).
    REP DDDEF(SYSUT3  ) UNIT(SYSALLDA)
      CYL SPACE(60,50).
    REP DDDEF(SYSUT4  ) UNIT(SYSALLDA)
      CYL SPACE(60,50).
    REP DDDEF(SMPWRK1 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(2106 210) BLK(3120) DIR(150).
    REP DDDEF(SMPWRK2 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(2106 210) BLK(3120) DIR(150).
    REP DDDEF(SMPWRK3 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(9000 9000) BLK(3120) DIR(990).
    REP DDDEF(SMPWRK4 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(2106 210) BLK(3120) DIR(150).
    REP DDDEF(SMPWRK6 ) NEW DELETE UNIT(SYSALLDA)
      SPACE(30 30) CYL DIR(1500).
      REP DDDEF(SMPLOG)
          DATASET(PRIME.SMPE.MVSD100.SMPDLOG)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(PRIME.SMPE.MVSD100.SMPDLOGA)
          MOD .
      REP DDDEF(SMPMTS)
          DATASET(PRIME.SMPE.MVST100.SMPMTS)
          SHR .
      REP DDDEF(SMPSCDS)
          DATASET(PRIME.SMPE.MVST100.SMPSCDS)
          SHR .
      REP DDDEF(SMPSTS)
          DATASET(PRIME.SMPE.MVST100.SMPSTS)
          SHR .
      REP DDDEF(SMPPTS)
          DATASET(PRIME.SMPE.SMPPTS)
          SHR .
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
      REP DDDEF(SDFHLOAD)
          DA(CICS.SDFHLOAD)
          SHR .
      REP DDDEF(SDFHEXCI)
          DA(CICS.SDFHEXCI)
          SHR .
      REP DDDEF(RESLIB)
          DA(IMS.RESLIB)
          SHR .
      REP DDDEF(COB2LIB)
          DA(SYS1.COB2LIB)
          SHR .
    ENDUCL .
/*
//*-----------------------------------------------------------------
//*
//* THE FOLLOWING STEP CHECKS THE LEVEL OF SMP/E USED FOR
//* INSTALLATION. IF THE LEVEL OF SMP/E USED IS LOWER THAN THE
//* VERSION, RELEASE AND MODIFICATION LEVEL SPECIFIED ON THE
//* SMPLEVEL PARAMENTER, THE STEP WILL END WITH RETURN CODE 4.
//* IF THE LEVEL OF SMP/E USED IS EQUAL TO OR HIGHER THAN THE
//* VERSION, RELEASE AND MODIFICATION LEVEL SPECIFIED ON THE
//* SMPLEVEL PARAMETER, THE STEP WILL END WITH RETURN CODE 0.
//*
//* THE FORMAT OF SMPLEVEL IS SMPLEVEL=VVRRMM, WHERE VV=VERSION,
//* RR=RELEASE AND MM=MODIFICATION LEVEL.
//*
//* ----------------------------------------------------------------
//*
//CHKSMP   EXEC PGM=CPPSMPLV,PARM='/SMPLEVEL=030200',COND=(4000,LT)
//STEPLIB  DD DSN=SUPPLIED.EXAMPL.SCPPLOAD,DISP=SHR
//         DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//MSGINV   DD DSN=SUPPLIED.EXAMPL.SCPPEENU,DISP=SHR
//SYSPRINT DD SYSOUT=*
//*
//NOTOK    EXEC PGM=MAXRETCD,COND=(4,GE,CHKSMP)
/*
//   IF (CHKSMP.RC = 0) THEN
//*-----------------------------------------------------------------
//*
//* THE FOLLOWING STEP RUNS WHEN THE LEVEL OF SMP/E USED IS
//* EQUAL TO OR HIGHER THAN THE LEVEL SPECIFIED IN THE CHKSMP STEP
//* AND THE ORDER CONTAINS EXTERNAL CALL LIBRARIES.
//*
//*-----------------------------------------------------------------
/*
//STOREJOB EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT2   DD DISP=SHR,
//  DSN=SUPPLIED.SCPPSENU(CALLLINK)
//SYSUT1   DD DATA,DLM=##
//LNKLMODS EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DISP=SHR,DSN=PRIME.SMPE.GLOBAL.CSI
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPCNTL  DD *
   SET BDY(MVST100) .
     LINK LMODS CALLLIBS (
                        SDFHLOAD
                        SDFHEXCI
                        RESLIB
                        COB2LIB
                      ) .
/*
##
//      ENDIF
//    IF (CHKSMP.RC = 4)  THEN
//*
//*--------------------------------------------------------------
//*
//* THE FOLLOWING STEP RUNS WHEN THE LEVEL OF SMP/E USED IS
//* BELOW THE LEVEL SPECIFIED IN THE CHKSMP STEP.
//*
//*--------------------------------------------------------------
//*
//CALLREP  EXEC PGM=GIMSMP,REGION=0M,COND=(4000,LT)
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,DISP=SHR
//SMPCSI   DD DISP=SHR,DSN=PRIME.SMPE.GLOBAL.CSI
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPPUNCH DD DISP=SHR,
//  DSN=SUPPLIED.SCPPSENU(CALLLINK)
//PDSJOB   DD DSN=SUPPLIED.SCPPSENU,
//            DISP=SHR
//SMPJCLIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    REPORT CALLLIBS (
                    SDFHLOAD
                    SDFHEXCI
                    RESLIB
                    COB2LIB
                    )
          ZONES     (
                     MVST100
                    )
           JOBCARD(PDSJOB,JOBIND) .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CALLREP),(4000,LT))
//      ENDIF
//*
//*--------------------------------------------------------------
//*
//* THIS STEP WILL COMMENT OUT THE JOBCARD THAT WILL BE GENERATED
//* FOR THE CALLLINK JOB IN SCPPSENU.
//*
//*---------------------------------------------------------------
//COMJOBC   EXEC PGM=IKJEFT01,DYNAMNBR=99,COND=(4000,LT)
//SYSEXEC   DD DSN=SUPPLIED.SCPPCENU,DISP=SHR
//CALLLKDD  DD DSN=SUPPLIED.SCPPSENU(CALLLINK),
//             DISP=SHR
//SYSTSPRT  DD SYSOUT=*
//SYSTSIN   DD *
 PROFILE PREFIX(IBMUSER)
 %CPPERJOB
/*
//NOTOK     EXEC PGM=MAXRETCD,COND=((0,GE,COMJOBC),(4000,LT))
./ ADD NAME=D0APOSTI 0114-04350-04350-1300-00027-00028-00000-HOWTO
RUNNING POST-INSTALLATION JOBS ON THE DRIVING SYSTEM

This chapter describes the post-installation jobs that you run
on your driving system.
Jobs that require the use of an assembler or  SMP/E  have been
updated with STEPLIB or JOBLIB DD statements that refer to the
target system libraries.  Also,job references to target system
data sets have been updated to  include  the  system  specific
alias (SSA)  or  volume  information  for  the  target  system
libraries.    Do  not  remove  these  DD  statements  and  SSA
qualifiers from the jobs.
You must APF-authorize the target system's SASMMOD1 and MIGLIB
data sets on the driving system.
If you do not have the driving  system's  Language Environment
(LE) data set SCEERUN in your LNKLST concatenation,  you  must
add this data set to the STEPLIB concatenation for  the  post-
installation jobs.

  +--- REFERENCES TO OTHER BOOKS -----------------------------------+
  |                                                                 |
  | Throughout this section, this book references information       |
  | in other books.  For the most current titles and order          |
  | numbers of the books for all products that are part of z/OS,    |
  | see z/OS Information Roadmap.  Similarly, for OS/390 products,  |
  | see OS/390 Information Roadmap.                                 |
  |                                                                 |
  +-----------------------------------------------------------------+
./ ADD NAME=D0BJES2  0114-04350-04350-1300-00019-00019-00000-HOWTO

z/OS 1.4 JES2


JES2 ASSEMBLY

IBM distributes the  JES2 elements  of z/OS after assembling
it using the macros from the level of  z/OS  BCP  with  which
it was originally shipped.   This  is  also  true of any modules
shipped in PTFs for that particular level.   Because  not  every
release of z/OS includes a JES2 element,  this macro assembly
level often differs from the level of macros in your new system.

If you do  source maintenance of your JES2  (for example, if you
have ++SRC  or  ++SRCUPD USERMODs), determine whether you should
reassemble JES2  using the levels of macros  that were delivered
with  your  new  system.   For  more  information, see the z/OS
Program  Directory,    section  Avoid  Macro  Incompatibilities.

./ ADD NAME=D0CJES3  0114-04350-04350-1300-00019-00019-00000-HOWTO

z/OS 1.4 JES3


JES3 ASSEMBLY

IBM distributes the JES3 elements of z/OS after assembling it  using
the  macros  from the level of z/OS BCP with which it was originally
shipped.  This is also true of  any modules shipped in  PTFs  for  that
particular level.  Because not every release of z/OS includes a JES3
element,  this  macro  assembly  level  often differs from the level of
macros in your new system.

If  you  do  source  maintenance of your JES3 (for example, if you have
++SRC or ++SRCUPD USERMODs),  determine  whether  you should reassemble
JES3 using the levels  of  macros  that  were  delivered  with your new
system.    For  more  information,  see  the  z/OS  Program Directory,
section Avoid Macro Incompatibilities.

./ ADD NAME=D0DDFSMS 0114-04350-04350-1300-00129-00135-00000-HOWTO
z/OS 1.4 DFSMSdfp


DFSMS CUSTOMIZATION CONSIDERATIONS

Making ISMF Available

For  information  about  making Interactive Storage Management Facility
(ISMF) available to TSO/E users,  see  z/OS  and  z/OS.e  Planning  for
Installation, GA22-7504.

Updating SAF/RACF Profiles

The  IDCAMS  BINDDATA,  LISTDATA,  and SETCACHE commands use the System
Authorization Facility (SAF) to verify that the issuer has  the  appro-
priate authority to enter the command or to use certain parameters.

For  more  information, see z/OS DFSMSdfp Storage Administration Refer-
ence, SC26-7402.

The following table indicates the  RACF  resources  that  are  used  to
protect the utility commands and parameters.

+---------------------------------------------------------------------+
|Table 1. SAF/RACF  Resources.  SAF/RACF Resource Access Required for |
|         IDCAMS Commands.                                            |
+------------------+----------+-------------------------------+-------+
|Command or        | Resource | Resource Name                 | Access|
|Parameter         | Class    |                               |       |
+------------------+----------+-------------------------------+-------+
|BINDDATA          | FACILITY | STGADMIN.IDC.BINDDATA         | READ  |
+------------------+----------+-------------------------------+-------+
|LISTDATA          | FACILITY | STGADMIN.IDC.LISTDATA         | READ  |
+------------------+----------+-------------------------------+-------+
|ACCESSCODE        | FACILITY | STGADMIN.IDC.LISTDATA.        | READ  |
|                  |          |   ACCESSCODE                  |       |
+------------------+----------+-------------------------------+-------+
|SETCACHE          | FACILITY | STGADMIN.IDC.SETCACHE         | READ  |
+------------------+----------+-------------------------------+-------+
|DISCARDPINNED     | FACILITY | STGADMIN.IDC.SETCACHE.        | READ  |
|                  |          |   DISCARDPINNED               |       |
+------------------+----------+-------------------------------+-------+
|PENDINGOFF        | FACILITY | STGADMIN.IDC.SETCACHE.        | READ  |
|                  |          |   PENDINGOFF                  |       |
+------------------+----------+-------------------------------+-------+
|REINITIALIZE      | FACILITY | STGADMIN.IDC.SETCACHE.        | READ  |
|                  |          |   REINITIALIZE                |       |
+------------------+----------+-------------------------------+-------+
|SUBSYSTEM         | FACILITY | STGADMIN.IDC.SETCACHE.        | READ  |
|                  |          |   SUBSYSTEM                   |       |
+------------------+----------+-------------------------------+-------+
|SETSECONDARY      | DASDVOL  | volser of the secondary       | ALTER |
|                  |          | (Note 3)                      |       |
+------------------+----------+-------------------------------+-------+
|REESTABLISHDUPLEX | DASDVOL  | volser of the alternate       | ALTER |
|                  |          | (Note 3)                      |       |
+------------------+----------+-------------------------------+-------+

NOTES:

1.  Each  authorization  check  is performed independently.  To enter a
    command using a protected parameter, the user must have READ access
    authority to the resource for  the  command,  as  well  as  to  the
    resource for the parameter.  For example, to enter this command:

      SETCACHE SUBSYSTEM PENDINGOFF

    a user must have READ access to all of the following:

    o   STGADMIN.IDC.SETCACHE
    o   STGADMIN.IDC.SETCACHE.SUBSYSTEM
    o   STGADMIN.IDC.SETCACHE.PENDINGOFF

2.  You  can  protect  multiple resources through a single RACF generic
    profile, for example, STGADMIN.IDC.** or STGADMIN.IDC.SETCACHE.**.

3.  The DASDVOL ALTER authorization check is performed  only  when  the
    volume  serial  of  the prospective secondary (or alternate) volume
    differs from that of the primary volume.

3800/3900 Printing Subsystem

If you are installing an IBM 3800 or 3900 Printing  Subsystem  for  the
first  time, you must install library character sets, graphic character
modification   modules,   and   character   arrangement    tables    in
SYS1.IMAGELIB.  A  job  to  accomplish  this task is provided in member
LCSBLD1 of SYS1.SAMPLIB after DFSMS has been installed.   If  you  have
run  LCSBLD1  previously,  you do not need to rerun it after installing
DFSMS.

Starter Set Information

The Starter Set is a pre-defined Source Control Data  Set  (SCDS)  pro-
vided as a sample by DFSMSdfp.

This  is  provided  as  a sample SCDS to allow new SMS installations to
start SMS before having to go  through  defining  the  construct  defi-
nitions, and writing the Automatic Class Selection (ACS) routines.  The
sample SCDS named SCDS.PRIMARY.LINEAR is packaged in the target library
SYS1.IGDVBS1 as member DFPSSCDS.

SYS1.SAMPLIB will contain the following members:

1.  DFPSSDCR - source ACS routine for DATACLAS
2.  DFPSSMCR - source ACS routine for MGMTCLAS
3.  DFPSSSCR - source ACS routine for STORCLAS
4.  DFPSSSGR - source ACS routine for STORGRP
5.  DFPSSIMP - JCL to IMPORT SCDS

NOTE:    Run   job   DFPSSIMP   available  in  SYS1.SAMPLIB  to  IMPORT
       'SCDS.PRIMARY.LINEAR' from target library SYS1.IGDVBS1.

For more information about the Starter Set, see z/OS  DFSMSdfp  Storage
Administration  Reference,  SC26-7402.  This manual contains a detailed
description of the sample SCDS.

Activate CDRA

If your installation will use the Character Data Representation  Archi-
tecture (CDRA) and numeric conversion routines provided in this release
of  DFSMS/MVS,  you must activate the function by tailoring and running
SYS1.SAMPLIB(CDRAINIT).

Language Environment  (LE)  is  required  for  Distributed  FileManager
(DFM/MVS)  to  do  CDRA conversions.   If your installation's link list
does not refer to the LE runtime library, you must add the  appropriate
STEPLIB  DD  statement to DFM startup procedure SYS1.PROCLIB(DFM).  You
must also make the same change to SYS1.SAMPLIB(GDETPDEF) and rerun it.

./ ADD NAME=D0ERACF  0114-04350-04350-1300-00293-00311-00000-HOWTO
z/OS 1.4 Security Server - RACF


INITIALIZE THE RACF PRIMARY AND BACK-UP DATABASES

Run  job  HRF7707B  in  the   installation  dialog  if  you  are
installing RACF for the first time.

Job HRF7707B (product-supplied job INITRDS in SYS1.SAMPLIB(RACJCL))
initializes the  RACF  primary  and  back-up  databases that were
created when you ran the B4ALOCDS job earlier in the installation.
Job HRF7707B uses the  RACF IRRMIN00  utility  with  PARM=NEW  to
prepare these databases.

+--- IRRMIN00 WARNING ------------------------------------------+
|                                                               |
| If you run IRRMIN00 with PARM=NEW against an existing RACF    |
| database, all data will be lost.                              |
|                                                               |
+---------------------------------------------------------------+

Job HRF7707B creates new  RACF  databases for your target system.
After HRF7707B runs,  you  can  use job HRF7707C (as described in
the next section)  to  copy  your  existing RACF databases to the
new databases.   If you do not run  HRF7707C,  you  will  require
the  default  password  to  log  on  as  user  IBMUSER.  For more
information,  including  the  default  password,  see  the  topic
"Logging on as IBMUSER" in
z/OS Security Server RACF Security Administrator's Guide.


COPY THE RACF PRIMARY AND BACK-UP DATABASES

Run  job  HRF7707C  in the installation dialog if you want to copy your
existing RACF databases into new databases.   Otherwise, skip this  job
and run jobs HRF7707E and HRF7707F.

Job HRF7707C  (product-supplied  job  COPYRDS  in SYS1.SAMPLIB(RACJCL))
does the following:

o   Verifies  existing  RACF  primary  and back-up databases, using the
    INDEX/MAP ALL function of RACF utility IRRUT200.

o   Copies  existing  RACF  primary  and  back-up  databases  into  new
    databases, using the  COPY/SPLIT/MERGE  function  of  RACF  utility
    IRRUT400.

If you run job HRF7707C, you must also run jobs HRF7707E (RACPTMPL) and
HRF7707F (RACBTMPL) to upgrade your templates.

Job HRF7707C copies only one primary database and one back-up database.
If  you have a multiple data set RACF database on your existing system,
see   z/OS    Security   Server   RACF   System   Programmer's   Guide,
for  information  on  how  to  use   IRRUT400   to  copy  the database.

If you run job HRF7707C, you  must  synchronize  changes  between  your
test and production RACF databases.  Use one or more of  the  following
methods, based on the configuration of your systems and  how  long  you
plan to test the new release.

1.  KEEP  A  RECORD  OF  THE  PROFILES ADDED TO THE TEST DATABASES; ADD
    THESE PROFILES TO YOUR PRODUCTION DATABASES THROUGH RACF COMMANDS.

    Use this method when:
    o   You are testing the new release for a short period of time,
        and
    o   You are not replacing your production  RACF databases with your
        test RACF databases.

    You can use RACF auditing to track the profiles.   To do so,  enter
    the  SETROPTS AUDIT  (*)  command to display all class names before
    adding new profiles.  Use SMF Unload, IRRADU00, to unload the audit
    records.  Extract  the  audit  records written for commands and use
    the  information in these  records  to recreate the profile in your
    production databases.

2.  USE RACF REMOTE SHARING FACILITY (RRSF) TO DIRECT CHANGES  IN  YOUR
    PRODUCTION DATABASES TO YOUR TEST DATABASES.

    Use this method when:
    o   You are replacing your production databases with the test data-
        bases, and
    o   Your systems are configured for RRSF.

    For information about configuring your systems for RRSF,  see  z/OS
                                                                   ____
    Security  Server  RACF  Security  Administrator's Guide, SA22-7683.

3.  MIGRATE YOUR TEST SYSTEMS TO THE PRODUCTION DATABASES AFTER USING
    THE TEST DATABASES FOR A LIMITED PERIOD OF TIME.

    Use this method when:
    o   You are not replacing  your production  databases with the test
        databases, and
    o   You do not plan to set up RRSF.

This last method  eliminates the need to synchronize test
and production databases,  and  can  potentially  provide
better security for  shared DASD environments because all
users  will  use   the  same  profiles  to  access  data.

NOTES:

1.  IBM  does  not  provide utilities to merge two unrelated RACF data-
    bases. If you attempt to use IRRUT400 to merge OS/390 Release 10 or
    later database with a copy of an existing database,  the  resulting
    database  might  contain  extra profiles, or have missing or incom-
    plete profiles.

2.  Using the unsupported DBSYNC tool to merge  OS/390  Release  10  or
    later database might result in missing profiles.

3.  In  OS/390  Release 10  the RACF Application Identity Mapping (AIM)
    function  introduced  new considerations.  For  details, see   z/OS
                                                                   ____
    Security  Server  RACF  Security  Administrator's Guide, SA22-7683.


UPGRADE THE PRIMARY RACF DATABASE TEMPLATES

Run  job  HRF7707E  in  the  installation  dialog (product-supplied job
UPGDRDS  in  SYS1.SAMPLIB(RACJCL))  to  upgrade  the  primary  database
templates.

Job  HRF7707E  upgrades  the  new  RACF  primary  database  using   the
IRRMIN00 utility with PARM=UPDATE.

If RACF is enabled for sysplex communication, whenever you run IRRMIN00
for a database that is active on a system that is a member of the  RACF
data  sharing group, always run the utility from a system in the group.
Otherwise, you might damage your RACF database or receive unpredictable
results from the utility.   For more information,  see   z/OS  Security
Server RACF System Programmer's Guide, SA22-7681.


UPGRADE THE BACK-UP RACF DATABASE TEMPLATES

Run job HRF7707F  in  the  installation  dialog  (product-supplied  job
UPGDRDS  in  SYS1.SAMPLIB(RACJCL)) to upgrade the back-up database tem-
plates.

Job  HRF7707F  upgrades  the  new  RACF  back-up  database  using   the
IRRMIN00 utility with PARM=UPDATE.

If RACF is enabled for sysplex communication, whenever you run IRRMIN00
for  a database that is active on a system that is a member of the RACF
data sharing group, always run the utility from a system in the  group.
Otherwise, you might damage your RACF database or receive unpredictable
results  from  the  utility.   For more information, see z/OS  Security
Server RACF System Programmer's Guide, SA22-7681.


CREATE OR UPDATE THE DATABASE NAME TABLE (ICHRDSNT)

The database name table (ICHRDSNT) is a customer-provided  load  module
that  defines  the RACF databases to RACF.  This table contains entries
describing each RACF database and its back-up database.

Run job HRF7707H in the installation dialog (product-supplied job RDSNT
in SYS1.SAMPLIB(RACTABLE)) to create ICHRDSNT, the RACF  database  name
table, for the primary and back-up RACF databases.

The REJECT step in this job might receive a  return  code  of  12  with
message  GIM24605E  for  REJECT  processing  of  SYSMOD CPPDSNT  if  it
is not there to  reject.   The  RESETRC  command  resets  the  internal
return  code  to  0 (but not in job step output)  to  allow  subsequent
steps to continue.

AUTOMATE DYNAMIC PARSE INITIALIZATION

Because   all   Security   Server - RACF  installations  must  activate
dynamic  parse  after  each IPL, it  is  strongly  recommended that you
automate dynamic parse initialization.

The  IRRDPI00  command  builds  a  "dynamic" table for parsing segment-
related keywords.  Dynamic parse is used to add, list, alter, or delete
DFP,  TSO/E, or any other non-base segment  information  with  the RACF
commands.

There are two methods of automating dynamic parse initialization:

o   The first involves updating the RACF parameter library to  automat-
    ically  invoke  the  IRRDPI00  UPDATE  command at every IPL.   This
    method requires the RACF subsystem  address  space  to  be  active.
    This  method  is  further  described  in  z/OS Security Server RACF
    System Programmer's Guide, SA22-7681.

o   The  second  method  involves  parmlib and proclib updates to start
    IRRDPTAB at every IPL.  This method is further described here.

    1.  Run job HRF7707L in the installation  dialog  (product-supplied
        job   IRRDPTAB  in  SYS1.SAMPLIB(RACPROC))  to  copy  procedure
        IRRDPTAB in the new target system's PROCLIB.  This started task
        executes the  TSO/E TMP and  issues the IRRDPI00 UPDATE command
        to create the dynamic parse table.

    2.  Update COMMNDxx member for PARMLIB.

        You can create or update a COMMNDxx parmlib member to include a
        start command for the IRRDPTAB procedure, for example:

          COM='START IRRDPTAB'

        Define  the  COMMNDxx  parmlib  member to an IEASYSxx member to
        ensure that the command is executed for each IPL.

        For more information about coding the COMMNDxx parmlib  member,
        see z/OS MVS Initialization and Tuning Reference, SA22-7592.

    3.  Update the started procedures table (ICHRIN03).

        Associate  a RACF userid with the IRRDPTAB started procedure by
        using the ICHRIN03 started procedures table  or  by  using  the
        STARTED  class.    See "Create or  Copy  the Started Procedures
        Table" for more information on creating and updating  the  RACF
        started procedures table.

    4.  The  userid  associated  with the IRRDPTAB started procedure in
        the started procedures table (ICHRIN03) must  be  permitted  to
        IRRDPI00  or  defined  as  a  RACF SPECIAL user.

    5.  Complete TSO/E authorization.

        IRRDPI00  has  been  added  to the TSO/E APF-authorized command
        table for your system.

CREATE OR COPY THE STARTED PROCEDURES TABLE

RACF provides two ways to assign RACF identities to started procedures:

o   STARTED resource class

    For more information on how to use the STARTED resource class,  see
    z/OS   Security   Server   RACF   Security  Administrator's  Guide,
    SA22-7683.

o   Started procedures table

    The  started  procedures  table  (ICHRIN03)  is  described  in z/OS
                                                                   ____
    Security  Server   RACF   System   Programmer's   Guide, SA22-7681.

A  dummy  ICHRIN03 load module is provided with RACF, which contains no
entries.  This  load module can be replaced during customization.

+--- ICHRIN03 WARNING ------------------------------------------------+
|                                                                     |
| Do not delete ICHRIN03.   RACF does not  become  active  unless  at |
| least a dummy ICHRIN03 load module is present on the system.        |
|                                                                     |
+---------------------------------------------------------------------+

Run  job  HRF7707M  in  the  installation  dialog (product-supplied job
ICHRIN03 in SYS1.SAMPLIB(RACTABLE)) to code  a  customized  replacement
module.

The INSTL2 step in this job might receive a return code 12 with message
GIM24605E for REJECT processing of SYSMOD CPPRIN0 if it is not there to
reject.    The  RESETRC command will reset internal return code to zero
(but not in job step output) to allow subsequent steps to continue.

If you plan  to  migrate  your  current  production  RACF
databases to your new system,  you  might  also  need  to
migrate  the  current   ICHRIN03   from  your  production
environment to keep the  security environment consistent.


USING THE COMMAND PREFIX FACILITY (CPF) CHARACTER

By default, RACF uses the  percent  sign  (%)  as  its  CPF  character.
Do not assign the % character  to another component on the same system,
or in the sysplex (if this system  is to become a member of a sysplex).
For  information  about  CPF, see the description of member IEFSSNxx in
z/OS MVS Initialization and Tuning Reference, SA22-7592.

For  more  information  about  RACF's  use  of CPF, see the topic about
updating the IEFSSNxx parmlib  member  in  z/OS  Security  Server  RACF
System Programmer's Guide, SA22-7681.

ADDING TSO/E USER LOGON PROFILES

Before you define users, groups, and resources to RACF, you might  want
to  add  profiles to the UADS data set for new TSO/E users.  You can do
so through the ADD subcommand of TSO/E  ACCOUNT,  as described  in z/OS
                                                                   ____
TSO/E Administration, SA22-7780.

RACF  provides  your installation with the option of placing TSO/E user
logon information in the TSO/E segment of the RACF user profile.

Note that if you choose to IPL with an empty RACF  database,  you  must
log  on  with the IBMUSER userid,  which is defined by RACF at initial-
ization time and shipped as a default userid in UADS by TSO/E.
./ ADD NAME=D1INRACF 0114-04350-04350-1300-00060-00063-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//* JOB: (product-supplied job INITRDS in SYS1.SAMPLIB(RACJCL))
//*
//* DOC: This job initializes the primary and back-up RACF databases
//*      created by job B4ALOCDS using the IRRMIN00 utility with
//*      PARM=NEW.
//*
//*      (IRRMIN00 is copied from the target system's LINKLIB
//*       to authorized LINKLIB USER.LINKLIB.)
//*
//*        MASTER.SYS1.RACF (Primary)
//*        MASTER.SYS1.RACFSEC (Back-up)
//*
//*      This job uses the target system's MODGEN data set
//*      to access the IRRTEMP1 templates.
//*
//*-------------------------------------------------------------------
//COPAUTH  EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//            DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DISP=SHR,
//            DSN=USER.LINKLIB
//SYSIN    DD *
  COPYMOD  INDD=INPUT1,OUTDD=OUTPUT1,MAXBLK=6144
    SELECT MEMBER=IRRMIN00
/*
//*
//INITP    EXEC PGM=IRRMIN00,PARM=NEW
//STEPLIB  DD DISP=SHR,
//    DSN=USER.LINKLIB
//SYSTEMP  DD DSN=MASTER.SYS1.MODGEN(IRRTEMP1),
//            DISP=SHR
//SYSRACF  DD DSN=MASTER.SYS1.RACF,
//            DISP=SHR
//SYSPRINT DD SYSOUT=*
//*
//*
//INITB    EXEC PGM=IRRMIN00,PARM=NEW
//STEPLIB  DD DISP=SHR,
//    DSN=USER.LINKLIB
//SYSTEMP  DD DSN=MASTER.SYS1.MODGEN(IRRTEMP1),
//            DISP=SHR
//SYSRACF  DD DSN=MASTER.SYS1.RACFSEC,
//            DISP=SHR
//SYSPRINT DD SYSOUT=*
//*
//*
./ ADD NAME=D2CPYRAC 0114-04350-04350-1300-00094-00097-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*
//*-------------------------------------------------------------------
//*
//* JOB: (product-supplied job COPYRDS in SYS1.SAMPLIB(RACJCL))
//*
//* DOC: This job does the following:
//*   1) Verifies existing RACF primary and back-up databases
//*      using the INDEX/MAP ALL for utility IRRUT200.
//*
//*   2) Copies existing RACF primary and back-up databases
//*      into new databases using the COPY/SPLIT/MERGE
//*      for utility IRRUT400.
//*
//*      This job is optional, to be used by RACF
//*      installations who wish to copy their existing
//*      databases. If you run this job HRF7707C (D2CPYRAC),
//*      you should also run the following jobs
//*      HRF7707E (RACPTMPL) and HRF7707F (RACBTMPL) to
//*      upgrade your templates.
//*
//*-------------------------------------------------------------------
//DIAGNP1      EXEC PGM=IRRUT200
//SYSPRINT  DD SYSOUT=*
//SYSRACF   DD DSN=SYS1.COMMON.RACF,
//             DISP=OLD,
//             UNIT=SYSALLDA,
//             VOL=SER=DATA01
//SYSUT1    DD UNIT=SYSALLDA,
//             SPACE=(CYL,(100))
//SYSUT2    DD SYSOUT=*
//SYSIN     DD *
    INDEX
    MAP ALL
    END
//*
//COPYP2       EXEC PGM=IRRUT400,PARM='LOCKINPUT,FREESPACE(20)'
//SYSPRINT  DD SYSOUT=*
//INDD1     DD DSN=SYS1.COMMON.RACF,
//             DISP=OLD,
//             UNIT=SYSALLDA,
//             VOL=SER=DATA01
//OUTDD1    DD DSN=MASTER.SYS1.RACF,
//             DISP=OLD
//*
//UNLKP3       EXEC PGM=IRRUT400,PARM='UNLOCKINPUT'
//SYSPRINT  DD SYSOUT=*
//INDD1     DD DSN=SYS1.COMMON.RACF,
//             DISP=OLD,
//             UNIT=SYSALLDA,
//             VOL=SER=DATA01
/*
//*
//DIAGNB4      EXEC PGM=IRRUT200
//SYSPRINT  DD SYSOUT=*
//SYSRACF   DD DSN=SYS1.BACKUP.RACF,
//             DISP=OLD,
//             UNIT=SYSALLDA,
//             VOL=SER=DATA02
//SYSUT1    DD UNIT=SYSALLDA,
//             SPACE=(CYL,(100))
//SYSUT2    DD SYSOUT=*
//SYSIN     DD *
    INDEX
    MAP ALL
    END
//*
//COPYB5       EXEC PGM=IRRUT400,PARM='LOCKINPUT,FREESPACE(20)'
//SYSPRINT  DD SYSOUT=*
//INDD1     DD DSN=SYS1.BACKUP.RACF,
//             DISP=OLD,
//             UNIT=SYSALLDA,
//             VOL=SER=DATA02
//OUTDD1    DD DSN=MASTER.SYS1.RACFSEC,
//             DISP=OLD
//*
//UNLKB6       EXEC PGM=IRRUT400,PARM='UNLOCKINPUT'
//SYSPRINT  DD SYSOUT=*
//INDD1     DD DSN=SYS1.BACKUP.RACF,
//             DISP=OLD,
//             UNIT=SYSALLDA,
//             VOL=SER=DATA02
/*
./ ADD NAME=D3CPYTMP 0114-04350-04350-1300-00045-00048-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//* JOB: (product-supplied job UPGDRDS in SYS1.SAMPLIB(RACJCL))
//*
//* DOC: This job upgrades RACF primary database
//*      MASTER.SYS1.RACF to
//*      the new Security Server RACF format using the
//*      IRRMIN00 utility.
//*      This job is optional, however if you have run job
//*      D2CPYRAC previously, you should run this job.
//*
//*      This job is used to upgrade the templates.
//*
//*-------------------------------------------------------------------
//COPAUTH  EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//            DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DISP=SHR,
//            DSN=USER.LINKLIB
//SYSIN    DD *
  COPYMOD  INDD=INPUT1,OUTDD=OUTPUT1,MAXBLK=6144
    SELECT MEMBER=IRRMIN00
/*
//*
//UPGRAD1  EXEC PGM=IRRMIN00,PARM=UPDATE
//STEPLIB  DD DISP=SHR,
//    DSN=USER.LINKLIB
//SYSTEMP  DD DISP=SHR,
//            DSN=MASTER.SYS1.MODGEN(IRRTEMP1)
//SYSRACF  DD DISP=SHR,
//            DSN=MASTER.SYS1.RACF
//SYSPRINT DD SYSOUT=*
//*
./ ADD NAME=D3IRRMIN 0114-04350-04350-1300-00040-00036-00000-HOWTO
//IBMUSERR JOB (ACCT#),PROGRAMMR,
// NOTIFY=&SYSUID,
// CLASS=B,MSGCLASS=X
//******************************************************************//
//*  UPGDRDS:                                                      *//
//*                                                                *//
//*      THIS IS A Z/OS 1.5 OR 1.6 VERSION OF THE JOB THAT         *//
//*      UPGRADES THE RACF TEMPLATES.                              *//
//*                                                                *//
//*      RACF INSTALLATION PROCEDURE STEP: UPGRADE AN EXISTING     *//
//*      RACF DATABASE WITH A HIGHER LEVEL OF TEMPLATES            *//
//*                                                                *//
//*      THIS STEP IS FOR EXISTING RACF INSTALLATIONS.             *//
//*                                                                *//
//*      THESE JOBS CAN BE USED TO UPGRADE RACF DATA BASE          *//
//*      TO THE NEW RELEASE FORMAT.                                *//
//*                                                                *//
//*      UPGDRDS - SAMPLE JOB TO UPGRADE A RACF DATA BASE          *//
//*                TO THE NEW RELEASE FORMAT.                      *//
//*                                                                *//
//*         SYSTEMP IS NO LONGER USED TO POINT TO THE TEMPLATE     *//
//*          DEFINITIONS. IRRMIN00 AUTOMATICALLY FINDS THE CORRECT *//
//*          LEVEL FOR THAT LEVEL OF IRRMIN00.                     *//
//*                                                                *//
//*      MODIFY THE JOB YOU SELECT TO FIT YOUR INSTALLATION'S      *//
//*      NEEDS BEFORE EXECUTING IT.                                *//
//*                                                                *//
//******************************************************************//
//*
//INITALZ1 EXEC PGM=IRRMIN00,PARM=UPDATE
//STEPLIB  DD  DSN=SYS1.LINKLIB,DISP=SHR,  **MUST BE LIBRARY WITH **
//             UNIT=SYSALLDA,VOL=SER=Z5RES1 **NEW RELEASE IRRMIN00 **
//SYSPRINT DD  SYSOUT=*
//SYSRACF  DD  DSN=MASTER.SYS1.RACF,DISP=SHR
//*
//INITALZ2 EXEC PGM=IRRMIN00,PARM=UPDATE
//STEPLIB  DD  DSN=SYS1.LINKLIB,DISP=SHR,  **MUST BE LIBRARY WITH **
//             UNIT=SYSALLDA,VOL=SER=Z5RES1 **NEW RELEASE IRRMIN00 **
//SYSPRINT DD  SYSOUT=*
//SYSRACF  DD  DSN=MASTER.SYS1.RACFSEC,DISP=SHR
./ ADD NAME=D4CPYTMP 0114-04350-04350-1300-00047-00048-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//* Note:  This job is applicable to z/OS 1.4 and previous versions.
//*
//* JOB: (product-supplied job UPGDRDS in SYS1.SAMPLIB(RACJCL))
//*
//* DOC: This job upgrades RACF back-up database
//*      MASTER.SYS1.RACFSEC to
//*      the new Security Server RACF format using the
//*      IRRMIN00 utility.
//*      This job is optional, however if you have run job
//*      D2CPYRAC previously, you should run this job.
//*
//*      This job is used to upgrade the templates.
//*
//*-------------------------------------------------------------------
//COPAUTH  EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//            DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DISP=SHR,
//            DSN=USER.LINKLIB
//SYSIN    DD *
  COPYMOD  INDD=INPUT1,OUTDD=OUTPUT1,MAXBLK=6144
    SELECT MEMBER=IRRMIN00
/*
//*
//UPGRAD1  EXEC PGM=IRRMIN00,PARM=UPDATE
//STEPLIB  DD DISP=SHR,
//    DSN=USER.LINKLIB
//SYSTEMP  DD DISP=SHR,
//            DSN=MASTER.SYS1.MODGEN(IRRTEMP1)
//SYSRACF  DD DISP=SHR,
//            DSN=MASTER.SYS1.RACFSEC
//SYSPRINT DD SYSOUT=*
//*
./ ADD NAME=D5DSNT   0114-04350-04350-1300-00192-00195-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//*
//* JOB: (product-supplied job RDSNT in SYS1.SAMPLIB(RACTABLE))
//*
//* DOC: This job creates ICHRDSNT, the RACF database name table,
//*      for the primary and back-up RACF databases.
//*
//*      This job is for first time installations and installations
//*      changing the names of databases.
//*
//* STEPS -
//*   REJECT: Try to REJECT USERMOD CPPDSNT (for rerun purposes).
//*           This step may end with RC=12.
//*
//*   ASSEM:  RACF database names and database options are
//*           assembled into an SMP/E USERMOD, CPPDSNT.
//*
//*   RECAPP: RECEIVE and APPLY the USERMOD CPPDSNT.
//*
//*-------------------------------------------------------------------
//*
//REJECT  EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DISP=SHR,
//    DSN=MASTER.SYS1.MIGLIB
//         DD DISP=SHR,
//    DSN=MASTER.ASM.SASMMOD1
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,
//            DISP=SHR
//*
//SMPPTS   DD DISP=SHR,
//            DSN=PRIME.SMPE.SMPPTS
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPWRK1  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK2  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK3  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=3120
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    LIST SYSMOD(CPPDSNT) .
    REJECT S(CPPDSNT)
      BYPASS(APPLYCHECK,ACCEPTCHECK) .
    RESETRC .
/*
//*
//ASSEM   EXEC PGM=ASMA90,
//             REGION=0M,
//             PARM='DECK,NOOBJECT'
//STEPLIB  DD DSN=MASTER.ASM.SASMMOD1,
//            DISP=SHR
//SYSLIB   DD DSN=MASTER.SYS1.AMODGEN,
//            DISP=SHR
//*
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(10,2))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(10,2))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(10,2))
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD DSN=&LOADSET,
//            DISP=(,PASS),
//            UNIT=SYSALLDA,
//            SPACE=(CYL,(5,1))
//SYSIN    DD *
  PUNCH '++USERMOD (CPPDSNT).'
  PUNCH '++ VER (Z038) FMID(HRF7707).'
  PUNCH '++ MOD (ICHRDSNT) DISTLIB(AOSBN) LMOD(ICHRDSNT).'
ICHRDSNT CSECT ,
ICHRDSNT AMODE 31
ICHRDSNT RMODE 24
***********************************************************************
*                                                                     *
*   MODULE NAME = ICHRDSNT                                            *
*                                                                     *
*   DESCRIPTIVE NAME = RACF DATABASE NAME TABLE                       *
*                                                                     *
*   FUNCTION = THIS TABLE CONTAINS THE NAMES FOR THE RACF DATABASES.  *
*              THE NAMES ARE IN PAIRS, THE FIRST BEING THE            *
*              PRIMARY DATABASE AND THE SECOND BEING THE BACK-UP      *
*              DATABASE.                                              *
*                                                                     *
*                                                                     *
*   THE FORMAT OF THE FLAG FIELD IS AS FOLLOWS:                       *
*       BIT 0 - DUPLICATE UPDATES TO BACK-UP                          *
*       BIT 1 - DUPLICATE STATISTICAL UPDATES TO BACK-UP              *
*       BIT 2 - RESERVED                                              *
*       BIT 3 - RESERVED                                              *
*       BIT 4 - ENABLE FOR SYSPLEX COMMUNICATIONS                     *
*       BIT 5 - DEFAULT MODE                                          *
*                0 - NON DATA SHARING                                 *
*                1 - DATA SHARING                                     *
*       BIT 6 - RESERVED                                              *
*       BIT 7 - RESERVED                                              *
*                                                                     *
*        NOTE: BITS 4 AND 5 ARE ONLY RELEVANT FOR THE                 *
*              FIRST PRIMARY DATA SET'S DEFINITION.                   *
*                                                                     *
*    THE FOLLOWING EXAMPLE DOES NOT ENABLE RACF FOR                   *
*    SYSPLEX COMMUNICATIONS.  RVARY AND SETROPTS COMMAND              *
*    PROPAGATION WILL NOT BE POSSIBLE WITHOUT RE-IPL,                 *
*    NOR WILL DATA SHARING BE POSSIBLE WITHOUT RE-IPL.                *
*    SEE THE SECOND EXAMPLE FOR DETAILS.                              *
*                                                                     *
*                                                                     *
*   NOTE: IF YOU WISH TO USE THE EXISTING RACF DATABASES FROM YOUR    *
*         DRIVING SYSTEM, THEN YOU NEED TO CHANGE THE NAMES OF THE    *
*         PRIMARY AND BACK-UP DATABASES BELOW TO YOUR EXISTING NAMES. *
*         ALSO BE SURE TO CATALOG YOUR EXISTING DATABASES IN THE      *
*         TARGET SYSTEM MASTER CATALOG SO THAT THEY ARE AVAILABLE TO  *
*         THE NEW SYSTEM.                                             *
*                                                                     *
*                                                                     *
         DC   AL1(1)                 NUMBER OF ENTRIES     ONE
*
*                                    PRIMARY RACF DS NAME
         DC   CL44'SYS1.RACF'
*                                    BACK-UP RACF DS NAME
         DC   CL44'SYS1.RACFSEC'
         DC   AL1(255)               NUMBER OF RESIDENT BLOCKS
         DC   B'10000000'            UPDATES DUPLICATED ON BACK-UP DS
*                                    USE RESIDENT DATA BLOCKS
*
         END
/*
//*
//*
//RECAPP  EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DISP=SHR,
//    DSN=MASTER.SYS1.MIGLIB
//         DD DISP=SHR,
//    DSN=MASTER.ASM.SASMMOD1
//*
//SMPCSI   DD DISP=SHR,
//            DSN=PRIME.SMPE.GLOBAL.CSI
//SMPPTS   DD DISP=SHR,
//            DSN=PRIME.SMPE.SMPPTS
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPWRK1  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK2  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK3  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=3120
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DSN=&LOADSET,DISP=(OLD,DELETE)
//SMPCNTL  DD *
  SET BDY(MVST100) .
    UCLIN .
      REP LMOD(ICHRDSNT) SYSLIB(LINKLIB) .
    ENDUCL .
  SET BDY(GLOBAL) .
    RECEIVE S(CPPDSNT) SYSMODS .
  SET BDY(MVST100) .
    APPLY S(CPPDSNT) REDO .
/*
//*
./ ADD NAME=D6DPTAB  0114-04350-04350-1300-00039-00042-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//* JOB: (product-supplied job IRRDPTAB in SYS1.SAMPLIB(RACPROC))
//*
//* DOC: This job creates procedure IRRDPTAB in the new target
//*      system's PROCLIB
//*-------------------------------------------------------------------
//DPTAB     EXEC PGM=IEBGENER
//SYSUT2    DD DISP=SHR,
//             DSN=MASTER.SYS1.IBM.PROCLIB(IRRDPTAB)
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DUMMY
//SYSUT1    DD DATA,DLM='##'
//IRRDPTAB PROC
//*-------------------------------------------------------------------
//*  RACF - IRRDPTAB
//*  THIS STARTED TASK IS RUN AT IPL TO LOAD THE RACF DYNAMIC
//*  PARSE TABLE.  THE USERID FOR THE TASK MUST BE AUTHORIZED
//*  TO ISSUE THE IRRDPI00 COMMAND.
//*-------------------------------------------------------------------
//IEFPROC  EXEC PGM=IKJEFT01,PARM='IRRDPI00 UPDATE'
//SYSTSPRT DD SYSOUT=*,HOLD=YES
//SYSUDUMP DD SYSOUT=*,HOLD=YES
//SYSUT1   DD DISP=SHR,
//            DSN=SYS1.SAMPLIB(IRRDPSDS)
//SYSTSIN  DD DUMMY
##
//*
./ ADD NAME=D7RIN03  0114-04350-04350-1300-00152-00155-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//* JOB: (product-supplied job ICHRIN03 in SYS1.SAMPLIB(RACTABLE))
//*
//* DOC: This job creates RACF started procedure table
//*      ICHRIN03 in LPALIB.
//*      This step is optional for existing and new installations.
//*
//* STEPS:
//*   ASSEM1:  The RACF started procedure table (ICHRIN03)
//*            is assembled and the object code is placed
//*            in data set
//*            &LOADSET.
//*
//*            All userids and group names that you are including in
//*            the table will have to be defined once RACF is active
//*            (after IPL).
//*
//*            Your userid must have the RACF SPECIAL attribute
//*            to execute this step.
//*
//*   INSTL2:  The object code in
//*            &LOADSET
//*            is installed as an SMP/E USERMOD named CPPRIN0.
//*            Note that the REJECT command may receive return
//*            code 12.
//*
//*-------------------------------------------------------------------
//ASSEM1  EXEC PGM=ASMA90,
//         PARM='DECK,NOOBJECT',REGION=0M
//STEPLIB  DD DSN=MASTER.ASM.SASMMOD1,
//            DISP=SHR
//SYSLIB   DD DISP=SHR,
//            DSN=MASTER.SYS1.AMODGEN
//SYSPUNCH DD DSN=&LOADSET,
//            UNIT=SYSALLDA,
//            DISP=(,PASS),SPACE=(CYL,(5,1))
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,5))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(10,1))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
         PUNCH '++USERMOD (CPPRIN0).'
         PUNCH '++ VER (Z038) FMID(HRF7707).'
         PUNCH '++ MOD (ICHRIN03) DISTLIB(AOSBN) LMOD(ICHRIN03).'
***********************************************************************
*                                                                     *
*   MODULE NAME = ICHRIN03                                            *
*                                                                     *
*   DESCRIPTIVE NAME = RACF STARTED PROCEDURES TABLE                  *
*                                                                     *
*   FUNCTION =  THIS TABLE ASSIGNS A USERID AND GROUP NAME TO A       *
*               STARTED PROCEDURE.                                    *
*                -- FOR DESCRIPTION SEE SYSTEM PROGRAMMING            *
*                   LIBRARY: RACF AND COMMENTS IN MODULE              *
*                                                                     *
***********************************************************************
ICHRIN03 TITLE 'RACF STARTED PROCEDURE TABLE'
ICHRIN03 CSECT
ICHRIN03 AMODE 31
ICHRIN03 RMODE ANY
         DC    AL2(ENTRIES+X'8000')          NUMBER OF ENTRIES FOLLOWED
         SPACE 3
FIRST    DS    0H
***********************************************************************
*   INSTALLATION DEFINED ENTRIES                                      *
***********************************************************************
*        DC    CL8'PROCNAME'                  EXAMPLE - PROCNAME
*        DC    CL8'UUUUUUUU'                  EXAMPLE - USERID
*        DC    CL8'GGGGGGGG'                  EXAMPLE - GROUP
*        DC    XL1'40'                        EXAMPLE - FLAG - TRUSTED
*        DC    XL7'00'                        EXAMPLE - RESERVED
*
*
         SPACE 2
***********************************************************************
*                                                                     *
*  THE DEFAULT USERID '=' IS ASSIGNED TO ALL PROCEDURES               *
*  WHICH ARE NOT DEFINED ABOVE.  THIS GENERIC ENTRY MUST              *
*  BE LAST IN THE TABLE.                                              *
*                                                                     *
***********************************************************************
*
         DC    CL8'*       '                  GENERIC PROC NAME
         DC    CL8'=       '                  DEFAULT USERID
         DC    CL8'STCGRP'                DEFAULT GROUP
         DC    XL1'00'                        FLAGBYTE NEITHER
         DC    XL7'00'                        RESERVED
*
***********************************************************************
*   END OF ENTRY LIST                                                 *
***********************************************************************
LAST     DS    0H
ENTLEN   EQU   32                             ENTRY LENGTH
TOTLEN   EQU   LAST-FIRST                     TOTAL LENGTH
ENTRIES  EQU   TOTLEN/ENTLEN                  NUMBER OF ENTRIES
         END   ICHRIN03
/*
//*
//*
//INSTL2   EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DISP=SHR,
//    DSN=MASTER.SYS1.MIGLIB
//         DD DISP=SHR,
//    DSN=MASTER.ASM.SASMMOD1
//SMPCSI   DD DISP=SHR,
//            DSN=PRIME.SMPE.GLOBAL.CSI
//SMPPTS   DD DISP=SHR,
//            DSN=PRIME.SMPE.SMPPTS
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(300,(500,500))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(300,(500,500))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(300,(500,500))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(300,(500,500))
//SMPWRK1  DD UNIT=SYSALLDA,SPACE=(TRK,(100,10,100))
//SMPWRK2  DD UNIT=SYSALLDA,SPACE=(TRK,(100,10,100))
//SMPWRK3  DD UNIT=SYSALLDA,SPACE=(TRK,(100,10,100))
//SMPWRK4  DD UNIT=SYSALLDA,SPACE=(TRK,(100,10,100))
//SMPWRK5  DD UNIT=SYSALLDA,SPACE=(TRK,(100,10,100))
//SMPWRK6  DD UNIT=SYSALLDA,SPACE=(TRK,(100,10,100))
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(MVST100) .
    UCLIN .
      REP LMOD(ICHRIN03) SYSLIB(LPALIB).
    ENDUCL .
  SET BDY(GLOBAL) .
    REJECT S(CPPRIN0) BYPASS(APPLYCHECK,ACCEPTCHECK) .
    RESETRC .
    RECEIVE S(CPPRIN0) SYSMODS .
  SET BDY(MVST100) .
    APPLY S(CPPRIN0) REDO .
/*
//SMPPTFIN DD DSN=&LOADSET,
//            DISP=(OLD,DELETE)
//*
//*
./ ADD NAME=E0TSOREX 0114-04350-04350-1300-00029-00033-00000-HOWTO

z/OS 1.4 TSO/E

UPDATING THE REXX ENVIRONMENT TABLE

+--- BEFORE RUNNING THIS JOB... ------------------------+
| Before running this job, ensure that your SASMMOD1    |
| data set is APF-authorized.                           |
+-------------------------------------------------------+

Job E1REXXET  is  optional.  Run job E1REXXET
(product-supplied job  IRXTSMPE  in SAMPLIB) to ensure  that
a  sufficient  number of  REXX environments can be  created
on  the  target  system for exploiters such as msys for
Operations.   E1REXXET resets this value to 400 through the
NEWSYSTEM-supplied SMP/E  user modification (USERMOD)
CPPANCR.

For information  about  estimating  the  number  of  REXX
environments  needed   for    your    installation,   see
z/OS Managed System Infrastructure for Operations
Setting Up and Using.

The REJECT step in this job might receive  a  return code
of 12 with message GIM24605E if SYSMOD CPPANCR  does  not
exist.  The RESETRC command resets  the  internal  return
code  to  0  (but  not  in  job  step  output)  to  allow
subsequent steps to continue.

./ ADD NAME=E1REXXET 0114-04350-04350-1300-00129-00131-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//*
//* JOB: (product-supplied job IRXTSMPE in SAMPLIB)
//*
//* DOC: Update the REXX Environment table to allow 400
//*      environments.
//*
//* STEPS -
//*   REJECT: Try to REJECT USERMOD CPPANCR (for rerun purposes).
//*           This step may end with RC=12.
//*
//*
//*   RECAPP: RECEIVE and APPLY the USERMOD CPPANCR.
//*
//*-------------------------------------------------------------------
//*
//REJECT  EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DISP=SHR,
//    DSN=MASTER.SYS1.MIGLIB
//         DD DISP=SHR,
//    DSN=MASTER.ASM.SASMMOD1
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,DISP=SHR
//*
//SMPPTS   DD DISP=SHR,
//            DSN=PRIME.SMPE.SMPPTS
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPWRK1  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK2  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK3  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=3120
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    LIST SYSMOD(CPPANCR) .
    REJECT S(CPPANCR)
      BYPASS(APPLYCHECK,ACCEPTCHECK)
      RC(LIST=04,SET=00) .
    RESETRC .
/*
//*
//RECAPP  EXEC PGM=GIMSMP,REGION=0M
//STEPLIB  DD DISP=SHR,
//    DSN=MASTER.SYS1.MIGLIB
//         DD DISP=SHR,
//    DSN=MASTER.ASM.SASMMOD1
//*
//SMPCSI   DD DISP=SHR,
//            DSN=PRIME.SMPE.GLOBAL.CSI
//SMPPTS   DD DISP=SHR,
//            DSN=PRIME.SMPE.SMPPTS
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPWRK1  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK2  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=6160
//SMPWRK3  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1,5)),
//            DISP=(,DELETE),
//            DCB=BLKSIZE=3120
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSUT4   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SMPHOLD  DD DUMMY
//SMPPTFIN DD *
++USERMOD(CPPANCR) .
++VER(Z038) FMID(HTE7706) .
++SRC (IRXANCHR) SYSLIB(SAMPLIB) DISTLIB(ASAMPLIB).
         TITLE 'IRXANCHR - THE REXX ENVIRONMENT TABLE'
         MACRO
         IRXANCHR &ENTRYNUM=40
&ID      SETC  'IRXANCHR'             eye catcher
&VERSION SETC  '0100'                 version number
&TOTAL   SETA  &ENTRYNUM              number of entries in table
&LENGTH  SETA  40                     size of each entry
&ID      CSECT                        this is a load module
&ID      AMODE 31                     AMODE = 31 bit addressing
&ID      RMODE ANY                    RMODE = anywhere
ID       DC   CL8'&ID'                insert eye catcher
VERSION  DC   CL4'&VERSION'           insert version number
TOTAL    DC   F'&TOTAL'               total number of entries
USED     DC   F'0'                    number of used entries (0)
LENGTH   DC   F'&LENGTH'              length of each entry
         DC   XL8'0'                  RESERVED
FIRST    DS   0D                      first entry: double word boundry
         DC   (&TOTAL)XL&LENGTH'0'    total entries
         MEND                         end of macro
         IRXANCHR ENTRYNUM=400
         END IRXANCHR
/*
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    RECEIVE S(CPPANCR) SYSMODS .
  SET BDY(MVST100) .
    APPLY S(CPPANCR) REDO .
/*
//*
./ ADD NAME=F0APREIP 0114-04350-04350-1300-00023-00019-00000-HOWTO
PREPARING THE TARGET SYSTEM FOR IPL

At this phase  of the installation, you prepare the target
system for IPL, as described in the sections that  follow.
USING AN ALTERNATIVE SYSTEM NAME (SYSNAME)

The system name (SYSNAME) for the target system is EXMP.  If you
changed the SYSNAME value for the target system (for example,
through the Define Variables function of the installation
dialog), you must ensure that the new system name is defined in
the appropriate places.  Before IPLing the target system, do the
following:

o   Ensure  that  the  IEASYS member used to IPL the
    target system specifies the  new  system  name  on
    the  SYSNAME  parameter.
o   If you use JES3,  define the new system name to the
    JES3 inish deck members (for example, JES3INFT,
    JES3IN00).

Later, when you have IPLed the target system,  you must define the
new  system  name  to  SMS.    This  procedure is described in the
section "Defining the System Name to SMS."
./ ADD NAME=F0DFIODF 0114-04350-04350-1300-00032-00025-00000-HOWTO
DEFINING THE I/O CONFIGURATION FOR THE TARGET SYSTEM

An  I/O Definition File (IODF)  must  exist   before  you
perform the initial IPL.   The  IODF  is  a VSAM data set
that  contains  hardware   and   software   configuration
definitions.

Observe the following  considerations regarding the IODF:

o The IODF data set must occupy only one extent. IPL does
  not process multiple extents  in the IODF.   A  WAIT0B1
  wait state will occur during IPL  if  the IODF occupies
  more than one extent.
o Unit information modules (UIMs) for  non-IBM  supported
  devices  must  be  available  during  IPL  and  dynamic
  configuration  if  the  devices  are  to be used on the
  target system.

JOB F1LDIODF

Job F1LDIODF copies the driving system's IODF data set to
your target system.

Before submitting this job,  verify  that  the  new  IODF
data set space allocation on  the  DEFINE CLUSTER command
is  sufficient  to  contain  the  data  from  the driving
system's IODF data set.

If you changed the allocation amount for  the  IODF  data
set in the dialog,  or  reallocated  the  IODF  data  set
before running this job,  your  changes are automatically
applied to the new IODF data set.
./ ADD NAME=F0ESETUP 0114-04350-04350-1300-00105-00105-00000-HOWTO
RUNNING THE TARGET SYSTEM SETUP JOBS

This section describes the jobs that  you  run to  prepare the
target system for IPL.


JOB F2IPLTXT

o   Initializes the LOGREC data set

o   Creates  F2IPLTXT on  the  DASD  volume  that contains the
    SYS1.NUCLEUS data set.  This DASD is considered to be your
    target system's IPL volume.


JOB F3DMPBLD

The F3DMPBLD job creates the SADMP program using the  one-step
generation  method.

Check F3DMPBLD before  you  submit  it  to ensure that the job
does  not  place   SADMP   (SYS1.PAGEDUMP.Vnnnnnn)    on   the
target  system's  IPL  volume.    Standalone  dump,  like  the
operating  system,  requires   IPL  text to  be written to the
volume from which it  will   be  IPLed.   Only  one  IPL  text
can exist on a  volume  at any given time.    As a result, you
cannot place SADMP on the same volume as the NUCLEUS data set.

After F3DMPBLD runs successfully, you can IPL standalone  dump
from the volume on which SADMP was placed.

F3DMPBLD also deletes modules from the authorized load library
that you  specified  in  the  Define Variables function of the
installation  dialog.   You  no  longer  need  these  modules.



JOB F4LOAD00

The  F4LOAD00 job creates  member  LOAD00  in  your   target   system's
SYS1.IPLPARM data set and fills it with the correct master catalog name
and the DASD volume serial number where it resides.

LOAD00 contains the system master catalog and parmlib concatenation.

Notes about the IODF statement:
   o If there  is more  than  one  system  configuration  identifier in
     nnnnnnnn.IODFxx and the identifier is not specified, a wait  state
     is loaded. Review the IODF statement to ensure  the  desired  con-
     figuration is specified in columns 22-29, if more than one exists.
   o If the CONFIG id and EDT id are not present on the IODF statement,
     you might have to add them.  For example:

        IODF     00 SYS1     HTF8TEST 01 Y
     Failure to include this information could cause a wait state code
     of 0B1.

CONCATENATING THE SYSTEM DATA SETS

Concatenate parmlib and proclib data sets with your existing data sets
as follows:
o   Concatenate the parmlib members specified in the  LOADxx member of
    SYS1.IPLPARM (shipped in your order) with  your  existing  parmlib
    data sets.   If  you  selected  Software Upgrade,  concatenate the
    parmlib data sets  as  noted  below  with  your existing parmlibs.
    For  instructions    on    using    parmlib    concatenation,  see
    MVS Initialization and Tuning Reference.
    If you IPL the  target  system  using  the  IBM-supplied defaults,
    the concatenated  parmlib  data sets are searched in the following
    order:

    - SYS1.PARMLIB, which is either the SYS1.PARMLIB supplied  by  IBM
      and  edited  by  you,  or  your  original  SYS1.PARMLIB  updated
      accordingly.
    - EXMP.PARMLIB, which contains members supplied by NEWSYSTEM
    - SYS1.IBM.PARMLIB,  which  contains  the  SMP/E-managed  parmlib.
      IBM products that ship parmlib members have those members placed
      in this data set.

o   Concatenate the proclib data sets specified in the MSTJCLxx
    member of EXMP.PARMLIB with your existing proclib data sets,
    on the IEFPDSI DD statement.  Also add these data sets to
    the JES procedure library concatenations for jobs and started
    tasks.  And, if you plan to use started jobs, you must add
    these data sets to the IEFJOBS DD statement in MSTJCLxx.
    The  IBM-supplied  proclibs  are:

    o   SYS1.PROCLIB,  which is either the SYS1.PROCLIB supplied by IBM
        (initially empty),  and   edited   by  you,  or  your  original
        SYS1.PROCLIB updated accordingly.

    o   EXMP.PROCLIB, which contains members provided by NEWSYSTEM

    o   SYS1.IBM.PROCLIB, which contains  the   SMP/E-managed  proclib.
        IBM  products  that  ship  proclib  members  have those members
        placed in this data set.

If  you   modify the  order  of   the  concatenation
in  MSTJCLxx,  you should consider applying the same
changes  to  the  PROC00 DD  statement  in  the JES2
started procedure in EXMP.PROCLIB and  the procedure
library list  in  both  of  the  JES3 initialization
members (JES3INFT and JES3IN00).


./ ADD NAME=F0FSMPER 0114-04350-04350-1300-00154-00135-00000-HOWTO
CREATING THE SMP/E REPORTS

This section describes the tasks  you  perform  to  compare
your existing zones and new target zones.  This information
can help you  in  synchronizing  the  product  and  service
levels of these zones.

JOB F5SMPREP

The F5SMPREP job is an optional job intended to assist you in migration.
This job creates these SMP/E reports:

o   REPORT SYSMODS shows the differences  between  the  products  and
    service in your new and old SMP/E zones.
o   REPORT ERRSYSMODS lists service items for the  products  in  your
    order  that  were  identified   after  you  received  the  order.
o   REPORT CROSSZONE lists the service you should install in your new
    and old  zones  due  to  conditional  requisites (++IFs) for PTFs
    that are are installed in the zones.

Running the ERRSYSMODS Report

You  can  use  the  ERRSYSMODS report  to  determine  which
service items  were  identified  for  the  products in your
order  since the time  you received the order. The F5SMPREP
job creates  an ERRSYSMODS report  for  each  zone  in  the
IFCHECK ZONESET, based on HOLDDATA in the global zone.
Before  creating   this  report,   download   the   current
Enhanced HOLDDATA from the following Web site:

http://service.boulder.ibm.com/390holddata.html

This data is up-to-date and contains information about PTFs
in error and newly-discovered HIPER APARs that might not be
resolved by the PTFs received  in your order's global zone.
IBM recommends that  you  resolve  PTFs-in-error (PEs)  and
unresolved HIPER APARs before putting any new software into
production.

If you want SMP/E  to create a job  to  install  service to
resolve problems  identified by  REPORT ERRSYSMODS  that is
already received in the global zone, change the SMPPUNCH DD
statement to allocate a data set  and  remove  the  NOPUNCH
operand from the REPORT ERRSYSMODS command.

Running the CROSSZONE Report

You should run REPORT CROSSZONE  between all the necessary SMP/E zones
when:

o   The new software  will be used in a multi-system environment where
    data is shared  or  exchanged  with  other  systems  at  different
    software levels (for example, in  a  sysplex  or  in  environments
    where systems share DASD between sysplexes).
o   The new software will  be  used  in  existing  environments  where
    other products (especially subsystems such as CICS) will be used.

In each case, application of additional maintenance might be required
to reach compatible operating levels.

SMP/E requires the zones used to create these reports to  be  defined
to the same global zone.   This  requirement  does  not  require  any
changes  to  your  installation's  maintenance  procedures.  You  can
continue to use other existing global zones to service your  existing
zones.

Before running this job,  you  must add your existing target zones to
the zone index in your new global zone.   Because  zone names must be
unique,  you  will  have  to  make  copies of any zones that have the
same names  as  the  new  zones  in  order  to  create these reports.
For information about creating a  copy  of  a  target zone,  see  the
description of the ZONECOPY command in z/OS SMP/E Commands, SA22-7771.

Comments in  SMPREP  provide instructions for updating the zone index
and  CSI data set names   before  submitting  the  job.   Read  these
instructions carefully.

For details on how to interpret the reports, see z/OS SMP/E Commands,
SA22-7771, in the chapters entitled 'REPORT SYSMODS Command' and 'SMP/E
Reports'.

The  CROSSZONE  report  does  not  address  all  migration  actions  or
service  that  might  be  required.    For  additional  actions,  check
the product preventive service planning (PSP) bucket  and  installation
and planning guides.

ADDITIONAL IFREQ PROCESSING

Your order contains products and integrated service that have require-
ments on FMIDs that are not in your order.  If you have any of these
FMIDs, you should install the IFREQ maintainance.

A table in the hardcopy version of Installing Your Order  can help you
identify the products in your order that require PTFs to be installed.
For these products, refer to the IFREQ package report.  Search on
"IFREQ" in the PACKRPT member of data set SYS1.OS999999.SCPPLENU.

The IFREQ report lists the following:

o   Products in your order (by FMID) that require that you to
    install PTFs
o   Requesting FMIDs or PTFs
o   PTFs to install.

NOTES:

1.  Note  that  the IFREQ report reflects the IFREQ PTFs at the time of
    your order; you may find that you need to  apply  additional  IFREQ
    PTFs after installing service or products later.
2.  If  the  section below is blank, then  there  are no IFREQ  entries
    to be processed and no further action is required.

JOB F6CALLNK

The F6CALLNK job contains the  generated  JCL  statements
from the REPORT CALLLIBS command executed by  the  C2UPDDDD
job.

For more  information about the  REPORT CALLLIBS  command
and how the JCL output is generated, see SMP/E Reference.
Before running F6CALLNK,  ensure  that the data set names
specified on the  //SYSLIB JCL  statements  identify  the
libraries you intend to use.    The data set names should
refer to the specific software  product  libraries  to be
used in your  production  environment  with  this  NEWSYSTEM
order.    For information about the required DD names for
CALLLIB support,  see  the  product's  program directory.

Verify that your target system's UNIX System Services root HFS is
mounted prior to executing the F6CALLNK job.

o Enter this command at the system console to display a list of your
  current HFS file systems:
    D OMVS,FILE
o If your target system's root HFS is not mounted, mount it using this
  TSO command:
    MOUNT FILESYSTEM('ssa.OMVS.ROOT') MOUNTPOINT('/SERVICE')
    TYPE(HFS) MODE(RDWR)

Apply any updates you make to the  data  set names to the
corresponding DDDEF entries in  the  target zone.   Doing
so will allow future link-edits,  if any, to refer to the
correct software product.

For   information   about    the   software   programming
pre-requisite products  and  the  services  they provide,
see the product's program directory,  which  is  included
in this NEWSYSTEM order.

F6CALLNK might end with condition code 4.   For each step
that  ends  with  condition  code  4,   see  the  program
directory  for  the  product  being  linked  to determine
whether condition code 4 is acceptable.

./ ADD NAME=F1LDIODF 0114-04350-04350-1300-00040-00041-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: REPRO THE IODF FROM
//*      THE DRIVING SYSTEM
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//IODFINIT EXEC PGM=CBDMGHCP,PARM='INITIODF SIZE=0,ACTLOG=NO'
//STEPLIB  DD DSN=MASTER.SYS1.LINKLIB,DISP=SHR
//HCDCNTL  DD *
This IODF was copied from SYS1.IODF99 on 05/06/15 at 11:21
/*
//HCDPROF  DD *
BATCH_IODF_NAME_CHECK = NO
/*
//HCDIODFT DD DSN=MASTER.SYS1.IODF00,DISP=OLD
//HCDMLOG  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=6650)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,IODFINIT),(4000,LT))
//*
//IODFLOAD EXEC PGM=CBDMGHCP,PARM='COPYIODF'
//STEPLIB  DD DSN=MASTER.SYS1.LINKLIB,DISP=SHR
//HCDPROF  DD *
BATCH_IODF_NAME_CHECK = NO
//HCDIODFS DD DSN=SYS1.IODF99,DISP=SHR
//HCDIODFT DD DSN=MASTER.SYS1.IODF00,DISP=OLD
//HCDMLOG  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=6650)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,IODFLOAD),(4000,LT))
//*
./ ADD NAME=F2IPLTXT 0114-04350-04350-1300-00059-00059-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: - COPY MODULES:ICKRELVL
//*                     IFCDIP00
//*        FROM: THE NEW SYSTEM'S LINKLIB
//*        TO  : YOUR DESIGNATED AUTHORIZED LOAD LIBRARY
//*      - INITIALIZE THE LOGREC DATA SET.
//*      - CREATE IPL TEXT ON THE FIRST NEW SYSRES VOLUME.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//COPAUTH  EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//            DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DISP=SHR,
//            DSN=USER.LINKLIB
//SYSIN    DD *
  COPYMOD  INDD=INPUT1,OUTDD=OUTPUT1,MAXBLK=6144
    SELECT MEMBER=ICKRELVL
    SELECT MEMBER=IFCDIP00
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,COPAUTH),(4000,LT))
//*
//INITLOG EXEC PGM=IFCDIP00,COND=(4000,LT)
//STEPLIB  DD DSN=USER.LINKLIB,
//            DISP=SHR
//SERERDS  DD DISP=SHR,
//            DSN=MASTER.SYS1.EXMP.LOGREC
//SYSPRINT DD SYSOUT=*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,INITLOG),(4000,LT))
//*
//IPLTXT  EXEC PGM=ICKDSF,COND=(4000,LT)
//STEPLIB  DD DSN=USER.LINKLIB,
//            DISP=SHR
//SYSPRINT DD SYSOUT=*
//IPLVOL   DD DISP=SHR,
//            VOL=SER=C4RES1,
//            UNIT=3390
//IPLTEXT  DD DISP=SHR,
//  DSN=MASTER.SYS1.SAMPLIB(IPLRECS)
//         DD DISP=SHR,
//  DSN=MASTER.SYS1.SAMPLIB(IEAIPL00)
//SYSIN    DD  *
  REFORMAT DDNAME(IPLVOL) IPLDD(IPLTEXT) NOVERIFY BOOTSTRAP
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,IPLTXT),(4000,LT))
//*
./ ADD NAME=F3DMPBLD 0114-04350-04350-1300-00102-00102-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*------------------------------------------------------------------
//*
//* DOC: THE SADMP UTILITY PROGRAM, AMDSAOSG, INITIALIZES A
//*      SADMP RESIDENCE VOLUME IN ONE JOB STEP BY DYNAMICALLY
//*      ALLOCATING DATA SETS AND INVOKING THE APPROPRIATE PROGRAMS.
//*
//*      STEP SCRATCH DELETES THE PAGEDUMP DATASET FOR SUBSEQUENT
//*      REALLOCATION BY THE AMDSAOSG PROGRAM
//*      IF THE SYS1.PAGEDUMP.VC4CAT1
//*      DATASET DOES NOT EXIST ON THE PACK,
//*      THE SCRATCH WILL FAIL. A RC=8 IS ACCEPTABLE IN THIS STEP.
//*
//*      STEP COPYAUTH COPIES THE STAND ALONE DUMP UTILITY
//*      PROGRAM TO YOUR APF AUTHORIZED LIBRARY.
//*
//*      PLEASE REVIEW THE PARAMETERS ON THE AMDSADMP MACRO
//*      BEFORE SUBMITTING THIS JOB.
//*
//*      THE SYS1.PAGEDUMP.VC4CAT1
//*      ALLOCATED WILL NOT BE CATALOGED IN ANY
//*      MASTER CATALOG.
//*------------------------------------------------------------------
//*
//SCRATCH EXEC PGM=IEHPROGM
//DD1      DD UNIT=3390,VOL=SER=C4CAT1,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
   SCRATCH  DSNAME=SYS1.PAGEDUMP.VC4CAT1,PURGE,                        X
               VOL=3390=C4CAT1
/*
//*
//COPAUTH  EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//INPUT1   DD DISP=SHR,
//            DSN=MASTER.SYS1.LINKLIB
//OUTPUT1  DD DISP=SHR,
//            DSN=USER.LINKLIB
//SYSIN    DD *
  COPYMOD  INDD=((INPUT1,R)),OUTDD=OUTPUT1,MAXBLK=6144
    SELECT MEMBER=AMDSAOSG
    SELECT MEMBER=AMDSABLD
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,COPAUTH),(4000,LT))
//*
//OSG      EXEC PGM=AMDSAOSG
//STEPLIB  DD   DISP=SHR,
//    DSN=USER.LINKLIB
//SYSLIB   DD   DISP=SHR,
//    DSN=MASTER.SYS1.MACLIB
//         DD   DISP=SHR,
//    DSN=MASTER.SYS1.MODGEN
//DPLTEXT  DD   DISP=SHR,
//    DSN=MASTER.SYS1.NUCLEUS(AMDSADPL)
//IPLTEXT  DD   DISP=SHR,
//    DSN=MASTER.SYS1.NUCLEUS(AMDSAIPD)
//PGETEXT  DD   DISP=SHR,
//    DSN=MASTER.SYS1.NUCLEUS(AMDSAPGE)
//IPITEXT  DD   DISP=SHR,
//    DSN=MASTER.SYS1.NUCLEUS(AMDSAIPI)
//DVITEXT  DD   DISP=SHR,
//    DSN=MASTER.SYS1.NUCLEUS(AMDSADVI)
//GENPRINT DD   SYSOUT=*
//GENPARMS DD   *
         AMDSADMP IPL=D3390,VOLSER=C4CAT1,                             X
               MINASID=ALL,                                            X
               DDSPROMPT=YES,                                          X
               OUTPUT=D3390,                                           X
               CONSOLE=(0F2,3278)
         END
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,OSG),(4000,LT))
//*
//DELAUTH EXEC PGM=IDCAMS,COND=(4000,LT)
//DD1      DD DSN=USER.LINKLIB,
//            DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE USER.LINKLIB(ICKDSF) -
    NONVSAM FILE(DD1) PURGE
  DELETE USER.LINKLIB(ICKRELVL) -
    NONVSAM FILE(DD1) PURGE
  DELETE USER.LINKLIB(IFCDIP00) -
    NONVSAM FILE(DD1) PURGE
  DELETE USER.LINKLIB(AMDSAOSG) -
    NONVSAM FILE(DD1) PURGE
  DELETE USER.LINKLIB(AMDSABLD) -
    NONVSAM FILE(DD1) PURGE
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DELAUTH),(4000,LT))
//*
./ ADD NAME=F4LOAD00 0114-04350-04350-1300-00033-00034-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: CREATE MEMBER 'LOAD00' IN IPLPARM OR PARMLIB.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*--------------------------------------------------------------------
//LOAD00   EXEC PGM=IEBGENER,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DATA,DLM=##
IODF     00 SYS1
NUCLEUS  1
SYSCAT   C4CAT1113CCATALOG.C14.MASTER
SYSPLEX  LOCAL
PARMLIB  SYS1.PARMLIB                                 C4CAT1
PARMLIB  EXMP.PARMLIB                                 C4CAT1
PARMLIB  SYS1.IBM.PARMLIB                             C4RES1
##
//SYSUT2   DD DISP=SHR,
//   DSN=MASTER.SYS1.IPLPARM(LOAD00)
//SYSIN    DD DUMMY
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,LOAD00),(4000,LT))
//*
./ ADD NAME=F5SMPREP 0114-04350-04350-1300-00098-00098-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//*   THIS IS AN OPTIONAL JOB MEANT TO ASSIST YOU IN MIGRATION
//*
//*   THE PURPOSE OF THIS JOB IS TO RUN AN SMP/E REPORT SYSMODS
//*   TO COMPARE THE SYSMODS INSTALLED IN YOUR CURRENT PRODUCTION
//*   TARGET ZONE(S) AND NEW TARGET ZONE(S).  THIS IS TO IDENTIFY
//*   ANY MISSING ELEMENTS (FMIDS) BETWEEN THE TWO SYSTEMS.
//*
//*   THIS JOB ALSO RUNS AN SMP/E REPORT CROSSZONE COMMAND TO
//*   HELP IDENTIFY ANY CONDITIONAL REQUISITE SERVICE THAT MUST
//*   BE INSTALLED ONTO ADDITIONAL OS/390 SYSTEMS OR SUBSYSTEMS
//*   YOU INTEND TO RUN IN A MULTI SYSTEM CONFIGURATION.
//*
//*  NOTE:
//*
//*   THE REPORT CROSSZONE IS ONLY MEANT TO ASSIST YOU IN
//*   SYNCHRONIZING SERVICE LEVELS.  YOU WILL STILL NEED TO
//*   RESEARCH ADDITIONAL MIGRATION ACTIONS AND SERVICE BEYOND
//*   THIS LIST.
//*
//*** REQUIRED UPDATES: ***
//*
//*   UPDATE THIS JOB WITH THE ZONE INDEX NAME OF THE
//*   PRODUCTION SYSTEM YOU ARE MIGRATING FROM PRIOR TO
//*   SUBMISSION.
//*
//*   ALSO ADD THE ZONE INDEX OF ANY ADDITIONAL OS/390
//*   SYSTEMS OR SUBSYSTEMS (DB2, IMS, CICS) YOU INTEND
//*   TO USE IN CONJUNCTION WITH THIS.
//*
//*   IF YOU DO NOT INTEND TO RUN ANY ADDITIONAL SYSTEMS
//*   OR SUBSYSTEMS THEN YOU CAN DELETE THE ADD ZONEINDEX
//*   NAMES FROM THIS JOB.
//*
//*-------------------------------------------------------------------
//SMPREP   EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DISP=SHR,
//         DSN=MASTER.SYS1.MIGLIB
//SMPCSI   DD DISP=SHR,
//         DSN=PRIME.SMPE.GLOBAL.CSI
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPPUNCH DD DUMMY
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    UCLIN .
      ADD GZONE ZINDEX(
        (PRODMVS,MVS.PROD.TARG.CSI,TARGET)   /* - PRODUCTION MVS */
        (ADDMVS,MVS.ADD.TARG.CSI,TARGET)  /*- ADDITIONAL MVS SYSTEM  */
        (ADDCIC,CICS.ADD.TARG.CSI,TARGET) /*- ADDITIONAL CICS SUBSYS */
        (ADDIMS,IMS.ADD.TARG.CSI,TARGET)  /*- ADDITIONAL IMS SUBSYS  */
        (ADDDB2,DB2.ADD.TARG.CSI,TARGET)  /*- ADDITIONAL DB2 SUBSYS  */
                      ).
      ADD ZONESET(IFCHECK)
          ZONE (
            MVST100,
           PRODMVS,                      /* - PRODUCTION MVS */
            ADDMVS,             /* - ADDITIONAL MVS SYSTEM     */
            ADDCIC,             /* - ADDITIONAL CICS SUBSYSTEM */
            ADDIMS,             /* - ADDITIONAL IMS SUBSYSTEM  */
            ADDDB2,             /* - ADDITIONAL DB2 SUBSYSTEM  */
               ).
    ENDUCL .
  REPORT SYSMODS
         INZONE(PRODMVS)                  /* - PRODUCTION MVS */
         COMPAREDTO(MVST100) .
   REPORT CROSSZONE ZONESET(IFCHECK).
   REPORT ERRSYSMODS ZONES(IFCHECK) NOPUNCH.
  SET BDY(GLOBAL) .
    UCLIN .
      DEL GZONE ZINDEX(
           (PRODMVS)              /* - PRODUCTION MVS */
           (ADDMVS)           /* - ADDITIONAL MVS SYSTEM     */
           (ADDCIC)           /* - ADDITIONAL CICS SUBSYSTEM */
           (ADDIMS)           /* - ADDITIONAL IMS SUBSYSTEM  */
           (ADDDB2)           /* - ADDITIONAL DB2 SUBSYSTEM  */
      ) .
       DEL ZONESET(IFCHECK).
    ENDUCL .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,SMPREP),(4000,LT))
//*
./ ADD NAME=F6CALLNK 0114-04350-04350-1300-00025-00034-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*-------------------------------------------------------------------
//* GDE: F6CALLNK JOB
//*
//* IF YOUR ORDER DOES NOT REQUIRE ANY UPDATES FOR CALLLIBS
//* AND YOU WOULD LIKE THIS JOB TO BE MARKED COMPLETE IN THE
//* "INSTALLATION" OPTION OF THE DIALOG FOR TRACKING, THEN
//* SUBMIT THIS JOB. OTHERWISE, IT CAN BE BYPASSED.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//*
//MARKDONE EXEC PGM=IEFBR14
//*
./ ADD NAME=G0ARECAT 0114-04350-04350-1300-00209-00213-00000-HOWTO

RECATALOGING ENTRIES FOR TARGET SYSTEM

  Note:  This job is not generated by a system replacement.

This section describes  the RECATDS job,  which  you  must
run if you are performing a software upgrade installation.
In a software upgrade,  RECATDS  sets up addressability to
the target system's catalogs.

For a  full  system replacement  installation,  skip  this
section   and   continue    with   "Copying  Configuration
Information to the Target System."


JOB RECATDS

The RECATDS job has three phases, as follows:

o   Phase 1 generates the same reports that the VERIFY job did, giving
    you a final opportunity to review differences between your config-
    uration and the existing system. When there are incompatibilities,
    you will need to change the  configuration, the P2IMAP  member  of
    orderhlq.SCPPSENU or the  existing  system to  resolve  the  dif-
    ferences.  Otherwise, you will need to be aware of and manage the
    incompatibilities yourself.

o   Phase 2 renames and recatalogs data sets.

o   Phase 3 (optional) creates data set aliases.


PHASE 1: COMPARING YOUR NEW CONFIGURATION WITH YOUR EXISTING SYSTEM

Run the first phase of the RECATDS job  to  receive  reports  on  dif-
ferences between the data set layout  you  defined  and  the  existing
system. RECATDS uses P2IMAP member of SCPPSENU,  which contains a list
of each physical volume you defined in your configuration.  If you use
indirect cataloging, the list also contains the system symbols you use
for the volumes.

Some  data  sets cannot be cataloged with system symbols.
SYS1.PARMLIB  and   any   data   set   in   the   parmlib
concatenation for which the volume name is not  specified
in  LOADxx  cannot  be  cataloged with  a system  symbol.
These data sets must be cataloged  by  specifying  either
the correct volume, or, for data sets on the IPL  volume,
with six asterisks ("******").

For  more information  about  cataloging  data  sets  using   indirect
referencing, see the topic on defining  catalog  entries  for  NONVSAM
data  sets  in DFSMS/MVS  Access Method Services Reference for the ICF
Catalog Facility, SC26-4906, and the topic on indirect  volume  serial
support in MVS Initialization and Tuning Reference.

In generating reports, the CPPERCDS step:

o  Ensures all the catalogs you identified in the dialog are connected
   and accessible.

o  Compares the catalog associated with each high-level  qualifier  in
   the configuration to your existing system's catalog structure.

o  Compares each data set entry in the configuration, including system
   symbols you specified in P2IMAP, to your existing system's  catalog
   data set entries.

o  Provides reports, as described  in a  topic that  follows: "Catalog
   Structure and Data Set Entry Reports."

Return codes from the CPPERCDS exec are:

  0   The catalog structure and data set entries of your configuration
      match those of the existing system.

  8   The catalog structure and data set entries of your configuration
      do not match those of the existing system.  The  differences are
      identified in the reports.

  12  Some condition caused RECATDS to stop; examine the error messages
      and take the appropriate actions.

Regardless of the return code you receive, you should
examine the reports and messages.

After Phase I completes, you can make appropriate changes
to your definitions, as suggested in the messages and
reports.  To change the definitions, do one of the
following:

o   Return to the dialog and make the appropriate changes.
    Then, file-tailor the jobs to use the new information.
    If you used GENSKEL originally, use it again.  If you
    do not file-tailor the jobs after you change your
    definitions, subsequent jobsteps will fail.

o   Change the entries in the P2IMAP member.  Then, rerun
    the step that invokes the exec CPPERCDS to use the new
    information.


CATALOG STRUCTURE AND DATA SET ENTRY REPORTS:
RECATDS produces the reports in its SYSOUT. The following
figure lists the titles and DDNAMEs of the reports.


                    REPORTS PRODUCED BY RECATDS

 TITLE OF REPORT                                        DDNAME

 Conflicting Catalog Entries                            CATMIS

 New High Level Qualifiers                              HLQNEW

 Matching Catalog Entries                               CATMATCH

 Catalog Data Set Conflicts - Indirect Catalog          INDDIFF
                                References

 Catalog Data Set Conflicts - Direct Catalog            DIRDIFF
                                References

 New Catalog Data Set Entries - Indirect Catalog        INDNEW
                                References

 New Catalog Data Set Entries - Direct Catalog          DIRNEW
                                References

 Matching Catalog Data Set Entries - Indirect Catalog   INDMATCH
                                References

 Matching Catalog Data Set Entries - Direct Catalog     DIRMATCH
                                References

 Existing Entry is SMS                                  SMSERR

 Indirect in Catalog, Managed in Config                 INDSMS

 Direct in Catalog, Managed in Config                   DIRSMS

 New Entry, to be Managed                               SMSNEW


 NOTES ABOUT THE REPORTS:

 o  The High Level Qualifier Report that RECATDS produces might differ
    from the report the VERIFY job produces.   They would  differ  if,
    after you ran VERIFY, you made changes to your existing system  or
    to your configuration.

 o  If the Conflicting Catalog Entries Report  contains  entries,  the
    following reports can contain missing or extra  entries  for  data
    sets beginning with the high-level qualifiers listed in  that  re-
    port:

     o  Catalog Data Set Conflicts - Indirect Catalog References
     o  Catalog Data Set Conflicts - Direct Catalog References
     o  New Catalog Data Set Entries - Indirect Catalog References
     o  New Catalog Data Set Entries - Direct Catalog References
     o  Matching Catalog Data Set Entries - Indirect Catalog References
     o  Matching Catalog Data Set Entries - Direct Catalog References
     o  Existing Entry is SMS
     o  Indirect in Catalog, Managed in Config
     o  Direct in Catalog, Managed in Config
     o  New Entry, to be Managed

Review the reports and messages to determine if you need to  return  to
the panels or to the P2IMAP member to make changes. Then rerun the step
that invokes the exec CPPERCDS.

This first phase generates the following two data sets  (deleting  data
sets by those names, if they exist already):

     o  hlq..RECATDS.CNTL1, input to Phase 2
     o  hlq..RECATDS.CNTL2, input to Phase 3

You can view these data sets to see the input to subsequent phases.


PHASE 2: RENAMING AND RECATALOGING DATA SETS

In Phase 2, RECATDS:

  o  For each physical volume, renames each data set on the  volume on
     which it resides, removing the 'SSA'.

  o  Recatalogs new and moved data sets.


To  run  Phase 2,  restart  RECATDS  at  the  UNMOUNT  step.   You can
use RESTART=stepname in the jobcard.

If  you  changed  your  order's  PDS  data sets  to  PDSE  data  sets,
you might have inadvertently caused  naming  conflicts  or  cataloging
conflicts with other data sets in the configuration.   To correct such
conflicts, you must return to the  Modify System Layout option  of the
installation  dialog and  rename or  recatalog  data sets as necessary.


PHASE 3: CREATING DATA SET ALIASES

If you want to use SSAs to access those data sets cataloged using  di-
rect catalog references, restart RECATDS at the IDCAMS2 step to create
data set aliases for these data sets. No SSAs are created for indirect
catalog entries.

To see the input to this step, check the data set
hlq..RECATDS.CNTL2.

./ ADD NAME=G0BCOPYC 0114-04350-04350-1300-00113-00088-00000-HOWTO
COPYING CONFIGURATION INFORMATION TO THE TARGET SYSTEM

This section describes the jobs that you use to copy customization
data from the driving system to the target system.

JOB G1CONS00

The G1CONS00 job copies the specified CONSOLxx member from the driving
system to the target system. Before you run this job, it is recommended
that you create a backup copy of the CONSOL00 member that was shipped
with this order. The G1CONS00 job overlays the shipped CONSOL00 member.

To activate the OPERLOG log stream, you must update the HARDCOPY
statement in the CONSOL00 parmlib  member.  This step is optional.
You can use the system log (SYSLOG), the OPERLOG log stream (OPERLOG),
or both.  To use both, add or modify the HARDCOPY statement as shown:

HARDCOPY
   CMDLEVEL(CMDS)
   DEVNUM(SYSLOG,OPERLOG)
   ROUTCODE(ALL)

JOB G2VATLST

The G2VATLST job sets default mount attributes for
DASD volumes.  This job also adds entries to your
target system's VATLST00 member.

JOB G3VTMDEF

All user-modified SNA tables and resource definitions used in
session establishment, control, and termination must be made
available to the target system before you use Secureway
Communications Server SNA.

The G3VTMDEF job copies the driving system's SNA definitions and
tables to the target system using the IEBCOPY utility.  Your
existing VTAMLST data set is copied to EXMP.VTAMLST.  The
supplied members ATCCONEX, ATCSTREX, and EXLOCAL are excluded
from the COPY operation so that they are not overlaid.

If you do not intend to use the  supplied ATCCONEX member
on your target system, and you plan to use any of the
supplied major node definitions, you must add them to the
ATCCONxx member that you plan to use.

Also, the USSTAB member of your existing library containing local load
modules for use with VTAM is copied to the EXMP.VTAMLIB data set.

If you have other local load modules in this data set that should be
copied to EXMP.VTAMLIB, add them to the SELECT statement.

You must ensure that adequate space exists for the new elements
in the target system's EXMP.VTAMLST and EXMP.VTAMLIB data sets.

An alternative to copying both the VTAMLST and VTAMLIB
libraries to your new target system would be simply to make
your private libraries available to VTAM by concatenating them to
DDNAMEs  VTAMLST and VTAMLIB respectively in the VTAM startup
procedure.

For information about migrating your SNA configuration
information, see Secureway Communications Server SNA Resource
Definition Reference.

JOB G4CVUADS

The G4CVUADS job converts entries from an existing system's UADS
data set to the target system's UADS data set.

G4CVUADS does  not  copy  or  convert  logged-on userids.  It is
recommended that  you  do the following before running this job:

o   Edit the job card to add TYPRUN=HOLD
o   Prevent new logons by entering the command: F TSO,USERMAX=0
o   Have all TSO/E users log off from the system
o   Release the job.

After G4CVUADS completes, you can allow users to log on again.

JOB G5TSOUSR

The G5TSOUSR job deletes and re-establishes the following TSO/E
user IDs in your target system:

o   IBMUSER
o   TSO1
o   TSO2
o   TSO3
o   TSO4
o   TSO5

User ID IBMUSER is given 'ACCOUNT' authority.

JOB G6ALTCAT

The G6ALTCAT job renames each allocated data set to its final
data set name.   G6ALTCAT also defines aliases for these data
sets in their respective catalogs.     Each alias points to
the final data set name.
The G6ALTCAT job is intended only for full system replacement
installations.     If you are performing a software upgrade
installation,  run job RECATDS  and,  optionally,  T1CLEAN,
instead.
If you run  RACFDRV  and  H1RACTGT,  these jobs protect data
sets  using  a  generic  for  each SSA and generics for the
final HLQs.
If you are installing your  order  on  SMS-managed  volumes
and want to review the SMS set-up work performed earlier in
this installation,  return  to  the  topic on installing an
order  on  SMS-managed  volumes  in
NEWSYSTEM: Using the Installation Dialog.
________________________________________
./ ADD NAME=G1CONS00 0114-04350-04350-1300-00037-00038-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: COPY THE EXISTING CONSOLXX MEMBER FROM THE DRIVING SYSTEM
//*      PARMLIB TO THE NEW SYSTEMS SYS1.PARMLIB.
//*
//*      NOTE:  THIS JOB OVERLAYS THE SHIPPED CONSOL00 MEMBER.
//*      YOU MAY WISH TO BACKUP THE SHIPPED CONSOL00 MEMBER PRIOR
//*      TO RUNNING THIS JOB.
//*
//*      AFTER COPYING THE EXISTING CONSOLXX MEMBER FROM THE DRIVING
//*      SYSTEM, PLEASE CHANGE THE DEVNUM PARAMETER OF HARDCOPY
//*      STATEMENT TO DEVNUM(SYSLOG,OPERLOG) SO AS TO LET SYSLOG
//*      USING SYSTEM LOGGER.  YOU CAN REFER TO THE SHIPPED CONSOL00
//*      MEMBER FOR DEFINING DEVNUM.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//COPYCON  EXEC  PGM=IEBGENER,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSN=ADCD.Z16.PARMLIB(CONSOL00),
//            DISP=SHR
//SYSUT2   DD DISP=SHR,
//   DSN=MASTER.SYS1.PARMLIB(CONSOL00)
//SYSIN    DD DUMMY
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,COPYCON),(4000,LT))
//*
./ ADD NAME=G2VATLST 0114-04350-04350-1300-00035-00036-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: CREATE MEMBER 'VATLST00' IN THE NEW PARMLIB DATA SET.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//VATLST   EXEC  PGM=IEBGENER,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DATA,DLM=##
VATDEF IPLUSE(PRIVATE),SYSUSE(PRIVATE)
C4CAT1,1,0,3390    ,Y
C4CAT2,1,2,3390    ,Y
C4DLB1,1,2,3390    ,Y
C4DLB2,1,2,3390    ,Y
C4RES1,1,2,3390    ,Y
C4RES2,1,2,3390    ,Y
C4USS1,1,2,3390    ,Y
WORK* ,0,0,3390    ,N
##
//SYSUT2   DD DISP=SHR,
//   DSN=MASTER.SYS1.PARMLIB(VATLST00)
//SYSIN    DD DUMMY
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,VATLST),(4000,LT))
//*
./ ADD NAME=G3VTMDEF 0114-04350-04350-1300-00046-00047-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: COPY SELECTED DRIVING SYSTEMS COMMUNICATIONS SERVER
//*      SNA NETWORK DEFINITIONS TO THE TARGET SYSTEM.
//*
//* UPDATE:
//*      HLQ.VTAMLST AND HLQ.VTAMLIB WITH THE NAMES OF THE
//*      PRIVATE LIBRARIES FROM YOUR DRIVING SYSTEM
//*
//* NOTE:
//*      - REPLACE IS SPECIFIED FOR THE COPY OPERATION
//*      - ATCCONEX,ATCSTREX AND EXLOCAL ARE EXLUDED FROM
//*        THE COPY OPERATION FOR VTAMLST
//*      - USSTAB IS SELECTED FOR VTAMLIB
//*      - MODIFY SELECTED AND EXCLUDED MEMBERS AS
//*        APPROPRIATE
//*      - ENSURE BLOCKSIZE COMPATABILITY AND ADEQUATE SPACE
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//CPYVTAM  EXEC  PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//INLST    DD DISP=SHR,DSN=ADCD.Z16.VTAMLST
//INLIB    DD DISP=SHR,DSN=ADCD.Z16.VTAMLIB
//OUTLST   DD DSN=MASTER.EXMP.VTAMLST,
//            DISP=SHR
//OUTLIB   DD DSN=MASTER.EXMP.VTAMLIB,
//            DISP=SHR
//SYSIN    DD *
  COPY  INDD=((INLST,R)),OUTDD=OUTLST
    EXCLUDE MEMBER=(ATCCONEX,ATCSTREX,EXLOCAL)
  COPYMOD INDD=((INLIB,R)),OUTDD=OUTLIB
    SELECT MEMBER=(USSTAB)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CPYVTAM),(4000,LT))
//*
./ ADD NAME=G4CVUADS 0114-04350-04350-1300-00032-00032-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: CONVERT THE DRIVING SYSTEM UADS DATASET INTO
//*      THE NEW SYSTEM UADS. PLEASE NOTE THAT THE CONVERT
//*      COMMAND UADSREFM ALSO WORKS WHEN THE DRIVING SYSTEM UADS
//*      DATASET ALREADY HAS AN LRECL OF 172.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*--------------------------------------------------------------------
//CONVUADS EXEC PGM=IKJEFT01
//STEPLIB  DD DSN=MASTER.SYS1.LINKLIB,
//            DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUADN  DD DISP=SHR,DSN=SYS1.UADS
//SYSUADS  DD DSN=MASTER.SYS1.UADS,
//            DISP=SHR
//SYSTSIN  DD *
  UADSREFM
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,CONVUADS),(4000,LT))
//*
./ ADD NAME=G5TSOUSR 0114-04350-04350-1300-00074-00074-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: ADD THE TSO USERID'S INTO THE NEW UADS DATASET
//*
//* NOTE: THE USERID IBMUSER WILL BE AUTHORIZED TO
//*       USE THE ACCOUNT COMMAND.  THIS ALLOWS
//*       CREATING NEW USERIDS FOR TSO LOGON.
//*
//*       THIS JOB DEFAULTS TO SYSALLDA FOR ALL UNITS.
//*       IF YOU DO NOT WANT TO USE SYSALLDA PLEASE CHANGE IT
//*       TO THE APPROPIATE UNIT NAME .
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*--------------------------------------------------------------------
//TSOUSER EXEC PGM=IKJEFT01,COND=(4000,LT)
//SYSTSPRT DD SYSOUT=*
//SYSLBC   DD DSN=MASTER.SYS1.BRODCAST,
//            DISP=SHR
//SYSUADS  DD DSN=MASTER.SYS1.UADS,
//            DISP=SHR
//SYSTSIN  DD *
    SYNC UADS
    ACCOUNT
    D (IBMUSER)
    A (IBMUSER IBMUSER +
           * +
       IKJACCNT) SIZE(4096) +
       UNIT(SYSALLDA) +
       ACCT JCL NOLIM MOUNT OPER
    D (TSO1)
    A (TSO1 TSO1 +
          * +
       IKJACCNT) SIZE(4096) +
       UNIT(SYSALLDA) +
       JCL NOLIM MOUNT OPER
    D (TSO2)
    A (TSO2 TSO2 +
          * +
       IKJACCNT) SIZE(4096) +
       UNIT(SYSALLDA) +
       JCL NOLIM MOUNT OPER
    D (TSO3)
    A (TSO3 TSO3 +
          * +
       IKJACCNT) SIZE(4096) +
       UNIT(SYSALLDA) +
       JCL NOLIM MOUNT OPER
    D (TSO4)
    A (TSO4 TSO4 +
          * +
       IKJACCNT) SIZE(4096) +
       UNIT(SYSALLDA) +
       JCL NOLIM MOUNT OPER
    D (TSO5)
    A (TSO5 TSO5 +
          * +
       IKJACCNT) SIZE(4096) +
       UNIT(SYSALLDA) +
       JCL NOLIM MOUNT OPER
    LIST (*)
  END
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,TSOUSER),(4000,LT))
//*
./ ADD NAME=G6ALTCAT 0114-04350-04350-1300-10551-10551-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* UNMOUNT FILE SYSTEMS
//*-------------------------------------------------------------------
//UNMNT    EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSTSPRT DD   SYSOUT=*
//SYSTSIN  DD   *
   UNMOUNT FILESYSTEM('HFSCAT.OMVS.JV390') IMMEDIATE
   UNMOUNT FILESYSTEM('HFSCAT.OMVS.ROOT') IMMEDIATE
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,UNMNT),(4000,LT))
//*
//*-------------------------------------------------------------------
//* DOC: RENAME EACH ALLOCATED DATA SET TO ITS FINAL DATA SET NAME.
//*      IN THE RESPECTIVE CATALOG, ESTABLISH A DATA SET ALIAS OR
//*      OR PATH ENTRY FOR EACH DATA SET. THIS DATA SET ALIAS
//*      OR PATH ENTRY POINTS TO THE FINAL DATA SET NAME.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*-------------------------------------------------------------------
//ALTCAT   EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  ALTER -
      MASTER.SYS1.LINKLIB -
      NEWNM(SYS1.LINKLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.LINKLIB) -
        REL(SYS1.LINKLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.LPALIB -
      NEWNM(SYS1.LPALIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.LPALIB) -
        REL(SYS1.LPALIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.MACLIB -
      NEWNM(SYS1.MACLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.MACLIB) -
        REL(SYS1.MACLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.MIGLIB -
      NEWNM(SYS1.MIGLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.MIGLIB) -
        REL(SYS1.MIGLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.CSSLIB -
      NEWNM(SYS1.CSSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.CSSLIB) -
        REL(SYS1.CSSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.MODGEN -
      NEWNM(SYS1.MODGEN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.MODGEN) -
        REL(SYS1.MODGEN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.LINKLIB -
      NEWNM(EXMP.LINKLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.LINKLIB) -
        REL(EXMP.LINKLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.VTAMLIB -
      NEWNM(EXMP.VTAMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.VTAMLIB) -
        REL(EXMP.VTAMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTMAC1 -
      NEWNM(SYS1.SISTMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTMAC1) -
        REL(SYS1.SISTMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWMAC1 -
      NEWNM(FFST.V120ESA.SEPWMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWMAC1) -
        REL(FFST.V120ESA.SEPWMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZALOAD -
      NEWNM(TCPIP.SEZALOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZALOAD) -
        REL(TCPIP.SEZALOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICEUSER -
      NEWNM(SYS1.SICEUSER) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICEUSER) -
        REL(SYS1.SICEUSER)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFSRC -
      NEWNM(ISF.SISFSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFSRC) -
        REL(ISF.SISFSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMMAC1 -
      NEWNM(ASM.SASMMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMMAC1) -
        REL(ASM.SASMMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMSAM1 -
      NEWNM(ASM.SASMSAM1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMSAM1) -
        REL(ASM.SASMSAM1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCSAM -
      NEWNM(CBC.SCBCSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCSAM) -
        REL(CBC.SCBCSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEMAC -
      NEWNM(CEE.SCEEMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEMAC) -
        REL(CEE.SCEEMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPMACS -
      NEWNM(ISP.SISPMACS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPMACS) -
        REL(ISP.SISPMACS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.NFSMAC -
      NEWNM(SYS1.NFSMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.NFSMAC) -
        REL(SYS1.NFSMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTMAC -
      NEWNM(SYS1.SBDTMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTMAC) -
        REL(SYS1.SBDTMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASMAC -
      NEWNM(SYS1.SHASMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASMAC) -
        REL(SYS1.SHASMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZANMAC -
      NEWNM(TCPIP.SEZANMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZANMAC) -
        REL(TCPIP.SEZANMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SCNMMAC1 -
      NEWNM(NETVIEW.SCNMMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SCNMMAC1) -
        REL(NETVIEW.SCNMMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZACMAC -
      NEWNM(TCPIP.SEZACMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZACMAC) -
        REL(TCPIP.SEZACMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SORTLPA -
      NEWNM(SYS1.SORTLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SORTLPA) -
        REL(SYS1.SORTLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICELPA -
      NEWNM(SYS1.SICELPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICELPA) -
        REL(SYS1.SICELPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SORTLIB -
      NEWNM(SYS1.SORTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SORTLIB) -
        REL(SYS1.SORTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICELINK -
      NEWNM(SYS1.SICELINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICELINK) -
        REL(SYS1.SICELINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMMAC2 -
      NEWNM(ASM.SASMMAC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMMAC2) -
        REL(ASM.SASMMAC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMSAM -
      NEWNM(GDDM.SADMSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMSAM) -
        REL(GDDM.SADMSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.AOP.AAOPEXEC -
      NEWNM(AOP.AAOPEXEC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.AAOPEXEC) -
        REL(AOP.AAOPEXEC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.AAOPHFS -
      NEWNM(AOP.AAOPHFS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.AAOPHFS) -
        REL(AOP.AAOPHFS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.AAOPMENU -
      NEWNM(AOP.AAOPMENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.AAOPMENU) -
        REL(AOP.AAOPMENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.AAOPMOD1 -
      NEWNM(AOP.AAOPMOD1) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.AAOPMOD1) -
        REL(AOP.AAOPMOD1)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.AAOPPENU -
      NEWNM(AOP.AAOPPENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.AAOPPENU) -
        REL(AOP.AAOPPENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.SAOPEXEC -
      NEWNM(AOP.SAOPEXEC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.SAOPEXEC) -
        REL(AOP.SAOPEXEC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.SAOPMENU -
      NEWNM(AOP.SAOPMENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.SAOPMENU) -
        REL(AOP.SAOPMENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.AOP.SAOPPENU -
      NEWNM(AOP.SAOPPENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.AOP.SAOPPENU) -
        REL(AOP.SAOPPENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.ASM.AASMMAC1 -
      NEWNM(ASM.AASMMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMMAC1) -
        REL(ASM.AASMMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.AASMMAC2 -
      NEWNM(ASM.AASMMAC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMMAC2) -
        REL(ASM.AASMMAC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.AASMMOD1 -
      NEWNM(ASM.AASMMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMMOD1) -
        REL(ASM.AASMMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.AASMMOD2 -
      NEWNM(ASM.AASMMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMMOD2) -
        REL(ASM.AASMMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.AASMPUT2 -
      NEWNM(ASM.AASMPUT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMPUT2) -
        REL(ASM.AASMPUT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.AASMSAM1 -
      NEWNM(ASM.AASMSAM1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMSAM1) -
        REL(ASM.AASMSAM1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.AASMSAM2 -
      NEWNM(ASM.AASMSAM2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.AASMSAM2) -
        REL(ASM.AASMSAM2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMMOD1 -
      NEWNM(ASM.SASMMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMMOD1) -
        REL(ASM.SASMMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMMOD2 -
      NEWNM(ASM.SASMMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMMOD2) -
        REL(ASM.SASMMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMPUT2 -
      NEWNM(ASM.SASMPUT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMPUT2) -
        REL(ASM.SASMPUT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ASM.SASMSAM2 -
      NEWNM(ASM.SASMSAM2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ASM.SASMSAM2) -
        REL(ASM.SASMSAM2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.ASU.AASUACF -
      NEWNM(ASU.AASUACF) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUACF) -
        REL(ASU.AASUACF)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUCIDL -
      NEWNM(ASU.AASUCIDL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUCIDL) -
        REL(ASU.AASUCIDL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUEXEC -
      NEWNM(ASU.AASUEXEC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUEXEC) -
        REL(ASU.AASUEXEC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUHDR -
      NEWNM(ASU.AASUHDR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUHDR) -
        REL(ASU.AASUHDR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUHHDR -
      NEWNM(ASU.AASUHHDR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUHHDR) -
        REL(ASU.AASUHHDR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUHLIB -
      NEWNM(ASU.AASUHLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUHLIB) -
        REL(ASU.AASUHLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUHSAM -
      NEWNM(ASU.AASUHSAM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUHSAM) -
        REL(ASU.AASUHSAM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUIDL -
      NEWNM(ASU.AASUIDL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUIDL) -
        REL(ASU.AASUIDL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASULINK -
      NEWNM(ASU.AASULINK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASULINK) -
        REL(ASU.AASULINK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUMENU -
      NEWNM(ASU.AASUMENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUMENU) -
        REL(ASU.AASUMENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUPENU -
      NEWNM(ASU.AASUPENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUPENU) -
        REL(ASU.AASUPENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUSAMP -
      NEWNM(ASU.AASUSAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUSAMP) -
        REL(ASU.AASUSAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUSTUB -
      NEWNM(ASU.AASUSTUB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUSTUB) -
        REL(ASU.AASUSTUB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.AASUTLIB -
      NEWNM(ASU.AASUTLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.AASUTLIB) -
        REL(ASU.AASUTLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUACF -
      NEWNM(ASU.SASUACF) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUACF) -
        REL(ASU.SASUACF)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUCIDL -
      NEWNM(ASU.SASUCIDL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUCIDL) -
        REL(ASU.SASUCIDL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUEXEC -
      NEWNM(ASU.SASUEXEC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUEXEC) -
        REL(ASU.SASUEXEC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUHDR -
      NEWNM(ASU.SASUHDR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUHDR) -
        REL(ASU.SASUHDR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUIDL -
      NEWNM(ASU.SASUIDL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUIDL) -
        REL(ASU.SASUIDL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUMENU -
      NEWNM(ASU.SASUMENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUMENU) -
        REL(ASU.SASUMENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUPENU -
      NEWNM(ASU.SASUPENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUPENU) -
        REL(ASU.SASUPENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUSAMP -
      NEWNM(ASU.SASUSAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUSAMP) -
        REL(ASU.SASUSAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUSTUB -
      NEWNM(ASU.SASUSTUB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUSTUB) -
        REL(ASU.SASUSTUB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ASU.SASUTLIB -
      NEWNM(ASU.SASUTLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ASU.SASUTLIB) -
        REL(ASU.SASUTLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.BDT1.BDTSPOOL -
      NEWNM(BDT1.BDTSPOOL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.BDT1.BDTSPOOL) -
        REL(BDT1.BDTSPOOL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.BDT1.MSG0001 -
      NEWNM(BDT1.MSG0001) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.BDT1.MSG0001) -
        REL(BDT1.MSG0001)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.BDT1.TQIBITS -
      NEWNM(BDT1.TQIBITS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.BDT1.TQIBITS) -
        REL(BDT1.TQIBITS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.BDT1.TQIDATA -
      NEWNM(BDT1.TQIDATA) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.BDT1.TQIDATA) -
        REL(BDT1.TQIDATA)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.BPA.ABPAHFS -
      NEWNM(BPA.ABPAHFS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.BPA.ABPAHFS) -
        REL(BPA.ABPAHFS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.CBC.ACBCCMP -
      NEWNM(CBC.ACBCCMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACBCCMP) -
        REL(CBC.ACBCCMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACBCSR1 -
      NEWNM(CBC.ACBCSR1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACBCSR1) -
        REL(CBC.ACBCSR1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACCNCMP -
      NEWNM(CBC.ACCNCMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACCNCMP) -
        REL(CBC.ACCNCMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACCNSR1 -
      NEWNM(CBC.ACCNSR1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACCNSR1) -
        REL(CBC.ACCNSR1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBDLL -
      NEWNM(CBC.ACLBDLL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBDLL) -
        REL(CBC.ACLBDLL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBDLL2 -
      NEWNM(CBC.ACLBDLL2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBDLL2) -
        REL(CBC.ACLBDLL2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBHFS1 -
      NEWNM(CBC.ACLBHFS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBHFS1) -
        REL(CBC.ACLBHFS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBOBJ -
      NEWNM(CBC.ACLBOBJ) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBOBJ) -
        REL(CBC.ACLBOBJ)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBOBJ2 -
      NEWNM(CBC.ACLBOBJ2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBOBJ2) -
        REL(CBC.ACLBOBJ2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBSR1 -
      NEWNM(CBC.ACLBSR1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBSR1) -
        REL(CBC.ACLBSR1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBSR2 -
      NEWNM(CBC.ACLBSR2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBSR2) -
        REL(CBC.ACLBSR2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBSR3 -
      NEWNM(CBC.ACLBSR3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBSR3) -
        REL(CBC.ACLBSR3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLBSR4 -
      NEWNM(CBC.ACLBSR4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLBSR4) -
        REL(CBC.ACLBSR4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLDHFS1 -
      NEWNM(CBC.ACLDHFS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLDHFS1) -
        REL(CBC.ACLDHFS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACLDSR1 -
      NEWNM(CBC.ACLDSR1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACLDSR1) -
        REL(CBC.ACLDSR1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACTVMOD -
      NEWNM(CBC.ACTVMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACTVMOD) -
        REL(CBC.ACTVMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.ACTVSRC -
      NEWNM(CBC.ACTVSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.ACTVSRC) -
        REL(CBC.ACTVSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCCMP -
      NEWNM(CBC.SCBCCMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCCMP) -
        REL(CBC.SCBCCMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCDOC -
      NEWNM(CBC.SCBCDOC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCDOC) -
        REL(CBC.SCBCDOC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCIMG -
      NEWNM(CBC.SCBCIMG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCIMG) -
        REL(CBC.SCBCIMG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCJCL -
      NEWNM(CBC.SCBCJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCJCL) -
        REL(CBC.SCBCJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCPNL -
      NEWNM(CBC.SCBCPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCPNL) -
        REL(CBC.SCBCPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCPRC -
      NEWNM(CBC.SCBCPRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCPRC) -
        REL(CBC.SCBCPRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCSKL -
      NEWNM(CBC.SCBCSKL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCSKL) -
        REL(CBC.SCBCSKL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCBCUTL -
      NEWNM(CBC.SCBCUTL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCBCUTL) -
        REL(CBC.SCBCUTL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNCMP -
      NEWNM(CBC.SCCNCMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNCMP) -
        REL(CBC.SCCNCMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNDOC -
      NEWNM(CBC.SCCNDOC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNDOC) -
        REL(CBC.SCCNDOC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNIMG -
      NEWNM(CBC.SCCNIMG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNIMG) -
        REL(CBC.SCCNIMG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNJCL -
      NEWNM(CBC.SCCNJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNJCL) -
        REL(CBC.SCCNJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNPNL -
      NEWNM(CBC.SCCNPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNPNL) -
        REL(CBC.SCCNPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNPRC -
      NEWNM(CBC.SCCNPRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNPRC) -
        REL(CBC.SCCNPRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNSAM -
      NEWNM(CBC.SCCNSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNSAM) -
        REL(CBC.SCCNSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNSKL -
      NEWNM(CBC.SCCNSKL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNSKL) -
        REL(CBC.SCCNSKL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCCNUTL -
      NEWNM(CBC.SCCNUTL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCCNUTL) -
        REL(CBC.SCCNUTL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBCPP -
      NEWNM(CBC.SCLBCPP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBCPP) -
        REL(CBC.SCLBCPP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBCPP2 -
      NEWNM(CBC.SCLBCPP2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBCPP2) -
        REL(CBC.SCLBCPP2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBDLL -
      NEWNM(CBC.SCLBDLL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBDLL) -
        REL(CBC.SCLBDLL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBDLL2 -
      NEWNM(CBC.SCLBDLL2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBDLL2) -
        REL(CBC.SCLBDLL2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBH.C -
      NEWNM(CBC.SCLBH.C) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBH.C) -
        REL(CBC.SCLBH.C)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBH.H -
      NEWNM(CBC.SCLBH.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBH.H) -
        REL(CBC.SCLBH.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBH.HPP -
      NEWNM(CBC.SCLBH.HPP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBH.HPP) -
        REL(CBC.SCLBH.HPP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBH.INL -
      NEWNM(CBC.SCLBH.INL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBH.INL) -
        REL(CBC.SCLBH.INL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBJCL -
      NEWNM(CBC.SCLBJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBJCL) -
        REL(CBC.SCLBJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLBSID -
      NEWNM(CBC.SCLBSID) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLBSID) -
        REL(CBC.SCLBSID)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCLDJCL -
      NEWNM(CBC.SCLDJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCLDJCL) -
        REL(CBC.SCLDJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCTVJCL -
      NEWNM(CBC.SCTVJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCTVJCL) -
        REL(CBC.SCTVJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CBC.SCTVMOD -
      NEWNM(CBC.SCTVMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CBC.SCTVMOD) -
        REL(CBC.SCTVMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.CDS.ACDSHFS -
      NEWNM(CDS.ACDSHFS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CDS.ACDSHFS) -
        REL(CDS.ACDSHFS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CDS.ACDSLINK -
      NEWNM(CDS.ACDSLINK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CDS.ACDSLINK) -
        REL(CDS.ACDSLINK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CDS.ACDSSAMP -
      NEWNM(CDS.ACDSSAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CDS.ACDSSAMP) -
        REL(CDS.ACDSSAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CDS.SCDSSAMP -
      NEWNM(CDS.SCDSSAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CDS.SCDSSAMP) -
        REL(CDS.SCDSSAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.CEE.AAFHMOD1 -
      NEWNM(CEE.AAFHMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AAFHMOD1) -
        REL(CEE.AAFHMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AAFHSRC1 -
      NEWNM(CEE.AAFHSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AAFHSRC1) -
        REL(CEE.AAFHSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.ACEEMOD1 -
      NEWNM(CEE.ACEEMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.ACEEMOD1) -
        REL(CEE.ACEEMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.ACEEMOD2 -
      NEWNM(CEE.ACEEMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.ACEEMOD2) -
        REL(CEE.ACEEMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.ACEESRC1 -
      NEWNM(CEE.ACEESRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.ACEESRC1) -
        REL(CEE.ACEESRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.ACEESRC2 -
      NEWNM(CEE.ACEESRC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.ACEESRC2) -
        REL(CEE.ACEESRC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.ACEESRC3 -
      NEWNM(CEE.ACEESRC3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.ACEESRC3) -
        REL(CEE.ACEESRC3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCCPP1 -
      NEWNM(CEE.AEDCCPP1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCCPP1) -
        REL(CEE.AEDCCPP1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCHFS -
      NEWNM(CEE.AEDCHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCHFS) -
        REL(CEE.AEDCHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCMOD1 -
      NEWNM(CEE.AEDCMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCMOD1) -
        REL(CEE.AEDCMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCMOD2 -
      NEWNM(CEE.AEDCMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCMOD2) -
        REL(CEE.AEDCMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCMSEP -
      NEWNM(CEE.AEDCMSEP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCMSEP) -
        REL(CEE.AEDCMSEP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCOBJ1 -
      NEWNM(CEE.AEDCOBJ1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCOBJ1) -
        REL(CEE.AEDCOBJ1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCSRC6 -
      NEWNM(CEE.AEDCSRC6) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCSRC6) -
        REL(CEE.AEDCSRC6)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AEDCSRC7 -
      NEWNM(CEE.AEDCSRC7) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AEDCSRC7) -
        REL(CEE.AEDCSRC7)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AIBMMOD3 -
      NEWNM(CEE.AIBMMOD3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AIBMMOD3) -
        REL(CEE.AIBMMOD3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AIBMSRC3 -
      NEWNM(CEE.AIBMSRC3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AIBMSRC3) -
        REL(CEE.AIBMSRC3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AIGZMOD1 -
      NEWNM(CEE.AIGZMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AIGZMOD1) -
        REL(CEE.AIGZMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.AIGZSRC1 -
      NEWNM(CEE.AIGZSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.AIGZSRC1) -
        REL(CEE.AIGZSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SAFHFORT -
      NEWNM(CEE.SAFHFORT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SAFHFORT) -
        REL(CEE.SAFHFORT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEBIND -
      NEWNM(CEE.SCEEBIND) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEBIND) -
        REL(CEE.SCEEBIND)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEBND2 -
      NEWNM(CEE.SCEEBND2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEBND2) -
        REL(CEE.SCEEBND2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEECICS -
      NEWNM(CEE.SCEECICS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEECICS) -
        REL(CEE.SCEECICS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEECLST -
      NEWNM(CEE.SCEECLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEECLST) -
        REL(CEE.SCEECLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEECMAP -
      NEWNM(CEE.SCEECMAP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEECMAP) -
        REL(CEE.SCEECMAP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEECPP -
      NEWNM(CEE.SCEECPP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEECPP) -
        REL(CEE.SCEECPP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEGXLT -
      NEWNM(CEE.SCEEGXLT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEGXLT) -
        REL(CEE.SCEEGXLT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH -
      NEWNM(CEE.SCEEH) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH) -
        REL(CEE.SCEEH)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH.ARPA.H -
      NEWNM(CEE.SCEEH.ARPA.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH.ARPA.H) -
        REL(CEE.SCEEH.ARPA.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH.H -
      NEWNM(CEE.SCEEH.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH.H) -
        REL(CEE.SCEEH.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH.NET.H -
      NEWNM(CEE.SCEEH.NET.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH.NET.H) -
        REL(CEE.SCEEH.NET.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH.NETINET.H -
      NEWNM(CEE.SCEEH.NETINET.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH.NETINET.H) -
        REL(CEE.SCEEH.NETINET.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH.SYS.H -
      NEWNM(CEE.SCEEH.SYS.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH.SYS.H) -
        REL(CEE.SCEEH.SYS.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEH.T -
      NEWNM(CEE.SCEEH.T) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEH.T) -
        REL(CEE.SCEEH.T)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEELIB -
      NEWNM(CEE.SCEELIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEELIB) -
        REL(CEE.SCEELIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEELKED -
      NEWNM(CEE.SCEELKED) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEELKED) -
        REL(CEE.SCEELKED)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEELKEX -
      NEWNM(CEE.SCEELKEX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEELKEX) -
        REL(CEE.SCEELKEX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEELOCL -
      NEWNM(CEE.SCEELOCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEELOCL) -
        REL(CEE.SCEELOCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEELOCX -
      NEWNM(CEE.SCEELOCX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEELOCX) -
        REL(CEE.SCEELOCX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEELPA -
      NEWNM(CEE.SCEELPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEELPA) -
        REL(CEE.SCEELPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEMSGP -
      NEWNM(CEE.SCEEMSGP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEMSGP) -
        REL(CEE.SCEEMSGP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEOBJ -
      NEWNM(CEE.SCEEOBJ) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEOBJ) -
        REL(CEE.SCEEOBJ)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEPROC -
      NEWNM(CEE.SCEEPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEPROC) -
        REL(CEE.SCEEPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEERTLS -
      NEWNM(CEE.SCEERTLS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEERTLS) -
        REL(CEE.SCEERTLS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEERUN -
      NEWNM(CEE.SCEERUN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEERUN) -
        REL(CEE.SCEERUN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEERUN2 -
      NEWNM(CEE.SCEERUN2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEERUN2) -
        REL(CEE.SCEERUN2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEESAMP -
      NEWNM(CEE.SCEESAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEESAMP) -
        REL(CEE.SCEESAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEESPC -
      NEWNM(CEE.SCEESPC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEESPC) -
        REL(CEE.SCEESPC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEESPCO -
      NEWNM(CEE.SCEESPCO) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEESPCO) -
        REL(CEE.SCEESPCO)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEUMAP -
      NEWNM(CEE.SCEEUMAP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEUMAP) -
        REL(CEE.SCEEUMAP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SCEEUTBL -
      NEWNM(CEE.SCEEUTBL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SCEEUTBL) -
        REL(CEE.SCEEUTBL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SIBMCALL -
      NEWNM(CEE.SIBMCALL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SIBMCALL) -
        REL(CEE.SIBMCALL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SIBMCAL2 -
      NEWNM(CEE.SIBMCAL2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SIBMCAL2) -
        REL(CEE.SIBMCAL2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SIBMMATH -
      NEWNM(CEE.SIBMMATH) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SIBMMATH) -
        REL(CEE.SIBMMATH)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CEE.SIBMTASK -
      NEWNM(CEE.SIBMTASK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CEE.SIBMTASK) -
        REL(CEE.SIBMTASK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.CIM.ACIMHFS -
      NEWNM(CIM.ACIMHFS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CIM.ACIMHFS) -
        REL(CIM.ACIMHFS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CIM.ACIMMOD1 -
      NEWNM(CIM.ACIMMOD1) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CIM.ACIMMOD1) -
        REL(CIM.ACIMMOD1)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CIM.ACIMPLUG -
      NEWNM(CIM.ACIMPLUG) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CIM.ACIMPLUG) -
        REL(CIM.ACIMPLUG)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CIM.SCIMXML -
      NEWNM(CIM.SCIMXML) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CIM.SCIMXML) -
        REL(CIM.SCIMXML)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CMX.ACMXDBRM -
      NEWNM(CMX.ACMXDBRM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CMX.ACMXDBRM) -
        REL(CMX.ACMXDBRM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CMX.ACMXHFS -
      NEWNM(CMX.ACMXHFS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CMX.ACMXHFS) -
        REL(CMX.ACMXHFS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.CMX.SCMXDBRM -
      NEWNM(CMX.SCMXDBRM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.CMX.SCMXDBRM) -
        REL(CMX.SCMXDBRM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.EXMP.CMDPROC -
      NEWNM(EXMP.CMDPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.CMDPROC) -
        REL(EXMP.CMDPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.DOCLIB -
      NEWNM(EXMP.DOCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.DOCLIB) -
        REL(EXMP.DOCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.HFSFILE -
      NEWNM(EXMP.HFSFILE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.HFSFILE) -
        REL(EXMP.HFSFILE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.ISPPLIB -
      NEWNM(EXMP.ISPPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.ISPPLIB) -
        REL(EXMP.ISPPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.IVPLIB -
      NEWNM(EXMP.IVPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.IVPLIB) -
        REL(EXMP.IVPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.PARMLIB -
      NEWNM(EXMP.PARMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.PARMLIB) -
        REL(EXMP.PARMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.PGMDIR -
      NEWNM(EXMP.PGMDIR) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.PGMDIR) -
        REL(EXMP.PGMDIR)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.PROCLIB -
      NEWNM(EXMP.PROCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.PROCLIB) -
        REL(EXMP.PROCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.REPORTS -
      NEWNM(EXMP.REPORTS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.REPORTS) -
        REL(EXMP.REPORTS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.SAMPLIB -
      NEWNM(EXMP.SAMPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.SAMPLIB) -
        REL(EXMP.SAMPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EXMP.VTAMLST -
      NEWNM(EXMP.VTAMLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EXMP.VTAMLST) -
        REL(EXMP.VTAMLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFCLI0 -
      NEWNM(CSF.ACSFCLI0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFCLI0) -
        REL(CSF.ACSFCLI0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFHDRS -
      NEWNM(CSF.ACSFHDRS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFHDRS) -
        REL(CSF.ACSFHDRS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFMOD0 -
      NEWNM(CSF.ACSFMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFMOD0) -
        REL(CSF.ACSFMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFMOD1 -
      NEWNM(CSF.ACSFMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFMOD1) -
        REL(CSF.ACSFMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFMSG0 -
      NEWNM(CSF.ACSFMSG0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFMSG0) -
        REL(CSF.ACSFMSG0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFOBJ -
      NEWNM(CSF.ACSFOBJ) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFOBJ) -
        REL(CSF.ACSFOBJ)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFPNL0 -
      NEWNM(CSF.ACSFPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFPNL0) -
        REL(CSF.ACSFPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFSKL0 -
      NEWNM(CSF.ACSFSKL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFSKL0) -
        REL(CSF.ACSFSKL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.ACSFTLIB -
      NEWNM(CSF.ACSFTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.ACSFTLIB) -
        REL(CSF.ACSFTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFCLI0 -
      NEWNM(CSF.SCSFCLI0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFCLI0) -
        REL(CSF.SCSFCLI0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFHDRS -
      NEWNM(CSF.SCSFHDRS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFHDRS) -
        REL(CSF.SCSFHDRS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFMOD0 -
      NEWNM(CSF.SCSFMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFMOD0) -
        REL(CSF.SCSFMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFMOD1 -
      NEWNM(CSF.SCSFMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFMOD1) -
        REL(CSF.SCSFMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFMSG0 -
      NEWNM(CSF.SCSFMSG0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFMSG0) -
        REL(CSF.SCSFMSG0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFOBJ -
      NEWNM(CSF.SCSFOBJ) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFOBJ) -
        REL(CSF.SCSFOBJ)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFPNL0 -
      NEWNM(CSF.SCSFPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFPNL0) -
        REL(CSF.SCSFPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFSKL0 -
      NEWNM(CSF.SCSFSKL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFSKL0) -
        REL(CSF.SCSFSKL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.CSF.SCSFTLIB -
      NEWNM(CSF.SCSFTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.CSF.SCSFTLIB) -
        REL(CSF.SCSFTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.ECN.AECNEXP -
      NEWNM(ECN.AECNEXP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.AECNEXP) -
        REL(ECN.AECNEXP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ECN.AECNHETC -
      NEWNM(ECN.AECNHETC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.AECNHETC) -
        REL(ECN.AECNHETC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ECN.AECNHEXP -
      NEWNM(ECN.AECNHEXP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.AECNHEXP) -
        REL(ECN.AECNHEXP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ECN.AECNHINC -
      NEWNM(ECN.AECNHINC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.AECNHINC) -
        REL(ECN.AECNHINC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ECN.AECNHLBR -
      NEWNM(ECN.AECNHLBR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.AECNHLBR) -
        REL(ECN.AECNHLBR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ECN.AECNLINK -
      NEWNM(ECN.AECNLINK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.AECNLINK) -
        REL(ECN.AECNLINK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ECN.SECNEXP -
      NEWNM(ECN.SECNEXP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ECN.SECNEXP) -
        REL(ECN.SECNEXP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.EOX.AEPHBOK1 -
      NEWNM(EOX.AEPHBOK1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHBOK1) -
        REL(EOX.AEPHBOK1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHCLB1 -
      NEWNM(EOX.AEPHCLB1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHCLB1) -
        REL(EOX.AEPHCLB1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHDAT1 -
      NEWNM(EOX.AEPHDAT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHDAT1) -
        REL(EOX.AEPHDAT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHLOD1 -
      NEWNM(EOX.AEPHLOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHLOD1) -
        REL(EOX.AEPHLOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHMSG1 -
      NEWNM(EOX.AEPHMSG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHMSG1) -
        REL(EOX.AEPHMSG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHPNL1 -
      NEWNM(EOX.AEPHPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHPNL1) -
        REL(EOX.AEPHPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHSAM1 -
      NEWNM(EOX.AEPHSAM1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHSAM1) -
        REL(EOX.AEPHSAM1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.AEPHTBL1 -
      NEWNM(EOX.AEPHTBL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.AEPHTBL1) -
        REL(EOX.AEPHTBL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHBOK1 -
      NEWNM(EOX.SEPHBOK1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHBOK1) -
        REL(EOX.SEPHBOK1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHCLB1 -
      NEWNM(EOX.SEPHCLB1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHCLB1) -
        REL(EOX.SEPHCLB1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHDAT1 -
      NEWNM(EOX.SEPHDAT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHDAT1) -
        REL(EOX.SEPHDAT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHLOD1 -
      NEWNM(EOX.SEPHLOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHLOD1) -
        REL(EOX.SEPHLOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHMSG1 -
      NEWNM(EOX.SEPHMSG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHMSG1) -
        REL(EOX.SEPHMSG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHPNL1 -
      NEWNM(EOX.SEPHPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHPNL1) -
        REL(EOX.SEPHPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHSAM1 -
      NEWNM(EOX.SEPHSAM1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHSAM1) -
        REL(EOX.SEPHSAM1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOX.SEPHTBL1 -
      NEWNM(EOX.SEPHTBL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOX.SEPHTBL1) -
        REL(EOX.SEPHTBL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOXFONT -
      NEWNM(EOY.AEOXFONT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOXFONT) -
        REL(EOY.AEOXFONT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOXIENU -
      NEWNM(EOY.AEOXIENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOXIENU) -
        REL(EOY.AEOXIENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOXOENU -
      NEWNM(EOY.AEOXOENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOXOENU) -
        REL(EOY.AEOXOENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOX1ENU -
      NEWNM(EOY.AEOX1ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOX1ENU) -
        REL(EOY.AEOX1ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOX2ENU -
      NEWNM(EOY.AEOX2ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOX2ENU) -
        REL(EOY.AEOX2ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOX3ENU -
      NEWNM(EOY.AEOX3ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOX3ENU) -
        REL(EOY.AEOX3ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOX4ENU -
      NEWNM(EOY.AEOX4ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOX4ENU) -
        REL(EOY.AEOX4ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYAENU -
      NEWNM(EOY.AEOYAENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYAENU) -
        REL(EOY.AEOYAENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYBENU -
      NEWNM(EOY.AEOYBENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYBENU) -
        REL(EOY.AEOYBENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYCLIB -
      NEWNM(EOY.AEOYCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYCLIB) -
        REL(EOY.AEOYCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYGENU -
      NEWNM(EOY.AEOYGENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYGENU) -
        REL(EOY.AEOYGENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYIENU -
      NEWNM(EOY.AEOYIENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYIENU) -
        REL(EOY.AEOYIENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYIPRF -
      NEWNM(EOY.AEOYIPRF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYIPRF) -
        REL(EOY.AEOYIPRF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYLENU -
      NEWNM(EOY.AEOYLENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYLENU) -
        REL(EOY.AEOYLENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYLEXS -
      NEWNM(EOY.AEOYLEXS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYLEXS) -
        REL(EOY.AEOYLEXS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYLOAD -
      NEWNM(EOY.AEOYLOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYLOAD) -
        REL(EOY.AEOYLOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYMC30 -
      NEWNM(EOY.AEOYMC30) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYMC30) -
        REL(EOY.AEOYMC30)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYMC40 -
      NEWNM(EOY.AEOYMC40) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYMC40) -
        REL(EOY.AEOYMC40)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYMENU -
      NEWNM(EOY.AEOYMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYMENU) -
        REL(EOY.AEOYMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYOENU -
      NEWNM(EOY.AEOYOENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYOENU) -
        REL(EOY.AEOYOENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYPENU -
      NEWNM(EOY.AEOYPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYPENU) -
        REL(EOY.AEOYPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYPROC -
      NEWNM(EOY.AEOYPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYPROC) -
        REL(EOY.AEOYPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYSAMP -
      NEWNM(EOY.AEOYSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYSAMP) -
        REL(EOY.AEOYSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYSENU -
      NEWNM(EOY.AEOYSENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYSENU) -
        REL(EOY.AEOYSENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYTENU -
      NEWNM(EOY.AEOYTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYTENU) -
        REL(EOY.AEOYTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOYXENU -
      NEWNM(EOY.AEOYXENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOYXENU) -
        REL(EOY.AEOYXENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOY1ENU -
      NEWNM(EOY.AEOY1ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOY1ENU) -
        REL(EOY.AEOY1ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOY2ENU -
      NEWNM(EOY.AEOY2ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOY2ENU) -
        REL(EOY.AEOY2ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.AEOY4ENU -
      NEWNM(EOY.AEOY4ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.AEOY4ENU) -
        REL(EOY.AEOY4ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.BKLSHELF -
      NEWNM(EOY.BKLSHELF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.BKLSHELF) -
        REL(EOY.BKLSHELF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOXFONT -
      NEWNM(EOY.SEOXFONT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOXFONT) -
        REL(EOY.SEOXFONT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOXIENU -
      NEWNM(EOY.SEOXIENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOXIENU) -
        REL(EOY.SEOXIENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOXOENU -
      NEWNM(EOY.SEOXOENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOXOENU) -
        REL(EOY.SEOXOENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOX1ENU -
      NEWNM(EOY.SEOX1ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOX1ENU) -
        REL(EOY.SEOX1ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOX2ENU -
      NEWNM(EOY.SEOX2ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOX2ENU) -
        REL(EOY.SEOX2ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOX3ENU -
      NEWNM(EOY.SEOX3ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOX3ENU) -
        REL(EOY.SEOX3ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOX4ENU -
      NEWNM(EOY.SEOX4ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOX4ENU) -
        REL(EOY.SEOX4ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYAENU -
      NEWNM(EOY.SEOYAENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYAENU) -
        REL(EOY.SEOYAENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYBENU -
      NEWNM(EOY.SEOYBENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYBENU) -
        REL(EOY.SEOYBENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYCLIB -
      NEWNM(EOY.SEOYCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYCLIB) -
        REL(EOY.SEOYCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYGENU -
      NEWNM(EOY.SEOYGENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYGENU) -
        REL(EOY.SEOYGENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYIENU -
      NEWNM(EOY.SEOYIENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYIENU) -
        REL(EOY.SEOYIENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYIPRF -
      NEWNM(EOY.SEOYIPRF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYIPRF) -
        REL(EOY.SEOYIPRF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYLENU -
      NEWNM(EOY.SEOYLENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYLENU) -
        REL(EOY.SEOYLENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYLEXS -
      NEWNM(EOY.SEOYLEXS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYLEXS) -
        REL(EOY.SEOYLEXS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYLOAD -
      NEWNM(EOY.SEOYLOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYLOAD) -
        REL(EOY.SEOYLOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYLPA -
      NEWNM(EOY.SEOYLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYLPA) -
        REL(EOY.SEOYLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYMC30 -
      NEWNM(EOY.SEOYMC30) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYMC30) -
        REL(EOY.SEOYMC30)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYMC40 -
      NEWNM(EOY.SEOYMC40) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYMC40) -
        REL(EOY.SEOYMC40)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYMENU -
      NEWNM(EOY.SEOYMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYMENU) -
        REL(EOY.SEOYMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYOENU -
      NEWNM(EOY.SEOYOENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYOENU) -
        REL(EOY.SEOYOENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYPENU -
      NEWNM(EOY.SEOYPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYPENU) -
        REL(EOY.SEOYPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYPROC -
      NEWNM(EOY.SEOYPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYPROC) -
        REL(EOY.SEOYPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYSAMP -
      NEWNM(EOY.SEOYSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYSAMP) -
        REL(EOY.SEOYSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYSENU -
      NEWNM(EOY.SEOYSENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYSENU) -
        REL(EOY.SEOYSENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYTENU -
      NEWNM(EOY.SEOYTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYTENU) -
        REL(EOY.SEOYTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOYXENU -
      NEWNM(EOY.SEOYXENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOYXENU) -
        REL(EOY.SEOYXENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOY1ENU -
      NEWNM(EOY.SEOY1ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOY1ENU) -
        REL(EOY.SEOY1ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOY2ENU -
      NEWNM(EOY.SEOY2ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOY2ENU) -
        REL(EOY.SEOY2ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EOY.SEOY4ENU -
      NEWNM(EOY.SEOY4ENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EOY.SEOY4ENU) -
        REL(EOY.SEOY4ENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.EPH.AEPHBOOK -
      NEWNM(EPH.AEPHBOOK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.AEPHBOOK) -
        REL(EPH.AEPHBOOK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.AEPHCLIB -
      NEWNM(EPH.AEPHCLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.AEPHCLIB) -
        REL(EPH.AEPHCLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.AEPHGIF -
      NEWNM(EPH.AEPHGIF) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.AEPHGIF) -
        REL(EPH.AEPHGIF)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.AEPHLOAD -
      NEWNM(EPH.AEPHLOAD) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.AEPHLOAD) -
        REL(EPH.AEPHLOAD)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.AEPHSAMP -
      NEWNM(EPH.AEPHSAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.AEPHSAMP) -
        REL(EPH.AEPHSAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.SEPHCLIB -
      NEWNM(EPH.SEPHCLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.SEPHCLIB) -
        REL(EPH.SEPHCLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.SEPHSAMP -
      NEWNM(EPH.SEPHSAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.SEPHSAMP) -
        REL(EPH.SEPHSAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EPH.SEPHTAB -
      NEWNM(EPH.SEPHTAB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EPH.SEPHTAB) -
        REL(EPH.SEPHTAB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EQAW.AEQAMOD2 -
      NEWNM(EQAW.AEQAMOD2) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EQAW.AEQAMOD2) -
        REL(EQAW.AEQAMOD2)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EQAW.AEQASRC2 -
      NEWNM(EQAW.AEQASRC2) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EQAW.AEQASRC2) -
        REL(EQAW.AEQASRC2)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EQAW.SEQAAUTH -
      NEWNM(EQAW.SEQAAUTH) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EQAW.SEQAAUTH) -
        REL(EQAW.SEQAAUTH)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EQAW.SEQADUM -
      NEWNM(EQAW.SEQADUM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EQAW.SEQADUM) -
        REL(EQAW.SEQADUM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EQAW.SEQAMOD -
      NEWNM(EQAW.SEQAMOD) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EQAW.SEQAMOD) -
        REL(EQAW.SEQAMOD)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EQAW.SEQASAMP -
      NEWNM(EQAW.SEQASAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EQAW.SEQASAMP) -
        REL(EQAW.SEQASAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVACF -
      NEWNM(EUV.AEUVACF) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVACF) -
        REL(EUV.AEUVACF)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVDBRM -
      NEWNM(EUV.AEUVDBRM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVDBRM) -
        REL(EUV.AEUVDBRM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVEXEC -
      NEWNM(EUV.AEUVEXEC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVEXEC) -
        REL(EUV.AEUVEXEC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVEXP -
      NEWNM(EUV.AEUVEXP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVEXP) -
        REL(EUV.AEUVEXP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHDCP -
      NEWNM(EUV.AEUVHDCP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHDCP) -
        REL(EUV.AEUVHDCP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHDR -
      NEWNM(EUV.AEUVHDR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHDR) -
        REL(EUV.AEUVHDR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHDRK -
      NEWNM(EUV.AEUVHDRK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHDRK) -
        REL(EUV.AEUVHDRK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHETC -
      NEWNM(EUV.AEUVHETC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHETC) -
        REL(EUV.AEUVHETC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHINC -
      NEWNM(EUV.AEUVHINC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHINC) -
        REL(EUV.AEUVHINC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHLBR -
      NEWNM(EUV.AEUVHLBR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHLBR) -
        REL(EUV.AEUVHLBR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHTCL -
      NEWNM(EUV.AEUVHTCL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHTCL) -
        REL(EUV.AEUVHTCL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVHXMP -
      NEWNM(EUV.AEUVHXMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVHXMP) -
        REL(EUV.AEUVHXMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVIDL -
      NEWNM(EUV.AEUVIDL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVIDL) -
        REL(EUV.AEUVIDL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVLIB -
      NEWNM(EUV.AEUVLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVLIB) -
        REL(EUV.AEUVLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVLIBK -
      NEWNM(EUV.AEUVLIBK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVLIBK) -
        REL(EUV.AEUVLIBK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVLIBS -
      NEWNM(EUV.AEUVLIBS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVLIBS) -
        REL(EUV.AEUVLIBS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVLINK -
      NEWNM(EUV.AEUVLINK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVLINK) -
        REL(EUV.AEUVLINK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVMSG -
      NEWNM(EUV.AEUVMSG) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVMSG) -
        REL(EUV.AEUVMSG)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVPNL -
      NEWNM(EUV.AEUVPNL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVPNL) -
        REL(EUV.AEUVPNL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.AEUVPRC -
      NEWNM(EUV.AEUVPRC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.AEUVPRC) -
        REL(EUV.AEUVPRC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVACF -
      NEWNM(EUV.SEUVACF) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVACF) -
        REL(EUV.SEUVACF)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVDBRM -
      NEWNM(EUV.SEUVDBRM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVDBRM) -
        REL(EUV.SEUVDBRM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVEXEC -
      NEWNM(EUV.SEUVEXEC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVEXEC) -
        REL(EUV.SEUVEXEC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVEXP -
      NEWNM(EUV.SEUVEXP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVEXP) -
        REL(EUV.SEUVEXP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVHDR -
      NEWNM(EUV.SEUVHDR) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVHDR) -
        REL(EUV.SEUVHDR)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVHDRK -
      NEWNM(EUV.SEUVHDRK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVHDRK) -
        REL(EUV.SEUVHDRK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVIDL -
      NEWNM(EUV.SEUVIDL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVIDL) -
        REL(EUV.SEUVIDL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVLIB -
      NEWNM(EUV.SEUVLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVLIB) -
        REL(EUV.SEUVLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVLIBK -
      NEWNM(EUV.SEUVLIBK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVLIBK) -
        REL(EUV.SEUVLIBK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVLIBS -
      NEWNM(EUV.SEUVLIBS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVLIBS) -
        REL(EUV.SEUVLIBS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVMSG -
      NEWNM(EUV.SEUVMSG) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVMSG) -
        REL(EUV.SEUVMSG)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVPNL -
      NEWNM(EUV.SEUVPNL) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVPNL) -
        REL(EUV.SEUVPNL)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.EUV.SEUVPRC -
      NEWNM(EUV.SEUVPRC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.EUV.SEUVPRC) -
        REL(EUV.SEUVPRC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.EUVF.AEUVFEXC -
      NEWNM(EUVF.AEUVFEXC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFEXC) -
        REL(EUVF.AEUVFEXC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.AEUVFEXP -
      NEWNM(EUVF.AEUVFEXP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFEXP) -
        REL(EUVF.AEUVFEXP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.AEUVFHDR -
      NEWNM(EUVF.AEUVFHDR) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFHDR) -
        REL(EUVF.AEUVFHDR)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.AEUVFHFS -
      NEWNM(EUVF.AEUVFHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFHFS) -
        REL(EUVF.AEUVFHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.AEUVFLIB -
      NEWNM(EUVF.AEUVFLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFLIB) -
        REL(EUVF.AEUVFLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.AEUVFLNK -
      NEWNM(EUVF.AEUVFLNK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFLNK) -
        REL(EUVF.AEUVFLNK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.AEUVFSAM -
      NEWNM(EUVF.AEUVFSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.AEUVFSAM) -
        REL(EUVF.AEUVFSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFEXC -
      NEWNM(EUVF.SEUVFEXC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFEXC) -
        REL(EUVF.SEUVFEXC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFEXP -
      NEWNM(EUVF.SEUVFEXP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFEXP) -
        REL(EUVF.SEUVFEXP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFHDR -
      NEWNM(EUVF.SEUVFHDR) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFHDR) -
        REL(EUVF.SEUVFHDR)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFLIB -
      NEWNM(EUVF.SEUVFLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFLIB) -
        REL(EUVF.SEUVFLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFLNK -
      NEWNM(EUVF.SEUVFLNK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFLNK) -
        REL(EUVF.SEUVFLNK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFLPA -
      NEWNM(EUVF.SEUVFLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFLPA) -
        REL(EUVF.SEUVFLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.EUVF.SEUVFSAM -
      NEWNM(EUVF.SEUVFSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.EUVF.SEUVFSAM) -
        REL(EUVF.SEUVFSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.AEPWBENU -
      NEWNM(FFST.V120ESA.AEPWBENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.AEPWBENU) -
        REL(FFST.V120ESA.AEPWBENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.AEPWMOD1 -
      NEWNM(FFST.V120ESA.AEPWMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.AEPWMOD1) -
        REL(FFST.V120ESA.AEPWMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.AEPWSRC1 -
      NEWNM(FFST.V120ESA.AEPWSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.AEPWSRC1) -
        REL(FFST.V120ESA.AEPWSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.EPWCKPT -
      NEWNM(FFST.V120ESA.EPWCKPT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.EPWCKPT) -
        REL(FFST.V120ESA.EPWCKPT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.EPWDUMP -
      NEWNM(FFST.V120ESA.EPWDUMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.EPWDUMP) -
        REL(FFST.V120ESA.EPWDUMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.EPWLOG1 -
      NEWNM(FFST.V120ESA.EPWLOG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.EPWLOG1) -
        REL(FFST.V120ESA.EPWLOG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.EPWLOG2 -
      NEWNM(FFST.V120ESA.EPWLOG2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.EPWLOG2) -
        REL(FFST.V120ESA.EPWLOG2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.EPWPARM -
      NEWNM(FFST.V120ESA.EPWPARM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.EPWPARM) -
        REL(FFST.V120ESA.EPWPARM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWBENU -
      NEWNM(FFST.V120ESA.SEPWBENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWBENU) -
        REL(FFST.V120ESA.SEPWBENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWCENU -
      NEWNM(FFST.V120ESA.SEPWCENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWCENU) -
        REL(FFST.V120ESA.SEPWCENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWMOD1 -
      NEWNM(FFST.V120ESA.SEPWMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWMOD1) -
        REL(FFST.V120ESA.SEPWMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWMOD2 -
      NEWNM(FFST.V120ESA.SEPWMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWMOD2) -
        REL(FFST.V120ESA.SEPWMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWMOD3 -
      NEWNM(FFST.V120ESA.SEPWMOD3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWMOD3) -
        REL(FFST.V120ESA.SEPWMOD3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWMOD4 -
      NEWNM(FFST.V120ESA.SEPWMOD4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWMOD4) -
        REL(FFST.V120ESA.SEPWMOD4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWPENU -
      NEWNM(FFST.V120ESA.SEPWPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWPENU) -
        REL(FFST.V120ESA.SEPWPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWSRC1 -
      NEWNM(FFST.V120ESA.SEPWSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWSRC1) -
        REL(FFST.V120ESA.SEPWSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.FFST.V120ESA.SEPWSRC2 -
      NEWNM(FFST.V120ESA.SEPWSRC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.FFST.V120ESA.SEPWSRC2) -
        REL(FFST.V120ESA.SEPWSRC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMCDA -
      NEWNM(GDDM.AADMCDA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMCDA) -
        REL(GDDM.AADMCDA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMCFO -
      NEWNM(GDDM.AADMCFO) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMCFO) -
        REL(GDDM.AADMCFO)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMDAT -
      NEWNM(GDDM.AADMDAT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMDAT) -
        REL(GDDM.AADMDAT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMGDF -
      NEWNM(GDDM.AADMGDF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMGDF) -
        REL(GDDM.AADMGDF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMIMG -
      NEWNM(GDDM.AADMIMG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMIMG) -
        REL(GDDM.AADMIMG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMMAP -
      NEWNM(GDDM.AADMMAP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMMAP) -
        REL(GDDM.AADMMAP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMMOD -
      NEWNM(GDDM.AADMMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMMOD) -
        REL(GDDM.AADMMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMMSG -
      NEWNM(GDDM.AADMMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMMSG) -
        REL(GDDM.AADMMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMOPS -
      NEWNM(GDDM.AADMOPS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMOPS) -
        REL(GDDM.AADMOPS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMPCF -
      NEWNM(GDDM.AADMPCF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMPCF) -
        REL(GDDM.AADMPCF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMPNL -
      NEWNM(GDDM.AADMPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMPNL) -
        REL(GDDM.AADMPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMSAM -
      NEWNM(GDDM.AADMSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMSAM) -
        REL(GDDM.AADMSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.AADMSYM -
      NEWNM(GDDM.AADMSYM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.AADMSYM) -
        REL(GDDM.AADMSYM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMCDA -
      NEWNM(GDDM.SADMCDA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMCDA) -
        REL(GDDM.SADMCDA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMCFO -
      NEWNM(GDDM.SADMCFO) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMCFO) -
        REL(GDDM.SADMCFO)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMDAT -
      NEWNM(GDDM.SADMDAT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMDAT) -
        REL(GDDM.SADMDAT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMGDF -
      NEWNM(GDDM.SADMGDF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMGDF) -
        REL(GDDM.SADMGDF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMIMG -
      NEWNM(GDDM.SADMIMG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMIMG) -
        REL(GDDM.SADMIMG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMMAP -
      NEWNM(GDDM.SADMMAP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMMAP) -
        REL(GDDM.SADMMAP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMMOD -
      NEWNM(GDDM.SADMMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMMOD) -
        REL(GDDM.SADMMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMMSG -
      NEWNM(GDDM.SADMMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMMSG) -
        REL(GDDM.SADMMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMOPS -
      NEWNM(GDDM.SADMOPS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMOPS) -
        REL(GDDM.SADMOPS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMPCF -
      NEWNM(GDDM.SADMPCF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMPCF) -
        REL(GDDM.SADMPCF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMPNL -
      NEWNM(GDDM.SADMPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMPNL) -
        REL(GDDM.SADMPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GDDM.SADMSYM -
      NEWNM(GDDM.SADMSYM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GDDM.SADMSYM) -
        REL(GDDM.SADMSYM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.AGIMCLS0 -
      NEWNM(GIM.AGIMCLS0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.AGIMCLS0) -
        REL(GIM.AGIMCLS0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.AGIMMENU -
      NEWNM(GIM.AGIMMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.AGIMMENU) -
        REL(GIM.AGIMMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.AGIMPENU -
      NEWNM(GIM.AGIMPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.AGIMPENU) -
        REL(GIM.AGIMPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.AGIMSENU -
      NEWNM(GIM.AGIMSENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.AGIMSENU) -
        REL(GIM.AGIMSENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.AGIMTENU -
      NEWNM(GIM.AGIMTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.AGIMTENU) -
        REL(GIM.AGIMTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.SGIMCLS0 -
      NEWNM(GIM.SGIMCLS0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.SGIMCLS0) -
        REL(GIM.SGIMCLS0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.SGIMLMD0 -
      NEWNM(GIM.SGIMLMD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.SGIMLMD0) -
        REL(GIM.SGIMLMD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.SGIMMENU -
      NEWNM(GIM.SGIMMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.SGIMMENU) -
        REL(GIM.SGIMMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.SGIMPENU -
      NEWNM(GIM.SGIMPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.SGIMPENU) -
        REL(GIM.SGIMPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.SGIMSENU -
      NEWNM(GIM.SGIMSENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.SGIMSENU) -
        REL(GIM.SGIMSENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GIM.SGIMTENU -
      NEWNM(GIM.SGIMTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GIM.SGIMTENU) -
        REL(GIM.SGIMTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDEXEC -
      NEWNM(GLD.AGLDEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDEXEC) -
        REL(GLD.AGLDEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDEXPC -
      NEWNM(GLD.AGLDEXPC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDEXPC) -
        REL(GLD.AGLDEXPC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDHCLI -
      NEWNM(GLD.AGLDHCLI) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDHCLI) -
        REL(GLD.AGLDHCLI)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDHDRC -
      NEWNM(GLD.AGLDHDRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDHDRC) -
        REL(GLD.AGLDHDRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDHFS -
      NEWNM(GLD.AGLDHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDHFS) -
        REL(GLD.AGLDHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDLNK -
      NEWNM(GLD.AGLDLNK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDLNK) -
        REL(GLD.AGLDLNK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.AGLDSAMP -
      NEWNM(GLD.AGLDSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.AGLDSAMP) -
        REL(GLD.AGLDSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.SGLDEXEC -
      NEWNM(GLD.SGLDEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.SGLDEXEC) -
        REL(GLD.SGLDEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.SGLDEXPC -
      NEWNM(GLD.SGLDEXPC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.SGLDEXPC) -
        REL(GLD.SGLDEXPC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.SGLDHDRC -
      NEWNM(GLD.SGLDHDRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.SGLDHDRC) -
        REL(GLD.SGLDHDRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.SGLDLNK -
      NEWNM(GLD.SGLDLNK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.SGLDLNK) -
        REL(GLD.SGLDLNK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GLD.SGLDSAMP -
      NEWNM(GLD.SGLDSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GLD.SGLDSAMP) -
        REL(GLD.SGLDSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GSK.AGSKHFS -
      NEWNM(GSK.AGSKHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GSK.AGSKHFS) -
        REL(GSK.AGSKHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GSK.AGSKLINK -
      NEWNM(GSK.AGSKLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GSK.AGSKLINK) -
        REL(GSK.AGSKLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GSK.AGSKSAMP -
      NEWNM(GSK.AGSKSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GSK.AGSKSAMP) -
        REL(GSK.AGSKSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GSK.SGSKLOAD -
      NEWNM(GSK.SGSKLOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GSK.SGSKLOAD) -
        REL(GSK.SGSKLOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.GSK.SGSKSAMP -
      NEWNM(GSK.SGSKSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.GSK.SGSKSAMP) -
        REL(GSK.SGSKSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.HCM.AEEQINST -
      NEWNM(HCM.AEEQINST) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.HCM.AEEQINST) -
        REL(HCM.AEEQINST)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.HCM.SEEQINST -
      NEWNM(HCM.SEEQINST) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.HCM.SEEQINST) -
        REL(HCM.SEEQINST)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.ICA.AICAHETC -
      NEWNM(ICA.AICAHETC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICAHETC) -
        REL(ICA.AICAHETC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.AICAHLBR -
      NEWNM(ICA.AICAHLBR) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICAHLBR) -
        REL(ICA.AICAHLBR)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.AICAHSAM -
      NEWNM(ICA.AICAHSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICAHSAM) -
        REL(ICA.AICAHSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.AICAHSCR -
      NEWNM(ICA.AICAHSCR) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICAHSCR) -
        REL(ICA.AICAHSCR)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.AICALINK -
      NEWNM(ICA.AICALINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICALINK) -
        REL(ICA.AICALINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.AICAPROC -
      NEWNM(ICA.AICAPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICAPROC) -
        REL(ICA.AICAPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.AICASAMP -
      NEWNM(ICA.AICASAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.AICASAMP) -
        REL(ICA.AICASAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.SICALMOD -
      NEWNM(ICA.SICALMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.SICALMOD) -
        REL(ICA.SICALMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.SICAPROC -
      NEWNM(ICA.SICAPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.SICAPROC) -
        REL(ICA.SICAPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ICA.SICASAMP -
      NEWNM(ICA.SICASAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ICA.SICASAMP) -
        REL(ICA.SICASAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.ICQ.ICQABTXT -
      NEWNM(ICQ.ICQABTXT) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQABTXT) -
        REL(ICQ.ICQABTXT)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ICQ.ICQCCLIB -
      NEWNM(ICQ.ICQCCLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQCCLIB) -
        REL(ICQ.ICQCCLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ICQ.ICQILIB -
      NEWNM(ICQ.ICQILIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQILIB) -
        REL(ICQ.ICQILIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ICQ.ICQMLIB -
      NEWNM(ICQ.ICQMLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQMLIB) -
        REL(ICQ.ICQMLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ICQ.ICQPLIB -
      NEWNM(ICQ.ICQPLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQPLIB) -
        REL(ICQ.ICQPLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ICQ.ICQSLIB -
      NEWNM(ICQ.ICQSLIB) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQSLIB) -
        REL(ICQ.ICQSLIB)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.ICQ.ICQTABLS -
      NEWNM(ICQ.ICQTABLS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.ICQ.ICQTABLS) -
        REL(ICQ.ICQTABLS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.IMO.AIMOHFS1 -
      NEWNM(IMO.AIMOHFS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IMO.AIMOHFS1) -
        REL(IMO.AIMOHFS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IMO.AIMOJCL1 -
      NEWNM(IMO.AIMOJCL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IMO.AIMOJCL1) -
        REL(IMO.AIMOJCL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IMO.AIMOMOD1 -
      NEWNM(IMO.AIMOMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IMO.AIMOMOD1) -
        REL(IMO.AIMOMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IMO.SIMOJCL1 -
      NEWNM(IMO.SIMOJCL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IMO.SIMOJCL1) -
        REL(IMO.SIMOJCL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IMO.SIMOMOD1 -
      NEWNM(IMO.SIMOMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IMO.SIMOMOD1) -
        REL(IMO.SIMOMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.IMW.AIMWEMOD -
      NEWNM(IMW.AIMWEMOD) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IMW.AIMWEMOD) -
        REL(IMW.AIMWEMOD)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IMW.AIMWHENU -
      NEWNM(IMW.AIMWHENU) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IMW.AIMWHENU) -
        REL(IMW.AIMWHENU)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IMW.AIMWSAM1 -
      NEWNM(IMW.AIMWSAM1) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IMW.AIMWSAM1) -
        REL(IMW.AIMWSAM1)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IMW.SIMWSDCK -
      NEWNM(IMW.SIMWSDCK) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IMW.SIMWSDCK) -
        REL(IMW.SIMWSDCK)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IMW.SIMWTBL1 -
      NEWNM(IMW.SIMWTBL1) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IMW.SIMWTBL1) -
        REL(IMW.SIMWTBL1)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.ING.AEVIMOD6 -
      NEWNM(ING.AEVIMOD6) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AEVIMOD6) -
        REL(ING.AEVIMOD6)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AEVIMOD7 -
      NEWNM(ING.AEVIMOD7) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AEVIMOD7) -
        REL(ING.AEVIMOD7)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AEVIMOD8 -
      NEWNM(ING.AEVIMOD8) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AEVIMOD8) -
        REL(ING.AEVIMOD8)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGIMOD -
      NEWNM(ING.AINGIMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGIMOD) -
        REL(ING.AINGIMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGIMSG -
      NEWNM(ING.AINGIMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGIMSG) -
        REL(ING.AINGIMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGINST -
      NEWNM(ING.AINGINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGINST) -
        REL(ING.AINGINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGIPDB -
      NEWNM(ING.AINGIPDB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGIPDB) -
        REL(ING.AINGIPDB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGIPNL -
      NEWNM(ING.AINGIPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGIPNL) -
        REL(ING.AINGIPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGIREX -
      NEWNM(ING.AINGIREX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGIREX) -
        REL(ING.AINGIREX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGISKL -
      NEWNM(ING.AINGISKL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGISKL) -
        REL(ING.AINGISKL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGITBL -
      NEWNM(ING.AINGITBL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGITBL) -
        REL(ING.AINGITBL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGMODC -
      NEWNM(ING.AINGMODC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGMODC) -
        REL(ING.AINGMODC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGMOD1 -
      NEWNM(ING.AINGMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGMOD1) -
        REL(ING.AINGMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGMOD2 -
      NEWNM(ING.AINGMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGMOD2) -
        REL(ING.AINGMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGNMSG -
      NEWNM(ING.AINGNMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGNMSG) -
        REL(ING.AINGNMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGNPNL -
      NEWNM(ING.AINGNPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGNPNL) -
        REL(ING.AINGNPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGNPRF -
      NEWNM(ING.AINGNPRF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGNPRF) -
        REL(ING.AINGNPRF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGNPRM -
      NEWNM(ING.AINGNPRM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGNPRM) -
        REL(ING.AINGNPRM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGNREX -
      NEWNM(ING.AINGNREX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGNREX) -
        REL(ING.AINGNREX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGPWS1 -
      NEWNM(ING.AINGPWS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGPWS1) -
        REL(ING.AINGPWS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGSAMP -
      NEWNM(ING.AINGSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGSAMP) -
        REL(ING.AINGSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.AINGSRC -
      NEWNM(ING.AINGSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.AINGSRC) -
        REL(ING.AINGSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SEVIMOD6 -
      NEWNM(ING.SEVIMOD6) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SEVIMOD6) -
        REL(ING.SEVIMOD6)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SEVIMOD7 -
      NEWNM(ING.SEVIMOD7) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SEVIMOD7) -
        REL(ING.SEVIMOD7)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SEVIMOD8 -
      NEWNM(ING.SEVIMOD8) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SEVIMOD8) -
        REL(ING.SEVIMOD8)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGIMOD -
      NEWNM(ING.SINGIMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGIMOD) -
        REL(ING.SINGIMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGIMSG -
      NEWNM(ING.SINGIMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGIMSG) -
        REL(ING.SINGIMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGINST -
      NEWNM(ING.SINGINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGINST) -
        REL(ING.SINGINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGIPDB -
      NEWNM(ING.SINGIPDB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGIPDB) -
        REL(ING.SINGIPDB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGIPNL -
      NEWNM(ING.SINGIPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGIPNL) -
        REL(ING.SINGIPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGIREX -
      NEWNM(ING.SINGIREX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGIREX) -
        REL(ING.SINGIREX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGISKL -
      NEWNM(ING.SINGISKL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGISKL) -
        REL(ING.SINGISKL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGITBL -
      NEWNM(ING.SINGITBL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGITBL) -
        REL(ING.SINGITBL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGMODC -
      NEWNM(ING.SINGMODC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGMODC) -
        REL(ING.SINGMODC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGMOD1 -
      NEWNM(ING.SINGMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGMOD1) -
        REL(ING.SINGMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGMOD2 -
      NEWNM(ING.SINGMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGMOD2) -
        REL(ING.SINGMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGMOD3 -
      NEWNM(ING.SINGMOD3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGMOD3) -
        REL(ING.SINGMOD3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGNMSG -
      NEWNM(ING.SINGNMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGNMSG) -
        REL(ING.SINGNMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGNPNL -
      NEWNM(ING.SINGNPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGNPNL) -
        REL(ING.SINGNPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGNPRF -
      NEWNM(ING.SINGNPRF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGNPRF) -
        REL(ING.SINGNPRF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGNPRM -
      NEWNM(ING.SINGNPRM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGNPRM) -
        REL(ING.SINGNPRM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGNREX -
      NEWNM(ING.SINGNREX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGNREX) -
        REL(ING.SINGNREX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGPWS1 -
      NEWNM(ING.SINGPWS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGPWS1) -
        REL(ING.SINGPWS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGSAMP -
      NEWNM(ING.SINGSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGSAMP) -
        REL(ING.SINGSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ING.SINGSRC -
      NEWNM(ING.SINGSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ING.SINGSRC) -
        REL(ING.SINGSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.IOA.AIOAIBIN -
      NEWNM(IOA.AIOAIBIN) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.AIOAIBIN) -
        REL(IOA.AIOAIBIN)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.AIOAJAVA -
      NEWNM(IOA.AIOAJAVA) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.AIOAJAVA) -
        REL(IOA.AIOAJAVA)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.AIOALMOD -
      NEWNM(IOA.AIOALMOD) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.AIOALMOD) -
        REL(IOA.AIOALMOD)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.AIOAMMOD -
      NEWNM(IOA.AIOAMMOD) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.AIOAMMOD) -
        REL(IOA.AIOAMMOD)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.AIOASAMP -
      NEWNM(IOA.AIOASAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.AIOASAMP) -
        REL(IOA.AIOASAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.SIOAIBIN -
      NEWNM(IOA.SIOAIBIN) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.SIOAIBIN) -
        REL(IOA.SIOAIBIN)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.SIOAJAVA -
      NEWNM(IOA.SIOAJAVA) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.SIOAJAVA) -
        REL(IOA.SIOAJAVA)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.SIOAMMOD -
      NEWNM(IOA.SIOAMMOD) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.SIOAMMOD) -
        REL(IOA.SIOAMMOD)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.IOA.SIOASAMP -
      NEWNM(IOA.SIOASAMP) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.IOA.SIOASAMP) -
        REL(IOA.SIOASAMP)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.IOE.AIOEEXEC -
      NEWNM(IOE.AIOEEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEEXEC) -
        REL(IOE.AIOEEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEHLIB -
      NEWNM(IOE.AIOEHLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEHLIB) -
        REL(IOE.AIOEHLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEHSAM -
      NEWNM(IOE.AIOEHSAM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEHSAM) -
        REL(IOE.AIOEHSAM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEHSHL -
      NEWNM(IOE.AIOEHSHL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEHSHL) -
        REL(IOE.AIOEHSHL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEHSRC -
      NEWNM(IOE.AIOEHSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEHSRC) -
        REL(IOE.AIOEHSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOELMOD -
      NEWNM(IOE.AIOELMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOELMOD) -
        REL(IOE.AIOELMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEMSGE -
      NEWNM(IOE.AIOEMSGE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEMSGE) -
        REL(IOE.AIOEMSGE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEPNLE -
      NEWNM(IOE.AIOEPNLE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEPNLE) -
        REL(IOE.AIOEPNLE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOEPROC -
      NEWNM(IOE.AIOEPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOEPROC) -
        REL(IOE.AIOEPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.AIOESAMP -
      NEWNM(IOE.AIOESAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.AIOESAMP) -
        REL(IOE.AIOESAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.SIOEEXEC -
      NEWNM(IOE.SIOEEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.SIOEEXEC) -
        REL(IOE.SIOEEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.SIOELMOD -
      NEWNM(IOE.SIOELMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.SIOELMOD) -
        REL(IOE.SIOELMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.SIOEMSGE -
      NEWNM(IOE.SIOEMSGE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.SIOEMSGE) -
        REL(IOE.SIOEMSGE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.SIOEPNLE -
      NEWNM(IOE.SIOEPNLE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.SIOEPNLE) -
        REL(IOE.SIOEPNLE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.SIOEPROC -
      NEWNM(IOE.SIOEPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.SIOEPROC) -
        REL(IOE.SIOEPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.IOE.SIOESAMP -
      NEWNM(IOE.SIOESAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.IOE.SIOESAMP) -
        REL(IOE.SIOESAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFEXEC -
      NEWNM(ISF.AISFEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFEXEC) -
        REL(ISF.AISFEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFHELP -
      NEWNM(ISF.AISFHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFHELP) -
        REL(ISF.AISFHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFJCL -
      NEWNM(ISF.AISFJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFJCL) -
        REL(ISF.AISFJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFLINK -
      NEWNM(ISF.AISFLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFLINK) -
        REL(ISF.AISFLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFLOAD -
      NEWNM(ISF.AISFLOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFLOAD) -
        REL(ISF.AISFLOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFMLIB -
      NEWNM(ISF.AISFMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFMLIB) -
        REL(ISF.AISFMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFPLIB -
      NEWNM(ISF.AISFPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFPLIB) -
        REL(ISF.AISFPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFSLIB -
      NEWNM(ISF.AISFSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFSLIB) -
        REL(ISF.AISFSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFSRC -
      NEWNM(ISF.AISFSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFSRC) -
        REL(ISF.AISFSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.AISFTLIB -
      NEWNM(ISF.AISFTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.AISFTLIB) -
        REL(ISF.AISFTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.HASPINDX -
      NEWNM(ISF.HASPINDX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.HASPINDX) -
        REL(ISF.HASPINDX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFEXEC -
      NEWNM(ISF.SISFEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFEXEC) -
        REL(ISF.SISFEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFHELP -
      NEWNM(ISF.SISFHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFHELP) -
        REL(ISF.SISFHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFJCL -
      NEWNM(ISF.SISFJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFJCL) -
        REL(ISF.SISFJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFLINK -
      NEWNM(ISF.SISFLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFLINK) -
        REL(ISF.SISFLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFLOAD -
      NEWNM(ISF.SISFLOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFLOAD) -
        REL(ISF.SISFLOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFLPA -
      NEWNM(ISF.SISFLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFLPA) -
        REL(ISF.SISFLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFMLIB -
      NEWNM(ISF.SISFMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFMLIB) -
        REL(ISF.SISFMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFPLIB -
      NEWNM(ISF.SISFPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFPLIB) -
        REL(ISF.SISFPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFSLIB -
      NEWNM(ISF.SISFSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFSLIB) -
        REL(ISF.SISFSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISF.SISFTLIB -
      NEWNM(ISF.SISFTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISF.SISFTLIB) -
        REL(ISF.SISFTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPALIB -
      NEWNM(ISP.AISPALIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPALIB) -
        REL(ISP.AISPALIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPCLIB -
      NEWNM(ISP.AISPCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPCLIB) -
        REL(ISP.AISPCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPEXEC -
      NEWNM(ISP.AISPEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPEXEC) -
        REL(ISP.AISPEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPGENU -
      NEWNM(ISP.AISPGENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPGENU) -
        REL(ISP.AISPGENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPGMLI -
      NEWNM(ISP.AISPGMLI) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPGMLI) -
        REL(ISP.AISPGMLI)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPGUI -
      NEWNM(ISP.AISPGUI) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPGUI) -
        REL(ISP.AISPGUI)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPHELP -
      NEWNM(ISP.AISPHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPHELP) -
        REL(ISP.AISPHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPMACS -
      NEWNM(ISP.AISPMACS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPMACS) -
        REL(ISP.AISPMACS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPMENU -
      NEWNM(ISP.AISPMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPMENU) -
        REL(ISP.AISPMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPMOD1 -
      NEWNM(ISP.AISPMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPMOD1) -
        REL(ISP.AISPMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPPENU -
      NEWNM(ISP.AISPPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPPENU) -
        REL(ISP.AISPPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPSAMP -
      NEWNM(ISP.AISPSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPSAMP) -
        REL(ISP.AISPSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPSASC -
      NEWNM(ISP.AISPSASC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPSASC) -
        REL(ISP.AISPSASC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPSENU -
      NEWNM(ISP.AISPSENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPSENU) -
        REL(ISP.AISPSENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPSLIB -
      NEWNM(ISP.AISPSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPSLIB) -
        REL(ISP.AISPSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.AISPTENU -
      NEWNM(ISP.AISPTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.AISPTENU) -
        REL(ISP.AISPTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPALIB -
      NEWNM(ISP.SISPALIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPALIB) -
        REL(ISP.SISPALIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPCLIB -
      NEWNM(ISP.SISPCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPCLIB) -
        REL(ISP.SISPCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPEXEC -
      NEWNM(ISP.SISPEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPEXEC) -
        REL(ISP.SISPEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPGENU -
      NEWNM(ISP.SISPGENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPGENU) -
        REL(ISP.SISPGENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPGMLI -
      NEWNM(ISP.SISPGMLI) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPGMLI) -
        REL(ISP.SISPGMLI)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPGUI -
      NEWNM(ISP.SISPGUI) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPGUI) -
        REL(ISP.SISPGUI)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPHELP -
      NEWNM(ISP.SISPHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPHELP) -
        REL(ISP.SISPHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPLOAD -
      NEWNM(ISP.SISPLOAD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPLOAD) -
        REL(ISP.SISPLOAD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPLPA -
      NEWNM(ISP.SISPLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPLPA) -
        REL(ISP.SISPLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPMENU -
      NEWNM(ISP.SISPMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPMENU) -
        REL(ISP.SISPMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPPENU -
      NEWNM(ISP.SISPPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPPENU) -
        REL(ISP.SISPPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPSAMP -
      NEWNM(ISP.SISPSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPSAMP) -
        REL(ISP.SISPSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPSASC -
      NEWNM(ISP.SISPSASC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPSASC) -
        REL(ISP.SISPSASC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPSENU -
      NEWNM(ISP.SISPSENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPSENU) -
        REL(ISP.SISPSENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPSLIB -
      NEWNM(ISP.SISPSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPSLIB) -
        REL(ISP.SISPSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.ISP.SISPTENU -
      NEWNM(ISP.SISPTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.ISP.SISPTENU) -
        REL(ISP.SISPTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.JAVA.AAJVSMP1 -
      NEWNM(JAVA.AAJVSMP1) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.JAVA.AAJVSMP1) -
        REL(JAVA.AAJVSMP1)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.JAVA.AAJVS390 -
      NEWNM(JAVA.AAJVS390) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.JAVA.AAJVS390) -
        REL(JAVA.AAJVS390)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.JAVA.SAJVSMP1 -
      NEWNM(JAVA.SAJVSMP1) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.JAVA.SAJVSMP1) -
        REL(JAVA.SAJVSMP1)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.MSOPS.MSOAC.DSIARPT -
      NEWNM(MSOPS.MSOAC.DSIARPT) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.MSOPS.MSOAC.DSIARPT) -
        REL(MSOPS.MSOAC.DSIARPT)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.MSOPS.MSOAC.DSIASRC -
      NEWNM(MSOPS.MSOAC.DSIASRC) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.MSOPS.MSOAC.DSIASRC) -
        REL(MSOPS.MSOAC.DSIASRC)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.MSOPS.MSOAC.DSILIST -
      NEWNM(MSOPS.MSOAC.DSILIST) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.MSOPS.MSOAC.DSILIST) -
        REL(MSOPS.MSOAC.DSILIST)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.MSOPS.SHARED.DSIPARM -
      NEWNM(MSOPS.SHARED.DSIPARM) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.MSOPS.SHARED.DSIPARM) -
        REL(MSOPS.SHARED.DSIPARM)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.NETVIEW.ABNJPNL1 -
      NEWNM(NETVIEW.ABNJPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ABNJPNL1) -
        REL(NETVIEW.ABNJPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ABNJPNL2 -
      NEWNM(NETVIEW.ABNJPNL2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ABNJPNL2) -
        REL(NETVIEW.ABNJPNL2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ABNJSRC1 -
      NEWNM(NETVIEW.ABNJSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ABNJSRC1) -
        REL(NETVIEW.ABNJSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ACNMCLST -
      NEWNM(NETVIEW.ACNMCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ACNMCLST) -
        REL(NETVIEW.ACNMCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ACNMINST -
      NEWNM(NETVIEW.ACNMINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ACNMINST) -
        REL(NETVIEW.ACNMINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ACNMLINK -
      NEWNM(NETVIEW.ACNMLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ACNMLINK) -
        REL(NETVIEW.ACNMLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ACNMMAC1 -
      NEWNM(NETVIEW.ACNMMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ACNMMAC1) -
        REL(NETVIEW.ACNMMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ACNMPNL1 -
      NEWNM(NETVIEW.ACNMPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ACNMPNL1) -
        REL(NETVIEW.ACNMPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ACNMSAMP -
      NEWNM(NETVIEW.ACNMSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ACNMSAMP) -
        REL(NETVIEW.ACNMSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ADSIMSG1 -
      NEWNM(NETVIEW.ADSIMSG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ADSIMSG1) -
        REL(NETVIEW.ADSIMSG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ADSIOPEN -
      NEWNM(NETVIEW.ADSIOPEN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ADSIOPEN) -
        REL(NETVIEW.ADSIOPEN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ADSIPARM -
      NEWNM(NETVIEW.ADSIPARM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ADSIPARM) -
        REL(NETVIEW.ADSIPARM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ADSIPRF -
      NEWNM(NETVIEW.ADSIPRF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ADSIPRF) -
        REL(NETVIEW.ADSIPRF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ADUIMSG1 -
      NEWNM(NETVIEW.ADUIMSG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ADUIMSG1) -
        REL(NETVIEW.ADUIMSG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEKGCAS1 -
      NEWNM(NETVIEW.AEKGCAS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEKGCAS1) -
        REL(NETVIEW.AEKGCAS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEKGLANG -
      NEWNM(NETVIEW.AEKGLANG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEKGLANG) -
        REL(NETVIEW.AEKGLANG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEKGLUTB -
      NEWNM(NETVIEW.AEKGLUTB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEKGLUTB) -
        REL(NETVIEW.AEKGLUTB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEKGMOD1 -
      NEWNM(NETVIEW.AEKGMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEKGMOD1) -
        REL(NETVIEW.AEKGMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEKGPNL1 -
      NEWNM(NETVIEW.AEKGPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEKGPNL1) -
        REL(NETVIEW.AEKGPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEKGSMP1 -
      NEWNM(NETVIEW.AEKGSMP1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEKGSMP1) -
        REL(NETVIEW.AEKGSMP1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEZLCLST -
      NEWNM(NETVIEW.AEZLCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEZLCLST) -
        REL(NETVIEW.AEZLCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEZLINST -
      NEWNM(NETVIEW.AEZLINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEZLINST) -
        REL(NETVIEW.AEZLINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEZLLINK -
      NEWNM(NETVIEW.AEZLLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEZLLINK) -
        REL(NETVIEW.AEZLLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEZLPNLU -
      NEWNM(NETVIEW.AEZLPNLU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEZLPNLU) -
        REL(NETVIEW.AEZLPNLU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AEZLSAMP -
      NEWNM(NETVIEW.AEZLSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AEZLSAMP) -
        REL(NETVIEW.AEZLSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.AFLBDAT1 -
      NEWNM(NETVIEW.AFLBDAT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.AFLBDAT1) -
        REL(NETVIEW.AFLBDAT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.ANVULIB -
      NEWNM(NETVIEW.ANVULIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.ANVULIB) -
        REL(NETVIEW.ANVULIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.BNJPNL1 -
      NEWNM(NETVIEW.BNJPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.BNJPNL1) -
        REL(NETVIEW.BNJPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.BNJPNL2 -
      NEWNM(NETVIEW.BNJPNL2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.BNJPNL2) -
        REL(NETVIEW.BNJPNL2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.BNJSRC1 -
      NEWNM(NETVIEW.BNJSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.BNJSRC1) -
        REL(NETVIEW.BNJSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.CNMCLST -
      NEWNM(NETVIEW.CNMCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.CNMCLST) -
        REL(NETVIEW.CNMCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.CNMINST -
      NEWNM(NETVIEW.CNMINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.CNMINST) -
        REL(NETVIEW.CNMINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.CNMLINK -
      NEWNM(NETVIEW.CNMLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.CNMLINK) -
        REL(NETVIEW.CNMLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.CNMPNL1 -
      NEWNM(NETVIEW.CNMPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.CNMPNL1) -
        REL(NETVIEW.CNMPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.CNMSAMP -
      NEWNM(NETVIEW.CNMSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.CNMSAMP) -
        REL(NETVIEW.CNMSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.DSIPARM -
      NEWNM(NETVIEW.DSIPARM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.DSIPARM) -
        REL(NETVIEW.DSIPARM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.DSIPRF -
      NEWNM(NETVIEW.DSIPRF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.DSIPRF) -
        REL(NETVIEW.DSIPRF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.NVULIB -
      NEWNM(NETVIEW.NVULIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.NVULIB) -
        REL(NETVIEW.NVULIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SCNMLNK1 -
      NEWNM(NETVIEW.SCNMLNK1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SCNMLNK1) -
        REL(NETVIEW.SCNMLNK1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SCNMLPA1 -
      NEWNM(NETVIEW.SCNMLPA1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SCNMLPA1) -
        REL(NETVIEW.SCNMLPA1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SDSIMSG1 -
      NEWNM(NETVIEW.SDSIMSG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SDSIMSG1) -
        REL(NETVIEW.SDSIMSG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SDSIOPEN -
      NEWNM(NETVIEW.SDSIOPEN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SDSIOPEN) -
        REL(NETVIEW.SDSIOPEN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SDUIMSG1 -
      NEWNM(NETVIEW.SDUIMSG1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SDUIMSG1) -
        REL(NETVIEW.SDUIMSG1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGCAS1 -
      NEWNM(NETVIEW.SEKGCAS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGCAS1) -
        REL(NETVIEW.SEKGCAS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGLANG -
      NEWNM(NETVIEW.SEKGLANG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGLANG) -
        REL(NETVIEW.SEKGLANG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGLNK1 -
      NEWNM(NETVIEW.SEKGLNK1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGLNK1) -
        REL(NETVIEW.SEKGLNK1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGLUTB -
      NEWNM(NETVIEW.SEKGLUTB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGLUTB) -
        REL(NETVIEW.SEKGLUTB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGMOD1 -
      NEWNM(NETVIEW.SEKGMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGMOD1) -
        REL(NETVIEW.SEKGMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGMOD2 -
      NEWNM(NETVIEW.SEKGMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGMOD2) -
        REL(NETVIEW.SEKGMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGPNL1 -
      NEWNM(NETVIEW.SEKGPNL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGPNL1) -
        REL(NETVIEW.SEKGPNL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEKGSMP1 -
      NEWNM(NETVIEW.SEKGSMP1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEKGSMP1) -
        REL(NETVIEW.SEKGSMP1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEZLCLST -
      NEWNM(NETVIEW.SEZLCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEZLCLST) -
        REL(NETVIEW.SEZLCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEZLINST -
      NEWNM(NETVIEW.SEZLINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEZLINST) -
        REL(NETVIEW.SEZLINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEZLLINK -
      NEWNM(NETVIEW.SEZLLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEZLLINK) -
        REL(NETVIEW.SEZLLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEZLPNLU -
      NEWNM(NETVIEW.SEZLPNLU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEZLPNLU) -
        REL(NETVIEW.SEZLPNLU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SEZLSAMP -
      NEWNM(NETVIEW.SEZLSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SEZLSAMP) -
        REL(NETVIEW.SEZLSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.NETVIEW.SFLBDAT1 -
      NEWNM(NETVIEW.SFLBDAT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.NETVIEW.SFLBDAT1) -
        REL(NETVIEW.SFLBDAT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      HFSCAT.OMVS.ETC -
      NEWNM(OMVS.ETC) -
      CAT(CATALOG.H14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(HFSCAT.OMVS.ETC) -
        REL(OMVS.ETC)) -
        CAT(CATALOG.H14.USERCAT)
  ALTER -
      HFSCAT.OMVS.JV390 -
      NEWNM(OMVS.JV390) -
      CAT(CATALOG.H14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(HFSCAT.OMVS.JV390) -
        REL(OMVS.JV390)) -
        CAT(CATALOG.H14.USERCAT)
  ALTER -
      HFSCAT.OMVS.ROOT -
      NEWNM(OMVS.ROOT) -
      CAT(CATALOG.H14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(HFSCAT.OMVS.ROOT) -
        REL(OMVS.ROOT)) -
        CAT(CATALOG.H14.USERCAT)
  ALTER -
      HFSCAT.OMVS.VAR -
      NEWNM(OMVS.VAR) -
      CAT(CATALOG.H14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(HFSCAT.OMVS.VAR) -
        REL(OMVS.VAR)) -
        CAT(CATALOG.H14.USERCAT)
  ALTER -
      PRIME.SMPE.MVSD100.SMPDLOG -
      NEWNM(SMPE.MVSD100.SMPDLOG) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVSD100.SMPDLOG) -
        REL(SMPE.MVSD100.SMPDLOG)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVSD100.SMPDLOGA -
      NEWNM(SMPE.MVSD100.SMPDLOGA) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVSD100.SMPDLOGA) -
        REL(SMPE.MVSD100.SMPDLOGA)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVST100.SMPLTS -
      NEWNM(SMPE.MVST100.SMPLTS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVST100.SMPLTS) -
        REL(SMPE.MVST100.SMPLTS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVST100.SMPMTS -
      NEWNM(SMPE.MVST100.SMPMTS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVST100.SMPMTS) -
        REL(SMPE.MVST100.SMPMTS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVST100.SMPSCDS -
      NEWNM(SMPE.MVST100.SMPSCDS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVST100.SMPSCDS) -
        REL(SMPE.MVST100.SMPSCDS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVST100.SMPSTS -
      NEWNM(SMPE.MVST100.SMPSTS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVST100.SMPSTS) -
        REL(SMPE.MVST100.SMPSTS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVST100.SMPTLOG -
      NEWNM(SMPE.MVST100.SMPTLOG) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVST100.SMPTLOG) -
        REL(SMPE.MVST100.SMPTLOG)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.MVST100.SMPTLOGA -
      NEWNM(SMPE.MVST100.SMPTLOGA) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.MVST100.SMPTLOGA) -
        REL(SMPE.MVST100.SMPTLOGA)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.SMPGLOG -
      NEWNM(SMPE.SMPGLOG) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.SMPGLOG) -
        REL(SMPE.SMPGLOG)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.SMPGLOGA -
      NEWNM(SMPE.SMPGLOGA) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.SMPGLOGA) -
        REL(SMPE.SMPGLOGA)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      PRIME.SMPE.SMPPTS -
      NEWNM(SMPE.SMPPTS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.SMPE.SMPPTS) -
        REL(SMPE.SMPPTS)) -
        CAT(PRIME14.USERCAT)
  ALTER -
      MASTER.SYS1.AACBCNTL -
      NEWNM(SYS1.AACBCNTL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AACBCNTL) -
        REL(SYS1.AACBCNTL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AADFMAC1 -
      NEWNM(SYS1.AADFMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AADFMAC1) -
        REL(SYS1.AADFMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AADRLIB -
      NEWNM(SYS1.AADRLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AADRLIB) -
        REL(SYS1.AADRLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AADRYLIB -
      NEWNM(SYS1.AADRYLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AADRYLIB) -
        REL(SYS1.AADRYLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AAPPDAT2 -
      NEWNM(SYS1.AAPPDAT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AAPPDAT2) -
        REL(SYS1.AAPPDAT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AAPPDAT4 -
      NEWNM(SYS1.AAPPDAT4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AAPPDAT4) -
        REL(SYS1.AAPPDAT4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AAPPMOD1 -
      NEWNM(SYS1.AAPPMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AAPPMOD1) -
        REL(SYS1.AAPPMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AAPPMOD2 -
      NEWNM(SYS1.AAPPMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AAPPMOD2) -
        REL(SYS1.AAPPMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AAPPSAMP -
      NEWNM(SYS1.AAPPSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AAPPSAMP) -
        REL(SYS1.AAPPSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTCLI0 -
      NEWNM(SYS1.ABDTCLI0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTCLI0) -
        REL(SYS1.ABDTCLI0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTHELP -
      NEWNM(SYS1.ABDTHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTHELP) -
        REL(SYS1.ABDTHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTMAC -
      NEWNM(SYS1.ABDTMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTMAC) -
        REL(SYS1.ABDTMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTMOD -
      NEWNM(SYS1.ABDTMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTMOD) -
        REL(SYS1.ABDTMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTMSG -
      NEWNM(SYS1.ABDTMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTMSG) -
        REL(SYS1.ABDTMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTPNL0 -
      NEWNM(SYS1.ABDTPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTPNL0) -
        REL(SYS1.ABDTPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABDTSAMP -
      NEWNM(SYS1.ABDTSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABDTSAMP) -
        REL(SYS1.ABDTSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABLSCLI0 -
      NEWNM(SYS1.ABLSCLI0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABLSCLI0) -
        REL(SYS1.ABLSCLI0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABLSKEL0 -
      NEWNM(SYS1.ABLSKEL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABLSKEL0) -
        REL(SYS1.ABLSKEL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABLSMSG0 -
      NEWNM(SYS1.ABLSMSG0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABLSMSG0) -
        REL(SYS1.ABLSMSG0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABLSPNL0 -
      NEWNM(SYS1.ABLSPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABLSPNL0) -
        REL(SYS1.ABLSPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABLSTBL0 -
      NEWNM(SYS1.ABLSTBL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABLSTBL0) -
        REL(SYS1.ABLSTBL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABMFMOD0 -
      NEWNM(SYS1.ABMFMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABMFMOD0) -
        REL(SYS1.ABMFMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABPXEXEC -
      NEWNM(SYS1.ABPXEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABPXEXEC) -
        REL(SYS1.ABPXEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABPXMENU -
      NEWNM(SYS1.ABPXMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABPXMENU) -
        REL(SYS1.ABPXMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABPXMOD1 -
      NEWNM(SYS1.ABPXMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABPXMOD1) -
        REL(SYS1.ABPXMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABPXPENU -
      NEWNM(SYS1.ABPXPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABPXPENU) -
        REL(SYS1.ABPXPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABPXSPC -
      NEWNM(SYS1.ABPXSPC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABPXSPC) -
        REL(SYS1.ABPXSPC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ABPXTENU -
      NEWNM(SYS1.ABPXTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ABPXTENU) -
        REL(SYS1.ABPXTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDCLST -
      NEWNM(SYS1.ACBDCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDCLST) -
        REL(SYS1.ACBDCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDEHFS -
      NEWNM(SYS1.ACBDEHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDEHFS) -
        REL(SYS1.ACBDEHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDHENU -
      NEWNM(SYS1.ACBDHENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDHENU) -
        REL(SYS1.ACBDHENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDMENU -
      NEWNM(SYS1.ACBDMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDMENU) -
        REL(SYS1.ACBDMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDMOD1 -
      NEWNM(SYS1.ACBDMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDMOD1) -
        REL(SYS1.ACBDMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDMOD2 -
      NEWNM(SYS1.ACBDMOD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDMOD2) -
        REL(SYS1.ACBDMOD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDPENU -
      NEWNM(SYS1.ACBDPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDPENU) -
        REL(SYS1.ACBDPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDTEMP -
      NEWNM(SYS1.ACBDTEMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDTEMP) -
        REL(SYS1.ACBDTEMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBDTENU -
      NEWNM(SYS1.ACBDTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBDTENU) -
        REL(SYS1.ACBDTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBRDBRM -
      NEWNM(SYS1.ACBRDBRM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBRDBRM) -
        REL(SYS1.ACBRDBRM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACBRMOD0 -
      NEWNM(SYS1.ACBRMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACBRMOD0) -
        REL(SYS1.ACBRMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACDMMOD0 -
      NEWNM(SYS1.ACDMMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACDMMOD0) -
        REL(SYS1.ACDMMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACDRMODS -
      NEWNM(SYS1.ACDRMODS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACDRMODS) -
        REL(SYS1.ACDRMODS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACDRTABL -
      NEWNM(SYS1.ACDRTABL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACDRTABL) -
        REL(SYS1.ACDRTABL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACLMMOD0 -
      NEWNM(SYS1.ACLMMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACLMMOD0) -
        REL(SYS1.ACLMMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACMDLIB -
      NEWNM(SYS1.ACMDLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACMDLIB) -
        REL(SYS1.ACMDLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACSSLIB -
      NEWNM(SYS1.ACSSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACSSLIB) -
        REL(SYS1.ACSSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNHF -
      NEWNM(SYS1.ACUNHF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNHF) -
        REL(SYS1.ACUNHF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNIMG -
      NEWNM(SYS1.ACUNIMG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNIMG) -
        REL(SYS1.ACUNIMG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNJCL -
      NEWNM(SYS1.ACUNJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNJCL) -
        REL(SYS1.ACUNJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNMAC -
      NEWNM(SYS1.ACUNMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNMAC) -
        REL(SYS1.ACUNMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNMENU -
      NEWNM(SYS1.ACUNMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNMENU) -
        REL(SYS1.ACUNMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNMJPN -
      NEWNM(SYS1.ACUNMJPN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNMJPN) -
        REL(SYS1.ACUNMJPN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNMOD -
      NEWNM(SYS1.ACUNMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNMOD) -
        REL(SYS1.ACUNMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNREXX -
      NEWNM(SYS1.ACUNREXX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNREXX) -
        REL(SYS1.ACUNREXX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNSAMP -
      NEWNM(SYS1.ACUNSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNSAMP) -
        REL(SYS1.ACUNSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ACUNTBL -
      NEWNM(SYS1.ACUNTBL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ACUNTBL) -
        REL(SYS1.ACUNTBL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADBBLIB -
      NEWNM(SYS1.ADBBLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADBBLIB) -
        REL(SYS1.ADBBLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADFMAC1 -
      NEWNM(SYS1.ADFMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADFMAC1) -
        REL(SYS1.ADFMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADFPMOD0 -
      NEWNM(SYS1.ADFPMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADFPMOD0) -
        REL(SYS1.ADFPMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADFQMLIB -
      NEWNM(SYS1.ADFQMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADFQMLIB) -
        REL(SYS1.ADFQMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADFQPLIB -
      NEWNM(SYS1.ADFQPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADFQPLIB) -
        REL(SYS1.ADFQPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADFQPSRC -
      NEWNM(SYS1.ADFQPSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADFQPSRC) -
        REL(SYS1.ADFQPSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTCLIB -
      NEWNM(SYS1.ADGTCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTCLIB) -
        REL(SYS1.ADGTCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTLLIB -
      NEWNM(SYS1.ADGTLLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTLLIB) -
        REL(SYS1.ADGTLLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTMLIB -
      NEWNM(SYS1.ADGTMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTMLIB) -
        REL(SYS1.ADGTMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTPLIB -
      NEWNM(SYS1.ADGTPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTPLIB) -
        REL(SYS1.ADGTPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTPSRC -
      NEWNM(SYS1.ADGTPSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTPSRC) -
        REL(SYS1.ADGTPSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTSLIB -
      NEWNM(SYS1.ADGTSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTSLIB) -
        REL(SYS1.ADGTSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTTLIB -
      NEWNM(SYS1.ADGTTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTTLIB) -
        REL(SYS1.ADGTTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADGTTSRC -
      NEWNM(SYS1.ADGTTSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADGTTSRC) -
        REL(SYS1.ADGTTSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ADMSSVM -
      NEWNM(SYS1.ADMSSVM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ADMSSVM) -
        REL(SYS1.ADMSSVM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AEDGEXE1 -
      NEWNM(SYS1.AEDGEXE1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AEDGEXE1) -
        REL(SYS1.AEDGEXE1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AEDGMENU -
      NEWNM(SYS1.AEDGMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AEDGMENU) -
        REL(SYS1.AEDGMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AEDGMOD1 -
      NEWNM(SYS1.AEDGMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AEDGMOD1) -
        REL(SYS1.AEDGMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AEDGPENU -
      NEWNM(SYS1.AEDGPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AEDGPENU) -
        REL(SYS1.AEDGPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AEDGPSRC -
      NEWNM(SYS1.AEDGPSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AEDGPSRC) -
        REL(SYS1.AEDGPSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AEDGSRC1 -
      NEWNM(SYS1.AEDGSRC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AEDGSRC1) -
        REL(SYS1.AEDGSRC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBCLS -
      NEWNM(SYS1.AERBCLS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBCLS) -
        REL(SYS1.AERBCLS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBMAC1 -
      NEWNM(SYS1.AERBMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBMAC1) -
        REL(SYS1.AERBMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBMENU -
      NEWNM(SYS1.AERBMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBMENU) -
        REL(SYS1.AERBMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBMOD1 -
      NEWNM(SYS1.AERBMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBMOD1) -
        REL(SYS1.AERBMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBPENU -
      NEWNM(SYS1.AERBPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBPENU) -
        REL(SYS1.AERBPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBPWSV -
      NEWNM(SYS1.AERBPWSV) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBPWSV) -
        REL(SYS1.AERBPWSV)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBT -
      NEWNM(SYS1.AERBT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBT) -
        REL(SYS1.AERBT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AERBTENU -
      NEWNM(SYS1.AERBTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AERBTENU) -
        REL(SYS1.AERBTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AFOMDATA -
      NEWNM(SYS1.AFOMDATA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AFOMDATA) -
        REL(SYS1.AFOMDATA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AFOMHDRS -
      NEWNM(SYS1.AFOMHDRS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AFOMHDRS) -
        REL(SYS1.AFOMHDRS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AFOMHFS -
      NEWNM(SYS1.AFOMHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AFOMHFS) -
        REL(SYS1.AFOMHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AFOMMOD1 -
      NEWNM(SYS1.AFOMMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AFOMMOD1) -
        REL(SYS1.AFOMMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AFOMOBJ -
      NEWNM(SYS1.AFOMOBJ) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AFOMOBJ) -
        REL(SYS1.AFOMOBJ)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AGDEMOD0 -
      NEWNM(SYS1.AGDEMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AGDEMOD0) -
        REL(SYS1.AGDEMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AGENLIB -
      NEWNM(SYS1.AGENLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AGENLIB) -
        REL(SYS1.AGENLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AGFTAJL1 -
      NEWNM(SYS1.AGFTAJL1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AGFTAJL1) -
        REL(SYS1.AGFTAJL1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AGFTAMD1 -
      NEWNM(SYS1.AGFTAMD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AGFTAMD1) -
        REL(SYS1.AGFTAMD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AGFUMOD1 -
      NEWNM(SYS1.AGFUMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AGFUMOD1) -
        REL(SYS1.AGFUMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASMAC -
      NEWNM(SYS1.AHASMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASMAC) -
        REL(SYS1.AHASMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASMENU -
      NEWNM(SYS1.AHASMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASMENU) -
        REL(SYS1.AHASMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASMOD -
      NEWNM(SYS1.AHASMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASMOD) -
        REL(SYS1.AHASMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASPARM -
      NEWNM(SYS1.AHASPARM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASPARM) -
        REL(SYS1.AHASPARM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASPNL0 -
      NEWNM(SYS1.AHASPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASPNL0) -
        REL(SYS1.AHASPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASSAMP -
      NEWNM(SYS1.AHASSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASSAMP) -
        REL(SYS1.AHASSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHASSRC -
      NEWNM(SYS1.AHASSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHASSRC) -
        REL(SYS1.AHASSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHELP -
      NEWNM(SYS1.AHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHELP) -
        REL(SYS1.AHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AHELPENP -
      NEWNM(SYS1.AHELPENP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AHELPENP) -
        REL(SYS1.AHELPENP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICECLIB -
      NEWNM(SYS1.AICECLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICECLIB) -
        REL(SYS1.AICECLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICELIB -
      NEWNM(SYS1.AICELIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICELIB) -
        REL(SYS1.AICELIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICEMENU -
      NEWNM(SYS1.AICEMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICEMENU) -
        REL(SYS1.AICEMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICEPENU -
      NEWNM(SYS1.AICEPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICEPENU) -
        REL(SYS1.AICEPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICESAMP -
      NEWNM(SYS1.AICESAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICESAMP) -
        REL(SYS1.AICESAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICESLIB -
      NEWNM(SYS1.AICESLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICESLIB) -
        REL(SYS1.AICESLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICESRCE -
      NEWNM(SYS1.AICESRCE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICESRCE) -
        REL(SYS1.AICESRCE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICETLIB -
      NEWNM(SYS1.AICETLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICETLIB) -
        REL(SYS1.AICETLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICEUSER -
      NEWNM(SYS1.AICEUSER) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICEUSER) -
        REL(SYS1.AICEUSER)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQAB -
      NEWNM(SYS1.AICQAB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQAB) -
        REL(SYS1.AICQAB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQILIB -
      NEWNM(SYS1.AICQILIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQILIB) -
        REL(SYS1.AICQILIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQMAC1 -
      NEWNM(SYS1.AICQMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQMAC1) -
        REL(SYS1.AICQMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQMAC2 -
      NEWNM(SYS1.AICQMAC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQMAC2) -
        REL(SYS1.AICQMAC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQMAC3 -
      NEWNM(SYS1.AICQMAC3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQMAC3) -
        REL(SYS1.AICQMAC3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQMAC4 -
      NEWNM(SYS1.AICQMAC4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQMAC4) -
        REL(SYS1.AICQMAC4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AICQMAC5 -
      NEWNM(SYS1.AICQMAC5) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AICQMAC5) -
        REL(SYS1.AICQMAC5)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIEAHDR -
      NEWNM(SYS1.AIEAHDR) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIEAHDR) -
        REL(SYS1.AIEAHDR)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIEWMOD0 -
      NEWNM(SYS1.AIEWMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIEWMOD0) -
        REL(SYS1.AIEWMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIFALIB -
      NEWNM(SYS1.AIFALIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIFALIB) -
        REL(SYS1.AIFALIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIGDVBS1 -
      NEWNM(SYS1.AIGDVBS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIGDVBS1) -
        REL(SYS1.AIGDVBS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIKYHFS -
      NEWNM(SYS1.AIKYHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIKYHFS) -
        REL(SYS1.AIKYHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIMAGE -
      NEWNM(SYS1.AIMAGE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIMAGE) -
        REL(SYS1.AIMAGE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AIMFMOD0 -
      NEWNM(SYS1.AIMFMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AIMFMOD0) -
        REL(SYS1.AIMFMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AINDLMD -
      NEWNM(SYS1.AINDLMD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AINDLMD) -
        REL(SYS1.AINDLMD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTASGD -
      NEWNM(SYS1.AISTASGD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTASGD) -
        REL(SYS1.AISTASGD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTASN1 -
      NEWNM(SYS1.AISTASN1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTASN1) -
        REL(SYS1.AISTASN1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTCMIP -
      NEWNM(SYS1.AISTCMIP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTCMIP) -
        REL(SYS1.AISTCMIP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTDAT1 -
      NEWNM(SYS1.AISTDAT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTDAT1) -
        REL(SYS1.AISTDAT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTDAT2 -
      NEWNM(SYS1.AISTDAT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTDAT2) -
        REL(SYS1.AISTDAT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTGDMO -
      NEWNM(SYS1.AISTGDMO) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTGDMO) -
        REL(SYS1.AISTGDMO)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AISTMAC1 -
      NEWNM(SYS1.AISTMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AISTMAC1) -
        REL(SYS1.AISTMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AITYHFS -
      NEWNM(SYS1.AITYHFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AITYHFS) -
        REL(SYS1.AITYHFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ALINKLIB -
      NEWNM(SYS1.ALINKLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ALINKLIB) -
        REL(SYS1.ALINKLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ALPALIB -
      NEWNM(SYS1.ALPALIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ALPALIB) -
        REL(SYS1.ALPALIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AMACLIB -
      NEWNM(SYS1.AMACLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AMACLIB) -
        REL(SYS1.AMACLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AMIGLIB -
      NEWNM(SYS1.AMIGLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AMIGLIB) -
        REL(SYS1.AMIGLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AMODGEN -
      NEWNM(SYS1.AMODGEN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AMODGEN) -
        REL(SYS1.AMODGEN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AMSGENP -
      NEWNM(SYS1.AMSGENP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AMSGENP) -
        REL(SYS1.AMSGENP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AMSGENU -
      NEWNM(SYS1.AMSGENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AMSGENU) -
        REL(SYS1.AMSGENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ANFSLIB -
      NEWNM(SYS1.ANFSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ANFSLIB) -
        REL(SYS1.ANFSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ANFSMAC -
      NEWNM(SYS1.ANFSMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ANFSMAC) -
        REL(SYS1.ANFSMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ANFSSAMP -
      NEWNM(SYS1.ANFSSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ANFSSAMP) -
        REL(SYS1.ANFSSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ANFSTARB -
      NEWNM(SYS1.ANFSTARB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ANFSTARB) -
        REL(SYS1.ANFSTARB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ANUCLEUS -
      NEWNM(SYS1.ANUCLEUS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ANUCLEUS) -
        REL(SYS1.ANUCLEUS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSACB -
      NEWNM(SYS1.AOSACB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSACB) -
        REL(SYS1.AOSACB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSA0 -
      NEWNM(SYS1.AOSA0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSA0) -
        REL(SYS1.AOSA0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSA1 -
      NEWNM(SYS1.AOSA1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSA1) -
        REL(SYS1.AOSA1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSBN -
      NEWNM(SYS1.AOSBN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSBN) -
        REL(SYS1.AOSBN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSB0 -
      NEWNM(SYS1.AOSB0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSB0) -
        REL(SYS1.AOSB0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSB3 -
      NEWNM(SYS1.AOSB3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSB3) -
        REL(SYS1.AOSB3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSCA -
      NEWNM(SYS1.AOSCA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSCA) -
        REL(SYS1.AOSCA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSCD -
      NEWNM(SYS1.AOSCD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSCD) -
        REL(SYS1.AOSCD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSCE -
      NEWNM(SYS1.AOSCE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSCE) -
        REL(SYS1.AOSCE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSC2 -
      NEWNM(SYS1.AOSC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSC2) -
        REL(SYS1.AOSC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSC5 -
      NEWNM(SYS1.AOSC5) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSC5) -
        REL(SYS1.AOSC5)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSC6 -
      NEWNM(SYS1.AOSC6) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSC6) -
        REL(SYS1.AOSC6)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSD0 -
      NEWNM(SYS1.AOSD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSD0) -
        REL(SYS1.AOSD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSD7 -
      NEWNM(SYS1.AOSD7) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSD7) -
        REL(SYS1.AOSD7)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSD8 -
      NEWNM(SYS1.AOSD8) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSD8) -
        REL(SYS1.AOSD8)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSG0 -
      NEWNM(SYS1.AOSG0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSG0) -
        REL(SYS1.AOSG0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSJSC -
      NEWNM(SYS1.AOSJSC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSJSC) -
        REL(SYS1.AOSJSC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOST3 -
      NEWNM(SYS1.AOST3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOST3) -
        REL(SYS1.AOST3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOST4 -
      NEWNM(SYS1.AOST4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOST4) -
        REL(SYS1.AOST4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSU0 -
      NEWNM(SYS1.AOSU0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSU0) -
        REL(SYS1.AOSU0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOSXCF -
      NEWNM(SYS1.AOSXCF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOSXCF) -
        REL(SYS1.AOSXCF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS00 -
      NEWNM(SYS1.AOS00) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS00) -
        REL(SYS1.AOS00)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS04 -
      NEWNM(SYS1.AOS04) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS04) -
        REL(SYS1.AOS04)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS05 -
      NEWNM(SYS1.AOS05) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS05) -
        REL(SYS1.AOS05)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS06 -
      NEWNM(SYS1.AOS06) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS06) -
        REL(SYS1.AOS06)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS11 -
      NEWNM(SYS1.AOS11) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS11) -
        REL(SYS1.AOS11)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS12 -
      NEWNM(SYS1.AOS12) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS12) -
        REL(SYS1.AOS12)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS24 -
      NEWNM(SYS1.AOS24) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS24) -
        REL(SYS1.AOS24)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS26 -
      NEWNM(SYS1.AOS26) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS26) -
        REL(SYS1.AOS26)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS28 -
      NEWNM(SYS1.AOS28) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS28) -
        REL(SYS1.AOS28)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AOS32 -
      NEWNM(SYS1.AOS32) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AOS32) -
        REL(SYS1.AOS32)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ASAMPLIB -
      NEWNM(SYS1.ASAMPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ASAMPLIB) -
        REL(SYS1.ASAMPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ASSFMOD0 -
      NEWNM(SYS1.ASSFMOD0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ASSFMOD0) -
        REL(SYS1.ASSFMOD0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ATSOMAC -
      NEWNM(SYS1.ATSOMAC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ATSOMAC) -
        REL(SYS1.ATSOMAC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.AUADS -
      NEWNM(SYS1.AUADS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.AUADS) -
        REL(SYS1.AUADS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.BDT.INITS -
      NEWNM(SYS1.BDT.INITS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.BDT.INITS) -
        REL(SYS1.BDT.INITS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.BRODCAST -
      NEWNM(SYS1.BRODCAST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.BRODCAST) -
        REL(SYS1.BRODCAST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.CBRDBRM -
      NEWNM(SYS1.CBRDBRM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.CBRDBRM) -
        REL(SYS1.CBRDBRM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.CIPLIB -
      NEWNM(SYS1.CIPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.CIPLIB) -
        REL(SYS1.CIPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.CMDLIB -
      NEWNM(SYS1.CMDLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.CMDLIB) -
        REL(SYS1.CMDLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.EXMP.LOGREC -
      NEWNM(SYS1.EXMP.LOGREC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.EXMP.LOGREC) -
        REL(SYS1.EXMP.LOGREC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DAE -
      NEWNM(SYS1.DAE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DAE) -
        REL(SYS1.DAE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DBBLIB -
      NEWNM(SYS1.DBBLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DBBLIB) -
        REL(SYS1.DBBLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DFQLLIB -
      NEWNM(SYS1.DFQLLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DFQLLIB) -
        REL(SYS1.DFQLLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DFQMLIB -
      NEWNM(SYS1.DFQMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DFQMLIB) -
        REL(SYS1.DFQMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DFQPLIB -
      NEWNM(SYS1.DFQPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DFQPLIB) -
        REL(SYS1.DFQPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DGTCLIB -
      NEWNM(SYS1.DGTCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DGTCLIB) -
        REL(SYS1.DGTCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DGTLLIB -
      NEWNM(SYS1.DGTLLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DGTLLIB) -
        REL(SYS1.DGTLLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DGTMLIB -
      NEWNM(SYS1.DGTMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DGTMLIB) -
        REL(SYS1.DGTMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DGTPLIB -
      NEWNM(SYS1.DGTPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DGTPLIB) -
        REL(SYS1.DGTPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DGTSLIB -
      NEWNM(SYS1.DGTSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DGTSLIB) -
        REL(SYS1.DGTSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DGTTLIB -
      NEWNM(SYS1.DGTTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DGTTLIB) -
        REL(SYS1.DGTTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DUMP00 -
      NEWNM(SYS1.DUMP00) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DUMP00) -
        REL(SYS1.DUMP00)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DUMP01 -
      NEWNM(SYS1.DUMP01) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DUMP01) -
        REL(SYS1.DUMP01)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.DUMP02 -
      NEWNM(SYS1.DUMP02) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.DUMP02) -
        REL(SYS1.DUMP02)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.GMJD -
      NEWNM(SYS1.GMJD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.GMJD) -
        REL(SYS1.GMJD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HASPACE -
      NEWNM(SYS1.HASPACE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HASPACE) -
        REL(SYS1.HASPACE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HASPCKPT -
      NEWNM(SYS1.HASPCKPT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HASPCKPT) -
        REL(SYS1.HASPCKPT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HASPCKP2 -
      NEWNM(SYS1.HASPCKP2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HASPCKP2) -
        REL(SYS1.HASPCKP2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HELP -
      NEWNM(SYS1.HELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HELP) -
        REL(SYS1.HELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HELPENP -
      NEWNM(SYS1.HELPENP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HELPENP) -
        REL(SYS1.HELPENP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HHRFCLST -
      NEWNM(SYS1.HHRFCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HHRFCLST) -
        REL(SYS1.HHRFCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HHRFMSG -
      NEWNM(SYS1.HHRFMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HHRFMSG) -
        REL(SYS1.HHRFMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HHRFPANL -
      NEWNM(SYS1.HHRFPANL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HHRFPANL) -
        REL(SYS1.HHRFPANL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HHRFSKEL -
      NEWNM(SYS1.HHRFSKEL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HHRFSKEL) -
        REL(SYS1.HHRFSKEL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HRFCLST -
      NEWNM(SYS1.HRFCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HRFCLST) -
        REL(SYS1.HRFCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HRFMSG -
      NEWNM(SYS1.HRFMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HRFMSG) -
        REL(SYS1.HRFMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HRFPANL -
      NEWNM(SYS1.HRFPANL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HRFPANL) -
        REL(SYS1.HRFPANL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.HRFSKEL -
      NEWNM(SYS1.HRFSKEL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.HRFSKEL) -
        REL(SYS1.HRFSKEL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IBM.APARMLIB -
      NEWNM(SYS1.IBM.APARMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IBM.APARMLIB) -
        REL(SYS1.IBM.APARMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IBM.APROCLIB -
      NEWNM(SYS1.IBM.APROCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IBM.APROCLIB) -
        REL(SYS1.IBM.APROCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IBM.PARMLIB -
      NEWNM(SYS1.IBM.PARMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IBM.PARMLIB) -
        REL(SYS1.IBM.PARMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IBM.PROCLIB -
      NEWNM(SYS1.IBM.PROCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IBM.PROCLIB) -
        REL(SYS1.IBM.PROCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IGDVBS1 -
      NEWNM(SYS1.IGDVBS1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IGDVBS1) -
        REL(SYS1.IGDVBS1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IMAGELIB -
      NEWNM(SYS1.IMAGELIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IMAGELIB) -
        REL(SYS1.IMAGELIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IPLPARM -
      NEWNM(SYS1.IPLPARM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.IPLPARM) -
        REL(SYS1.IPLPARM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.ISAMLPA -
      NEWNM(SYS1.ISAMLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.ISAMLPA) -
        REL(SYS1.ISAMLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.LOGR.CDS01 -
      NEWNM(SYS1.LOGR.CDS01) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.LOGR.CDS01) -
        REL(SYS1.LOGR.CDS01)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.LOGR.CDS02 -
      NEWNM(SYS1.LOGR.CDS02) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.LOGR.CDS02) -
        REL(SYS1.LOGR.CDS02)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.LOGR.CDS03 -
      NEWNM(SYS1.LOGR.CDS03) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.LOGR.CDS03) -
        REL(SYS1.LOGR.CDS03)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.MSGENP -
      NEWNM(SYS1.MSGENP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.MSGENP) -
        REL(SYS1.MSGENP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.MSGENU -
      NEWNM(SYS1.MSGENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.MSGENU) -
        REL(SYS1.MSGENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.NFSLIB -
      NEWNM(SYS1.NFSLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.NFSLIB) -
        REL(SYS1.NFSLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.NFSSAMP -
      NEWNM(SYS1.NFSSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.NFSSAMP) -
        REL(SYS1.NFSSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.NFSTARB -
      NEWNM(SYS1.NFSTARB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.NFSTARB) -
        REL(SYS1.NFSTARB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.NUCLEUS -
      NEWNM(SYS1.NUCLEUS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.NUCLEUS) -
        REL(SYS1.NUCLEUS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.PARMLIB -
      NEWNM(SYS1.PARMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.PARMLIB) -
        REL(SYS1.PARMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.PROCLIB -
      NEWNM(SYS1.PROCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.PROCLIB) -
        REL(SYS1.PROCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.RACF -
      NEWNM(SYS1.RACF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.RACF) -
        REL(SYS1.RACF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.RACFSEC -
      NEWNM(SYS1.RACFSEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.RACFSEC) -
        REL(SYS1.RACFSEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SACBCNTL -
      NEWNM(SYS1.SACBCNTL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SACBCNTL) -
        REL(SYS1.SACBCNTL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SADRYLIB -
      NEWNM(SYS1.SADRYLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SADRYLIB) -
        REL(SYS1.SADRYLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SAMPLIB -
      NEWNM(SYS1.SAMPLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SAMPLIB) -
        REL(SYS1.SAMPLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SAPPDAT2 -
      NEWNM(SYS1.SAPPDAT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SAPPDAT2) -
        REL(SYS1.SAPPDAT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SAPPDAT4 -
      NEWNM(SYS1.SAPPDAT4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SAPPDAT4) -
        REL(SYS1.SAPPDAT4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SAPPMOD1 -
      NEWNM(SYS1.SAPPMOD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SAPPMOD1) -
        REL(SYS1.SAPPMOD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SAPPSAMP -
      NEWNM(SYS1.SAPPSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SAPPSAMP) -
        REL(SYS1.SAPPSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTCLI0 -
      NEWNM(SYS1.SBDTCLI0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTCLI0) -
        REL(SYS1.SBDTCLI0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTCMD -
      NEWNM(SYS1.SBDTCMD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTCMD) -
        REL(SYS1.SBDTCMD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTHELP -
      NEWNM(SYS1.SBDTHELP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTHELP) -
        REL(SYS1.SBDTHELP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTLIB -
      NEWNM(SYS1.SBDTLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTLIB) -
        REL(SYS1.SBDTLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTLINK -
      NEWNM(SYS1.SBDTLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTLINK) -
        REL(SYS1.SBDTLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTLPA -
      NEWNM(SYS1.SBDTLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTLPA) -
        REL(SYS1.SBDTLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTMSG -
      NEWNM(SYS1.SBDTMSG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTMSG) -
        REL(SYS1.SBDTMSG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTPNL0 -
      NEWNM(SYS1.SBDTPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTPNL0) -
        REL(SYS1.SBDTPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBDTSAMP -
      NEWNM(SYS1.SBDTSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBDTSAMP) -
        REL(SYS1.SBDTSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBLSCLI0 -
      NEWNM(SYS1.SBLSCLI0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBLSCLI0) -
        REL(SYS1.SBLSCLI0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBLSKEL0 -
      NEWNM(SYS1.SBLSKEL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBLSKEL0) -
        REL(SYS1.SBLSKEL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBLSMSG0 -
      NEWNM(SYS1.SBLSMSG0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBLSMSG0) -
        REL(SYS1.SBLSMSG0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBLSPNL0 -
      NEWNM(SYS1.SBLSPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBLSPNL0) -
        REL(SYS1.SBLSPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBLSTBL0 -
      NEWNM(SYS1.SBLSTBL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBLSTBL0) -
        REL(SYS1.SBLSTBL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBPXEXEC -
      NEWNM(SYS1.SBPXEXEC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBPXEXEC) -
        REL(SYS1.SBPXEXEC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBPXMENU -
      NEWNM(SYS1.SBPXMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBPXMENU) -
        REL(SYS1.SBPXMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBPXPENU -
      NEWNM(SYS1.SBPXPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBPXPENU) -
        REL(SYS1.SBPXPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SBPXTENU -
      NEWNM(SYS1.SBPXTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SBPXTENU) -
        REL(SYS1.SBPXTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCBDCLST -
      NEWNM(SYS1.SCBDCLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCBDCLST) -
        REL(SYS1.SCBDCLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCBDHENU -
      NEWNM(SYS1.SCBDHENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCBDHENU) -
        REL(SYS1.SCBDHENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCBDMENU -
      NEWNM(SYS1.SCBDMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCBDMENU) -
        REL(SYS1.SCBDMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCBDPENU -
      NEWNM(SYS1.SCBDPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCBDPENU) -
        REL(SYS1.SCBDPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCBDTEMP -
      NEWNM(SYS1.SCBDTEMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCBDTEMP) -
        REL(SYS1.SCBDTEMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCBDTENU -
      NEWNM(SYS1.SCBDTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCBDTENU) -
        REL(SYS1.SCBDTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCDRTABL -
      NEWNM(SYS1.SCDRTABL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCDRTABL) -
        REL(SYS1.SCDRTABL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNHF -
      NEWNM(SYS1.SCUNHF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNHF) -
        REL(SYS1.SCUNHF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNIMG -
      NEWNM(SYS1.SCUNIMG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNIMG) -
        REL(SYS1.SCUNIMG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNJCL -
      NEWNM(SYS1.SCUNJCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNJCL) -
        REL(SYS1.SCUNJCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNMENU -
      NEWNM(SYS1.SCUNMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNMENU) -
        REL(SYS1.SCUNMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNMJPN -
      NEWNM(SYS1.SCUNMJPN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNMJPN) -
        REL(SYS1.SCUNMJPN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNREXX -
      NEWNM(SYS1.SCUNREXX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNREXX) -
        REL(SYS1.SCUNREXX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SCUNTBL -
      NEWNM(SYS1.SCUNTBL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SCUNTBL) -
        REL(SYS1.SCUNTBL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SDFQPSRC -
      NEWNM(SYS1.SDFQPSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SDFQPSRC) -
        REL(SYS1.SDFQPSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SDGTPSRC -
      NEWNM(SYS1.SDGTPSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SDGTPSRC) -
        REL(SYS1.SDGTPSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SDGTTSRC -
      NEWNM(SYS1.SDGTTSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SDGTTSRC) -
        REL(SYS1.SDGTTSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SDMSSVM -
      NEWNM(SYS1.SDMSSVM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SDMSSVM) -
        REL(SYS1.SDMSSVM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SDMSSVMS -
      NEWNM(SYS1.SDMSSVMS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SDMSSVMS) -
        REL(SYS1.SDMSSVMS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SDWWDLPA -
      NEWNM(SYS1.SDWWDLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SDWWDLPA) -
        REL(SYS1.SDWWDLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SEDGEXE1 -
      NEWNM(SYS1.SEDGEXE1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SEDGEXE1) -
        REL(SYS1.SEDGEXE1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SEDGMENU -
      NEWNM(SYS1.SEDGMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SEDGMENU) -
        REL(SYS1.SEDGMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SEDGPENU -
      NEWNM(SYS1.SEDGPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SEDGPENU) -
        REL(SYS1.SEDGPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SEDGPSRC -
      NEWNM(SYS1.SEDGPSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SEDGPSRC) -
        REL(SYS1.SEDGPSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBCLS -
      NEWNM(SYS1.SERBCLS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBCLS) -
        REL(SYS1.SERBCLS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBLINK -
      NEWNM(SYS1.SERBLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBLINK) -
        REL(SYS1.SERBLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBLPA -
      NEWNM(SYS1.SERBLPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBLPA) -
        REL(SYS1.SERBLPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBMENU -
      NEWNM(SYS1.SERBMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBMENU) -
        REL(SYS1.SERBMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBPENU -
      NEWNM(SYS1.SERBPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBPENU) -
        REL(SYS1.SERBPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBPWSV -
      NEWNM(SYS1.SERBPWSV) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBPWSV) -
        REL(SYS1.SERBPWSV)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBT -
      NEWNM(SYS1.SERBT) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBT) -
        REL(SYS1.SERBT)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SERBTENU -
      NEWNM(SYS1.SERBTENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SERBTENU) -
        REL(SYS1.SERBTENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SFOMDATA -
      NEWNM(SYS1.SFOMDATA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SFOMDATA) -
        REL(SYS1.SFOMDATA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SFOMHDRS -
      NEWNM(SYS1.SFOMHDRS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SFOMHDRS) -
        REL(SYS1.SFOMHDRS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SFOMOBJ -
      NEWNM(SYS1.SFOMOBJ) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SFOMOBJ) -
        REL(SYS1.SFOMOBJ)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASLINK -
      NEWNM(SYS1.SHASLINK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASLINK) -
        REL(SYS1.SHASLINK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASMENU -
      NEWNM(SYS1.SHASMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASMENU) -
        REL(SYS1.SHASMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASMIG -
      NEWNM(SYS1.SHASMIG) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASMIG) -
        REL(SYS1.SHASMIG)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASPARM -
      NEWNM(SYS1.SHASPARM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASPARM) -
        REL(SYS1.SHASPARM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASPNL0 -
      NEWNM(SYS1.SHASPNL0) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASPNL0) -
        REL(SYS1.SHASPNL0)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASSAMP -
      NEWNM(SYS1.SHASSAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASSAMP) -
        REL(SYS1.SHASSAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SHASSRC -
      NEWNM(SYS1.SHASSRC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SHASSRC) -
        REL(SYS1.SHASSRC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICECLIB -
      NEWNM(SYS1.SICECLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICECLIB) -
        REL(SYS1.SICECLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICEMENU -
      NEWNM(SYS1.SICEMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICEMENU) -
        REL(SYS1.SICEMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICEPENU -
      NEWNM(SYS1.SICEPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICEPENU) -
        REL(SYS1.SICEPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICEPROC -
      NEWNM(SYS1.SICEPROC) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICEPROC) -
        REL(SYS1.SICEPROC)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICESAMP -
      NEWNM(SYS1.SICESAMP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICESAMP) -
        REL(SYS1.SICESAMP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICESLIB -
      NEWNM(SYS1.SICESLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICESLIB) -
        REL(SYS1.SICESLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICESRCE -
      NEWNM(SYS1.SICESRCE) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICESRCE) -
        REL(SYS1.SICESRCE)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SICETLIB -
      NEWNM(SYS1.SICETLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SICETLIB) -
        REL(SYS1.SICETLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SIEAHDR.H -
      NEWNM(SYS1.SIEAHDR.H) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SIEAHDR.H) -
        REL(SYS1.SIEAHDR.H)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SIFALIB -
      NEWNM(SYS1.SIFALIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SIFALIB) -
        REL(SYS1.SIFALIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SIOALMOD -
      NEWNM(SYS1.SIOALMOD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SIOALMOD) -
        REL(SYS1.SIOALMOD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTASGD -
      NEWNM(SYS1.SISTASGD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTASGD) -
        REL(SYS1.SISTASGD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTASN1 -
      NEWNM(SYS1.SISTASN1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTASN1) -
        REL(SYS1.SISTASN1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTCLIB -
      NEWNM(SYS1.SISTCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTCLIB) -
        REL(SYS1.SISTCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTCMIP -
      NEWNM(SYS1.SISTCMIP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTCMIP) -
        REL(SYS1.SISTCMIP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTDAT1 -
      NEWNM(SYS1.SISTDAT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTDAT1) -
        REL(SYS1.SISTDAT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTDAT2 -
      NEWNM(SYS1.SISTDAT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTDAT2) -
        REL(SYS1.SISTDAT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SISTGDMO -
      NEWNM(SYS1.SISTGDMO) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SISTGDMO) -
        REL(SYS1.SISTGDMO)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.SVCLIB -
      NEWNM(SYS1.SVCLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.SVCLIB) -
        REL(SYS1.SVCLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.UADS -
      NEWNM(SYS1.UADS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.UADS) -
        REL(SYS1.UADS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.VTAMLIB -
      NEWNM(SYS1.VTAMLIB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.VTAMLIB) -
        REL(SYS1.VTAMLIB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.VTAMLST -
      NEWNM(SYS1.VTAMLST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.VTAMLST) -
        REL(SYS1.VTAMLST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.WLM.CDS01 -
      NEWNM(SYS1.WLM.CDS01) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.WLM.CDS01) -
        REL(SYS1.WLM.CDS01)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.WLM.CDS02 -
      NEWNM(SYS1.WLM.CDS02) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.WLM.CDS02) -
        REL(SYS1.WLM.CDS02)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.WLM.CDS03 -
      NEWNM(SYS1.WLM.CDS03) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.WLM.CDS03) -
        REL(SYS1.WLM.CDS03)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.WLM.DEF -
      NEWNM(SYS1.WLM.DEF) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.WLM.DEF) -
        REL(SYS1.WLM.DEF)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.XCF.CDS01 -
      NEWNM(SYS1.XCF.CDS01) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.XCF.CDS01) -
        REL(SYS1.XCF.CDS01)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.XCF.CDS02 -
      NEWNM(SYS1.XCF.CDS02) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.XCF.CDS02) -
        REL(SYS1.XCF.CDS02)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.XCF.CDS03 -
      NEWNM(SYS1.XCF.CDS03) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.SYS1.XCF.CDS03) -
        REL(SYS1.XCF.CDS03)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZADBR1 -
      NEWNM(TCPIP.AEZADBR1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZADBR1) -
        REL(TCPIP.AEZADBR1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAMAC1 -
      NEWNM(TCPIP.AEZAMAC1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAMAC1) -
        REL(TCPIP.AEZAMAC1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAMAC2 -
      NEWNM(TCPIP.AEZAMAC2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAMAC2) -
        REL(TCPIP.AEZAMAC2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAMAC3 -
      NEWNM(TCPIP.AEZAMAC3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAMAC3) -
        REL(TCPIP.AEZAMAC3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAMODS -
      NEWNM(TCPIP.AEZAMODS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAMODS) -
        REL(TCPIP.AEZAMODS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZARNT1 -
      NEWNM(TCPIP.AEZARNT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZARNT1) -
        REL(TCPIP.AEZARNT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZARNT2 -
      NEWNM(TCPIP.AEZARNT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZARNT2) -
        REL(TCPIP.AEZARNT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZARNT3 -
      NEWNM(TCPIP.AEZARNT3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZARNT3) -
        REL(TCPIP.AEZARNT3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZARNT4 -
      NEWNM(TCPIP.AEZARNT4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZARNT4) -
        REL(TCPIP.AEZARNT4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAROE1 -
      NEWNM(TCPIP.AEZAROE1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAROE1) -
        REL(TCPIP.AEZAROE1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAROE2 -
      NEWNM(TCPIP.AEZAROE2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAROE2) -
        REL(TCPIP.AEZAROE2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAROE3 -
      NEWNM(TCPIP.AEZAROE3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAROE3) -
        REL(TCPIP.AEZAROE3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZASMP1 -
      NEWNM(TCPIP.AEZASMP1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZASMP1) -
        REL(TCPIP.AEZASMP1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAXLTD -
      NEWNM(TCPIP.AEZAXLTD) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAXLTD) -
        REL(TCPIP.AEZAXLTD)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAXLTK -
      NEWNM(TCPIP.AEZAXLTK) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAXLTK) -
        REL(TCPIP.AEZAXLTK)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAXLT1 -
      NEWNM(TCPIP.AEZAXLT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAXLT1) -
        REL(TCPIP.AEZAXLT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAXLT2 -
      NEWNM(TCPIP.AEZAXLT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAXLT2) -
        REL(TCPIP.AEZAXLT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.AEZAXLT3 -
      NEWNM(TCPIP.AEZAXLT3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.AEZAXLT3) -
        REL(TCPIP.AEZAXLT3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZACMTX -
      NEWNM(TCPIP.SEZACMTX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZACMTX) -
        REL(TCPIP.SEZACMTX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADBCX -
      NEWNM(TCPIP.SEZADBCX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADBCX) -
        REL(TCPIP.SEZADBCX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADBRM -
      NEWNM(TCPIP.SEZADBRM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADBRM) -
        REL(TCPIP.SEZADBRM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADEFS -
      NEWNM(TCPIP.SEZADEFS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADEFS) -
        REL(TCPIP.SEZADEFS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADPIL -
      NEWNM(TCPIP.SEZADPIL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADPIL) -
        REL(TCPIP.SEZADPIL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADSIL -
      NEWNM(TCPIP.SEZADSIL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADSIL) -
        REL(TCPIP.SEZADSIL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADSIM -
      NEWNM(TCPIP.SEZADSIM) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADSIM) -
        REL(TCPIP.SEZADSIM)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZADSIP -
      NEWNM(TCPIP.SEZADSIP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZADSIP) -
        REL(TCPIP.SEZADSIP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAINST -
      NEWNM(TCPIP.SEZAINST) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAINST) -
        REL(TCPIP.SEZAINST)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZALIBN -
      NEWNM(TCPIP.SEZALIBN) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZALIBN) -
        REL(TCPIP.SEZALIBN)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZALNK2 -
      NEWNM(TCPIP.SEZALNK2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZALNK2) -
        REL(TCPIP.SEZALNK2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZALPA -
      NEWNM(TCPIP.SEZALPA) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZALPA) -
        REL(TCPIP.SEZALPA)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAMENU -
      NEWNM(TCPIP.SEZAMENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAMENU) -
        REL(TCPIP.SEZAMENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZANCLS -
      NEWNM(TCPIP.SEZANCLS) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZANCLS) -
        REL(TCPIP.SEZANCLS)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZANPNL -
      NEWNM(TCPIP.SEZANPNL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZANPNL) -
        REL(TCPIP.SEZANPNL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAOLDX -
      NEWNM(TCPIP.SEZAOLDX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAOLDX) -
        REL(TCPIP.SEZAOLDX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAPENU -
      NEWNM(TCPIP.SEZAPENU) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAPENU) -
        REL(TCPIP.SEZAPENU)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZARNT1 -
      NEWNM(TCPIP.SEZARNT1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZARNT1) -
        REL(TCPIP.SEZARNT1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZARNT2 -
      NEWNM(TCPIP.SEZARNT2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZARNT2) -
        REL(TCPIP.SEZARNT2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZARNT3 -
      NEWNM(TCPIP.SEZARNT3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZARNT3) -
        REL(TCPIP.SEZARNT3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZARNT4 -
      NEWNM(TCPIP.SEZARNT4) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZARNT4) -
        REL(TCPIP.SEZARNT4)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAROE1 -
      NEWNM(TCPIP.SEZAROE1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAROE1) -
        REL(TCPIP.SEZAROE1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAROE2 -
      NEWNM(TCPIP.SEZAROE2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAROE2) -
        REL(TCPIP.SEZAROE2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAROE3 -
      NEWNM(TCPIP.SEZAROE3) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAROE3) -
        REL(TCPIP.SEZAROE3)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZARPCL -
      NEWNM(TCPIP.SEZARPCL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZARPCL) -
        REL(TCPIP.SEZARPCL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZATCP -
      NEWNM(TCPIP.SEZATCP) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZATCP) -
        REL(TCPIP.SEZATCP)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZATCPX -
      NEWNM(TCPIP.SEZATCPX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZATCPX) -
        REL(TCPIP.SEZATCPX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZATELX -
      NEWNM(TCPIP.SEZATELX) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZATELX) -
        REL(TCPIP.SEZATELX)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAXAWL -
      NEWNM(TCPIP.SEZAXAWL) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAXAWL) -
        REL(TCPIP.SEZAXAWL)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAXLD1 -
      NEWNM(TCPIP.SEZAXLD1) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAXLD1) -
        REL(TCPIP.SEZAXLD1)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAXLD2 -
      NEWNM(TCPIP.SEZAXLD2) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAXLD2) -
        REL(TCPIP.SEZAXLD2)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAXMLB -
      NEWNM(TCPIP.SEZAXMLB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAXMLB) -
        REL(TCPIP.SEZAXMLB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAXTLB -
      NEWNM(TCPIP.SEZAXTLB) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAXTLB) -
        REL(TCPIP.SEZAXTLB)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.TCPIP.SEZAX11L -
      NEWNM(TCPIP.SEZAX11L) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(MASTER.TCPIP.SEZAX11L) -
        REL(TCPIP.SEZAX11L)) -
        CAT(CATALOG.C14.MASTER)
  ALTER -
      PRIME.TCPIVP.TCPPARMS -
      NEWNM(TCPIVP.TCPPARMS) -
      CAT(PRIME14.USERCAT)
  IF LASTCC = 0 THEN -
    DEFINE ALIAS( -
        NAME(PRIME.TCPIVP.TCPPARMS) -
        REL(TCPIVP.TCPPARMS)) -
        CAT(PRIME14.USERCAT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALTCAT),(4000,LT))
//*
//*--------------------------------------------------------------------
//* DOC: STEP ALTVSAM ALTER THE NEW SYSTEM'S VSAM AND ZFS DATASETS
//*--------------------------------------------------------------------
//ALTVSAM  EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGP)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGP -
        NEWNM(MSOPS.MSOAC.DSILOGP) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.MSOAC.DSILOGP) -
        PENT(MSOPS.MSOAC.DSILOGP) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGP.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGP.DATA -
        NEWNM(MSOPS.MSOAC.DSILOGP.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGP.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGP.D -
        NEWNM(MSOPS.MSOAC.DSILOGP.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGP.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGP.INDEX -
        NEWNM(MSOPS.MSOAC.DSILOGP.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGP.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGP.I -
        NEWNM(MSOPS.MSOAC.DSILOGP.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGS)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGS -
        NEWNM(MSOPS.MSOAC.DSILOGS) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.MSOAC.DSILOGS) -
        PENT(MSOPS.MSOAC.DSILOGS) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGS.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGS.DATA -
        NEWNM(MSOPS.MSOAC.DSILOGS.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGS.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGS.D -
        NEWNM(MSOPS.MSOAC.DSILOGS.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGS.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGS.INDEX -
        NEWNM(MSOPS.MSOAC.DSILOGS.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSILOGS.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSILOGS.I -
        NEWNM(MSOPS.MSOAC.DSILOGS.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSISVRT)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSISVRT -
        NEWNM(MSOPS.MSOAC.DSISVRT) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.MSOAC.DSISVRT) -
        PENT(MSOPS.MSOAC.DSISVRT) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSISVRT.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSISVRT.DATA -
        NEWNM(MSOPS.MSOAC.DSISVRT.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSISVRT.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSISVRT.D -
        NEWNM(MSOPS.MSOAC.DSISVRT.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSISVRT.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSISVRT.INDEX -
        NEWNM(MSOPS.MSOAC.DSISVRT.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSISVRT.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSISVRT.I -
        NEWNM(MSOPS.MSOAC.DSISVRT.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCP)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCP -
        NEWNM(MSOPS.MSOAC.DSITRCP) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.MSOAC.DSITRCP) -
        PENT(MSOPS.MSOAC.DSITRCP) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCP.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCP.DATA -
        NEWNM(MSOPS.MSOAC.DSITRCP.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCP.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCP.D -
        NEWNM(MSOPS.MSOAC.DSITRCP.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCP.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCP.INDEX -
        NEWNM(MSOPS.MSOAC.DSITRCP.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCP.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCP.I -
        NEWNM(MSOPS.MSOAC.DSITRCP.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCS)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCS -
        NEWNM(MSOPS.MSOAC.DSITRCS) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.MSOAC.DSITRCS) -
        PENT(MSOPS.MSOAC.DSITRCS) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCS.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCS.DATA -
        NEWNM(MSOPS.MSOAC.DSITRCS.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCS.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCS.D -
        NEWNM(MSOPS.MSOAC.DSITRCS.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCS.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCS.INDEX -
        NEWNM(MSOPS.MSOAC.DSITRCS.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.DSITRCS.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.DSITRCS.I -
        NEWNM(MSOPS.MSOAC.DSITRCS.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.STATS)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.STATS -
        NEWNM(MSOPS.MSOAC.STATS) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.MSOAC.STATS) -
        PENT(MSOPS.MSOAC.STATS) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.STATS.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.STATS.DATA -
        NEWNM(MSOPS.MSOAC.STATS.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.STATS.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.STATS.D -
        NEWNM(MSOPS.MSOAC.STATS.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.STATS.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.STATS.INDEX -
        NEWNM(MSOPS.MSOAC.STATS.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.MSOAC.STATS.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.MSOAC.STATS.I -
        NEWNM(MSOPS.MSOAC.STATS.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.MSOPS.SHARED.IPLDATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.SHARED.IPLDATA -
        NEWNM(MSOPS.SHARED.IPLDATA) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.MSOPS.SHARED.IPLDATA) -
        PENT(MSOPS.SHARED.IPLDATA) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.SHARED.IPLDATA.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.SHARED.IPLDATA.DATA -
        NEWNM(MSOPS.SHARED.IPLDATA.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.SHARED.IPLDATA.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.SHARED.IPLDATA.D -
        NEWNM(MSOPS.SHARED.IPLDATA.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.SHARED.IPLDATA.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.SHARED.IPLDATA.INDEX -
        NEWNM(MSOPS.SHARED.IPLDATA.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.MSOPS.SHARED.IPLDATA.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.MSOPS.SHARED.IPLDATA.I -
        NEWNM(MSOPS.SHARED.IPLDATA.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.PAGE.EXMP.COMMON)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.COMMON -
        NEWNM(PAGE.EXMP.COMMON) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.COMMON.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.COMMON.DATA -
        NEWNM(PAGE.EXMP.COMMON.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.COMMON.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.COMMON.D -
        NEWNM(PAGE.EXMP.COMMON.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.COMMON.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.COMMON.INDEX -
        NEWNM(PAGE.EXMP.COMMON.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.COMMON.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.COMMON.I -
        NEWNM(PAGE.EXMP.COMMON.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.PAGE.EXMP.LOCAL1)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.LOCAL1 -
        NEWNM(PAGE.EXMP.LOCAL1) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.LOCAL1.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.LOCAL1.DATA -
        NEWNM(PAGE.EXMP.LOCAL1.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.LOCAL1.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.LOCAL1.D -
        NEWNM(PAGE.EXMP.LOCAL1.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.LOCAL1.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.LOCAL1.INDEX -
        NEWNM(PAGE.EXMP.LOCAL1.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.LOCAL1.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.LOCAL1.I -
        NEWNM(PAGE.EXMP.LOCAL1.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.PAGE.EXMP.PLPA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.PLPA -
        NEWNM(PAGE.EXMP.PLPA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.PLPA.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.PLPA.DATA -
        NEWNM(PAGE.EXMP.PLPA.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.PLPA.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.PLPA.D -
        NEWNM(PAGE.EXMP.PLPA.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.PLPA.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.PLPA.INDEX -
        NEWNM(PAGE.EXMP.PLPA.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.PAGE.EXMP.PLPA.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.PAGE.EXMP.PLPA.I -
        NEWNM(PAGE.EXMP.PLPA.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.SMPE.GLOBAL.CSI)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.GLOBAL.CSI -
        NEWNM(SMPE.GLOBAL.CSI) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.SMPE.GLOBAL.CSI) -
        PENT(SMPE.GLOBAL.CSI) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.GLOBAL.CSI.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.GLOBAL.CSI.DATA -
        NEWNM(SMPE.GLOBAL.CSI.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.GLOBAL.CSI.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.GLOBAL.CSI.D -
        NEWNM(SMPE.GLOBAL.CSI.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.GLOBAL.CSI.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.GLOBAL.CSI.INDEX -
        NEWNM(SMPE.GLOBAL.CSI.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.GLOBAL.CSI.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.GLOBAL.CSI.I -
        NEWNM(SMPE.GLOBAL.CSI.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.SMPE.MVS.DLIB.CSI)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.DLIB.CSI -
        NEWNM(SMPE.MVS.DLIB.CSI) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.SMPE.MVS.DLIB.CSI) -
        PENT(SMPE.MVS.DLIB.CSI) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.DLIB.CSI.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.DLIB.CSI.DATA -
        NEWNM(SMPE.MVS.DLIB.CSI.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.DLIB.CSI.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.DLIB.CSI.D -
        NEWNM(SMPE.MVS.DLIB.CSI.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.DLIB.CSI.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.DLIB.CSI.INDEX -
        NEWNM(SMPE.MVS.DLIB.CSI.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.DLIB.CSI.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.DLIB.CSI.I -
        NEWNM(SMPE.MVS.DLIB.CSI.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(PRIME.SMPE.MVS.TARGET.CSI)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.TARGET.CSI -
        NEWNM(SMPE.MVS.TARGET.CSI) -
        CAT(PRIME14.USERCAT)
   DEFINE PATH( -
        NAME(PRIME.SMPE.MVS.TARGET.CSI) -
        PENT(SMPE.MVS.TARGET.CSI) ) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.TARGET.CSI.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.TARGET.CSI.DATA -
        NEWNM(SMPE.MVS.TARGET.CSI.DATA) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.TARGET.CSI.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.TARGET.CSI.D -
        NEWNM(SMPE.MVS.TARGET.CSI.D) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.TARGET.CSI.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.TARGET.CSI.INDEX -
        NEWNM(SMPE.MVS.TARGET.CSI.INDEX) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(PRIME.SMPE.MVS.TARGET.CSI.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        PRIME.SMPE.MVS.TARGET.CSI.I -
        NEWNM(SMPE.MVS.TARGET.CSI.I) -
        CAT(PRIME14.USERCAT)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.SYS1.DFSMS.ACDS)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.ACDS -
        NEWNM(SYS1.DFSMS.ACDS) -
        CAT(CATALOG.C14.MASTER)
   DEFINE PATH( -
        NAME(MASTER.SYS1.DFSMS.ACDS) -
        PENT(SYS1.DFSMS.ACDS) ) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.ACDS.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.ACDS.DATA -
        NEWNM(SYS1.DFSMS.ACDS.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.ACDS.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.ACDS.D -
        NEWNM(SYS1.DFSMS.ACDS.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.ACDS.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.ACDS.INDEX -
        NEWNM(SYS1.DFSMS.ACDS.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.ACDS.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.ACDS.I -
        NEWNM(SYS1.DFSMS.ACDS.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.SYS1.DFSMS.COMMDS)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.COMMDS -
        NEWNM(SYS1.DFSMS.COMMDS) -
        CAT(CATALOG.C14.MASTER)
   DEFINE PATH( -
        NAME(MASTER.SYS1.DFSMS.COMMDS) -
        PENT(SYS1.DFSMS.COMMDS) ) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.COMMDS.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.COMMDS.DATA -
        NEWNM(SYS1.DFSMS.COMMDS.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.COMMDS.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.COMMDS.D -
        NEWNM(SYS1.DFSMS.COMMDS.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.COMMDS.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.COMMDS.INDEX -
        NEWNM(SYS1.DFSMS.COMMDS.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.COMMDS.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.COMMDS.I -
        NEWNM(SYS1.DFSMS.COMMDS.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.SYS1.DFSMS.SCDS)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.SCDS -
        NEWNM(SYS1.DFSMS.SCDS) -
        CAT(CATALOG.C14.MASTER)
   DEFINE PATH( -
        NAME(MASTER.SYS1.DFSMS.SCDS) -
        PENT(SYS1.DFSMS.SCDS) ) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.SCDS.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.SCDS.DATA -
        NEWNM(SYS1.DFSMS.SCDS.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.SCDS.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.SCDS.D -
        NEWNM(SYS1.DFSMS.SCDS.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.SCDS.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.SCDS.INDEX -
        NEWNM(SYS1.DFSMS.SCDS.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.DFSMS.SCDS.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.DFSMS.SCDS.I -
        NEWNM(SYS1.DFSMS.SCDS.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

  ALTER -
      MASTER.SYS1.IODF00.CLUSTER -
      NEWNM(SYS1.IODF00.CLUSTER) -
    CAT(CATALOG.C14.MASTER)
  ALTER -
      MASTER.SYS1.IODF00 -
      NEWNM(SYS1.IODF00) -
      CAT(CATALOG.C14.MASTER)
  IF LASTCC = 0 THEN -
      DEFINE PATH( -
        NAME(MASTER.SYS1.IODF00.CLUSTER) -
        PENT(SYS1.IODF00.CLUSTER) ) -
        CAT(CATALOG.C14.MASTER)
  IF MAXCC NE 0 THEN CANCEL

 LISTCAT ENTRY(MASTER.SYS1.MAN1)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN1 -
        NEWNM(SYS1.MAN1) -
        CAT(CATALOG.C14.MASTER)
   DEFINE PATH( -
        NAME(MASTER.SYS1.MAN1) -
        PENT(SYS1.MAN1) ) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN1.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN1.DATA -
        NEWNM(SYS1.MAN1.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN1.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN1.D -
        NEWNM(SYS1.MAN1.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN1.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN1.INDEX -
        NEWNM(SYS1.MAN1.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN1.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN1.I -
        NEWNM(SYS1.MAN1.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.SYS1.MAN2)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN2 -
        NEWNM(SYS1.MAN2) -
        CAT(CATALOG.C14.MASTER)
   DEFINE PATH( -
        NAME(MASTER.SYS1.MAN2) -
        PENT(SYS1.MAN2) ) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN2.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN2.DATA -
        NEWNM(SYS1.MAN2.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN2.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN2.D -
        NEWNM(SYS1.MAN2.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN2.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN2.INDEX -
        NEWNM(SYS1.MAN2.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN2.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN2.I -
        NEWNM(SYS1.MAN2.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0


 LISTCAT ENTRY(MASTER.SYS1.MAN3)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN3 -
        NEWNM(SYS1.MAN3) -
        CAT(CATALOG.C14.MASTER)
   DEFINE PATH( -
        NAME(MASTER.SYS1.MAN3) -
        PENT(SYS1.MAN3) ) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN3.DATA)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN3.DATA -
        NEWNM(SYS1.MAN3.DATA) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN3.D)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN3.D -
        NEWNM(SYS1.MAN3.D) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN3.INDEX)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN3.INDEX -
        NEWNM(SYS1.MAN3.INDEX) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

 LISTCAT ENTRY(MASTER.SYS1.MAN3.I)
 IF LASTCC EQ 0 THEN DO
   ALTER -
        MASTER.SYS1.MAN3.I -
        NEWNM(SYS1.MAN3.I) -
        CAT(CATALOG.C14.MASTER)
   IF MAXCC NE 0 THEN CANCEL
 END
 SET MAXCC=0

/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALTVSAM),(4000,LT))
./ ADD NAME=H0CBCP   0114-04350-04350-1300-00058-00069-00000-HOWTO
z/OS 1.4 BCP

If  you  plan  to use msys on the target system, be aware that you will
not be able to SMS-manage the target system's MIGLIB  or  NUCLEUS  data
sets.

ACTIVATING SMCS CONSOLE SUPPORT

SMCS  Console  support  is  partially  set  up  in the H1RACTGT job, the
shipped VTAMLST  data  set  and  the  shipped  EXMP.PARMLIB  data  set.
However,  you must specify certain parameters in the CONSOLxx member of
parmlib to fully activate this support.

For the required parameters, see the IEACONxx  member  of  the  SAMPLIB
data  set.  The comments in this sample include 'SMCS' where parameters
needed for SMCS Console support are specified.

For more information, see the following:

o   The topic on "SMCS Console Considerations" in  z/OS  MVS  Planning:
    Operations

o   The  description  of member CONSOLxx in z/OS MVS Initialization and
    Tuning Reference


ACTIVATING A SAMPLE WLM POLICY

Optional job H3IWMINS as provided  in  the  installation  dialog  (also
found  in  SAMPLIB) allows you to load and activate a sample policy for
Workload Manager (WLM).

H3IWMINS is not included for software upgrade installations.

If you want to use H3IWMINS, you must run the job on the target system.

For instructions on using this job, see the job prolog.


z/OS 1.4 IPCS

EDITING THE BLSCDDIR CLIST

You can  edit  the  BLSCDDIR CLIST  to  change  the  dump
directory  default  values,   such   as   the  following:

o   Dump directory name
o   Dump directory size
o   Dump directory volume.

Review the CLIST BLSCDDIR in SYS1.SBLSCLI0 and  customize
it for your environment.  At a minimum, change the VOLUME
parameter to a volume serial that is appropriate for your
installation.

For   more   information   about  customizing  IPCS,  see
Interactive Problem Control System (IPCS) Customization.

./ ADD NAME=H0DICSF  0114-04350-04350-1300-00040-00042-00000-HOWTO


z/OS 1.4 Cryptographic Services ICSF
___________________________________________


H4CSFALC JOB

The H4CSFALC job defines the VSAM CKDS and PKDS for use with ICSF.

H4CSFALC  is optional.  If you do not plan to use ICSF, do not run this
job and remove the COM='S CSFSTART' entry from COMMND00.


H5CSFSET JOB

The H5CSFSET job uses a pass phrase value to load the DES and PKA
master keys.

H5CSFSET is intended for full system replacement installations only.

ICSF  must  be  started  before  you can run H5CSFSET.   If ICSF is not
active, you can use the following command to start ICSF:

  'S CSFSTART'

Run H5CSFSET on the target system.  The job runs successfully  only  if
the target system has the required hardware support.

H5CSFSET provides only limited ICSF function.   For full function ICSF,
you  must modify the job to meet your installation's requirements.  For
example, you must change the pass phrase to a  unique  value  for  your
installation.

For more information about setting up ICSF, see the instructions in the
job, and the following publications:

o   z/OS ICSF Administrator's Guide, SA22-7521,
o   z/OS ICSF System Programmer's Guide, SA22-7520.

./ ADD NAME=H0EBDT   0114-04350-04350-1300-00041-00046-00000-HOWTO


z/OS 1.4 BDT


Perform the following steps to activate BDT.  These steps are described
in  more detail in BDT Installation.  All samples are
in the SBDTSAMP library.


o   Update SYS1.VTAMLST as shown in the BDT$VTAM member of the SBDTSAMP
    library to define a VTAM application to support BDT.

o   Run the BDTTQBCH utility program as shown in the BDT$TQFM member of
    the  SBDTSAMP  library,  or  use  the  HBD6602E job provided in the
    Installation Dialog to format:

    -   TQI checkpointing and bitmap data sets
    -   Message data set for each processor.

o   Create the BDT Initialization stream:


o   You must create the BDT authorization user exits  as  described  in
    BDT Installation.  There are sample  exits  in the  SBDTSAMP
    library:

    -   BDT$UX25
    -   BDT$UX26
    -   BDT$UX27
    -   BDT$UX28
    -   BDT$UX29
    -   BDT$UX31

    After modifying  the  samples  to  meet  your  local  authorization
    requirements,   assemble  and  link  exits  into  the  proper  load
    libraries.  If you already have BDT exits from a previous level  of
    BDT, they must be reassembled to work with the new level of BDT.



./ ADD NAME=H0FFFST  0114-04350-04350-1300-00026-00023-00000-HOWTO
z/OS 1.4 FFST


SYSTEM CONSIDERATIONS - CICS

You must run a link-edit job for FFST if CICS is to be used with  FFST.

Run  job HFST101H, supplied in the Installation Dialog (EPW12011 in the
Program Directory).  This job takes the partially-linked load modules
in the target library and links the rest of the necessary modules into
them to create an executable program library for CICS.  Note that
IEW2646W and IEW2651W messages may be generated while running this job
indicating that there is a mismatch between the RMODE and AMODE values.
These messages can be ignored.

MVS POST DUMP EXIT (IEAVTSEL)

PTF UQ08069 (APAR PN40734) adds a new feature to FFST.  It utilizes the
MVS/ESA Post Dump Exit facility (IEAVTSEL) to trip an FFST software
probe when this user exit is called by MVS.  This new facility will
provide FFST support when an SVC dump or SYSMDUMP is taken by an
authorized product.

To  install and activate this function, you need to refer to Appendix B
in the FFST/MVS Operations Guide, SC31-8604.

./ ADD NAME=H1RACTGT 0114-04350-04350-1300-01940-01940-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*   JOB: H1RACTGT
//*
//*   DOC: YOU SHOULD REVIEW THIS JOB BEFORE RUNNING IT, AND MODIFY
//*        PARAMETERS TO MEET YOUR SECURITY REQUIREMENTS.
//*
//*        THIS JOB WILL ACTIVATE GENERIC PROFILE AND
//*        GENERIC CLASS COMMAND CHECKING; CREATE RACF
//*        PROFILES FOR DATASET HIGH LEVEL QUALIFIERS
//*        IN THE ORDER; ACTIVATES THE STARTED FACILITY
//*        CLASS AND CREATE PROFILES FOR STARTED TASKS;
//*
//*        FOR Z/OS ORDERS THIS JOB CREATES STARTED PROCEDURE
//*        PROFILES FOR SYSTEM LOGGER, USS, OCSF AND IBM LICENSE
//*        MANAGER AND CREATES REQUIRED DATASET PROFILES FOR
//*        THESE PRODUCTS.
//*
//*   REQUIRED CHANGES:
//*
//*      Change the following to the names on your system:
//*
//*
//*      Update the names of the following couple datasets:
//*
//*             SYS1.XCF.*
//*             SYS1.WLM.*
//*             SYS1.LOGR.*
//*
//*
//*   EXPECTED MESSAGES:
//*
//*      IF YOU RUN THIS JOB ON THE DRIVING SYSTEM USING A SHARED
//*      RACF DATABASE, EXPECT ICH01002I MESSAGES WHEN DEFINING
//*      USERIDS WITH BOTH NOPASSWORD AND NOOIDCARD IF THE
//*      DRIVING SYSTEM IS NOT AT AN OS/390 R8 OR HIGHER LEVEL.
//*      IF YOU GET THESE MESSAGES, THEN ISSUE ALTUSER COMMANDS
//*      WITH THE NOPASSWORD OPERAND FROM THE TARGET SYSTEM AFTER
//*      THE TARGET SYSTEM HAS BEEN IPLED AND THE RACF TEMPLATES
//*      HAVE BEEN UPDATED TO MAKE THE USER IDS PROTECTED.
//*
//*      EXPECT VARIOUS INFORMATIONAL MESSAGES IF PROFILES HAVE
//*      ALREADY BEEN DEFINED TO YOUR SYSTEM. YOU MAY WANT
//*      USE AN ALTGROUP, ALTUSER TO SET UP THE PROFILE IF
//*      IT ALREADY EXISTS.
//*      (IKJ56702I, IKJ56701I, ICH09004I)
//*
//*                       IMPORTANT
//*
//*  YOU MUST REVIEW THE CONTENTS OF THIS JOB BEFORE SUBMITTING IT.
//*  H1RACTGT CONTAINS EXAMPLE DEFINITIONS; RUNNING IT UNCHANGED ON
//*  AN EXISTING SYSTEM MIGHT RESULT IN AN OUTAGE OR SIGNIFICANT
//*  REWORK FOR YOU, DEPENDING ON YOUR INSTALLATION'S CURRENT SECURITY
//*  DEFINITIONS.
//*
//*  AS SHIPPED, THE H1RACTGT JOB RESTRICTS THE USE OF SOME FACILITIES
//*  AND DATA SETS, AND MIGHT CHANGE THE USER IDS USED FOR STARTED
//*  TASKS AND THEIR AUTHORIZATIONS.  THESE CHANGES CAN CAUSE EXISTING
//*  USERS AND SYSTEM TASKS TO LOSE AUTHORIZATION TO SYSTEM RESOURCES.
//*
//*  REVIEW THIS JOB PRIOR TO SUBMISSION AND MODIFY IT AS NEEDED TO
//*  ENSURE THAT THE OPTIONS IT SETS AND THE PROFILES IT DEFINES ARE
//*  WORKABLE IN YOUR ENVIRONMENT AND CONSISTENT WITH YOUR
//*  INSTALLATION'S SECURITY PRACTICES.
//*
//*   MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 00
//*
//*   NOTES:
//*
//*      REVIEW THE JOB OUTPUT TO ENSURE YOUR SECURITY
//*      OBJECTIVES HAVE BEEN MET.
//*
//*      IF YOU DID NOT RECEIVE RETURN CODE 00 CHECK THE
//*      DYNAMIC PARSE STEP.
//*
//*      THIS JOB MUST BE RUN FROM A USERID WITH THE RACF
//*      SPECIAL ATTRIBUTE.
//*
//*      THE JOB WAS SET UP WITH A DEFAULT USERID OF IBMUSER
//*      AND SHOULD BE MODIFIED TO AN ID APPROPRIATE FOR YOUR
//*      INSTALLATION.
//*
//H1RACTGT  EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSTSIN  DD  *
  PROF MSGID WTPMSG
SETROPTS +
        GENERIC(*) +
        GENCMD(*) +
   CLASSACT(FACILITY +
        DIGTRING +
        DIGTCERT +
        UNIXPRIV +
        DIGTCRIT +
        LOGSTRM  +
        STARTED) +
   RACLIST(FACILITY +
        UNIXPRIV +
        DIGTCERT +
        DIGTCRIT +
        DIGTRING +
        LOGSTRM  +
        STARTED)
RACDCERT +
  ALTER( +
  LABEL('Verisign Class 3 Primary CA')) +
  TRUST +
  CERTAUTH
RACDCERT +
  ADDRING(SecureFTPKeyRing) +
  ID(IBMUSER)
RACDCERT +
  CONNECT +
  (CERTAUTH +
  RING(SecureFTPKeyRing) +
  LABEL('Verisign Class 3 Primary CA') +
  USAGE(CERTAUTH)) +
  ID(IBMUSER)
ADDGROUP +
     AOP +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(AOP) +
   AUTH(JOIN)
AD +
     'AOP.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'AOP.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ASM +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ASM) +
   AUTH(JOIN)
AD +
     'ASM.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ASM.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ASU +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ASU) +
   AUTH(JOIN)
AD +
     'ASU.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ASU.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     BDT1 +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BDT1) +
   AUTH(JOIN)
AD +
     'BDT1.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'BDT1.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     BPA +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BPA) +
   AUTH(JOIN)
AD +
     'BPA.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'BPA.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     CBC +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CBC) +
   AUTH(JOIN)
AD +
     'CBC.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'CBC.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     CDS +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CDS) +
   AUTH(JOIN)
AD +
     'CDS.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'CDS.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     CEE +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CEE) +
   AUTH(JOIN)
AD +
     'CEE.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'CEE.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     CIM +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CIM) +
   AUTH(JOIN)
AD +
     'CIM.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'CIM.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     CMX +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CMX) +
   AUTH(JOIN)
AD +
     'CMX.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'CMX.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EXMP +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EXMP) +
   AUTH(JOIN)
AD +
     'EXMP.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EXMP.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     CSF +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CSF) +
   AUTH(JOIN)
AD +
     'CSF.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'CSF.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ECN +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ECN) +
   AUTH(JOIN)
AD +
     'ECN.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ECN.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EOX +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EOX) +
   AUTH(JOIN)
AD +
     'EOX.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EOX.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EOY +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EOY) +
   AUTH(JOIN)
AD +
     'EOY.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EOY.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EPH +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EPH) +
   AUTH(JOIN)
AD +
     'EPH.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EPH.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EQAW +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EQAW) +
   AUTH(JOIN)
AD +
     'EQAW.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EQAW.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EUV +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EUV) +
   AUTH(JOIN)
AD +
     'EUV.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EUV.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     EUVF +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EUVF) +
   AUTH(JOIN)
AD +
     'EUVF.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'EUVF.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     FFST +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(FFST) +
   AUTH(JOIN)
AD +
     'FFST.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'FFST.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     GDDM +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GDDM) +
   AUTH(JOIN)
AD +
     'GDDM.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'GDDM.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     GIM +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GIM) +
   AUTH(JOIN)
AD +
     'GIM.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'GIM.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     GLD +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GLD) +
   AUTH(JOIN)
AD +
     'GLD.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'GLD.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     GSK +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GSK) +
   AUTH(JOIN)
AD +
     'GSK.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'GSK.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     HCM +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(HCM) +
   AUTH(JOIN)
AD +
     'HCM.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'HCM.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ICA +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ICA) +
   AUTH(JOIN)
AD +
     'ICA.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ICA.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ICQ +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ICQ) +
   AUTH(JOIN)
AD +
     'ICQ.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ICQ.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     IMO +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IMO) +
   AUTH(JOIN)
AD +
     'IMO.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'IMO.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     IMW +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IMW) +
   AUTH(JOIN)
AD +
     'IMW.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'IMW.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ING +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ING) +
   AUTH(JOIN)
AD +
     'ING.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ING.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     IOA +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IOA) +
   AUTH(JOIN)
AD +
     'IOA.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'IOA.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     IOE +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IOE) +
   AUTH(JOIN)
AD +
     'IOE.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'IOE.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ISF +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ISF) +
   AUTH(JOIN)
AD +
     'ISF.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ISF.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     ISP +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ISP) +
   AUTH(JOIN)
AD +
     'ISP.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'ISP.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     JAVA +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(JAVA) +
   AUTH(JOIN)
AD +
     'JAVA.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'JAVA.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     MSOPS +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(MSOPS) +
   AUTH(JOIN)
AD +
     'MSOPS.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'MSOPS.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     NETVIEW +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(NETVIEW) +
   AUTH(JOIN)
AD +
     'NETVIEW.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'NETVIEW.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     OMVS +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(OMVS) +
   AUTH(JOIN)
AD +
     'OMVS.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'OMVS.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     PAGE +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(PAGE) +
   AUTH(JOIN)
AD +
     'PAGE.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'PAGE.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     SMPE +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(SMPE) +
   AUTH(JOIN)
AD +
     'SMPE.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'SMPE.*' +
     ID(IBMUSER) +
     ACC(ALTER)
CONNECT +
   IBMUSER +
   GROUP(SYS1) +
   AUTH(JOIN)
AD +
     'SYS1.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'SYS1.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     TCPIP +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TCPIP) +
   AUTH(JOIN)
AD +
     'TCPIP.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'TCPIP.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     TCPIVP +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TCPIVP) +
   AUTH(JOIN)
AD +
     'TCPIVP.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'TCPIVP.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     PRIME +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(PRIME) +
   AUTH(JOIN)
AD +
     'PRIME.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'PRIME.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     HFSCAT +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(HFSCAT) +
   AUTH(JOIN)
AD +
     'HFSCAT.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'HFSCAT.*' +
     ID(IBMUSER) +
     ACC(ALTER)
ADDGROUP +
     MASTER +
     SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(MASTER) +
   AUTH(JOIN)
AD +
     'MASTER.*' +
     GENERIC +
     OWNER(IBMUSER) +
     UACC(READ)
PE +
     'MASTER.*' +
     ID(IBMUSER) +
     ACC(ALTER)
AD +
    'SYS1.RACF' +
     UACC(NONE)
AD +
    'SYS1.RACFSEC' +
     UACC(NONE)
SETROPTS +
   CLASSACT(LOGSTRM  +
                  CSFSERV  +
                  TSOAUTH  +
                  STARTED) +
  RACLIST(LOGSTRM   +
                  CSFSERV  +
                  TSOAUTH  +
                  STARTED) +
  WHEN(PROGRAM)
RDEFINE +
  FACILITY +
  IRRDPI00 +
  UACC(NONE)
RDEFINE +
  UNIXPRIV +
  SUPERUSER.FILESYS.PFSCTL +
  UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ADD +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ADDRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ALTER +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ALTMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.CHECKCERT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.CONNECT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELETE +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.EXPORT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.EXPORTKEY +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.GENCERT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.GENREQ +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LIST +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LISTMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LISTRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.MAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.REMOVE +
    UACC(NONE)
PERMIT +
  IRRDPI00 +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACCESS(READ)
PERMIT +
  SUPERUSER.FILESYS.PFSCTL +
  CLASS(UNIXPRIV) +
  ID(IBMUSER) +
  ACCESS(READ)
PERMIT +
    IRR.DIGTCERT.ADD +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.ADD +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.ADDRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.ADDRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.ALTER +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.ALTER +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.ALTMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.ALTMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.CHECKCERT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.CHECKCERT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.CONNECT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.CONNECT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.DELETE +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.DELETE +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.DELMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.DELMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.DELRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.DELRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.EXPORT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.EXPORT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.EXPORTKEY  +
    CLASS(FACILITY) +
    ID(*)  +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.EXPORTKEY +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.GENCERT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.GENCERT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.GENREQ +
    CLASS(FACILITY)+
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.GENREQ +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.LIST +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.LIST +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PERMIT +
    IRR.DIGTCERT.LISTMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.LISTMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.LISTRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.LISTRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.MAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.MAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PERMIT +
    IRR.DIGTCERT.REMOVE +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PERMIT +
    IRR.DIGTCERT.REMOVE +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
SETROPTS RACLIST(FACILITY  +
                 DIGTCERT  +
                 DIGTCRIT  +
                 DIGTRING  +
                 LOGSTRM   +
                 STARTED   +
                 UNIXPRIV) +
                 REFRESH
//***************************************************
//*    DYNAMIC PARSE ACTIVATION STEP
//***************************************************
//IRRDPTAB EXEC PGM=IKJEFT1B,REGION=1M,
//         PARM='IRRDPI00 UPDATE'
//SYSTSPRT DD  SYSOUT=*
//SYSUT1   DD  DSN=SYS1.SAMPLIB(IRRDPSDS),DISP=SHR
//SYSTSIN  DD  DUMMY
//***************************************************
//***************************************************
//H1RACTGT1 EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSTSIN  DD  *
ALTGROUP +
   SYS1 +
   OMVS(GID(2))
ADDGROUP +
   OMVSGRP +
   OMVS(GID(1))
ADDGROUP +
   DFSGRP +
   SUPGROUP(SYS1) +
   OMVS(GID(2))
PE 'OMVS.*' +
    ID(DFS) +
    ACC(ALTER)
ADDGROUP  +
  TTY  +
  OMVS(GID(2))
ADDGROUP  +
  UUCPG  +
  OMVS(GID(8765))
ADDUSER +
  UUCP +
  DFLTGRP(UUCPG) +
  OMVS(UID(396) +
  HOME('/usr/spool/uucppublic') +
  PROGRAM('/bin/sh'))
ADDGROUP +
  STCGRP +
  OMVS(GID(2)) +
  SUPGROUP(SYS1)
ADDGROUP +
  IMWEB +
  OMVS(GID(205)) +
  SUPGROUP(SYS1)
AD  +
   'SYS1.XCF.*'  +
   UACC(READ)
AD  +
   'SYS1.WLM.*'  +
   UACC(READ)
AD  +
   'SYS1.LOGR.*'  +
   UACC(READ)
RDEFINE +
   PROGRAM ** +
   ADDMEM ('CEE.SCEERUN'//NOPADCHK +
           'CBC.SCBCCMP'//NOPADCHK +
           'CBC.SCLBDLL'//NOPADCHK +
           'CSF.SCSFMOD0'//NOPADCHK +
           'CSF.SCSFMOD1'//NOPADCHK +
           'ICA.SICALMOD'//NOPADCHK +
           'IOE.SIOELMOD'//NOPADCHK +
           'SYS1.CSSLIB'//NOPADCHK +
           'GLD.SGLDLNK'//NOPADCHK +
           'GSK.SGSKLOAD'//NOPADCHK +
           'DSN810.SDSNEXIT'//NOPADCHK +
           'DSN810.SDSNLOAD'//NOPADCHK +
           'SYS1.LINKLIB'//NOPADCHK +
           'TCPIP.SEZALOAD'//NOPADCHK) +
   UACC(READ)
RDEFINE +
   FACILITY IRRDPI00 +
   UACC(NONE)
RDEFINE +
   FACILITY CDS.CSSM +
   UACC(NONE)
RDEFINE +
   FACILITY CDS.CSSM.DATALIB +
   UACC(NONE)
RDEFINE +
   FACILITY CDS.CSSM.CRYPTO +
   UACC(NONE)
RDEFINE +
   FACILITY BPX.FILEATTR.APF +
   UACC(NONE)
RDEFINE +
   FACILITY BPX.FILEATTR.PROGCTL +
   UACC(NONE)
RDEFINE +
   FACILITY BPX.FILEATTR.SHARELIB +
   UACC(NONE)
RDEFINE +
   FACILITY BPX.SERVER +
   UACC(NONE)
RDEFINE +
   FACILITY BPX.DAEMON +
   UACC(NONE)
RDEFINE +
   FACILITY BPX.SUPERUSER +
   UACC(NONE)
RDEFINE +
   FACILITY MVSADMIN.LOGR +
   UACC(NONE)
RDEFINE +
   LOGSTRM SYSPLEX.OPERLOG +
   UACC(NONE)
RDEFINE +
   LOGSTRM SYSPLEX.LOGREC.ALLRECS +
   UACC(NONE)
ALTUSER +
   IBMUSER +
   OMVS(UID(0) +
   HOME('/') +
   ASSIZEMAX(268435456) +
   PROGRAM('/bin/sh'))
ADDUSER +
   OMVSKERN +
   DFLTGRP(OMVSGRP) +
   OMVS(UID(0) +
   HOME('/') +
   PROGRAM('/bin/sh'))  +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   VLF  +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   ZFS  +
   DFLTGRP(STCGRP) +
   OMVS(HOME(/opt/dfslocal/home/dfscntl) UID(0))
ADDUSER +
   WEBADM +
   DFLTGRP(IMWEB) +
   OMVS(UID(206) +
   HOME('/usr/lpp/internet') +
   PROGRAM('/bin/sh'))
ADDUSER +
   WEBSRV +
   DFLTGRP(IMWEB) +
   OMVS(UID(0) +
   HOME('/usr/lpp/internet') +
   PROGRAM('/bin/sh'))
ADDUSER +
   IRRDPTAB +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   IEEVMPCR +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   APSWPROC +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   BPXOINIT +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   RACF +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   XCFAS +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   IXGLOGR +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   DUMPSRV +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   IOSAS +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   SMF +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   WLM +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   JESXCF +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   ANTMAIN +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   CATALOG  +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   VTAM +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   MSOAPROC +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   HSAPIPLC +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   JES2 +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   JES3 +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   BLSJPRMI +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   SMS +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   EZAZSSI +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   ANTAS000 +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   INIT +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   TNF +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   VMCF +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   TCAS +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   LLA +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   FTPD +
   DFLTGRP(STCGRP) +
   OMVS(UID(0) +
   HOME('/') +
   PROGRAM('/bin/sh')) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   SYSLOGD +
   DFLTGRP(STCGRP) +
   OMVS(UID(0) +
   HOME('/') +
   PROGRAM('/bin/sh')) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER +
   TCPSTC +
   DFLTGRP(STCGRP) +
   OMVS(UID(0) +
   HOME('/') +
   PROGRAM('/bin/sh')) +
   NOPASSWORD +
   NOOIDCARD
ADDUSER SMFCLEAR DFLTGRP(SYS1)
CONNECT SMFCLEAR GROUP(STCGRP)
PE SYS1.* ID(SMFCLEAR) ACC(CONTROL)
ADDUSER SMFDUMP DFLTGRP(SYS1)
CONNECT SMFDUMP GROUP(STCGRP)
PE SYS1.* ID(SMFDUMP) ACC(CONTROL)
CONNECT VLF +
   GROUP(SYS1) +
   AUTH(USE)
CONNECT  +
   ZFS +
   GROUP(DFSGRP) +
   AUTH(CREATE)
CONNECT IRRDPTAB +
   GROUP(SYS1) +
   AUTH(USE)
CONNECT IEEVMPCR +
   GROUP(SYS1) +
   AUTH(USE)
CONNECT APSWPROC +
   GROUP(SYS1) +
   AUTH(USE)
CONNECT BPXOINIT +
   GROUP(SYS1) +
   AUTH(USE)
CONNECT RACF +
   GROUP(SYS1) +
   AUTH(USE)
CONNECT RACF +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT TCPSTC +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT XCFAS +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT IXGLOGR +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT DUMPSRV +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT IOSAS +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT SMF +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT WLM +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT JESXCF +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT ANTMAIN +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT CATALOG +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT VTAM +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT JES2 +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT MSOAPROC +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT HSAPIPLC +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT JES3 +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT BLSJPRMI +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT SMS +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT EZAZSSI +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT ANTAS000 +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT INIT +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT TNF +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT VMCF +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT TCAS +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT LLA +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT FTPD +
   GROUP(STCGRP) +
   AUTH(USE)
CONNECT SYSLOGD +
   GROUP(STCGRP) +
   AUTH(USE)
RDEFINE +
   STARTED +
   JES2.* +
   STDATA( +
      USER(JES2) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   JES3.* +
   STDATA( +
      USER(JES3) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   VTAM.* +
   STDATA( +
      USER(VTAM) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   IEEVMPCR.* +
   STDATA( +
      USER(IEEVMPCR) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   MSOAPROC.* +
   STDATA( +
      USER(MSOAPROC) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   HSAPIPLC.* +
   STDATA( +
      USER(HSAPIPLC) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   IXGLOGR.* +
   STDATA( +
      USER(IXGLOGR) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   APSWPROC.* +
   STDATA( +
      USER(APSWPROC) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   LLA.* +
   STDATA( +
      USER(LLA) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   VLF.* +
   STDATA( +
      USER(VLF) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   SMF.* +
   STDATA( +
      USER(SMF) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   CATALOG.* +
   STDATA( +
      USER(CATALOG) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   DUMPSRV.* +
   STDATA( +
      USER(DUMPSRV) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   IRRDPTAB.* +
   STDATA( +
      USER(IRRDPTAB) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   RACF.* +
   STDATA( +
      USER(RACF) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   WLM.* +
   STDATA( +
      USER(WLM) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   IOSAS.* +
   STDATA( +
      USER(IOSAS) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   JESXCF.* +
   STDATA( +
      USER(JESXCF) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   XCFAS.* +
   STDATA( +
      USER(XCFAS) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   TCPIP.* +
   STDATA( +
      USER(TCPSTC) +
      PRIVILEGED(YES) +
      TRUSTED(YES) +
      GROUP(STCGRP))
RDEFINE +
   STARTED +
   BPXAS.* +
   STDATA( +
      USER(OMVSKERN) +
      GROUP(OMVSGRP))
RDEFINE +
   STARTED +
   OMVS.* +
   STDATA( +
      TRUSTED(YES) +
      USER(OMVSKERN) +
      GROUP(OMVSGRP))
RDEFINE +
   STARTED +
   BPXOINIT.* +
   STDATA( +
      TRUSTED(NO) +
      USER(OMVSKERN) +
      GROUP(OMVSGRP))
RDEFINE +
   STARTED +
   ** +
   STDATA( +
      USER(=MEMBER) +
      GROUP(STCGRP))
ADDUSER +
   CSFSTART +
   DFLTGRP(STCGRP) +
   NOPASSWORD +
   NOOIDCARD
RDEFINE CSFSERV CSFCMK UACC(NONE)
RDEFINE CSFSERV CSFOWH UACC(NONE)
RDEFINE CSFSERV CSFPMCI UACC(NONE)
RDEFINE CSFSERV CSFREFR UACC(NONE)
RDEFINE CSFSERV CSFSMK UACC(NONE)
PE CSFCMK CLASS(CSFSERV) ID(CSFSTART) ACC(READ)
PE CSFOWH CLASS(CSFSERV) ID(CSFSTART) ACC(READ)
PE CSFPMCI CLASS(CSFSERV) ID(CSFSTART) ACC(READ)
PE CSFREFR CLASS(CSFSERV) ID(CSFSTART) ACC(READ)
PE CSFSMK CLASS(CSFSERV) ID(CSFSTART) ACC(READ)
PE 'MSOPS.*' ID(MSOAPROC) ACC(UPDATE)
PE 'MSOPS.*' ID(HSAPIPLC) ACC(UPDATE)
RDEFINE +
  FACILITY +
  MVSADMIN.WLM.POLICY +
  NOTIFY(IBMUSER) +
  UACC(NONE)
RDEFINE +
  FACILITY +
  MVSADMIN.XCF.ARM +
  UACC(NONE)
RDEFINE +
  FACILITY +
  MVSADMIN.XCF.CFRM +
  UACC(NONE)
RDEFINE +
  FACILITY +
  MVSADMIN.XCF.SFM +
  UACC(NONE)
PE +
  MVSADMIN.WLM.POLICY +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(UPDATE)
PE +
  MVSADMIN.XCF.ARM +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(READ)
PE +
  MVSADMIN.XCF.CFRM +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(READ)
PE +
  MVSADMIN.XCF.SFM +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(READ)
RDEFINE +
 TSOAUTH +
 CONSOLE +
 UACC(NONE)
PE +
  CONSOLE +
  CLASS(TSOAUTH) +
  ID(IBMUSER) +
  ACC(UPDATE)
PERMIT +
 CSFCMK +
 CLASS(CSFSERV) +
 ID(IBMUSER) +
 ACCESS(UPDATE)
PERMIT +
 CSFPMCI +
 CLASS(CSFSERV) +
 ID(IBMUSER) +
 ACCESS(UPDATE)
PERMIT +
 CSFOWH  +
 CLASS(CSFSERV) +
 ID(IBMUSER) +
 ACCESS(UPDATE)
PERMIT +
 CSFREFR +
 CLASS(CSFSERV) +
 ID(IBMUSER) +
 ACCESS(UPDATE)
PERMIT +
 CSFSMK +
 CLASS(CSFSERV) +
 ID(IBMUSER) +
 ACCESS(UPDATE)
PE +
   'SYS1.XCF.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'SYS1.WLM.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'SYS1.LOGR.*' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'SYS1.XCF.*' +
   ID(XCFAS) +
   ACC(UPDATE)
PE +
   'SYS1.WLM.*' +
   ID(XCFAS) +
   ACC(UPDATE)
PE +
   'SYS1.LOGR.*' +
   ID(XCFAS) +
   ACC(UPDATE)
PE +
   IRRDPI00 +
   CLASS(FACILITY) +
   ID(RACF) +
   ACC(READ)
PE +
   BPX.FILEATTR.APF +
   CLASS(FACILITY) +
   ID(IBMUSER) +
   ACC(READ)
PE +
   BPX.FILEATTR.PROGCTL +
   CLASS(FACILITY) +
   ID(IBMUSER) +
   ACC(READ)
PE +
   BPX.FILEATTR.SHARELIB +
   CLASS(FACILITY) +
   ID(IBMUSER) +
   ACC(READ)
PE +
   BPX.DAEMON +
   CLASS(FACILITY) +
   ID(STCGRP) +
   ACC(READ)
PE +
   BPX.DAEMON +
   CLASS(FACILITY) +
   ID(WEBSRV) +
   ACC(READ)
PE +
   BPX.SERVER +
   CLASS(FACILITY) +
   ID(WEBSRV) +
   ACC(UPDATE)
PE +
   BPX.SUPERUSER  +
   CLASS(FACILITY)  +
   ID(IBMUSER)  +
   ACC(READ)
PE +
   MVSADMIN.LOGR +
   CLASS(FACILITY) +
   ID(IBMUSER) +
   ACC(UPDATE)
PE +
   SYSPLEX.OPERLOG +
   CLASS(LOGSTRM) +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   SYSPLEX.LOGREC.ALLRECS +
   CLASS(LOGSTRM) +
   ID(IBMUSER) +
   ACC(ALTER)
SETROPTS +
   RACLIST(STARTED FACILITY LOGSTRM) +
   REFRESH
SETROPTS +
   GENERIC(*) +
   REFRESH
SETROPTS +
   WHEN(PROGRAM) +
   REFRESH
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE),(4000,LT))
/*
./ ADD NAME=H2DEFLOG 0114-04350-04350-1300-00051-00051-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*--------------------------------------------------------------------
//* DOC: STEP DEFLOGR DEFINES LOG STREAMS FOR OPERLOG, LOGREC
//*--------------------------------------------------------------------
//DEFLOGR  EXEC PGM=IXCMIAPU,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN     DD *
  DATA TYPE(LOGR) REPORT(YES)
  DEFINE LOGSTREAM
       NAME(SYSPLEX.OPERLOG)
       AUTODELETE(YES)
       DASDONLY(YES)
       MAXBUFSIZE(4096)
       STG_SIZE(500)
       STG_DATACLAS(LOGRSTG)
       STG_STORCLAS(LOGGER)
       LS_SIZE(1000)
       LS_DATACLAS(LOGRLOGS)
       LS_STORCLAS(LOGGER)
       LOWOFFLOAD(0)
       HIGHOFFLOAD(80)
       HLQ(IXGLOGR)
       RETPD(120)
  DEFINE LOGSTREAM
       NAME(SYSPLEX.LOGREC.ALLRECS)
       AUTODELETE(YES)
       DASDONLY(YES)
       MAXBUFSIZE(4096)
       STG_SIZE(500)
       STG_DATACLAS(LOGRSTG)
       STG_STORCLAS(LOGGER)
       LS_SIZE(1000)
       LS_DATACLAS(LOGRLOGS)
       LS_STORCLAS(LOGGER)
       LOWOFFLOAD(0)
       HIGHOFFLOAD(80)
       HLQ(IXGLOGR)
       RETPD(90)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DEFLOGR),(4000,LT))
//*
./ ADD NAME=H3IWMINS 0114-04350-04350-1300-00119-00121-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//*
//* JOB: H3IWMINS (product-supplied job IWMINSTL in library SAMPLIB)
//*
//* DOC: This job loads and activates a sample policy for
//*      Workload Manager (WLM).  The RECEIVE step unpacks the
//*      sample policy and places it in a partitioned data set.
//*      The ACTPOLCY step loads and conditionally activates
//*      the sample policy.
//*
//*  The expected return code for all steps is zero.
//*
//*  Instructions:
//*   Examine the parameters below and update them if necessary
//*   for your installation.  The parameters are:
//*
//*  SVDEFPDS - Data set where the ISPF tables that describe
//*             the WLM service definitions are to reside.
//*             This data set is created from the IWMSSDEF member
//*             of the SAMPLIB data set. After it has been created,
//*             you can use the WLM ISPF dialog to change the service
//*             definitions it contains.
//*             The supplied name is SYS1.WLM.DEF.
//*
//*  FORCE - Specifies whether the sample service definition
//*          should replace your existing service definition.
//*          FORCE='Y' always installs the sample service definition
//*          definition -- regardless of whether you already have one.
//*          FORCE='N' installs the sample service definition
//*          only when there is no existing service definition.
//*
//*          Use FORCE='Y' only if you are certain that you want
//*          to replace your existing policies.
//*          FORCE='N' is set below.
//*
//*  POLNAME - Name of the policy to be activated, depending on
//*            whether there is an existing policy and how the
//*            FORCE parameter is set.  The sample policy name is
//*            WLMPOL.  If POLNAME is not specified, the service
//*            definition is installed, but no policy is activated.
//*-------------------------------------------------------------------
//*
//SETPARM1 SET SVDEFPDS='SYS1.WLM.DEF'
//SETPARM2 SET FORCE='N'
//SETPARM3 SET POLNAME='WLMPOL'
//*----------------------------------------------------
//* The following step unpacks the sample definition.
//*----------------------------------------------------
//RECEIVE  EXEC PGM=IKJEFT01,DYNAMNBR=99
//SYSPRINT  DD SYSOUT=*
//SYSTSPRT  DD SYSOUT=*
//SYSTERM   DD DUMMY
//SAMPLIB   DD DSN=SYS1.SAMPLIB(IWMSSDEF),
//          DISP=SHR
//SYSTSIN   DD *
  PROFILE WTPMSG MSGID
  RECEIVE INDDNAME(SAMPLIB)
  DA('SYS1.WLM.DEF') OLD
  PROFILE
/*
//*--------------------------------------------------------------
//* This step activates the policy if one does not exist, unless
//* the FORCE parameter has been changed to Y .
//*--------------------------------------------------------------
//STEP1     EXEC PGM=IKJEFT1B,
//          PARM='IWMARIDU F=&FORCE P=&POLNAME'
//SYSPROC   DD DSN=SYS1.SBLSCLI0,
//             DISP=SHR
//ISPLLIB   DD DSN=ISP.SISPLPA,
//             DISP=SHR
//          DD DSN=ISP.SISPLOAD,
//             DISP=SHR
//ISPMLIB   DD DSN=ISP.SISPMENU,
//             DISP=SHR
//ISPPLIB   DD DSN=ISP.SISPPENU,
//             DISP=SHR
//ISPTLIB   DD DSN=ISP.SISPTENU,
//             DISP=SHR
//ISPSLIB   DD DSN=ISP.SISPSENU,
//             DISP=SHR
//ISPTABL   DD UNIT=SYSALLDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//          SPACE=(CYL,(1,1,5)),
//          DISP=NEW
//ISPPROF   DD UNIT=SYSALLDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//          SPACE=(CYL,(1,1,5)),
//          DISP=NEW
//ISPLOG    DD UNIT=SYSALLDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//          SPACE=(CYL,(1,1)),
//          DISP=NEW
//ISPCTL1   DD UNIT=SYSALLDA,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//          SPACE=(CYL,(1,1)),
//          DISP=NEW
//ISPLST1   DD UNIT=SYSALLDA,
//          DCB=(RECFM=FBA,LRECL=121,BLKSIZE=1210),
//          SPACE=(CYL,(1,1)),
//          DISP=NEW
//*
//SVDEF     DD DSN=SYS1.WLM.DEF,
//          DISP=SHR
//*
//SYSTSPRT  DD SYSOUT=*
//*
//SYSTSIN   DD DUMMY
//
./ ADD NAME=H4CSFALC 0114-04350-04350-1300-00067-00069-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//*  JOB: H4CSFALC (product-supplied jobs CSFPKDS and CSFCKDS        *
//*                 in library SYS1.SAMPLIB)                         *
//*                                                                  *
//*  DOC: This job allocates the CKDS and PKDS data sets.            *
//*                                                                  *
//*  NOTES:                                                          *
//*                                                                  *
//*   1. Instructions:                                               *
//*                                                                  *
//*       -Modify the PDKS and CKDS data set names if needed to meet *
//*        your installation's requirements.                         *
//*          Note: If you do change the names, you must also change  *
//*                them in the CSFPRM01 member of parmlib and in the *
//*                CSFSTART PROC.                                    *
//*       -If you want the data sets to be SMS-managed delete the    *
//*             VOLUMES keywords and replace them with               *
//*             STORCLASS(storage_class)                             *
//*       -Specify the desired volume in the VOLUMES keywords if you *
//*        will not use SMS to manage the data sets.                 *
//*       -Do NOT change the space allocation amounts for the two    *
//*        data sets.                                                *
//*                                                                  *
//*   2. The expected return code for all steps is zero.             *
//********************************************************************
//ALOCICSF EXEC PGM=IDCAMS,REGION=4M
//SYSPRINT DD  SYSOUT=*
//SYSIN DD *
  DEFINE CLUSTER (NAME(CSF.CSFPKDS)         -
                  VOLUMES(volser)           -
                  RECORDS(100 50)           -
                  RECORDSIZE(350,2800)      -
                  KEYS(72,0)                -
                  FREESPACE(0,0)            -
                  SHAREOPTIONS(2,3))        -
            DATA (NAME(CSF.CSFPKDS.DATA)    -
                  BUFFERSPACE(100000)       -
                  ERASE                     -
                  CISZ(8192)                -
                  WRITECHECK)               -
           INDEX (NAME(CSF.CSFPKDS.INDEX)) -
           CATALOG(CATALOG.C14.MASTER)
  DEFINE CLUSTER (NAME(CSF.CSFCKDS)        -
                  VOLUMES(volser)          -
                  RECORDS(100 50)          -
                  RECORDSIZE(252,252)      -
                  KEYS(72,0)               -
                  FREESPACE(10,10)         -
                  SHAREOPTIONS(2))         -
            DATA (NAME(CSF.CSFCKDS.DATA)   -
                  BUFFERSPACE(100000)      -
                  ERASE                    -
                  WRITECHECK)              -
           INDEX (NAME(CSF.CSFCKDS.INDEX)) -
           CATALOG(CATALOG.C14.MASTER)
/*
./ ADD NAME=H5CSFSET 0114-04350-04350-1300-00030-00032-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//*  JOB: H5CSFSET (product-supplied job CSFSETMK in library         *
//*                  SYS1.SAMPLIB)                                   *
//*                                                                  *
//*  DOC: This job uses a pass phrase value to load DES and PKA      *
//*       master keys.                                               *
//*                                                                  *
//*                                                                  *
//*  Important: Unless you plan to use ICSF ONLY for SMP/E's Receive *
//*       From Network function, you should change the pass phrase   *
//*       below.                                                     *
//*                                                                  *
//*                                                                  *
//*       The expected return code for all steps is zero.            *
//********************************************************************
//SETMK    EXEC PGM=CSFEUTIL,
//   PARM='CSF.CSFCKDS,CHANGE THIS PASS PHRASE,PPINIT'
//SYSPRINT DD SYSOUT=*
//*
./ ADD NAME=H6BDTTQI 0114-04350-04350-1300-00044-00044-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*********************************************************************
//* BDTTQBCH JOB
//*
//*  FUNCTION: TO FORMAT THE TQI DATA SETS AND THE MESSAGE DATA SET(S)
//*
//*  NOTES:
//*       1. THE SYSNAME MUST CORRESPOND TO THE SYSNAME IN THE
//*          PARMLIB MEMBER IEASYSXX.
//*       2. IF SOME OF THESE DATA SETS ARE ALREADY FORMATTED, DELETE
//*          CORRESPONDING DD STATEMENT FROM THIS JOB.
//*
//* *******************************************************************
//*
//*
//TQIBATCH  EXEC PGM=BDTTQBCH
//STEPLIB   DD  DSN=SYS1.SBDTLINK,
//             DISP=SHR
//BITMAPS   DD  DISP=SHR,DSN=BDT1.TQIBITS
//DATAFILE  DD  DISP=SHR,DSN=BDT1.TQIDATA
//SYSUDUMP  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD  *
BUILD,SYSID=SYSA1
//*
//TQIMSG    EXEC PGM=BDTTQBCH
//STEPLIB   DD  DSN=SYS1.SBDTLINK,
//             DISP=SHR
//MESSAGE   DD  DISP=SHR,DSN=BDT1.MSG0001
//SYSUDUMP  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD  *
FORMAT,SYSID=SYSA1,SYSNAME=MVS1
//*
./ ADD NAME=H7FFSTIN 0114-04350-04350-1300-00113-00113-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*
//*LIB: FFST.V120ESA.SEPWSRC2(EPW12011)                         *
//***************************************************************
//*                                                             *
//*    TITLE: LINK EDIT FFST CICS MODULES                       *
//*                                                             *
//* FUNCTION: THIS JOB IS OPTIONAL, IT WILL LINK EDIT THE CICS  *
//*           MODULES NEEDED TO USE CICS APPLICATION WITH FFST. *
//*                                                             *
//***************************************************************
//* FUNCTION BY JOB STEP:                                       *
//***************************************************************
//*                                                             *
//* STEP1: LINK EDIT EPWTRUEI AND EPWTRUET.                     *
//*                                                             *
//*        EXPECTED CONDITION CODE = 0004                       *
//*                                                             *
//* STEP2: LINK EDIT EPWCIVP.                                   *
//*                                                             *
//*        EXPECTED CONDITION CODE = 0004                       *
//*                                                             *
//* STEP3: LINK EDIT EPWTRUE (MUST BE BELOW 16MEG LINE).        *
//*                                                             *
//*        EXPECTED CONDITION CODE = 0004                       *
//*                                                             *
//***************************************************************
//STEP1    EXEC PGM=HEWLH096,REGION=0M,
//            PARM='XREF,LET,LIST,RMODE=ANY,AMODE=31'
//SYSUT1   DD DSN=&SYSUT1,
//            UNIT=SYSALLDA,
//            SPACE=(CYL,(2,2))
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=FFST.V120ESA.SEPWMOD1,
//            DISP=SHR
//         DD DSN=CICS.SDFHLOAD,
//            DISP=SHR
//SYSLMOD  DD DSN=FFST.V120ESA.SEPWMOD1,
//            DISP=SHR
//SYSLIN   DD *
  ORDER DFHEAI,EPWTRUEI,DFHEAI0
  ENTRY EPWTRUEI
  INCLUDE SYSLMOD(EPWTRUEI)
  INCLUDE SYSLIB(DFHEAI)
  INCLUDE SYSLIB(DFHEAI0)
  NAME EPWTRUEI(R)
  ORDER DFHEAI,EPWTRUET,DFHEAI0
  ENTRY EPWTRUET
  INCLUDE SYSLMOD(EPWTRUET)
  INCLUDE SYSLIB(DFHEAI)
  INCLUDE SYSLIB(DFHEAI0)
  NAME EPWTRUET(R)
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,STEP1),(4000,LT))
//*
//STEP2    EXEC PGM=HEWLH096,REGION=0M,
//            PARM='XREF,LET,LIST,RMODE=ANY,AMODE=31'
//SYSUT1   DD DSN=&SYSUT1,
//            UNIT=SYSALLDA,
//            SPACE=(CYL,(2,2))
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=FFST.V120ESA.SEPWMOD2,
//            DISP=SHR
//         DD DSN=FFST.V120ESA.SEPWMOD3,
//            DISP=SHR
//         DD DSN=CICS.SDFHLOAD,
//            DISP=SHR
//SYSLMOD  DD DSN=FFST.V120ESA.SEPWMOD3,
//            DISP=SHR
//SYSLIN   DD *
  ORDER DFHEAI,EPWCIVP,DFHEAI0
  ENTRY EPWCIVP
  INCLUDE SYSLMOD(EPWCIVP)
  INCLUDE SYSLIB(DFHEAI)
  INCLUDE SYSLIB(DFHEAI0)
  NAME EPWCIVP(R)
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,STEP2),(4000,LT))
//*
//STEP3    EXEC PGM=HEWLH096,REGION=0M,
//            PARM='XREF,LET,LIST,RMODE=24,AMODE=31'
//SYSUT1   DD DSN=&SYSUT1,
//            UNIT=SYSALLDA,
//            SPACE=(CYL,(2,2))
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=FFST.V120ESA.SEPWMOD1,
//            DISP=SHR
//         DD DSN=CICS.SDFHLOAD,
//            DISP=SHR
//SYSLMOD  DD DSN=FFST.V120ESA.SEPWMOD1,
//            DISP=SHR
//SYSLIN   DD *
  ORDER DFHEAI,EPWTRUE,DFHEAI0
  ENTRY EPWTRUE
  INCLUDE SYSLMOD(EPWTRUE)
  INCLUDE SYSLIB(DFHEAI)
  INCLUDE SYSLIB(DFHEAI0)
  NAME EPWTRUE(R)
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,STEP3),(4000,LT))
//*
/*
./ ADD NAME=I0ABOOKS 0114-04350-04350-1300-00070-00077-00000-HOWTO
z/OS 1.4 BookManager READ


COPY ONLINE BOOKS AND DICTIONARIES

BookManager  READ  online  books and dictionaries are shipped as parti-
tioned data sets, but must be copied to  sequential  data  sets  before
they can be used.

Run  the jobs I1BKCOPY, I2BKCOPY, I3BKCOPY provided in the Installation
Dialog to copy these partitioned data sets to sequential data sets.

When you receive updates to these data sets (for  example,  maintenance
or  new versions), you must run I1BKCOPY, I2BKCOPY, and I3BKCOPY again.
These jobs are a modification of EOXUNLD, which  was  provided  in  the
BookManager program directory.

NOTE:   If  you are installing more than one language feature, run this
job for each language you are installing, changing the language  abbre-
viation  throughout  the job each time.  Refer to the program directory
for more details on EOXUNLD.


COPY BOOKMANAGER READ FONTS


BookManager SSGML type print requires  the  Gothic  BookManager  parti-
tioned  Semilight  font.  If you are going to use SSGML type output you
will need to copy the BookManager fonts located in  SEOXFONT  into  the
DCF  font libraries and install it as documented in the Document Compo-
sition Facility: SCRIPT/VS Text Programmer's Guide.


SET INSTALLATION DEFAULTS


Before  you  can  use  BookManager READ, you must set some defaults for
your site by customizing the EOXVOPTS REXX EXEC of the BookManager READ
SEOYCLIB target library.  EOXVOPTS provides comments to assist  in the
modification.

Before setting installation defaults, you must run the unload jobs
I1BKCOPY, I2BKCOPY, and I3BKCOPY provided in the installation dialog.
Several of the default values listed in this section refer to the
default unloaded data set name.  These jobs might have been  run
previously  when  BookManager online books and dictionaries were
copied to sequential datasets.

Within EOXVOPTS, set installation defaults for:

o   filter for the synonym dictionaries
o   scrolling indicators
o   network node identification
o   GDDM symbol set libraries
o   GDDM host feature code for OS/2-LINK and PCLK
o   GDDM defaults data set name
o   printer font data set names
o   BookMaster data set names
o   GML starter set data set names
o   ProcessMaster interface
o   online user guide data set name
o   list of bookshelves available to all users
o   link bookshelf
o   synonym dictionary
o   print code page
o   display code page and character set
o   session language for BookManager.

For  more  information, see BookManager READ/MVS V1R3: Installation
Planning and Customization, SC38-2035.
./ ADD NAME=I1BKCOPY 0114-04350-04350-1300-00058-00058-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//*     COPY ONLINE BOOKS AND DICTIONARIES FOR BOOKMANAGER READ
//*
//* TAILORING:
//*      IF YOU HAVE CHANGED THE HIGH LEVEL QUALIFIER FROM THE
//*      DEFAULT 'EOY' THEN MAKE THE CHANGE IN THIS JOB.
//********************************************************************
//*
//GENLEXIS PROC MEM1=,MEM2=,
//         HLQ='EOY'                === HIGH LEVEL QUALIFIER
//*
//GEN      EXEC PGM=IEBGENER
//SYSUT1   DD DISP=SHR,
//    DSNAME=&MEM1.
//SYSUT2   DD DISP=(NEW,CATLG),
//    DSNAME=&HLQ..&MEM2.,
//    SPACE=(4096,(300,10),RLSE),
//    DCB=(RECFM=FBS,LRECL=4096,BLKSIZE=8192),
//    UNIT=SYSALLDA,VOL=SER=C4WRK1      === UNIT/VOLSER
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//         PEND
//*
//* UNLOAD THE BOOK FILES TO SEQUENTIAL DATA SETS
//*
//EOX01MST EXEC GENLEXIS,MEM1=EOY.SEOXOENU(EOX01MSB),
//         MEM2=ENU.EOX01MST.BOOK
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOX01MST.GEN),(4000,LT))
//EOX02MST EXEC GENLEXIS,MEM1=EOY.SEOXOENU(EOX02MSB),
//         MEM2=ENU.EOX02MST.BOOK
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOX02MST.GEN),(4000,LT))
//EOX03MST EXEC GENLEXIS,MEM1=EOY.SEOXOENU(EOX03MSB),
//         MEM2=ENU.EOX03MST.BOOK
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOX03MST.GEN),(4000,LT))
//EOX04MST EXEC GENLEXIS,MEM1=EOY.SEOXOENU(EOX04MSB),
//         MEM2=ENU.EOX04MST.BOOK
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOX04MST.GEN),(4000,LT))
//EOX05MST EXEC GENLEXIS,MEM1=EOY.SEOXOENU(EOX05MSB),
//         MEM2=ENU.EOX05MST.BOOK
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOX05MST.GEN),(4000,LT))
//*
//* UNLOAD THE BKINDEX FILE TO A SEQUENTIAL DATA SET
//*
//EOXINDEX EXEC GENLEXIS,MEM1=EOY.SEOYXENU(EOXINDEX),
//         MEM2=ENU.BOOKMGRR.BKINDEX
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOXINDEX.GEN),(4000,LT))
./ ADD NAME=I2BKCOPY 0114-04350-04350-1300-00073-00073-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//*     COPY ONLINE BOOKS AND DICTIONARIES FOR BOOKMANAGER READ
//*
//********************************************************************
//*
//GENLEXIS PROC MEM1=,MEM2=,
//         HLQ='EOY'                === HIGH LEVEL QUALIFIER
//*
//GEN      EXEC PGM=IEBGENER
//SYSUT1   DD DISP=SHR,
//   DSNAME=&MEM1.
//SYSUT2   DD DISP=(NEW,CATLG),
//   DSNAME=&HLQ..&MEM2.,
//   SPACE=(4096,(533,10),RLSE),
//   DCB=(RECFM=FBS,LRECL=512,BLKSIZE=4096),
//   UNIT=SYSALLDA,VOL=SER=C4WRK1       === CHANGE
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//         PEND
//*
//* UNLOAD THE LEXIS FILES TO SEQUENTIAL DATA SETS
//*
//EIJBPOR  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJBPOR),
//         MEM2=EIJBPOR.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJBPOR.GEN),(4000,LT))
//EIJCFRE  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJCFRE),
//         MEM2=EIJCFRE.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJCFRE.GEN),(4000,LT))
//EIJDANI  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJDANI),
//         MEM2=EIJDANI.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJDANI.GEN),(4000,LT))
//EIJDUTC  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJDUTC),
//         MEM2=EIJDUTC.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJDUTC.GEN),(4000,LT))
//EIJENGL  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJENGL),
//         MEM2=EIJENGL.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJENGL.GEN),(4000,LT))
//EIJFREN  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJFREN),
//         MEM2=EIJFREN.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJFREN.GEN),(4000,LT))
//EIJGERM  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJGERM),
//         MEM2=EIJGERM.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJGERM.GEN),(4000,LT))
//EIJITAL  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJITAL),
//         MEM2=EIJITAL.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJITAL.GEN),(4000,LT))
//EIJNORW  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJNORW),
//         MEM2=EIJNORW.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJNORW.GEN),(4000,LT))
//EIJPORT  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJPORT),
//         MEM2=EIJPORT.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJPORT.GEN),(4000,LT))
//EIJSPAN  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJSPAN),
//         MEM2=EIJSPAN.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJSPAN.GEN),(4000,LT))
//EIJSWED  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJSWED),
//         MEM2=EIJSWED.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJSWED.GEN),(4000,LT))
//EIJUKEN  EXEC GENLEXIS,MEM1=EOY.SEOYLEXS(EIJUKEN),
//         MEM2=EIJUKEN.LEXIS
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EIJUKEN.GEN),(4000,LT))
./ ADD NAME=I3BKCOPY 0114-04350-04350-1300-00043-00043-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//*     COPY ONLINE BOOKS AND DICTIONARIES FOR BOOKMANAGER READ
//*
//* TAILORING:
//*      IF YOU HAVE CHANGED THE HIGH LEVEL QUALIFIER FROM THE
//*      DEFAULT 'EOY' THEN MAKE THE CHANGE IN THIS JOB
//********************************************************************
//*
//GENLEXIS PROC MEM1=,MEM2=,
//         HLQ='EOY'                === HIGH LEVEL QUALIFIER
//*
//GEN      EXEC PGM=IEBGENER
//SYSUT1   DD DISP=SHR,
//    DSNAME=&MEM1.
//SYSUT2   DD DISP=(NEW,CATLG),
//    DSNAME=&HLQ..&MEM2.,
//    SPACE=(4096,(300,10),RLSE),
//    DCB=(RECFM=VB,LRECL=259,BLKSIZE=6475),
//    UNIT=SYSALLDA,VOL=SER=C4WRK1       === CHANGE
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//         PEND
//*
//* UNLOAD THE BKSHELF FILE TO A SEQUENTIAL DATA SET
//*
//EOXSHELF EXEC GENLEXIS,MEM1=EOY.SEOYSENU(EOXSHELF),
//         MEM2=ENU.BOOKMGRR.BKSHELF
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOXSHELF.GEN),(4000,LT))
//EOXLIST  EXEC GENLEXIS,MEM1=EOY.SEOYSENU(EOXLIST),
//         MEM2=ENU.BOOKMGRR.BKLIST
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EOXLIST.GEN),(4000,LT))
./ ADD NAME=J0AOCSF  0114-04350-04350-1300-00035-00038-00000-HOWTO


z/OS 1.4 Cryptographic Services OCSF


REVIEWING THE REQUIRED SECURITY AUTHORIZATIONS

The supplied job H1RACTGT provides a sample of the commands
required to set up the  security authorizations  for OCSF,
as follows:

o   H1RACTGT  defines  the  following  RACF FACILITY  class
    profiles, which are required by OCSF:

           CDS.CSSM
           CDS.CSSM.CRYPTO
           CDS.CSSM.DATALIB

o   H1RACTGT activates program control (SETROPTS WHEN(PROGRAM))
    and defines the  following  generic profile  to  protect a
    number of libraries:

          RDEFINE +
             PROGRAM ** +
             ADDMEM ('CEE.SCEERUN'//NOPADCHK +
                     'SYS1.LINKLIB'//NOPADCHK)
           UACC(READ)

Review these default settings to ensure that they are appropriate
for your security environment.

For more information about the required security settings, see
z/OS Open Cryptographic Services Facility Application Programming,
SC24-5899.

./ ADD NAME=J0BCCPL  0114-04350-04350-1300-00016-00016-00000-HOWTO
z/OS 1.4 C/C++ Debug Tool


DEFINE NECESSARY SECURITY AUTHORIZATIONS

If  C/C++  Debug  Tool is to be used with Web Server applications, then
there is a requirement that the modules in hlq.SEQAMOD  be  defined  as
RACF  controlled  programs  and that users of Debug Tool have access to
these modules.

   RALTER PROGRAM ** ADDMEM('hlq.SEQAMOD'//NOPADCHK) UACC(READ)
   SETROPTS WHEN(PROGRAM) REFRESH

You  will  need  to  review these settings to make sure they are appro-
priate for your security environment.

./ ADD NAME=J0CJAVA  0114-04350-04350-1300-00028-00028-00000-HOWTO

IBM Developer Kit for OS/390, Java 2 Technology Edition 1.1.0


PERFORM POST INSTALLATION TASKS

IBM  Developer  Kit  for  OS/390,  Java 2 Technology Edition provides a
shell script to explode the archive file into  its  subdirectories  and
files under directory /usr/lpp/java/IBM after the archive file has been
installed during SMP/E APPLY processing.  The post-install job AJVISTAR
that  was  provided in previous releases of Java for OS/390 is not pro-
vided in IBM Developer  Kit  for  OS/390,  Java  2  Technology  Edition
because  the  shell  script  processing  eliminates the requirement for
users to run the post-install job.

The archive file that is provided in IBM Developer Kit for OS/390, Java
2 Technology Edition has the program control bits set on all  files  in
the following directories:

o   /usr/lpp/java/IBM/J1.3/bin
o   /usr/lpp/java/IBM/J1.3/bin/classic

These  directories  contain  executables  such  as  the "java" command.
During shell script processing, the program control bits will  be  pre-
served  when  the  archive file is exploded into its subdirectories and
files.  This eliminates the requirement for users to  set  the  program
control bits for these directories.

./ ADD NAME=J0DRACFN 0114-04350-04350-1300-00036-00038-00000-HOWTO

z/OS 1.4 Security Server - Network Authentication Service


PROCLIB MEMBER CONSIDERATIONS

The  procedures  needed  to  start the started task for Security Server
Network Authentication Service reside in the target data  set  SEUVFSAM
and have been copied to EXMP.PROCLIB for you.  EXMP.PROCLIB is a proce-
dure  library in your JES procedure library concatenation.  Ensure that
any updates needed for these procedures  are  made  to  the  copies  in
EXMP.PROCLIB.

+---------------------------------------------------------------------+
|Table 1. Network Authentication Service Procedures                   |
+----------+-----------+----------------------------------------------+
|Name      | Alias     | Description                                  |
+----------+-----------+----------------------------------------------+
|EUVFS003  | SKRBKDC   | JCL to start the Network Authentication      |
|          |           | Service                                      |
+----------+-----------+----------------------------------------------+
|EUVFS004  | SKRBWTR   | JCL to start the trace external writer for   |
|          |           | the Network Authentication Service           |
+----------+-----------+----------------------------------------------+

SECURITY SERVER NETWORK AUTHENTICATION SERVICE CUSTOMIZATION
CONSIDERATIONS

To  get  the  program  into  operational  status  copy  the appropriate
CTIKDCxx member from SEUVFSAM to your installation's PARMLIB member and
customize as necessary to support any component tracing that you  might
need to perform.

For  more  details,  see  z/OS  Security  Server Network Authentication
Service Administration, SC24-5926.

./ ADD NAME=J0ETCPIP 0114-04350-04350-1300-00194-00203-00000-HOWTO

z/OS 1.4 COMMUNICATIONS SERVER IP SERVICES

The following sections  describe the  minimum customization required to
verify that  Communications Server IP Services  is installed correctly.


SETTING UP FOR THE IVP

Perform  the  following  steps to complete the installation and initial
customization of the Communications Server IP  Services  address  space
and  key servers.  On the completion of these steps, the Communications
Server will have a basic configuration  with  no  network  attachments.
Additional  customization  will  be  required  to  link the host to the
network, bring up additional services, and optimize  the  use  of  ini-
tially configured services.

Run the following steps from a TSO userid with an OMVS segment defined.
The  userid  must be uid=0 or permitted to the 'BPX.SUPERUSER' facility
class.  It must have the ability to create and write to required  TSO/E
data  sets  and  hierarchical  file system files and perform RACF defi-
nitions.

Steps in the J3IPRACF job (EZARACF in the  program  directory)  provide
guidance  for  incorporating  TCP/IP in an existing BPX.DAEMON environ-
ment.  For more information, see z/OS UNIX  System  Services  Planning.

Verify:

BPXPRMxx  parmlib  member  in use by OMVS has been updated for Communi-
cations Server IP Services.

o   Verify that there is a FILESYSTYPE statement specifying entry point
    EZBPFINI.  For example:

          FILESYSTYPE TYPE(INET) ENTRYPOINT(EZBPFINI)
          NETWORK DOMAINNAME(AF_INET)
          DOMAINNUMBER(2)
          MAXSOCKETS(64000)

o   If any changes are required, the new OMVS parameters may be updated
    by using the SETOMVS RESET=(yy) command or by re-IPLing.

CUSTOMIZATION STEPS

1.  Allocate required data sets

    o   Update the J1IPINST job (EZAGETIN in the program directory)  in
        the installation dialog.

        -   This job allocates required TCPIP data sets, such as trans-
            lation tables, HOSTS.LOCAL, ETC.SERVICES, and so on.

        -   The equivalent product job is hlq.SEZAINST(EZAGETIN).


        -   The  DSPREFIX variable on the // PROC statement will be set
            to use the default of TCPIP.

    o   Run the J1IPINST job

        -   Expected  results:  The  job should complete with all steps
            receiving a condition code 0.

    o   Run the J2IPHOST job

        -   J2IPHOST  updates  the  TCPIP.HOSTS.LOCAL  file   for   IVP
            testing.

        -   J2IPHOST    runs   TSO/E   command   MAKESITE,   generating
            TCPIP.HOSTS.ADDRINFO and TCPIP.HOSTS.SITEINFO data sets.

        -   Expected results: The job should complete  with  all  steps
            receiving a condition code 0.

            --  The following messages may be seen in job output

                "EZA0547I Writing out "dyn_alc_hlq."HOSTS.SITEINFO..."
            and
                "EZA0548I Writing out "dyn_alc_hlq."HOSTS.ADDRINFO..."

            --  Messages EZA0550I through EZA0566I will also be  gener-
                ated  showing  statistics  from the input data set read
                and the output data sets created.

2.  IVP Configuration Data set TCPIVP.TCPPARMS

    o   The configuration data set has been allocated for you.

    o   Review the TCPIVP.TCPPARMS(TCPDATA) member

        -   Set HOSTNAME statement to the hostname of the system as it
            will be known in the TCPIP network.

3.  Review/Create required RACF definitions

    o   Customize the J3IPRACF (EZARACF) job

        -   This  job will perform the RACF definitions and define OMVS
            segments required for the TCP/IP address and servers.

        -   If not using the  default  value  of  OMVSGRP,  change  the
            DFLTGRP(OMVSGRP)  definitions  on the ADDUSER statements in
            the DAEMONS step  to  use  the  value  you  have  selected.
            (Note, it is assumed this group has already been created.)

        -   If  desired, comment out ADDUSER and RDEFINE statements for
            any servers for which you do not  want  to  do  RACF  defi-
            nitions at this time.  Note, however, the step will be ter-
            minated  by  the  first  comment  statement,  so  move  any
            comments to the end of the //SYSTSIN input.

        -   For  this IVP, RACF definitions are required for the TCPIP,
            SYSLOGD, FTPD, OSNMPD and SNMPQE started  procedures.    Do
            not comment these out.

        -   You may also wish to use the sample RACF definitions in the
            VARY  step  to restrict the use of the MVS VARY TCPIP oper-
            ator command.

        -   Additional steps are required when running with  BPX.DAEMON
            set up (If you are not running with BPX.DAEMON, skip to the
            step below titled, 'Run the EZARACF job'.):

            --  If  you  have a BPX.DAEMON environment, you must ensure
                all load modules loaded into an address space come from
                controlled libraries.   If a module is  loaded  from  a
                non-controlled  library,  the  address  space loses its
                authorization.   This means you  must  define  all  the
                libraries  from  where modules may be loaded as program
                controlled.  See z/OS UNIX  System  Services  Planning,
                for   more   information  on  the  BPX.DAEMON facility.
                You   can    use   the   following   steps  to  include
                IP an existing BPX.DAEMON environment.

            --  Permit servers to the BPX.DAEMON facility.

                o   Uncomment  the  //BPXDAEMN  EXEC  statement and the
                    //SYSTSPRT DD and //SYSTSIN DD  statements  associ-
                    ated with it.

                o   Uncomment  (remove  //*)  RACF statements to permit
                    (PE) the TCP/IP address space and the FTP daemon to
                    the FACILITY class.

            --  Enable program control for run-time library modules.

                o   Uncomment  the  //PADS  EXEC  statement   and   the
                    //SYSTSPRT  and  //SYSTSIN DD statements associated
                    with it.

                o   Uncomment  (remove   //*)   RALT   statements for
                    'SYS1.LINKLIB', 'cee.SCEERUN', and
                    'tcpip.SEZALOAD'.

                o   Change the high level qualifier for the C run-time
                    library  from  'cee'  to the appropriate high level
                    qualifier.

                o   Change the 'volser' value on the RALT statement  to
                    the volume serial for the C run-time library.

                o   Change the high level qualifier for the TCP/IP load
                    libraries if you are not using the default value of
                    'TCPIP'.

                o   Change the 'volser' value on the RALT statement for
                    the  TCP/IP  load  library to the volume serial for
                    the TCP/IP load library.

                o   Uncomment the SETROPTS statement  and  move  it  to
                    immediately  after the last uncommented RALT state-
                    ment.


    o   Run the J3IPRACF job


        -   Expected results:

            --  If you have already run H1RACTGT or RACFDRV,  you  might
                find that RACF profiles already exist for many of these
                resources.    Informational  or  error  messages  about
                duplicates resources are acceptable.

            --  If the users are already defined to  RACF,  error  mes-
                sages  for  'invalid userid' are generated.  Successful
                ADDUSER definitions produce only the TSO 'READY' prompt
                in the output.

            --  The condition code returned is the condition  code  for
                the last RACF command issued, so read the job output to
                verify the RACF definitions were done.

./ ADD NAME=J1IPINST 0114-04350-04350-1300-00155-00158-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: J1IPINST  (product-supplied job EZAGETIN in library SEZAINST)
//*
//* DOC: Initialize Communications Server IP Services data sets
//*
//* NOTE:  This job allocates files on the Target System's
//*        If you do not wish for these data sets to go onto
//*        this volume change the 'SER=C4WRK1,'
//*        statement to your desired volume.
//*
//***************************************************************
//EZAIND    PROC  DSPREFIX='TCPIP',
//            SER=C4WRK1,
//            UNIT=SYSALLDA
//***************************************************************
//*
//*  MAKE SEQUENTIAL XLATE TABLE DATA SETS
//*
//***************************************************************
//*             STANDARD TRANSLATE TABLE
//***************************************************************
//STANDARD  EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD1(STANDARD),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..STANDARD.TCPXLBIN,
//          DISP=(NEW,CATLG),SPACE=(256,(185,185)),VOL=SER=&SER,
//          DCB=(RECFM=F,LRECL=256,BLKSIZE=256),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*             STANDARD KANJI TRANSLATE TABLE
//***************************************************************
//STDJBIN   EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD2(EZAKJBIN),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..STANDARD.TCPKJBIN,
//          DISP=(NEW,CATLG),SPACE=(8800,(105,6)),VOL=SER=&SER,
//          DCB=(RECFM=VB,LRECL=5124,BLKSIZE=8800),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//STDGBIN   EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD2(EZAHGBIN),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..STANDARD.TCPHGBIN,
//          DISP=(NEW,CATLG),SPACE=(8800,(55,6)),VOL=SER=&SER,
//          DCB=(RECFM=VB,LRECL=5124,BLKSIZE=8800),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//STDGHIN   EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD2(EZACHBIN),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..STANDARD.TCPCHBIN,
//          DISP=(NEW,CATLG),SPACE=(8800,(55,6)),VOL=SER=&SER,
//          DCB=(RECFM=VB,LRECL=5124,BLKSIZE=8800),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//STDSCBIN  EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD2(EZASCBIN),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..STANDARD.TCPSCBIN,
//          DISP=(NEW,CATLG),SPACE=(8800,(30,6)),VOL=SER=&SER,
//          DCB=(RECFM=VB,LRECL=5124,BLKSIZE=8800),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*             TELNET AND TELNETSE TRANSLATE TABLES
//***************************************************************
//TELNET    EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD1(TELNET),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..TELNET.TCPXLBIN,
//          DISP=(NEW,CATLG),SPACE=(256,(185,185)),VOL=SER=&SER,
//          DCB=(RECFM=F,LRECL=256,BLKSIZE=256),UNIT=&UNIT
//SYSIN     DD DUMMY
//TELNETSE  EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAXLD1(TELNETSE),
//          DISP=(OLD,KEEP)
//SYSUT2    DD DSN=&DSPREFIX..TELNETSE.TCPXLBIN,
//          DISP=(NEW,CATLG),SPACE=(256,(185,185)),VOL=SER=&SER,
//          DCB=(RECFM=F,LRECL=256,BLKSIZE=256),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*             CREATE HOSTS.LOCAL DATA SET
//***************************************************************
//HOSTSLOC  EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAINST(HOSTS),
//          DISP=(OLD,KEEP)
//SYSUT2    DD DSN=&DSPREFIX..HOSTS.LOCAL,
//          DISP=(NEW,CATLG),SPACE=(784,(61,61)),VOL=SER=&SER,
//          DCB=(RECFM=VB,LRECL=255,BLKSIZE=784),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*  CREATE SEQUENTIAL MIB DESCRIPTION DATA SET
//***************************************************************
//MIBDESC   EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAINST(MIBDESC),
//          DISP=(OLD,PASS)
//SYSUT2    DD DSN=&DSPREFIX..MIBDESC.DATA,
//          DISP=(NEW,CATLG),SPACE=(784,(120,30)),VOL=SER=&SER,
//          DCB=(RECFM=VB,LRECL=255,BLKSIZE=784),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*             CREATE ETC.SERVICES DATA SET
//***************************************************************
//ETCSERVC  EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAINST(SERVICES),
//          DISP=(OLD,KEEP)
//SYSUT2    DD DSN=&DSPREFIX..ETC.SERVICES,
//          DISP=(NEW,CATLG),SPACE=(3120,(15,15)),VOL=SER=&SER,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*             CREATE ETC.RPC DATA SET
//***************************************************************
//ETCRPC    EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAINST(ETCRPC),
//          DISP=(OLD,KEEP)
//SYSUT2    DD DSN=&DSPREFIX..ETC.RPC,
//          DISP=(NEW,CATLG),SPACE=(3120,(15,15)),VOL=SER=&SER,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),UNIT=&UNIT
//SYSIN     DD DUMMY
//***************************************************************
//*             CREATE ETC.PROTO DATA SET
//***************************************************************
//ETCPROTO  EXEC  PGM=IEBGENER
//SYSPRINT  DD    SYSOUT=*
//SYSUT1    DD DSN=TCPIP.SEZAINST(PROTO),
//          DISP=(OLD,KEEP)
//SYSUT2    DD DSN=&DSPREFIX..ETC.PROTO,
//          DISP=(NEW,CATLG),SPACE=(3120,(15,15)),VOL=SER=&SER,
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),UNIT=&UNIT
//SYSIN     DD DUMMY
//        PEND
//        EXEC EZAIND
/*
./ ADD NAME=J2IPHOST 0114-04350-04350-1300-00089-00091-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: J2IPHOST
//*
//* DOC: This job updates TCPIP.HOSTS.LOCAL file and runs TSO
//*      command MAKESITE.
//*
//********************************************************************
//*
//********************************************************************
//*  Insert loopback host                                          ***
//********************************************************************
//SITES2   EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
EDIT 'TCPIP.HOSTS.LOCAL' OLD TEXT NONUM
F 'HOST : 9.67.43.100 : NAMESERVER ::::'
DEL *
IN ;HOST : 9.67.43.100 : NAMESERVER ::::
F 'HOST : 9.67.43.126 :  LOCATION A '
DEL *
IN ;HOST : 9.67.43.126 : LOCATION A ::::
F 'HOST : 129.34.128.245, 129.34.128.246 : LOCATION B ::::'
DEL *
IN ;HOST : 129.34.128.245, 129.34.128.246 : LOCATION B ::::
IN HOST : 127.0.0.1 : NODENAME ::::
F 'NET  : 9.67.43.0 : LOCATON.URL.COM :'
DEL *
IN ;NET  : 9.67.43.0 : LOCATION.URL.COM :
F 'GATEWAY : 129.34.0.0 : YOUR-GATEWAY ::::'
DEL *
IN ;GATEWAY : 129.34.0.0 : YOUR-GATEWAY ::::
SAVE
END
MAKESITE HLQ=TCPIP,VOL=C4WRK1,UNIT=SYSALLDA
END
/*
//NOTOK    EXEC PGM=MAXRETCD,COND=((0,GE,SITES2),(4000,LT))
//*
//HOMETST3 EXEC PGM=IKJEFT1B,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
HOMETEST
END
/*
//NOTOK    EXEC PGM=MAXRETCD,COND=((0,GE,HOMETST3),(4000,LT))
//*
//*----------------------------------------------------------------
//* This step create the ivp.syslog.log
//*----------------------------------------------------------------
//BPXBATCH   EXEC PGM=BPXBATCH,COND=(4000,LT),
//  PARM='SH touch /tmp/ivp.syslog.log'
//STDOUT     DD   PATH='/tmp/out',
//             PATHOPTS=(OCREAT,OTRUNC,OWRONLY),PATHMODE=SIRWXU
//STDIN      DD   PATH='/tmp/null',
//             PATHOPTS=(OCREAT,ORDONLY),PATHMODE=SIRWXU
//STDERR     DD   PATH='/tmp/error',
//             PATHOPTS=(OCREAT,OTRUNC,OWRONLY),PATHMODE=SIRWXU
/*
//NOTOK    EXEC PGM=MAXRETCD,COND=((0,GE,BPXBATCH),(4000,LT))
//*
//*------------------------------------------------------------------
//*     Copy the error file output to JES output spool.
//*------------------------------------------------------------------
//ERRDFR   EXEC PGM=IKJEFT1B,COND=(4000,LT)
//JES      DD  SYSOUT=*,DCB=(RECFM=V,LRECL=256)
//ERRORF   DD  PATH='/tmp/error',
//             PATHOPTS=ORDONLY
//OUT      DD  PATH='/tmp/out',
//             PATHOPTS=ORDONLY
//SYSTSPRT DD  DUMMY
//SYSTSIN  DD  *
  OCOPY INDD(ERRORF) OUTDD(JES)
  OCOPY INDD(OUT) OUTDD(JES)
//*
//NOTOK    EXEC PGM=MAXRETCD,COND=((0,GE,ERRDFR),(4000,LT))
//*
./ ADD NAME=J3IPRACF 0114-04350-04350-1300-00657-00659-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//* JOB: J3IPRACF  (product-supplied job EZARACF in library SEZAINST)
//*
//* DOC: Perform the RACF definitions for Communications
//*      Server IP Services.
//*
//*
//********************************************************************
//*
//* The userid assigned to the IP started task and its default group
//* must have an OMVS segment defined. This is also true for many of
//* the other IP Servers and Applications. This job contains samples
//* for many of the RACF commands required for IP Servers and
//* Applications.
//*
//* The commands are grouped into separate steps which can be altered
//* and submitted as a batch job. Or, the commands may be entered
//* interactively on the ISPF Option 6 panel.
//*
//* Each step includes the following three DD cards:
//*
//*    //stepname EXEC PGM=IKJEFT01
//*    //SYSTSPRT DD  SYSOUT=*
//*    //SYSTSIN  DD  *
//*
//* They are commented out on all steps except the first.
//* As each chosen step is successfully executed, comment it out
//* prior to uncommenting and running the next step.
//*
//* Insure that you have no comments after the //SYSTSIN DD card
//* on a step intended for execution as this will terminate the step.
//*
//* RACF definitions that do not fit on one line may be continued on
//* the next using the dash (-) as a continuation character.
//*
//* If you did not use the default proc names, replace the defaults
//* where appropriate.
//*
//* Each step should end with a condition code of zero. However, be
//* aware that the return code for the step will be that code for the
//* last command issued. Therefore, it is possible for some of the
//* commands to complete successfully even if the job ends with a
//* code=4 or 12. Always review the output.
//*
//********************************************************************
//** Create the ID and its OMVS Segment then add to STARTED Class.
//** If the STARTED CLASS Facility is not setup on your system, these
//** entries should be placed in the started procedures table
//** ICHRIN03.
//********************************************************************
//DAEMONS  EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  *
   ADDUSER RESOLVER DFLTGRP(OMVSGRP) OMVS(UID(42) HOME('/'))
   ADDUSER FTPD     DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER OMPROUTE DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER OROUTED  DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER OSNMPD   DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER PAGENT   DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER PAGTSNMP DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER PORTMAP  DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER SENDMAIL DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER SNMPQE   DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER SNTPD    DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER SYSLOGD  DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER TCPIP    DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER TRAPFWD  DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER TRMD     DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER NAMED    DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER DCAS     DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER DHCP     DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   ADDUSER IOBSNMP  DFLTGRP(OMVSGRP) OMVS(UID(0) HOME('/'))
   RDEFINE STARTED  RESOLVER.* STDATA(USER(RESOLVER))
   RDEFINE STARTED  FTPD.* STDATA(USER(FTPD))
   RDEFINE STARTED  OMPROUTE.* STDATA(USER(OMPROUTE))
   RDEFINE STARTED  OROUTED.* STDATA(USER(OROUTED))
   RDEFINE STARTED  OSNMPD.* STDATA(USER(OSNMPD))
   RDEFINE STARTED  PAGENT.* STDATA(USER(PAGENT))
   RDEFINE STARTED  PAGTSNMP.* STDATA(USER(PAGTSNMP))
   RDEFINE STARTED  PORTMAP.* STDATA(USER(PORTMAP))
   RDEFINE STARTED  SENDMAIL.* STDATA(USER(SENDMAIL))
   RDEFINE STARTED  SNMPQE.* STDATA(USER(SNMPQE))
   RDEFINE STARTED  SNTPD.* STDATA(USER(SNTPD))
   RDEFINE STARTED  SYSLOGD.* STDATA(USER(SYSLOGD))
   RDEFINE STARTED  TCPIP.* STDATA(USER(TCPIP))
   RDEFINE STARTED  TRAPFWD.* STDATA(USER(TRAPFWD))
   RDEFINE STARTED  TRMD.* STDATA(USER(TRMD))
   RDEFINE STARTED  NAMED.* STDATA(USER(NAMED))
   RDEFINE STARTED  DCAS.* STDATA(USER(DCAS))
   RDEFINE STARTED  DHCP.* STDATA(USER(DHCP))
   RDEFINE STARTED  IOBSNMP.* STDATA(USER(IOBSNMP))
   SETROPTS RACLIST(STARTED) REFRESH
//**********************************************************************
//* Setup SYSLOGD's ability to write records to SMF
//**********************************************************************
//* The userid associated with the SYSLOGD address space or started
//* task must be permitted to BPX.SMF in order for SYSLOGD to write
//* log records to SMF.
//*
//* This is required only if $SMF is coded as the destination of
//* one of the rules in the SYSLOGD configuration file (/etc/syslog.conf
//* or whatever was specified via the -f command-line option of syslogd)
//*
//* This example uses SYSLOGD as the userid associated with the SYSLOGD
//* address space or started task.
//* Modify the PERMIT command as appropriate for your environment.
//*BPXSMF EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEFINE FACILITY BPX.SMF UACC(NONE)
//*PERMIT BPX.SMF CLASS(FACILITY) ID(SYSLOGD) ACCESS(READ)
//*SETROPTS RACLIST(FACILITY) REFRESH
//*
//********************************************************************
//* BPX.DAEMON
//********************************************************************
//*  PERMIT Servers to the BPX.DAEMON Facility
//**
//*BPXDAEMN EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*PERMIT BPX.DAEMON CLASS(FACILITY) ID(TCPIP)   ACCESS(READ)
//*PERMIT BPX.DAEMON CLASS(FACILITY) ID(FTPD)    ACCESS(READ)
//*PERMIT BPX.DAEMON CLASS(FACILITY) ID(OSNMPD)  ACCESS(READ)
//*PERMIT BPX.DAEMON CLASS(FACILITY) ID(SYSLOGD) ACCESS(READ)
//*
//* Otelnetd, Rexecd, Rshd and Popper are managed by the Inetd Generic
//* Listner Program, and the userid specified in /etc/inetd.conf must
//* have a UID(0) and be permitted to the BPX.DAEMON facility.
//* For example:
//* otelnet stream tcp nowait BPXROOT /usr/sbin/otelnetd otelnetd
//*
//* The id BPXROOT must be permitted to the BPX.DAEMON facility.
//**********************************************************************
//** PADS Controlled Libraries
//**********************************************************************
//*  All programs that are loaded into an address space and require
//*  daemon authority must be marked as controlled. This means that
//*  any user programs and any runtime library modules that are loaded
//*  need to be marked as controlled.
//*
//*  The commands below will define the necessary data set as
//*  controlled data sets for IP execution.
//**********************************************************************
//*PADS     EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RALT PROGRAM * ADDMEM('SYS1.LINKLIB'/'******'/NOPADCHK)   UACC(READ)
//*RALT PROGRAM * ADDMEM('cee.SCEERUN'/'volser'/NOPADCHK)    UACC(READ)
//*RALT PROGRAM * ADDMEM('tcpip.SEZALOAD'/'volser'/NOPADCHK) UACC(READ)
//*RALT PROGRAM * ADDMEM('db2.DSNLOAD'/'volser'/NOPADCHK)    UACC(READ)
//*RALT PROGRAM * ADDMEM('db2.DSNEXIT'/'volser'/NOPADCHK)    UACC(READ)
//*RALT PROGRAM * ADDMEM('ftp.userexits'/'volser'/NOPADCHK)  UACC(READ)
//*SETROPTS WHEN(PROGRAM) REFRESH
//*
//*********************************************************************
//*********************************************************************
//*********************************************************************
//*********************************************************************
//*********************************************************************
//***                                                             *****
//*** The entries preceding this section are used to setup the    *****
//*** optional IVP for Communications Server IP.                  *****
//***                                                             *****
//*** The following entries are samples of RACF commands          *****
//*** necessary for other Servers, Classes and Facilities.        *****
//***                                                             *****
//*********************************************************************
//*********************************************************************
//*********************************************************************
//*********************************************************************
//* Create Default User Profile
//*********************************************************************
//* All users of Communications Server IP in the OS/390 UNIX
//* environment need an OMVS segment with UID and GID defined. To avoid
//* additional work for the security administrator, the default user
//* can be used.
//**
//*DFLTUSR  EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*ADDUSER  OEDFLTU DFLTGRP(OMVSGRP) NAME('OS/390 UNIX')              -
//*         PASSWORD(password) OMVS(UID(99999) HOME('/')              -
//*         PROGRAM('/bin/sh'))
//*RDEF FACILITY BPX.DEFAULT.USER APPLDATA('OEDFLTU')
//*SETR RACLIST(FACILITY) REFRESH
//*********************************************************************
//*      Enable starting PAGENT and RSVPD from a PROC
//*********************************************************************
//*PAGENT   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEF OPERCMDS (MVS.SERVMGR.PAGENT) UACC(NONE)
//*RDEF OPERCMDS (MVS.SERVMGR.RSVPD) UACC(NONE)
//*PE MVS.SERVMGR.RSVPD  CLASS(OPERCMDS) ACCESS(CONTROL) ID(userid)
//*PE MVS.SERVMGR.PAGENT CLASS(OPERCMDS) ACCESS(CONTROL) ID(userid)
//*SETR RACLIST(OPERCMDS) REFRESH
//***************************************************************
//* OMPROUTE
//***************************************************************
//* To control which users can start OMPROUTE (and thus reduce risk of
//* an unauthorized user starting it and affecting the contents of
//* the routing table), the appropriate users must be RACF authorized to
//* the entity MVS.ROUTEMGR.OMPROUTE. To do this, the following commands
//* must be run, substituting the authorized userid in the ID(user)
//* parm.
//***
//*OMPROUTE EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEF OPERCMDS (MVS.ROUTEMGR.OMPROUTE) UACC(NONE)
//*RDEF OPERCMDS (MVS.ROUTEMGR.OROUTED) UACC(NONE)
//*PE MVS.ROUTEMGR.OMPROUTE ACCESS(CONTROL) CLASS(OPERCMDS) ID(userid)
//*PE MVS.ROUTEMGR.OROUTED  ACCESS(CONTROL) CLASS(OPERCMDS) ID(userid)
//*SETR RACLIST(OPERCMDS) REFRESH
//*********************************************************************
//*      Enable starting DCAS from a proc
//*********************************************************************
//*DCAS   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEF OPERCMDS (MVS.SERVMGR.DCAS) UACC(NONE)
//*PE MVS.SERVMGR.DCAS  CLASS(OPERCMDS) ACCESS(CONTROL) ID(userid)
//*SETR RACLIST(OPERCMDS) REFRESH
//*********************************************************************
//*      Enable DCAS to process certificates
//*********************************************************************
//*RDEFINE FACILITY IRR.DIGTCERT.LISTRING UACC(NONE)
//*PE IRR.DIGTCERT.LISTRING CLASS(FACILITY) ID(userid) ACCESS(CONTROL)
//*SETR RACLIST(DIGTCERT) REFRESH
//***************************************************************
//* NAMED
//***************************************************************
//* If you wish the BIND-based name server to run as swappable, you
//* must have the BPX.STOR.SWAP FACILITY class profile defined to RACF.
//* Additionally, the appropriate users must be denied RACF authority
//* to the entity BPX.STOR.SWAP. The following commands deny access
//* to the facility for all users, thus making the BIND-based name
//* server run in a swappable state, no matter which user ID the name
//* server is started under.  If you wish instead to make the name
//* server run in a non-swappable state, either 1) do not define
//* the BPX.STOR.SWAP facility to RACF, or, 2) define the facility
//* to RACF and allow the appropriate users at least READ access
//* to the facility.
//* If you wish to have the name server run in a non-swappable state,
//* add the following RACF command to the listed commands before the
//* SETR command, substituting the authorized userid in the ID(userid)
//* parm.
//*
//*PERMIT BPX.STOR.SWAP CLASS(FACILITY) ID(userid) ACCESS(READ)
//***
//*NAMED    EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEF FACILITY BPX.STOR.SWAP UACC(NONE)
//*SETR RACLIST(FACILITY) REFRESH
//*
//**********************************************************************
//* Setup Profile for VARY Commands
//**********************************************************************
//* OBEYFILE has been replaced with the VARY OBEYFILE command. Use
//* of the VARY OBEYFILE command may be restricted by defining
//* the MVS.VARY.TCPIP profile.
//* The sample commands below create a generic profile for all of the
//* VARY TCPIP commands and then permits user IBMUSER to issue them.
//***
//*VARY     EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEF OPERCMDS (MVS.VARY.TCPIP.**) UACC(NONE)
//*PE MVS.VARY.TCPIP.** ACCESS(CONTROL) CLASS(OPERCMDS) ID(IBMUSER)
//*SETR GENERIC(OPERCMDS) REFRESH
//*SETR RACLIST(OPERCMDS) REFRESH
//**********************************************************************
//* Setup Network access control
//**********************************************************************
//* The RACF class is SERVAUTH. The resource name consists of the
//* following parts:
//* "EZB"         - constant
//* "NETACCESS"   - constant for this resource type
//* "sysname"     - this is the system name eg: MVS053
//* "tcpprocname" - this is the TCP/IP started procedure name
//* "resource"    - an identifier that is specified in the NETACCESS
//*                 group in the profile or on the DEFAULT statement
//*
//* The following sample assumes a "sysname" of MVS053 and a
//* "tcpprocname" of TCPIP and displays the NETACCESS entries
//* in the TCP/IP profile and the associated resource name.
//*
//*        NETACCESS   INBOUND   OUTBOUND
//*         9.67.114.0/24        HOSTETH1
//*         9.166.0.0/16         HOSTB1
//*         DEFAULT        0     DEFGROUP
//*        ENDNETACCESS
//*
//*  Resource name:
//*          EZB.NETACCESS.MVS053.TCPIP.HOSTETH1
//*          EZB.NETACCESS.MVS053.TCPIP.HOSTB1
//*          EZB.NETACCESS.MVS053.TCPIP.DEFGROUP
//*
//* There can be many of these. Multiple systems and multiple stacks are
//* suported.
//*********
//*NETACC   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEFINE SERVAUTH EZB.NETACCESS.sysname.tcpprocname.resource
//*RDEFINE SERVAUTH EZB.NETACCESS.*.*.resource
//*PERMIT EZB.NETACCESS.sysname.tcpprocname.resource CL(SERVAUTH)  -
//*  ID(userid) ACCESS(READ)
//*PE EZB.NETACCESS.*.*.resource CL(SERVAUTH) ID(userid) ACCESS(READ)
//*SETR GENERIC(SERVAUTH) REFRESH
//*SETROPTS RACLIST(SERVAUTH) REFRESH
//**********************************************************************
//* Setup Stack access control
//**********************************************************************
//* The RACF class is SERVAUTH. The resource name consists of the
//* following parts:
//* "EZB"         - constant
//* "STACKACCESS" - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP proc name
//*
//* THERE CAN ONLY BE ONE OF THESE PER STACK. When resource is not
//* defined, no stack access checking is in effect.
//* When the resource is defined, a user must be permitted to the
//* resource in order to access the stack.
//***
//*STACKACC   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEFINE SERVAUTH EZB.STACKACCESS.sysname.tcpprocname
//*PERMIT EZB.STACKACCESS.sysname.tcpprocname CL(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*SETROPTS RACLIST(SERVAUTH) REFRESH
//**********************************************************************
//* Setup Port access control
//**********************************************************************
//* "EZB"         - constant
//* "PORTACCESS"  - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP started procedure name
//* "port"        - this is the resource name defined on the PORT or
//*                 PORTRANGE statement with the SAF keyword
//*
//* There can be many of these. Multiple systems and multiple stacks
//* are supported. When a resource is coded on PORT or PORTRANGE with
//* the SAF keyword,the userid of the process attempting to bind to
//* the protected port must be permitted to the resource.
//* (or the resource must be defined with UACC(READ)).
//*
//* Here is an example of the port statement in the TCP/IP profile:
//*
//*            PORT 765 TCP USER1 SAF PORT765
//*
//* With this definition, USER1 must have access to the resource
//* EZB.PORTACCESS.sysname.tcpprocname.PORT765
//* or the bind with fail with access denied.
//* Note that the name following SAF is any identifier you choose
//* which is acceptable to the security product.
//***
//*PORTACC   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEFINE SERVAUTH EZB.PORTACCESS.sysname.tcpprocname.port
//*PERMIT EZB.PORTACCESS.sysname.tcpprocname.port CL(SERVAUTH) -
//**********************************************************************
//* Setup FRCA access control
//**********************************************************************
//* The RACF class is SERVAUTH. The resource name consists of the
//* following parts:
//* "EZB"         - constant
//* "FRCAACCESS"  - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP proc name
//*
//* THERE CAN ONLY BE ONE OF THESE PER STACK. When resource is not
//* defined, no fast resource cache accelerator access checking is in
//* effect. When the resource is defined, the webserver user must be
//* permitted to the resource in order to use the cache.
//***
//*FRCAACC    EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEFINE SERVAUTH EZB.FRCAACCESS.sysname.tcpprocname
//*PERMIT EZB.FRCAACCESS.sysname.tcpprocname CL(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*SETROPTS RACLIST(SERVAUTH) REFRESH
//**********************************************************************
//* Setup Profile for MODDVIPA
//**********************************************************************
//* "EZB"         - constant
//* "MODDVIPA"    - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP started procedure name
//*
//* Use of the MODDVIPA utility can be restricted by defining this RACF
//* profile. If this profile is not defined, the user must have
//* SuperUser authority in order to execute the MODDVIPA utility from
//* an APF authorized library.
//* Once this profile is defined, all users (including SuperUsers) who
//* wish to execute the MODDVIPA utility must be permitted to this
//* profile.  SuperUser authority alone will not allow the MODDVIPA
//* utility to be used.
//* The sample commands below create a discrete profile for the MODDVIPA
//* program (EZBXFDVP) and then permits user IBMUSER to use it.
//***
//*MODDVACC EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEF SERVAUTH (EZB.MODDVIPA.sysname.tcpprocname) UACC(NONE)
//*PERMIT EZB.MODDVIPA.sysname.tcpprocname CLASS(SERVAUTH) -
//*   ACCESS(READ) ID(IBMUSER)
//*SETROPTS RACLIST(SERVAUTH) REFRESH
//***************************************************************
//* Sample commands for setting up a RACF Keyring
//* (RACF digital certificates)
//***************************************************************
//* The following shows the most common commands you will need
//* to set up a RACF Keyring to use with the TN3270 server.
//* The options, such as keysize, selfsigned certificates, etc
//* will vary depending on the installation's requirements.
//*
//* In the example below:
//*    TCPID is the userid associated with the TCP stack
//*    TN3270KR is the keyring that will be used by the TN3270 server
//*          and coded in the TELNETPARMS as
//*          KEYRING saf TN3270KR (note this name is case sensitive)
//*
//* The example includes a selfsigned server certificate and an
//* imported certificate.  Normally, only one of these would be used.
//*
//* SETROPTS- to Activate certificate and keyring classes
//* RDEFINE- give tcp control access to irr.digtcert.listring resource
//* PERMIT- a keyring that is associated with the tcp stack
//* RACDCERT(1-3) - create a selfsigned server certificate for testing
//*   and connect it to the keyring as a default certificate
//* RACDCERT(4)- add a server key and certificate (PKCS12 format) that
//*   has been exported from gskkyman with a password of 'password'
//*   and copied to an MVS file using oget with the binary option
//* RACDCERT(5)-connect a server certificate to a keyring and
//*   make it the default server certificate
//* RACDCERT(6)-change  the Verisign Class 3 CA to trusted status
//* RACDCERT(7)-connect the Verisign Class 3 CA to TCP's Keyring
//* RACDCERT(8)-add a client certificate (in DER format) for USER2
//*   to the database (assumes issuer CA certificate already
//*   in the database and has trusted status)
//* SETROPTS- Refresh classes and list stack certificates and keyrings
//*
//*KEYRING EXEC PGM=IKJEFT01
//*SYSTSPRT DD SYSOUT=*
//*SYSUADS DD DSN=SYS1.UADS,DISP=SHR
//*SYSLBC  DD DSN=SYS1.BRODCAST,DISP=SHR
//*SYSTSIN DD *
//* SETROPTS CLASSACT(DIGTCERT DIGTRING)
//*RDEFINE FACILITY IRR.DIGTCERT.LISTRING UACC(NONE)
//*PERMIT IRR.DIGTCERT.LISTRING CLASS(FACILITY)             -
//*    ID(TCPID) ACCESS(CONTROL)
//* RACDCERT(1)
//*RACDCERT ID(TCPID) ADDRING(TN3270KR)
//* RACDCERT(2)
//*RACDCERT ID(TCPID) GENCERT  SUBJECTSDN(CN('SVT TN3270 SERVER') -
//*    OU('SVT')  O('SVT') C('US')) WITHLABEL ('SVTSERVERCERT')   -
//*    TRUST SIZE(512)
//* RACDCERT(3)
//*RACDCERT ID(TCPID) CONNECT (ID(TCPID) RING(TN3270KR) -
//*  LABEL('SVTSERVERCERT') DEFAULT)
//* RACDCERT(4)
//*RACDCERT ID(TCPID) ADD('TCP.SVTSERVR.P12')          -
//*    WITHLABEL('TCPSERVERCERT') TRUST PASSWORD('password')
//* RACDCERT(5)
//*RACDCERT ID(TCPID) CONNECT (ID(TCPID) RING(TN3270KR) -
//*  LABEL('TCPSERVERCERT') DEFAULT)
//* RACDCERT(6)
//*RACDCERT CERTAUTH ALTER( LABEL('Verisign Class 3 Primary CA')) TRUST
//* RACDCERT(7)
//*RACDCERT ID(TCPID) CONNECT (CERTAUTH    RING(TN3270KR)    -
//*   LABEL('Verisign Class 3 Primary CA') USAGE(CERTAUTH)  )
//* RACDCERT(8)
//*RACDCERT ID(USER2) ADD('SVT.SSL.CLNTCERT.VROK.DER')       -
//*    WITHLABEL('CLNTCERT_VROK') TRUST
//*SETROPTS RACLIST (DIGTRING DIGTCERT) REFRESH
//*RACDCERT ID(TCPID) LISTRING(*)
//*RACDCERT ID(TCPID) LIST
//**********************************************************************
//* FTP Security (Terminal Access)
//**********************************************************************
//* The terminal ID passed from FTP to RACF is an 8-byte hexadecimal
//* character string containing an IP address.
//* RACF interprets this as a terminal logon address and rejects it if
//* it is not previously defined.
//*
//* For example, the IP address 163.97.227.17 is translated to
//* X'A361E311'.
//*
//* Therefore, if the SETROPTS TERMINAL(NONE) setting is used in
//* RACF, you must define profiles for the IP addresses in the
//* TERMINAL class to avoid problems when trying to FTP to MVS.
//*
//* You must translate all the IP addresses of any clients connecting to
//* FTP servers to  hexadecimal character strings and add them
//* to the TERMINAL class.
//*
//* To allow access by all addresses starting with "163,"
//* define a profile  for all addresses in the 163.97.227 subnet as
//* in this example.
//*
//* If your RACF SETROPTS options are TERMINAL(READ), all terminals
//* are allowed access to your system, and you do not have to add
//* extra resource definitions to your RACF data base.
//*
//**********************************************************************
//*FTPTERM  EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*RDEFINE TERMINAL A361E3* UACC(READ)
//*SETROPTS CLASSACT(TERMINAL) RACLIST(TERMINAL)
//*
//**********************************************************************
//* FTP Trace Authorization
//**********************************************************************
//* A client may use the SITE DEBUG and SITE DUMP subcommands to write
//* excessive debugging information to the syslog and effectively
//* disable the syslog function.
//*
//* To prevent this problem, a RACF profile can be defined that
//* controls whether a client is allowed to use these parameters on
//* the SITE subcommand.
//* The SERVAUTH resource class resource name checked is defined
//* below:
//*
//*    EZB.FTP."sysname"."ftpdname".SITE."tracename"
//* Where
//* "EZB"         - constant
//* "FTP"         - constant for this resource type
//* "sysname"     - this is the system name eg: VIC135
//* "ftpdname"    - this is the FTP daemon name
//* "SITE"        - constant for this command
//* "tracename"   - either "DEBUG" or "DUMP"
//*
//* For example, if the system name is VIC137 and the FTP daemon name
//* is FTPD, the the resource names will be:
//*    EZB.FTP.VIC135.FTPD.SITE.DEBUG
//*    EZB.FTP.VIC135.FTPD.SITE.DUMP
//*
//**********************************************************************
//*FTPSITE  EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEFINE SERVAUTH EZB.FTP.sysname.ftpdname.SITE.DUMP UACC(NONE)
//*RDEFINE SERVAUTH EZB.FTP.sysname.ftpdname.SITE.DEBUG UACC(NONE)
//*PERMIT EZB.FTP.sysname.ftpdname.SITE.DUMP CL(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*PERMIT EZB.FTP.sysname.ftpdname.SITE.DEBUG CL(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*SETROPTS RACLIST(SERVAUTH) REFRESH
//*
//**********************************************************************
//* Setup SNMP Agent/Subagent connection access control
//**********************************************************************
//* The RACF class is SERVAUTH. The resource name consists of the
//* following parts:
//* "EZB"         - constant
//* "SNMPAGENT"   - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP proc name
//*
//* THERE CAN ONLY BE ONE OF THESE PER STACK. See the SNMP Chapter
//* of the IP Configuration Guide for a description of this
//* resource.
//***
//*SNMPACC    EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*RDEFINE SERVAUTH EZB.SNMPAGENT.sysname.tcpprocname UACC(NONE)
//*PERMIT EZB.SNMPAGENT.sysname.tcpprocname CLASS(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*SETROPTS RACLIST(SERVAUTH) REFRESH
/*
//**********************************************************************
//* Setup TSO and UNIX shell Netstat access control
//**********************************************************************
//* The RACF class is SERVAUTH. The resource name consists of the
//* following parts:
//* "EZB"         - constant
//* "NETSTAT"     - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP proc name
//* "*"           - this is for all of Netstat options
//*
//* There can be many of these per stack. See the Netstat chapter
//* of the IP User's Guide for a description of this resouce.
//***
//*NETSTACC   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*SETROPTS GENERIC(SERVAUTH)
//*RDEFINE SERVAUTH EZB.NETSTAT.sysname.tcpprocname.* UACC(NONE)
//*PERMIT EZB.NETSTAT.sysname.tcpprocname.* CLASS(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*SETROPTS GENERIC(SERVAUTH) REFRESH
//*SETROPTS RACLIST(SERVAUTH) REFRESH
/*
//**********************************************************************
//* Setup TSO and UNIX shell Pagent/pasearch access control
//**********************************************************************
//* The RACF class is SERVAUTH. The resource name consists of the
//* following parts:
//* "EZB"         - constant
//* "PAGENT"      - constant for this resource type
//* "sysname"     - this is the system name
//* "tcpprocname" - this is the TCPIP proc name
//* "*"           - this is for all of policy type options
//*
//* There can be many of these per stack. See the Netstat chapter
//* of the IP User's Guide for a description of this resource.
//***
//*PAGNACC   EXEC PGM=IKJEFT01
//*SYSTSPRT DD  SYSOUT=*
//*SYSTSIN  DD  *
//*SETROPTS CLASSACT(SERVAUTH)
//*SETROPTS RACLIST(SERVAUTH)
//*SETROPTS GENERIC(SERVAUTH)
//*RDEFINE SERVAUTH EZB.PAGENT.sysname.tcpprocname.* UACC(NONE)
//*PERMIT EZB.PAGENT.sysname.tcpprocname.* CLASS(SERVAUTH) -
//*  ID(userid) ACCESS(READ)
//*SETROPTS GENERIC(SERVAUTH) REFRESH
//*SETROPTS RACLIST(SERVAUTH) REFRESH
/*
./ ADD NAME=J4ABPXPR 0114-04350-04350-1300-00062-00064-00000-HOWTO

REVIEW/UPDATE BPXPRMxx


Definitions  for AF_UNIX and AF_INET are contained in BPXPRMxx PARMLIB.
If you have two AF_INET transport providers on an MVS  image  you  must
use the Common INET - CINET.  CINET is defined in the BPXPRMxx to iden-
tify  the use of the Converged Sockets Physical File System as shown in
the following example.

  FILESYSTYPE TYPE(CINET) ENTRYPOINT(BPXTCINT)
    NETWORK DOMAINNAME(AF_INET)
      DOMAINNUMBER(2)
      MAXSOCKETS(64000)
      TYPE(CINET)
      INADDRANYPORT(4000)
      INADDRANYCOUNT(2000)
    SUBFILESYSTYPE NAME(tcpjob1)
                     TYPE(CINET)
                     ENTRYPOINT(EZBPFINI)
    SUBFILESYSTYPE NAME(tcpjob2)
                     TYPE(CINET)
                     ENTRYPOINT(EZBPFINI)

You must have  one  SUBFILESYSTYPE  for  each  TCP/IP  stack  (tcpjob1,
tcpjob2), that you will be using.

See  z/OS  Communications Server: IP Configuration Reference, SC31-8776
for more information about updating the BPXPRMxx member for  TCP/IP  in
your environment.

NOTES:

1.  Check to ensure that the INADDRANYPORT assignment does not conflict
    with PORT assignments in the PROFILE.TCPIP data set.

2.  The  above  or parts of it may already be in your BPXPRMxx.  Do not
    create duplicate entries.


MAKE UPDATES TO THE COMMUNICATIONS SERVER IP SERVICES PROFILE


DCE requires use of the Communications Server IP Services port 135.
Ensure data set PROFILE.TCPIP does not reserve port 135 for another
application.

Print Interface  requires the use of TCP port 515 in a default config-
uration. Ensure data set PROFILE.TCPIP does not reserve  port  515  for
another application. You may need to ensure the ports listed below  are
not reserved, if you want to use these functions of Infoprint Server:

+---------------------+-----------------------------------------------+
|SNMP                 | ports 161 and 162                             |
|agent/sub-agent      |                                               |
+---------------------+-----------------------------------------------+
|IPP server           | port 631                                      |
+---------------------+-----------------------------------------------+

See  z/OS Communications Server: IP Configuration Reference, SC31-8776,
for more information.

./ ADD NAME=J4BBPXFI 0114-04350-04350-1300-00062-00066-00000-HOWTO

z/OS 1.4 Security Server - Firewall


REVIEW BPXPRMXX PARMLIB MEMBER

Entries exist in BPXPRMxx for AF_UNIX and AF_INET.

If  you are using more than one transport provider for AF_INET, use the
following definition:

  FILESYSTYPE TYPE(CINET)  ENTRYPOINT(BPXTCINT)
  NETWORK DOMAINNAME(AF_INET)
          DOMAINNUMBER(2)
          MAXSOCKETS(10000)
          TYPE(CINET)
  SUBFILESYSTYPE NAME(tcpjob1)
                 TYPE(CINET)
                 ENTRYPOINT(EZBPFINI)
  SUBFILESYSTYPE NAME(tcpjob2)
                 TYPE(CINET)
                 ENTRYPOINT(EZBPFINI)

You must provide a  SUBFILESYSTYPE  statement  for  each  TCP/IP  stack
(tcpjob1, tcpjob2) that you plan to use.

For  more  information about AF_UNIX and AF_INET, see z/OS MVS Initial-
ization and Tuning Reference, SA22-7592, and z/OS UNIX System  Services
Planning, GA22-7800.


UPDATING PROCLIB

+---------------------------------------------------------------------+
|Table 1. PROCLIB Member Updates                                      |
+-------------+-------------------------------------------------------+
|PROCLIB      | Action to Take                                        |
|Member       |                                                       |
+-------------+-------------------------------------------------------+
|FWKERN       | Update for your environment.  These members are pro-  |
|ICAPIKED     | vided in your SICAPROC library.                       |
|ICAPSOCK     |                                                       |
|ICAPPFTP     |                                                       |
|ICAPCFGS     |                                                       |
|ICAPKERN     |                                                       |
|ICAPSTAK     |                                                       |
+-------------+-------------------------------------------------------+

The  SICAPROC  procedure library must either be fully copied to PROCLIB
or added to a PROCLIB concatenation accessible to JES.

SETTING APPROPRIATE PERMISSION/OWNERSHIP FOR HFS FILES

Run job J4ICAPOS in the installation dialog  (ICAPOST  in  the  program
directory)  to alter the HFS permission/ownership.  Review the comments
before submitting the job.

If you have not done so already, you must define the Firewall group  id
(FWGRP)  to  your security system.   For more information on setting up
this group definition and configuring the Firewall, see  z/OS  Security
Server Firewall Technologies, SC24-5922.

./ ADD NAME=J4ICAPOS 0114-04350-04350-1300-00039-00041-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: J4ICAPOS  (product-supplied job ICAPOST in library SICASAMP)
//*
//* DOC: This job defines permissions and ownership of the
//*      configuration executables.
//*
//* NOTES:
//*   1. This job must be run from a userid that has a UID(0)
//*      or access to BPX.SUPERUSER.
//*   2. Change -PathPrefix- below to a / if you are installing
//*      in the root file system or the starting directory
//*      of a new root file system, that is /SERVICE.
//*   3. Change -fwgid-  below to the numeric group id (GID)
//*      of the Firewall group (FWGRP).
//*   4. Change -sys1gid- below to the numeric group id (GID)
//*      of the SYS1 group.
//*
//* MRC: The maximum expected return code is 0.
//*
//********************************************************************
//ICAPOST EXEC PGM=IKJEFT01
//SYSEXEC  DD DSN=ICA.SICASAMP,
//            DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN DD *
PROF MSGID
ICAPOSTR -PathPrefix- -fwgid- -sys1gid-
/*
./ ADD NAME=J5APKIDC 0114-04350-04350-1300-00015-00015-00000-HOWTO

z/OS 1.4 Security Server - PKI Services


ALLOCATE VSAM DATA SETS

Run  job  J5PKIJOB  in the installation dialog (IKYCVSAM in the program
directory) to allocate VSAM data sets for runtime use.

ESTABLISH SECURITY FOR SECURITY SERVER - PKI SERVICES

A sample REXX EXEC provided in SYS1.SAMPLIB(IKYSETUP) can  be  used  to
define  RACF  userids  and profiles for Security Server - PKI Services.
This REXX EXEC must be modified before it is run.

./ ADD NAME=J5BDCEBA 0114-04350-04350-1300-00151-00163-00000-HOWTO
z/OS 1.4 DCE BASE SERVICES


BPXPRM00 EXMP.PARMLIB MEMBER

The default values provided in BPXPRM00 are sufficent to run
DCE Base Services.     For   information  about  customizing
BPXPRM00 for this product, see
z/OS DCE Configuring and Getting Started.


PROCLIB MEMBER CONSIDERATIONS

The SEUVPRC procedure library members have  been  copied  to
EXMP.PROCLIB.


DCE BASE SERVICES IDL PROC CUSTOMIZATION CONSIDERATIONS

If you plan to use the IDL Compiler  under  TSO/E,  you  can
optionally make  the  following  changes  to the IDL PROC in
EXMP.PROCLIB:

o   Change DCEPFX to match the  high-level  qualifier  under
    which you have installed the DCE libraries.

o   Change  LNGPFX to match the  high-level  qualifier  that
    you have used for the SCEEH.H  and  SCEEMSGP  libraries.


UPDATING ISPF COMMAND TABLE ISPTCM

If you place any of these modules in LPA,
you must add their names to ISPF Command Table (ISPTCM):

EUVBCONF                             EUVSEDB
EUVCCP                               EUVSIDB
EUVDCECP                             EUVSKDST
EUVRCP                               EUVSKINI
EUVRIDL                              EUVSKLST
EUVRUGEN                             EUVSLGN
EUVSADMIN                            EUVSRED
EUVSAED                              EUVTCP
EUVSCDB

For more information, see z/OS ISPF Planning and Customizing.


DEFINING DCEKERN TO RACF


To define DCEKERN to RACF,  you  must create  the  following
definitions:

o   Define DCEGRP as a group
o   Define DCEKERN as a user
o   Define DCEKERN as a started task.

For RACF, use the following commands:

  ADDGROUP DCEGRP SUPGROUP(SYS1) OMVS(GID(2))
  ADDUSER DCEKERN OMVS(HOME(/opt/dcelocal/home/dcekern/) UID(0))
                DFLTGRP(DCEGRP) AUTHORITY(CREATE)  UACC(ALTER)
  RDEFINE STARTED DCEKERN.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  RDEFINE STARTED DCESECD.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  RDEFINE STARTED DCECDSD.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  RDEFINE STARTED DCEDTSTP.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  RDEFINE STARTED DCEAUDD.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  RDEFINE STARTED DCEPWDD.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  RDEFINE STARTED DCEGDAD.** STDATA(USER(DCEKERN) GROUP(DCEGRP))
  SETROPTS RACLIST(STARTED) REFRESH

For more information, see the following:

o   z/OS UNIX System Services Planning
o   z/OS Security Server (RACF) Security Administrator's Guide
o   z/OS  Security Server (RACF) Command Language Reference.


DEFINING THE DCE ADMINISTRATOR USER ID TO RACF


To define the DCE administrator  user ID to RACF,  you  must
define DCEADM as a user.

For RACF, use the following commands.   Replace -parameters-
with the information required on your system.

  ADDUSER DCEADM OMVS(HOME(/u/dceadm) PROGRAM(/bin/sh) UID(0))
                DFLTGRP(DCEGRP) AUTHORITY(CREATE) UACC(NONE)
                TSO(-parameters-)

For more information, see the following:

o   z/OS UNIX System Services Planning
o   z/OS Security Server (RACF) Security Administrator's Guide
o   z/OS Security Server (RACF) Command Language Reference.


CREATING THE DCEKERN.START.REQUEST RESOURCE PROFILE


To successfully run the DCE configuration program, you must:

o   Define the following FACILITY class resource profiles to
    your security product.

o   Ensure that the FACILITY is active.

o   Permit DCEADM and DCEKERN update access to the resources
    defined below.

For RACF, use the following commands:

  RDEFINE FACILITY DCEKERN.START.REQUEST UACC(NONE)
  RDEFINE FACILITY DCESECD.START.REQUEST UACC(NONE)
  RDEFINE FACILITY DCECDSD.START.REQUEST UACC(NONE)
  RDEFINE FACILITY DCEDTSTP.START.REQUEST UACC(NONE)
  RDEFINE FACILITY DCEAUDD.START.REQUEST UACC(NONE)
  RDEFINE FACILITY DCEPWDD.START.REQUEST UACC(NONE)
  RDEFINE FACILITY DCEGDAD.START.REQUEST UACC(NONE)
  PERMIT DCEKERN.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)
  PERMIT DCESECD.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)
  PERMIT DCECDSD.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)
  PERMIT DCEDTSTP.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)
  PERMIT DCEAUDD.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)
  PERMIT DCEPWDD.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)
  PERMIT DCEGDAD.START.REQUEST CLASS(FACILITY) ID(DCEKERN DCEADM)
      ACCESS(UPDATE)

For more information, see the following:

o   z/OS Security Server (RACF) Security Administrator's Guide
o   z/OS Security Server (RACF) Command Language Reference.


UPDATING THE COMMUNICATIONS SERVER IP SERVICES PROFILE

DCE requires  the  use  of eNetwork Communications Server IP
port 135.   Ensure  that data set hlq.PROFILE.TCPIP does not
reserve port 135 for another application.

For  information about the PORT statement, see
z/OS Communications Server: IP Configuration.

./ ADD NAME=J5CDFS   0114-04350-04350-1300-00180-00192-00000-HOWTO

z/OS 1.4 Distributed File Service


UPDATE BPXPRMXX PARMLIB MEMBER

Add  the  following parameters to BPXPRMxx, if you plan to use the Dis-
tributed File Service client for DCE:

  FILESYSTYPE TYPE(DFSC) ENTRYPOINT(IOECMINI)
  PARM('ENVAR("_EUV_HOME=/opt/dfslocal/home/dfscm") /
  >DD:IOEDFSD 2>&1')
  ASNAME(DFSCM)

See z/OS Distributed File  Service  Customization,  SC24-5916,  section
"BPXPRMxx FILESYSTYPE TYPE(DFSC) Entry" for more information.

The following entry is required to run zFS:

  FILESYSTYPE TYPE(ZFS) ENTRYPOINT(IOEFSCM) ASNAME(ZFS)

See  z/OS  Distributed File Service zSeries File System Administration,
SC24-5989, for more information.


PROCLIB MEMBER CONSIDERATIONS

The  procedures  needed  to  start  the  DFS started task reside in the
target data set SIOEPROC and have been copied to EXMP.PROCLIB for  you.
EXMP.PROCLIB  is a procedure library in your JES procedure library con-
catenation.  Ensure that any updates to the DFS procedures are made  to
the copies in EXMP.PROCLIB.

+---------------------------------------------------------------------+
|Table 1. DFS Procedures                                              |
+----------+-----------+----------------------------------------------+
|Name      | Alias     | Description                                  |
+----------+-----------+----------------------------------------------+
|IOEP0001  | DFS       | JCL to run the DFS server                    |
+----------+-----------+----------------------------------------------+
|IOEP0002  | DFSCM     | JCL to run the DFS client                    |
+----------+-----------+----------------------------------------------+
|IOEP0003  | DFSKERN   | JCL to run DFSKERN process in a separate     |
|          |           | address space                                |
+----------+-----------+----------------------------------------------+
|IOEP0004  | ZFS       | JCL to run the zFS server                    |
+----------+-----------+----------------------------------------------+

For  more  information  on PROCLIB considerations, see z/OS Distributed
                                                       ________________
File Service Customization, SC24-5916.


RACF UPDATES FOR DFS/SMB/ZFS

To define DFS to RACF, you must create the following  definitions  with
these exact names:

o   Define DFSGRP as a group
o   Define DFS as a user
o   Define DFS as a started task
o   Define  DFSCM  as  a started task if you plan to run the DFS client
    support for DCE
o   Define DFSKERN as a started task  to  run  DFSKERN  in  a  separate
    address space
o   Define ZFS as a started task.

For RACF, use the following commands:

  ADDGROUP DFSGRP SUPGROUP(SYS1) OMVS(GID(5))
  ADDUSER DFS OMVS(HOME(/opt/dfslocal/home/dfscntl) UID(0))
  DFLTGRP(DFSGRP) AUTHORITY(CREATE) UACC(NONE)
  RDEFINE STARTED DFS.** STDATA(USER(DFS))
  RDEFINE STARTED DFSCM.** STDATA(USER(DFS))
  RDEFINE STARTED DFSKERN.** STDATA(USER(DFS))
  RDEFINE STARTED ZFS.** STDATA(USER(DFS))
  SETROPTS RACLIST(STARTED) REFRESH

NOTES:

1.  The home directory for the userid running the  DFS  server  can  be
    overridden  by  the  _EUV_HOME envar value specified in the DFSCNTL
    PARM as shown in the IOEP0001 (DFS) procedure.

2.  The userid DFS should not be enabled for DCE single sign-on.  Also,
    an equivalent userid can be used.

3.  The RDEFINE for DFS and DFSKERN applies to both  the  DCE  and  SMB
    support.  The  RDEFINE  for DFSCM applies to the client support for
    DCE and is not required for SMB support.

A security facility for DFSKERN must be added to the  security  program
and  be  permitted  to the userid(s) that run the DFS and/or SMB server
function.

For RACF, use the following commands:

  RDEFINE FACILITY DFSKERN.START.REQUEST UACC(NONE)
  PERMIT DFSKERN.START.REQUEST CLASS(FACILITY) ID(DFS)
  ACCESS(UPDATE)
  SETROPTS CLASSACT(FACILITY)

If  you  wish to exploit hardware encryption capabilities for SMB pass-
word encryption, the OCSF Base component of the  Cryptographic  Service
element  must  be operational.  To use OCSF, you must permit the userid
defined  previously  for the DFS/SMB server daemon (usually the  userid
DFS)  to  use  the OCSF services.  See the "Cryptographic Services OCSF
Customization Considerations" section and z/OS Open Cryptographic  Ser-
vices Facility Application Programming, SC24-5899, chapter "Configuring
and Getting Started" for more information.

If ICSF is active, you need to permit the DFS userid READ access to the
profiles  in  the  CSFSERV  general  resource  class.    See  the "ICSF
Customization Considerations" section for references to the appropriate
ICSF documentation that describes the CSFSERV resource class.

For details on RACF, see the following:

o   z/OS UNIX System Services Planning, GA22-7800
o   z/OS Security Server RACF Security Administrator's Guide, SA22-7683
o   z/OS Security Server RACF Command Language Reference, SA22-7687


RUNNING THE dfs_cpfiles PROGRAM

Run the H0H2340M job provided in the installation dialog to execute the
dfs_cpfiles program that creates  new  HFS  /etc  envar,  ioepdcf,  and
CacheInfo  files  needed  to  customize the DFS, DFS client, or the SMB
File/Print server support.  The dfs_cpfiles program does not delete  or
replace  any  files that exist.   The dfs_cpfiles program should be run
now if either DFS or SMB support will be used.   This job must  be  run
from the target system.

See the "Post Installation Considerations" sections of z/OS Distributed
File  Service Customization, SC24-5916 or z/OS Distributed File Service
SMB  Administration,  SC24-5882,  for  more   information   about   the
dfs_cpfiles program.


ADDITIONAL DFS/SMB CONSIDERATIONS

o   Authorized Libraries:

    The  DFS server runs as an APF-authorized server when it is used as
    either a DCE DFS or SMB File/Print server.  You must always  ensure
    that  any  DLLs  or  other  libraries  used  by  the DFS server are
    APF-authorized.   Use the exattr  +a  command  to  APF-authorize  a
    library.

o   SMB Print Serving:

    If  you plan to use the SMB print serving capability, you must com-
    plete the installation and customization Infoprint Server.  Be sure
    that the Infoprint Server DLLs that reside in /usr/lpp/Printsrv/lib
    are APF-authorized.

o   SMB Password Encryption:

    To use SMB password encryption, you must specify

    _IOE_SMB_CLEAR_PW=ALLOWED|NOTALLOWED

    in  the /etc/dfs/home/dfskern/envar file created by the dfs_cpfiles
    program.

    If  you  do  have  the  hardware  encryption  capabilities  of  the
    Cryptographic  Coprocessor  Feature  or do not wish to use hardware
    encryption for SMB password encryption, you can specify

    _IOE_SMB_OCSF=OFF

    in the /etc/dfs/home/dfskern/envar file.

    If you will exploit hardware encryption  capabilities  provided  by
    the  Cryptographic  Coprocessor Feature, you must use OCSF. See the
    "RACF Updates for DFS/SMB/zFS" section for information  on  how  to
    permit the DFS/SMB server daemon to use OCSF services. Also, use of
    OCSF  requires  that  the  OCSF  DLLs  that  reside  in /usr/lib be
    APF-authorized.

./ ADD NAME=J5PKIJOB 0114-04350-04350-1300-00160-00160-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRAMMR',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: J5PKIJOB  (product-supplied job IKYCVSAM in library SAMPLIB)
//*
//* DOC: This job creates the VSAM data sets PKI Services utilizes
//*      to store certificate requests and issued certificates.
//*
//* NOTES:
//*   1. If you wish to change the data set qualifiers from the
//*      default value, change PKISRVD.VSAM
//*      to a preferred value. If you choose to modify this value,
//*      be sure to also modify the sample configuration file
//*      appropriately (/etc/pkiserv/pkiserv.conf).
//*
//*   2. If you are using VSAM Record Level Sharing (RLS), perform
//*      the following steps:
//*
//*      a) Replace the VOL(C4WRK1) statements with
//*         STORCLAS(class-name) where class-name is the name of the
//*         storage class defined for VSAM RLS.
//*      b) Remove the SPANNED and CISIZE statements.
//*
//*      If not using VSAM RLS, change C4WRK1
//*      to the volser of the volume for VSAM data sets.
//*      Do not remove the SPANNED and CISIZE statements.
//*
//*   3. If you wish to change either the primary or secondary record
//*      allocation sizes for either the OST or ICL data sets from the
//*      default value, update the RECORDS(50 50) operands on the
//*      DEFINE CLUSTER or DEFINE ALTERNATE INDEX commands.
//*
//*  *** Note, do not change any of the numeric values other than
//*      RECORDS(50 50)
//*
//* MRC: The maximum expected return code is 0.
//*-------------------------------------------------------------------*
//* Delete cluster, AIX, and PATH if they already exist
//*-------------------------------------------------------------------*
//DELCLUST EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
    DELETE -
        PKISRVD.VSAM.OST -
        CLUSTER -
        PURGE -
        ERASE
    DELETE -
        PKISRVD.VSAM.ICL -
        CLUSTER -
        PURGE -
        ERASE
    IF LASTCC LT 9 THEN SET MAXCC = 0
/*
//*-------------------------------------------------------------------*
//* Define KSDS                                                       *
//*-------------------------------------------------------------------*
//DEFKSDS  EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
    DEFINE CLUSTER -
        (NAME(PKISRVD.VSAM.OST) -
        VOL(C4WRK1) -
        RECSZ(1024 32756) -
        INDEXED -
        NOREUSE -
        KEYS(4 0) -
        SHR(2) -
        SPANNED -
        CISZ(512) -
        RECORDS(50 50) -
        LOG(NONE) -
        OWNER(PKISRVD) ) -
      DATA -
        (NAME(PKISRVD.VSAM.OST.DA)) -
      INDEX -
        (NAME(PKISRVD.VSAM.OST.IX))
    DEFINE CLUSTER -
        (NAME(PKISRVD.VSAM.ICL) -
        VOL(C4WRK1) -
        RECSZ(1024 32756) -
        INDEXED -
        NOREUSE -
        KEYS(4 0) -
        SHR(2) -
        SPANNED -
        CISZ(512) -
        RECORDS(50 50) -
        LOG(NONE) -
        OWNER(PKISRVD) ) -
      DATA -
        (NAME(PKISRVD.VSAM.ICL.DA)) -
      INDEX -
        (NAME(PKISRVD.VSAM.ICL.IX))
/*
//*-------------------------------------------------------------------*
//* Repro record of all binary zeros into KSDS                        *
//*-------------------------------------------------------------------*
//REPROKSD EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSDATA  DD   *
                                                                        
//SYSIN    DD   *
   REPRO INFILE(SYSDATA) -
      OUTDATASET(PKISRVD.VSAM.OST)
   REPRO INFILE(SYSDATA) -
      OUTDATASET(PKISRVD.VSAM.ICL)
/*
//*-------------------------------------------------------------------*
//* Define ALTERNATE INDEX and PATH                                   *
//*-------------------------------------------------------------------*
//DEFALTDX EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
    DEFINE ALTERNATEINDEX -
       (NAME(PKISRVD.VSAM.OST.AIX) -
        RELATE(PKISRVD.VSAM.OST)-
        VOL(C4WRK1) -
        RECORDS(50 50) -
        KEYS(24 44) ) -
      DATA -
        (NAME(PKISRVD.VSAM.OST.AIX.DA)) -
      INDEX -
        (NAME(PKISRVD.VSAM.AIX.IX))
    DEFINE PATH -
        (NAME(PKISRVD.VSAM.OST.PATH) -
         PATHENTRY(PKISRVD.VSAM.OST.AIX))
/*
//*-------------------------------------------------------------------*
//* Build ALTERNATE INDEX                                             *
//*-------------------------------------------------------------------*
//BLDINDEX EXEC PGM=IDCAMS
//BASEDD   DD  DSNAME=PKISRVD.VSAM.OST,
//             DISP=OLD
//AIXDD    DD  DSNAME=PKISRVD.VSAM.OST.AIX,
//             DISP=OLD
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
    BLDINDEX INFILE(BASEDD) -
        OUTFILE(AIXDD)
/*
//*-------------------------------------------------------------------*
//* Print out the cluster                                             *
//*-------------------------------------------------------------------*
//PRTCLUST EXEC PGM=IDCAMS
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
   PRINT -
     INDATASET(PKISRVD.VSAM.OST) CHAR
/*
//*
./ ADD NAME=J5SETDFS 0114-04350-04350-1300-00030-00032-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*********************************************************************
//*
//* JOB: J5SETDFS
//*
//* DOC: This script is to assist in the configuration of DFS.
//*      This script will create the default DFS envar, ioepdcf,
//*      and CacheInfo files if they don't already exist.
//*
//* NOTE: This job must be run from the target system.
//*
//*********************************************************************
//DFSFILE EXEC PGM=IKJEFT1B
//SYSPROC  DD  DISP=SHR,
//        DSN=SYS1.SBPXEXEC
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD  *
  oshell /opt/dfsglobal/scripts/dfs_cpfiles
/*
//*
./ ADD NAME=J6ACCPL  0114-04350-04350-1300-00015-00018-00000-HOWTO

z/OS 1.4 C/C++ Compiler Base

The  c89  utility is customized by setting environment variables.  The
ones that most commonly require setting are specified in the c89
customization section in /etc/profile.

z/OS UNIX System Services Command Reference, SA22-7802,
lists the rest of the variables that might require setting for typical
c89 usage.

See z/OS UNIX System Services Command Reference, SA22-7802, and z/OS
UNIX System Services Planning, GA22-7800, for additional information on
this subject.

./ ADD NAME=K0AIPPRT 0114-04350-04350-1300-00075-00080-00000-HOWTO

z/OS 1.4 Infoprint Server - IP PrintWay


This  section describes the post-installation tasks for the IP PrintWay
component of the Infoprint Server product.


UPDATING PROCLIB

The members listed below have been made  available  to  the  system  by
copying  them  to  a  procedure  library which is in your JES procedure
library concatenation.

+---------------------------------------------------------------------+
|Table 1. PROCLIB Member Updates                                      |
+-------------+-------------------------------------------------------+
|PROCLIB      | Action to Take                                        |
|Member       |                                                       |
+-------------+-------------------------------------------------------+
|ANFWPROC     | Procedure is provided in your PROCLIB data set.       |
|             | Update for your environment.                          |
+-------------+-------------------------------------------------------+

See z/OS Infoprint Server Customization, S544-5744, for  more  informa-
tion.


INFOPRINT SERVER - IP PRINTWAY CUSTOMIZATION CONSIDERATIONS

Detailed  steps  to get the program into operational status are defined
in z/OS Infoprint Server Customization, S544-5744.


Initialize IP PrintWay Operational Data Sets

The IP PrintWay transmission queue and the IP PrintWay message log data
sets  must  be allocated and primed. The following jobs are provided in
SYS1.SAMPLIB to perform this function:

ANFDEAL   - allocates IP PrintWay transmission queue data set
ANFQINIT  - initializes IP PrintWay transmission queue data set
ANFMIJCL  - allocates and initializes IP PrintWay message log data set


Run job K1IPPRNT in the installation dialog  (ANFDEAL  in  the  program
directory) to allocate IP PrintWay transmission queue data set.

Run  job  K2IPPRNT  in the installation dialog (ANFQINIT in the program
directory) to initialize IP PrintWay transmission queue data set.

Run job K3IPPRNT in the installation dialog (ANFMIJCL  in  the  program
directory) to allocate and initialize IP PrintWay message log data set.

MIGRATION  NOTE:  If you are migrating from OS/390 Print Server or from
the IP PrintWay feature of PSF V2 or V3, you cannot use  your  previous
queue  data set.   The record format has changed. You must allocate and
initialize a new transmission queue data set as described  above.    If
you  are  migrating from Infoprint Server on OS/390 V2R8 or higher, you
may also want to reallocate your queue data set to improve performance.
See z/OS Infoprint Server Migration, G544-5743, for  more  information.


Customize IP PrintWay

If  you  are using the IP PrintWay component of Infoprint Server, addi-
tional customization is required.

o   For IP PrintWay, the functional subsystem must be defined to JES.

See  z/OS  Infoprint  Server  Customization,  S544-5744,  for  detailed
instructions on customizing IP PrintWay.   If you  are  migrating  from
previous  levels  of  IP PrintWay, see z/OS Infoprint Server Migration,
G544-5743, for migration considerations.

./ ADD NAME=K1IPPRNT 0114-04350-04350-1300-00100-00102-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: K1IPPRNT  (product-supplied job ANFDEAL
//*                 in library SYS1.SAMPLIB)
//*
//* DOC: This is sample JCL that will delete and allocate
//*      the VSAM data sets needed for IP PrintWay.
//*
//*      To delete the VSAM data sets required by the IP PrintWay
//*      use step 1 of this JCL.
//*
//*      To allocate the VSAM data sets required by the IP PrintWay
//*      use step 2 of this JCL.
//*
//* WARNING: Do not use this JCL to delete the VSAM data sets while
//*          IP PrintWay is running.
//*
//* NOTES: This JCL requires modification to run.  You must enter
//*        the VOLUME on which you want the VSAM data sets allocated
//*        (change C4WRK1 to VOLSER to satisfy your conventions).
//*
//*        The default VSAM transmission-queue data set names are :
//*        ANF.QUEUE
//*        ANF.QUEUE.DATA
//*        ANF.QUEUE.INDEX
//*
//*        You can also change the data set names.  If you change the
//*        names, also change the data set names in the IP PrintWay
//*        sample startup procedure.
//*
//********************************************************************
//*
//* -------------------------------------------------------------------*
//*  Step 1 :
//*
//*    The VSAM data sets deleted in this step are :
//*
//*        The queue data sets
//*        ANF.QUEUE
//*        ANF.QUEUE.DATA
//*        ANF.QUEUE.INDEX
//*
//* -------------------------------------------------------------------*
//DEL      EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
       DELETE -
            ANF.QUEUE
/*
//*
//* -------------------------------------------------------------------*
//*  Step 2 :
//*
//*    The VSAM data sets allocated in this step are :
//*
//*        The queue data sets
//*        ANF.QUEUE
//*                           (data component)
//*        ANF.QUEUE.DATA
//*                           (index component)
//*        ANF.QUEUE.INDEX
//*
//*  Change Activity:
//*
//*  04/02/99 KNH Convergence support. Remove Routing and
//*               Options files. Change Queue record size
//*               to 2048.
//*  04/18/01 JAU Change record size and CISZ
//*
//* -------------------------------------------------------------------*
//CREATE   EXEC PGM=IDCAMS,COND=(8,LT,DEL)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD   *
   DEFINE CLUSTER -
             (NAME(ANF.QUEUE) -
                VOLUMES(C4WRK1) -
                INDEXED -
                SPEED -
                SHAREOPTIONS(4 3)) -
              DATA -
                (NAME(ANF.QUEUE.DATA) -
                CYL(2 1) -
                KEYS(20 0) -
                RECORDSIZE(1292 2048) -
                FREESPACE(10,10) -
                CISZ(24576)) -
              INDEX -
                (NAME(ANF.QUEUE.INDEX))
/*
//*
./ ADD NAME=K2IPPRNT 0114-04350-04350-1300-00050-00052-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: K2IPPRNT  (product-supplied job ANFQINIT
//*                 in library SYS1.SAMPLIB)
//*
//* DOC: This sample JCL initializes the VSAM transmision-queue
//*      data set.
//*
//*      Use this JCL to initialize the transmision-queue data set
//*      before starting IP PrintWay or using the ISPF
//*      transmission-queue panels.
//*
//*      Before using this JCL, allocate the VSAM data set using the
//*      sample JCL in SYS1.SAMPLIB(ANFDEAL).
//*
//*      The following DD statement identifies the data set to be
//*      initialized.
//*
//*      //ANFQUEUE DD defines the transmission-queue data set,
//*        ANF.QUEUE
//*
//* NOTES: If you have changed the name of the transmision-queue
//*        when you allocated it, also change the data set name
//*        on the DD statement.
//*
//********************************************************************
//*
//* -------------------------------------------------------------------*
//*
//*   Step 1 Executed the File Load program.
//*
//* -------------------------------------------------------------------*
//LOAD    EXEC PGM=ANFINITQ,REGION=512K
//ANFQUEUE DD DISP=OLD,
//            DSN=ANF.QUEUE
//SYSPRINT DD SYSOUT=*
//SYSABEND DD SYSOUT=*
//SYSMDUMP DD SYSOUT=*
//
//*
./ ADD NAME=K3IPPRNT 0114-04350-04350-1300-00042-00044-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: K3IPPRNT  (product-supplied job ANFMIJCL
//*                 in library SYS1.SAMPLIB)
//*
//* DOC: This is sample JCL that will allocate and initialize
//*      IP PrintWay message log data set.
//*
//*      D37-04 Abend is normal and expected for this job.
//*
//*      The default IP PrintWay message log data set name is :
//*      ANF.MSGFILE
//*
//* NOTES: Before running this job, change the name of
//*        IP PrintWay message log data set
//*        to satisfy your conventions.
//*
//********************************************************************
//*
//*----------------------------------------------------------------*//
//* Initialize the IP PrintWay Message Queue File.                 *//
//*----------------------------------------------------------------*//
//REXXJCL  EXEC PGM=IRXJCL,PARM='ANFMFILE'
//SYSTSPRT DD  SYSOUT=*
//SYSEXEC  DD  DISP=SHR,
//            DSN=AOP.SAOPEXEC
//MSGDD    DD  DISP=(NEW,CATLG,DELETE),
//            DSN=ANF.MSGFILE,
//            UNIT=SYSALLDA,SPACE=(CYL,1),
//            DCB=(DSORG=PSU,RECFM=FB,LRECL=080,BLKSIZE=0)
/*
//*
./ ADD NAME=K4AIPNSP 0114-04350-04350-1300-00051-00055-00000-HOWTO

z/OS 1.4 Infoprint Server - NetSpool


This  section  describes  the  post-installation tasks for the NetSpool
component of the Infoprint Server product.

UPDATING PROCLIB

The members listed below have been made  available  to  the  system  by
copying  them  to  a  procedure  library which is in your JES procedure
library concatenation.

+---------------------------------------------------------------------+
|Table 1. PROCLIB Member Updates                                      |
+-------------+-------------------------------------------------------+
|PROCLIB      | Action to Take                                        |
|Member       |                                                       |
+-------------+-------------------------------------------------------+
|APIJPJCL     | Procedure is provided in your PROCLIB data set.       |
|             | Update for your environment.                          |
+-------------+-------------------------------------------------------+

Refer to z/OS  Infoprint  Server  Customization,  S544-5744,  for  more
information.

INFOPRINT SERVER - NETSPOOL CUSTOMIZATION CONSIDERATIONS

Detailed  steps  to get the program into operational status are defined
in z/OS Infoprint Server Customization.

Initialize NetSpool Operational Data Sets

The NetSpool message log data set must be  allocated  and  primed.
Run job K4NETSPL (job APIMIJCL in the program directory) in the instal-
lation dialog to allocate and initialize NetSpool message log data set.
Reference Job comments prior to execution.

Customize NetSpool

If you are using the NetSpool component of Infoprint Server, additional
customization is required.

o   For  NetSpool,  logical  printers must be defined to VTAM with APPL
    definition statements.

Refer  to  z/OS Infoprint Server Customization, S544-5744, for detailed
instructions on customizing NetSpool. If you are  migrating  from  pre-
vious  levels  of  NetSpool,  refer to z/OS Infoprint Server Migration,
G544-5743, for migration considerations.

./ ADD NAME=K4NETSPL 0114-04350-04350-1300-00044-00046-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//********************************************************************
//* JOB: K4NETSPL  (product-supplied job APIMIJCL
//*                 in library SYS1.SAMPLIB)
//*
//* DOC: This is sample JCL that will allocate and initialize
//*      NetSpool message log data set
//*
//*      The default NetSpool message log data set name is :
//*      NETSPOOL.MSGFILE
//*
//* NOTES: Before running this job, change the name of
//*        NetSpool message log data set
//*        to satisfy your conventions.
//*
//*        A D37 abend is normal even though REXXJCL jobstep
//*        returns a condition code of zero (0), as noted in job
//*        output.
//*
//********************************************************************
//*
//*----------------------------------------------------------------*//
//* Initialize the NetSpool Message Queue File.                    *//
//*----------------------------------------------------------------*//
//REXXJCL  EXEC PGM=IRXJCL,PARM='ANFMFILE'
//SYSTSPRT DD  SYSOUT=*
//SYSEXEC  DD  DISP=SHR,
//            DSN=AOP.SAOPEXEC
//MSGDD    DD  DISP=(NEW,CATLG,DELETE),
//            DSN=NETSPOOL.MSGFILE,
//            UNIT=SYSALLDA,SPACE=(CYL,1),
//            DCB=(DSORG=PS,RECFM=FB,LRECL=080,BLKSIZE=0800)
/*
//*
./ ADD NAME=L0AIPPRT 0114-04350-04350-1300-00205-00216-00000-HOWTO

z/OS 1.4 Infoprint Server - Print Interface


This section describes the post-installation tasks for the Print Inter-
face component of the Infoprint Server product.

UPDATING PROCLIB

The  members  listed  below  have  been made available to the system by
copying them to a procedure library which  is  in  your  JES  procedure
library concatenation.

+---------------------------------------------------------------------+
|Table 1. PROCLIB Member Updates                                      |
+-------------+-------------------------------------------------------+
|PROCLIB      | Action to Take                                        |
|Member       |                                                       |
+-------------+-------------------------------------------------------+
|AOPPRINT     | Procedures are provided in your PROCLIB data set.     |
|AOPSTART     | Update for your environment.                          |
|AOPSTOP      |                                                       |
+-------------+-------------------------------------------------------+

Refer  to  z/OS  Infoprint  Server  Customization,  S544-5744, for more
information.

INFOPRINT SERVER - PRINT INTERFACE CUSTOMIZATION CONSIDERATIONS

Detailed steps to get the program into operational status  are  defined
in z/OS Infoprint Server Customization.

Customize the UNIX Environment for Infoprint Server

The  customization steps described in this section are sufficient for a
default configuration.  Only the lpd and printer inventory daemons  are
started  in  the  default  configuration. If you want to use any of the
following functions, additional customization is required:

o   IPP Server
o   SNMP subagent
o   Transform manager

Refer to z/OS Infoprint Server Customization, S544-5744, for additional
customization for these functions.

1.  Create the configuration files for the Infoprint Server daemons:

    Customize  and run job L1INFOPR (job AOPCPETC in the program direc-
    tory) in the installation dialog to copy the  sample  configuration
    files  from "/usr/lpp/Printsrv/samples" to "/etc/Printsrv".  Review
    the comments in the job to determine which configuration files  are
    required for your installation.

    The defaults provided in the sample aopd.conf file are adequate for
    most  installations.    If  you want to modify any of the defaults,
    refer to z/OS Infoprint Server Customization, S544-5744.    If  you
    are  migrating  from a previous level of Infoprint Server or OS/390
    Print Server, you may use your existing version of aopd.conf.

    Note that Infoprint Server will default to search for  its  config-
    uration  file in "/etc/Printsrv/aopd.conf".  If you change the name
    or  directory  for  this  file,  refer  to  z/OS  Infoprint  Server
    Customization,  S544-5744, for information on how to configure your
    environment.

2.  Modify "/etc/profile" to update  the  following  environment  vari-
    ables:

    o   PATH

        Add "/usr/lpp/Printsrv/bin" to the PATH environment variable.

        Note  that  "/usr/lpp/Printsrv/bin" directory must occur before
        "/bin" in the PATH environment variable so the Print  Interface
        version of the lp, lpstat, and cancel commands will be invoked.

    o   LIBPATH

        Add  "/usr/lpp/Printsrv/lib"  to  the LIBPATH environment vari-
        able.

    o   MANPATH

        Add "/usr/lpp/Printsrv/man/%L" to the MANPATH environment vari-
        able:

        Note  that  "/usr/lpp/Printsrv/man/%L"  directory  must   occur
        before "/usr/man/%L" in the MANPATH environment variable so the
        OS/390  Print  Interface  version of the lp, lpstat, and cancel
        man pages will be displayed.

    o   NLSPATH

        Add "/usr/lpp/Printsrv/%L/%N" to the NLSPATH environment  vari-
        able.

    Infoprint  Server  may  optionally use additional environment vari-
    ables to set defaults for  operation.    Refer  to  z/OS  Infoprint
    Server  Customization,  S544-5744,  for detailed information on the
    usage of these parameters.

Establish Security for Infoprint Server

1.  Define  or  update  RACF profiles for Infoprint Server security.  A
    sample CLIST is provided in SYS1.SAMPLIB(AOPRACF) that can be  used
    to define the security environment for Infoprint Server. This CLIST
    must  be  modified before it is run. All commands are commented out
    by default. The CLIST can be used to perform  the  following  func-
    tions:

    o   Define  two RACF groups for print administrators and operators.
        The default names for these groups are:

        AOPADMIN  RACF  group  for  administrators  who  maintain   the
                  Printer Inventory.

        AOPOPER   RACF  group  for  operators who will control starting
                  and stopping the Infoprint Server daemons.

        Note that you may use one RACF  group  for  both  AOPADMIN  and
        AOPOPER if your installation's security policy does not require
        a  distinction  between  operators  and  administrators.    For
        further information on security considerations for Print Inter-
        face, refer to z/OS Infoprint Server Customization, S544-5744.

    o   Create a RACF profile in the FACILITY class named  AOPADMIN  to
        limit  access  to  printer  configuration.   You must name this
        profile AOPADMIN.

    o   Define the AOPSTART and AOPSTOP procedures in the STARTED class
        and define a userid to be associated with these started  proce-
        dures.

2.  Customize permissions:

    Run the aopsetup shell script to define permissions, specifying the
    names  of the operator group and administrator group you defined in
    the previous steps.  To run the aopsetup shell script, you must run
    it from a  userid  that  has  UID=0  or  has  read  access  to  the
    BPX.SUPERUSER facility class.

    Note  that  the aopsetup shell script requires access to the direc-
    tory defined as base-directory in the aopd.conf configuration file.
    The default for base-directory is "/var/Printsrv".  Therefore,  you
    must  have  access  to the "/var/Printsrv" directory before you can
    run aopsetup.  If you have your target system's "/var" file  system
    mounted  to  your  driving  system,  you may run aopsetup from your
    driving system. If you do not have access to  the  target  system's
    "/var"  from  your  driving  system, you must run aopsetup from the
    target system. If you want to run aopsetup from the driving system,
    refer  to the comments in the aopsetup shell script for information
    on the proper syntax to invoke the script.

    To run the aopsetup shell script using the default names listed  in
    the previous step, enter:

      /usr/lpp/Printsrv/bin/aopsetup AOPOPER AOPADMIN

    You can run aopsetup from an rlogin shell, from an OMVS session, or
    using BPXBATCH.

Make Updates to the Communications Server IP Profile

Print  Interface  requires the use of TCP port 515 in a default config-
uration.  Ensure data set hlq.PROFILE.TCPIP does not reserve  port  515
for  another application. You may need to ensure the ports listed below
are not reserved, if you want  to  use  these  functions  of  Infoprint
Server:

+----------------------+----------------------------------------------+
|SNMP agent/sub-agent  | ports 161 and 162                            |
+----------------------+----------------------------------------------+
|IPP server            | port 631                                     |
+----------------------+----------------------------------------------+

Refer  to  z/OS  Communications  Server:  IP  Configuration  Reference,
SC31-8776, for more information.

Customize Distributed File Service for SMB Printing

If you want to use the SMB file/print server  to  send  print  data  to
Print     Interface,    make    the    following    modifications    to
"/etc/dfs/home/dfskern/envar":

o   LIBPATH

    Add "/usr/lpp/Printsrv/lib" to the LIBPATH environment variable.

Download Client Code to Workstation

The Infoprint Port Monitor allows Windows users to print  to  any  z/OS
printer  defined  in  the  Printer  Inventory,  using  standard  print-
submission methods from Windows applications that support printing. The
Infoprint  Port  Monitor  is  located  in   a   subdirectory   of   the
"/usr/lpp/Printsrv/win/"  directory,  depending on locale.  It is down-
loaded to the workstation using FTP.  The directory locations for  each
NLV are shown below:

ENGLISH   /usr/lpp/Printsrv/win/En_US/
JAPANESE  /usr/lpp/Printsrv/win/Ja_JP/

Refer   to   z/OS   Infoprint   Server  User's  Guide,  S544-5746,  for
instructions to download the client code to the workstation.

./ ADD NAME=L1INFOPR 0114-04350-04350-1300-00085-00087-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//* JOB: L1INFOPR  (product-supplied job AOPCPETC
//*                 in library SYS1.SAMPLIB)
//*
//* DOC: This job will create the configuration files for Infoprint
//*      Server by copying them from the samples directory.
//*
//*      Refer to the Infoprint Server Customization book for more
//*      information on using and customizing the configuration files.
//*
//* NOTES: Before using this job step, you will have to make
//*        the following modifications:
//*
//*  1) Add the job parameters to meet your system requirements.
//*
//*  2) If you are running this job from the driving system, you
//*     may need to modify the SAMPxxx DD statements to point to a
//*     /service   directory on the PATH parameter
//*
//*  3) You may customize this job to copy only the files that are
//*     required for your installation.  Remove the SAMPxxxx and
//*     ETCxxxx DD statements and the OCOPY control statement for
//*     any files that you do not need.  The files to be copied are
//*     used as follows:
//*
//*     aopd.conf    Required if you want to customize Infoprint
//*                  Server to use other than the program defaults.
//*                  If you have previously customized Infoprint
//*                  Server, you should use your existing aopd.conf
//*                  file instead of copying the sample file.
//*
//*     aopsapd.conf Required if you want to configure the SAP R/3
//*                  Callback Daemon.
//*                  If you have previously customized the SAP R/3
//*                  Callback Daemon, you should use your existing
//*                  aopsapd.conf file instead of copying the sample
//*                  file.
//*
//*     aopxfd.conf  Required if you want to use the Transform
//*                  Manager and the Infoprint Server Transforms.
//*                  If you have previously customized the Transform
//*                  Manager and Transforms, you should use your
//*                  existing aopxfd.conf file instead of copying the
//*                  sample file.
//*
//*                                                                   *
//*********************************************************************
//*
//COPYCONF EXEC PGM=IKJEFT1A
//*
//SAMPAOPD DD PATH='/usr/lpp/Printsrv/samples/aopd.conf',
//           PATHOPTS=(ORDONLY)
//SAMPSAPD DD PATH='/usr/lpp/Printsrv/samples/aopsapd.conf',
//           PATHOPTS=(ORDONLY)
//SAMPXFD  DD PATH='/usr/lpp/Printsrv/samples/aopxfd.conf',
//           PATHOPTS=(ORDONLY)
//ETCAOPD  DD PATH='/etc/Printsrv/aopd.conf',
//           PATHOPTS=(OWRONLY,OCREAT),
//           PATHMODE=(SIRUSR,SIWUSR,SIRGRP,SIROTH)
//ETCSAPD  DD PATH='/etc/Printsrv/aopsapd.conf',
//           PATHOPTS=(OWRONLY,OCREAT),
//           PATHMODE=(SIRUSR,SIWUSR,SIRGRP,SIROTH)
//ETCXFD   DD PATH='/etc/Printsrv/aopxfd.conf',
//           PATHOPTS=(OWRONLY,OCREAT),
//           PATHMODE=(SIRUSR,SIWUSR,SIRGRP,SIROTH)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN DD *
PROF MSGID
OCOPY INDD(SAMPAOPD) OUTDD(ETCAOPD)
OCOPY INDD(SAMPSAPD) OUTDD(ETCSAPD)
OCOPY INDD(SAMPXFD) OUTDD(ETCXFD)
/*
//*
./ ADD NAME=MAXRETCD 0114-04350-04350-1300-00013-00013-00000-HOWTO
MAXRETCD CSECT                                                           000000
MAXRETCD AMODE 31                                                        000000
MAXRETCD RMODE ANY                                                       000000
         LA    R15,4095                                                  000000
         BR    R14                                                       000004
         YREGS
         END
//LKED.SYSLIN  DD *
 INCLUDE SYSLIBX
 ORDER   MAXRETCD
 MODE    RMODE(ANY),AMODE(31)
 ENTRY   MAXRETCD
 NAME    MAXRETCD(R)
./ ADD NAME=M0ABMBSR 0114-04350-04350-1300-00634-00646-00000-HOWTO
z/OS 1.4 BookManager BookServer


ACTIVATING BOOKMANAGER BOOKSERVER

Before  you  can  use  IBM BookManager BookServer, you must set certain
defaults for your site. You do this by configuring both the BookManager
BookServer and the IBM HTTP Server.

When finished, you can run a simple  test  from  a  browser  to  verify
BookManager  BookServer  is  working.  Once you are up and running, you
must be sure to set and maintain the proper security authorizations  to
BookManager BookServer objects.

Configuring BookManager BookServer

IBM  recommends  the  use  of  /etc/booksrv/  as  the directory for the
BookServer configuration files. All of the following examples refer  to
configuration  files  in  the  /etc/booksrv  directory  and with a file
extension of 80, which refers to the default port number  80.  You  may
use  the  appropriate  directory and port for your installation as pro-
vided through our customization parameters.

An environment variable, EPHConfigPath=, can be set to the name of  the
directory  which  will  contain the BookServer configuration files. For
example, setting EPHConfigPath=/etc/booksrv/configs (do  not  end  path
with    a    slash),    will   cause   BookServer   to   first   search
/etc/booksrv/configs/ for the configuration files. The search order for
the configuration files is:

1.  Directory specified by EPHConfigPath= environment variable
2.  Directory /etc/booksrv/
3.  Directory /etc/
4.  Current working directory (normally /usr/lpp/booksrv/cgi-bin/)

NOTE:  BookServer cannot run without valid configuration files.

CONFIGURING WITHOUT MIGRATION CONSIDERATIONS

To configure BookManager BookServer, you must customize  parameters  in
BookManager  BookServer  configuration  files  located in /etc/booksrv.
First       copy        /usr/lpp/booksrv/cgi-bin/bookmgr.conf        to
/etc/booksrv/bookmgr.80. Only change in /etc/booksrv/bookmgr.80. Do not
change  /cgi-bin/bookmgr.conf.  The mode setting on this file should be
644.

UPDATING BOOKMGR.80

Update the following statements in /etc/booksrv/bookmgr.80:

o   HOSTNAME=your.hostname (optional)

    Replace  your.hostname  with  the fully qualified domain name or IP
    address  of   your   server   machine.   You   may   also   specify
    HOSTNAME=SERVER_NAME   or   HOSTNAME=(blank),  in  which  case  the
    SERVER_NAME Environment Variable is used.

o   CLIB=EPH.SEPHCLIB (optional, but required for vector graphics)

    Replace EPH.SEPHCLIB with the  SEPHCLIB  data  set  name  for  your
    system.

o   GDDMGDF=EPH.ADMGDF (optional, but required for vector graphics)

    EPH.ADMGDF is the default high level qualifier (HLQ) used to create
    temporary  ADMGDF  data sets. Replace with the HLQ for your site. A
    global security definition must be set to  write  access  for  this
    HLQ. This is not a fully qualified data set name.

o   QLSHELF=EOY.BKLSHELF  (optional, but required to access BookManager
    READ/MVS data sets)

    EOY.BKLSHELF is the default  BookManager  READ/MVS  Bookshelf  List
    data  set  name.  The BookManager READ/MVS Bookshelf List data sets
    contain the data set names and descriptions of BookManager READ/MVS
    bookshelves used by your site.

    Replace the default with the name  or  names  for  your  site.  The
    BookManager  READ/MVS Bookshelf List data set names can be found in
    the EOXVOPTS member used in BookManager READ/MVS under the  QLSHELF
    parameter. Separate each data set name with a semicolon (;). Do not
    surround  data set names with single quotes. These are fully quali-
    fied data set names.

o   GDDMSYM=GDDM.SADMSYM

    GDDM.SADMSYM is the default GDDM 3.2  symbol  set  data  set  name.
    Replace with the data set name for your site.

o   GDDMMOD=GDDM.SADMMOD

    GDDM.SADMMOD  is  the  default GDDM 3.2 load library data set name.
    Replace with the data set name for your site.

o   LANGUAGE= (optional)

    The default is English (ENU). To specify another  language,  change
    ENU to one of the languages specified in the following table.

+---------------------------------------------------------------------+
|Table 1. Language, and Code Page Specification                       |
+---------------------+------------+---------------+------------------+
|Supported Language   | LANGUAGE=  | DefaultFsCp   | DefaultNetCp     |
+---------------------+------------+---------------+------------------+
|Brazilian Portuguese |    PTB     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|Danish               |    DAN     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|English              |    ENU     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|French               |    FRA     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|German               |    DEU     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|Italian              |    ITA     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|Japanese             |    JPN     |   IBM-939     |  IBM-932C        |
+---------------------+------------+---------------+------------------+
|Korean               |    KOR     |   IBM-933     |  IBM-949         |
+---------------------+------------+---------------+------------------+
|Netherlands Dutch    |    NLD     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|Norwegian            |    NOR     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|Simplified Chinese   |    CHS     |   IBM-935     |  IBM-1381        |
+---------------------+------------+---------------+------------------+
|Spanish              |    ESP     |   IBM-1047    |  ISO8859-1       |
+---------------------+------------+---------------+------------------+
|Traditional Chinese  |    CHT     |   IBM-937     |  IBM-950         |
+---------------------+------------+---------------+------------------+

    In  addition,  the code pages specified in the IBM HTTP Server file
    httpd.conf may need to be changed.

o   PICDIR= (optional)

    This parameter specifies the directory  to  use  for  building  and
    caching  pictures from BookManager books. If no value is specified,
    the default is the /public/bookmgr/pictures/ subdirectory.  When  a
    BookServer  client  requests display of a picture from a book, GDDM
    reformats the picture into a GIF file,  which  is  placed  in  this
    directory,  so  the  client can access it. Once displayed, the pic-
    tures may be left in the directory, to speed future retrieval.  The
    directory may be cleared from the BookServer  Administration  page.
    The  specified directory must be readable, writable, and searchable
    by BookServer users. Therefore, the initial mode  setting  for  the
    directory  should  be 777. To specify your own directory, enter the
    fully qualified path  name  of  a  directory.  The  directory  must
    already  exist.  Do not end the path name with a forward slash (for
    example, "/bookserver/pictures" not "/bookserver/pictures/").

o   FRAMESDIR= (optional)

    This parameter specifies the directory  to  use  for  building  and
    caching frames related files from BookManager books. If no value is
    specified, the default is the /public/bookmgr/frames/ subdirectory.
    When  a  BookServer  client requests display of a page from a book,
    the frames html is placed in this directory, so that the client can
    access  it. The specified directory must be readable, writable, and
    searchable by BookServer users. Therefore, the initial mode setting
    for the directory should be 777. To  specify  your  own  directory,
    enter  the fully qualified path name for a directory. The directory
    must already exist. Do not end the path name with a forward  slash,
    for  example, /var/booksrv/frames not /var/booksrv/frames/.  If you
    specify FRAMESDIR, you must provide the appropriate pass  directive
    in the HTTP Server configuration file.

NOTE:  Advanced customization is required to run in a read-only HFS, to
       relocate  applicable  directories  to  a writeable HFS. Advanced
       customization   parameters   =LANGUAGE,   =PICDIR,   =FRAMESDIR,
       =NOTEDIR, =LOGDIR, =CATALOG and =PICURL are optional and consid-
       ered  advanced  features,  unless  BookServer  is installed in a
       read-only HFS. It is recommended  that  you  first  install  the
       product  as-is.  After  you  have  this installation working and
       become familiar with the  configuration  you  can  modify  these
       parameters  to  suit your needs.  For more information, see z/OS
                                                                   ____
       IBM BookManager BookServer for World Wide Web: Getting  Started,
       SC31-8814.

COPYING BOOKSRV.CONF

The  booksrv.conf  file  is located in the /cgi-bin/ subdirectory. Copy
/usr/lpp/booksrv/cgi-bin/booksrv.conf to /etc/booksrv/booksrv.80.   The
mode  setting  on this file should be 766. This file will be updated by
the Administration form.

USING BOOKREAD

BookRead is an API that provides access to the textual  information  in
BookManager  books. Books are binary files built from word processor or
BookMaster source files. Although provided with BookServer, BookRead is
not used by BookServer. BookRead was introduced as an SPE to BookServer
V2.1 and integrated into OS/390 Release 7.  BookRead  is  required  for
UNIX System Services.

BookRead  requires the use of the members installed in the SEPHTAB data
set. If the SEPHTAB data set is other than EPH.SEPHTAB,  BookRead  must
be  given  the  appropriate HLQ or fully qualified data set name.  Ori-
ginally, member EPHWP00 of PARMLIB was used to specify the HLQ or fully
qualified data set name. A sample of EPHWP00 is provided  in  SEPHSAMP.
Although  EPHWP00  continues  to be supported, IBM recommends use of an
alternative method to provide BookRead with the name  for  the  SEPHTAB
data  set.  An  environment  variable, EPHBookReadConfig, should now be
used to specify a directory name for the file, bookread.conf. The  file
bookread.conf  must  contain  either the HLQ of the SEPHTAB data set or
DSN=(the fully qualified data set name). BookRead will search  for  the
name of the SEPHTAB data set in the following order:

o   If  the  environment  variable  EPHBookReadConfig  exists,  and the
    bookread.conf file in  the  directory  specified  in  the  variable
    exists, the HLQ or the fully qualified data set name will be used.
o   If  EPHBookReadConfig  doesn't exist or bookread.conf doesn't exist
    in the directory  specified  in  EPHBookReadConfig,  BookRead  will
    check  for file /etc/booksrv/bookread.conf. The HLQ or fully quali-
    fied data set name in /etc/booksrv/bookread.conf will be used.
o   If bookread.conf is not found as  explained  above,  BookRead  will
    check for EPHWP00 PARMLIB member. If found, the HLQ or fully quali-
    fied data set name in EPHWP00 will be used.
o   If  none  of  the  above methods provides an HLQ or fully qualified
    data set name for the SEPHTAB data set, EPH.SEPHTAB will be used.

NOTE:  BookRead must have access to the members of the SEPHTAB data set
       to function. The UNIX System  Services  'man'  command  requires
       BookRead to be functioning.

CONFIGURING WITH MIGRATION CONSIDERATIONS

These instructions require that you have successfully applied  all  the
available BookServer V2.1 service.

Changes  have  been  made  to  the  BookServer  configuration files for
BookServer V2.2:

o   FOOTER=

    Moved from /cgi-bin/bookmgr.conf to /cgi-bin/booksrv.conf file.

o   FRAMES=

    Added to /cgi-bin/booksrv.conf to support the frames-based EUI  for
    books.

o   FRAMESDIR=

    Added to /cgi-bin/bookmgr.conf (see parameter FRAMESDIR=)

A simple approach to migration is to use your current (customized) con-
figuration  files, /etc/booksrv/bookmgr.80 and /etc/booksrv/booksrv.80,
or your equivalent. Make the following changes to your current  config-
uration files:

o   Updating bookmgr.80

    -   Remove the line FOOTER=
    -   Add a line FRAMESDIR= (see parameter FRAMESDIR=)

o   Updating booksrv.80

    -   Add the line FOOTER= (the value should be set to the same as it
        was in your /etc/booksrv/bookmgr.80 file)
    -   Add the line FRAMES=0

    NOTE:  FOOTER= and FRAMES= are updated through  the  Administration
           panel.

Changes  have  been  made  to  the  BookServer  configuration files for
BookServer V2.3:

o   The docnums directory (default location /cgi-bin/docnums)  and  the
    DOCNUMS=  parameter  of the bookmgr.80 (or your equivalent) config-
    uration file, are no longer used. IBM recommends  that  you  delete
    your  docnums directory and remove the DOCNUMS= parameter from your
    bookmgr.80 (or equivalent) configuration file. If you  have  speci-
    fied  an  alternate docnums directory on the DOCNUMS= parameter, it
    should also be deleted.

Changed Executable

o   The  name  of  the  executable  in  the  V2R1  level of BookManager
    BookServer, which is bookmgr.cmd, has been changed  to  bookmgr.exe
    in  the  V2R2  level. This change is a result of the elimination of
    the REXX EXEC (bookmgr.cmd) in favor of a C Language  program  exe-
    cutable (bookmgr.exe). BookManager BookServer V2.3 uses a dummy HFS
    executable, EPHBOOKS, to execute a load module of the same name. In
    order  to  maintain  compatibility  with   Web   addresses   (URLs,
    bookmarks), exec directives (for Web server configuration) are pro-
    vided. The following exec directives:

      exec /bookmgr-cgi/bookmgr.cmd* /usr/lpp/booksrv/cgi-bin/EPHBOOKS*
      exec /bookmgr-cgi/bookmgr.exe* /usr/lpp/booksrv/cgi-bin/EPHBOOKS*

    will  translate  BookManager BookServer V2R1 and V2R2 Web addresses
    to V2R3 Web addresses.

Migration Actions

o   The  migration  actions  primarily involve modifying and/or copying
    your existing (customized) configuration  files,  note  files,  and
    picture  cache.  Using  your  existing files and cache, rather than
    creating new ones, preserves your  configuration  settings,  notes,
    and  pictures,  and  lets  you  avoid having to redo administrative
    tasks. Therefore, as you prepare to migrate, do not delete or alter
    your existing configuration files or any files  in  the  /notes  or
    /pictures  directories,  unless  you do not intend to use them with
    the new level of BookManager BookServer. The migration actions also
    effect BookRead, the Application Programming Interface (API).

    -   Note Files - Migrating the notes in the  notes  directory  will
        make  them available to the V2R3 level of BookServer. If you do
        not migrate them, they will not appear in the  books  in  which
        they  were  entered.  To migrate book notes, copy all the files
        from your existing notes directory to the new one. The  default
        directory       for       saving       book       notes      is
        /usr/lpp/booksrv/public/bookmgr/notes. You  can  override  this
        default  by specifying a directory on the NOTEDIR= parameter of
        the /etc/booksrv/bookmgr.80 configuration file.
    -   Picture Cache - Picture Cache Migrating the pictures in picture
        cache preserves the benefit of caching. If you do  not  migrate
        the  pictures  they  will  be  re-created and cached when first
        requested,  which  degrades  performance.  To  migrate  picture
        cache, copy all the files from your existing pictures directory
        to  the  new  one.  The  default directory for picture cache is
        /usr/lpp/booksrv/public/bookmgr/pictures. You can override this
        default by specifying a directory on the PICDIR=  parameter  of
        the /etc/booksrv/bookmgr.80 configuration file.

Configuring the IBM HTTP Server

You  must  configure  your  HTTP  Server  so it knows which requests to
accept from a browser, how to respond (either by running a  CGI  script
or by sending a document) and where to find requested resources.

To  configure  the  HTTP Server, add the exec and pass directives shown
below to the HTTP  Server  configuration  file,  httpd.conf.  For  more
information about this file, see z/OS HTTP Server Planning, Installing,
and Using, SC34-4826. Member EPHHTTPD of the sample BookServer JCL con-
tains these directives:

+---------------------------------------------------------------------+
|Table 2. Directives to Add to HTTP Server Configuration File         |
+--------+------------------------+-----------------------------------+
|Direc-  | URL Template           | HFS Directory                     |
|tive    |                        | (created in job EPHISMKD)         |
+--------+------------------------+-----------------------------------+
|exec    | /bookmgr-              | /usr/lpp/booksrv/cgi-bin/EPHBOOKS*|
|        | cgi/bookmgr.cmd*       |                                   |
+--------+------------------------+-----------------------------------+
|exec    | /bookmgr-              | /usr/lpp/booksrv/cgi-bin/EPHBOOKS*|
|        | cgi/bookmgr.exe*       |                                   |
+--------+------------------------+-----------------------------------+
|exec    | /bookmgr-cgi/*         | /usr/lpp/booksrv/cgi-bin/*        |
+--------+------------------------+-----------------------------------+
|pass    | /bookmgr/*             | /usr/lpp/booksrv/public/bookmgr/* |
+--------+------------------------+-----------------------------------+

NOTE:   The  directives  above  show  the default locations for the CGI
       script and documents. If you change the default paths,  be  sure
       to  change the directives accordingly. The first two exec direc-
       tives maintain  compatibility  with  BookServer  V2.1  URLs  and
       bookmarks.

If  you  are specifying a PICDIR parameter, you must provide the appro-
priate pass directive. This pass directive must precede the pass direc-
tive shown in the Table 2. The following sample pass directive would be
used if your PICDIR specifies /var/booksrv/pictures:

  pass          /bookmgr/pictures/*    /var/booksrv/pictures/*

If you are specifying a  FRAMESDIR  parameter,  you  must  provide  the
appropriate  pass  directive. This pass directive must precede the pass
directive shown in the Table 2. The  following  sample  pass  directive
would be used if your FRAMESDIR specifies /var/booksrv/frames:

  pass          /bookmgr/frames/*     /var/booksrv/frames/*

To make these changes take effect, restart the HTTP Server.

These directives operate as follows:

o   The  exec  directives are used to specify templates for requests to
    which the server will respond by running a CGI script. For example,
    using the exec directives listed in the  Table 2,  if  your  server
    receives  the request /bookmgr-cgi/EPHBOOKS/library, it will locate
    the CGI script EPHBOOKS in /usr/lpp/booksrv/cgi-bin and run it with
    library passed as an input parameter.

o   The  pass  directives are used to specify templates for requests to
    which the server will respond by sending a document.

    The pass directive listed in the  Table 2 on page 7 would cause the
    server to respond to any request beginning /bookmgr/ by  sending  a
    document  from /usr/lpp/booksrv/public/bookmgr/. Anything following
    /bookmgr/ would also be used to identify the document. For example,
    your server would respond to the request /bookmgr/library.gif  with
    the document in file /usr/lpp/booksrv/public/bookmgr/library.gif.

NOTES:

1.  Under  MIMETYPES,  the  file  extension of '.js' and '.css' must be
    defined (or defaulted) as having binary encoding.

2.  The  IBM  HTTP  Server  must  have  the  proper   DefaultFsCp   and
    DefaultNetCp for the language set (see parameter LANGUAGE=).

Updating BookManager BookServer Directories

Whenever   you   create,  change,  or  delete  directories  that  house
BookManager BookServer  books,  bookshelves,  or  bookcases,  you  must
update  the  BookManager  BookServer Administration page to reflect the
changes.

1.  To display the Administration page, enter this URL:

      http://your.hostname/bookmgr-cgi/EPHBOOKS/administration

2.  Enter your administration password. The initial password is BOOKMGR
    (uppercase). You should change this to a different password.

3.  Update the directory path names that appear in the  list  boxes  to
    match the actual changes you made.

4.  Choose  the  Save  Settings  push button when you are finished. The
    changes are saved in /etc/booksrv/booksrv.80.

Sample Books Shipped with BookManager BookServer

BookManager BookServer is shipped with  sample  books  in  the  /books/
directory.  If  you  change  the default path name, you must rename the
directory path for /books/ in the list box on the Administration page.

Setting Security Authorizations

WARNING: ANY  BOOKMANAGER  BOOKSERVER  RECOMMENDATIONS  OR  EXAMPLES OF
ACCESS BIT (MODE) SETTINGS (FOR EXAMPLE, 666  FOR  FILES  AND  777  FOR
DIRECTORIES)  CONTAINED IN THE PROGRAM DIRECTORY OR THE SAMPLE JOBS ARE
TO BE USED ONLY AS INITIAL TEST SETTINGS. THE OBJECTIVE OF  THESE  SET-
TINGS  IS  TO  ALLOW FULL ACCESS TO ALL FUNCTIONS OF BOOKSERVER FOR THE
IVP PROCESS AND INITIAL TESTING. THESE SETTINGS ALLOW  ALL  USERS  FULL
READ,  WRITE,  EXECUTE ACCESS. THEY ARE NOT INTENDED AS RECOMMENDATIONS
FOR PRODUCTION OR PILOT PROGRAM SECURITY. THESE SETTINGS MAY  INTRODUCE
SECURITY EXPOSURES.

The  installation's  security  staff  must  review  all security before
allowing the product to leave the initial test phase.  BookServer  does
not  recommend  specific  security settings, except as described above.
BookServer support  does  not  provide  evaluations  of  site  security
arrangements.

The following information should be used by the installation's security
staff to assist in their security review:

o   BookServer  provides  a  simple  password  mechanism to protect the
    Administration page (the page may be displayed  without  the  pass-
    word, but the only action that works without the password is Help).
    The password is stored in /etc/booksrv/booksrv.80.

o   Other  than  the BookServer Administration password mentioned above
    security for BookServer should be implemented using  the  IBM  HTTP
    Server's  security  and  authorization features in combination with
    your security product (for example, RACF).  See  z/OS  HTTP  Server
    Planning,  Installing,  and Using, SC34-4826, for information about
    security and authorization facilities  provided  by  the  IBM  HTTP
    Server.

o   BookServer   itself  does  not  employ  the  concept  of  "userid".
    However, the IBM HTTP Server may do so.

o   By default, all BookServer-supplied HFS files are contained  within
    the BookServer directory structure. An exception to this default is
    the configuration files which are stored in the /etc/booksrv direc-
    tory.  While  the BookServer product may be installed in any direc-
    tory desired, the names of the  subdirectories  under  the  primary
    BookServer directory must not be changed, except as provided for by
    the parameters of /etc/booksrv/bookmgr.80.

o   Except   for   the  data  set  named  in  the  CLIB=  parameter  of
    /etc/booksrv/bookmgr.80 (see below), BookServer  does  not  require
    access  to any of the distributed "EPH.**" MVS data sets for normal
    operation. These data sets are used only for installation and main-
    tenance activities.

o   Directories  used  to  store data created by the running BookServer
    need read, write, execute access  (for  a  directory,  the  execute
    access bit actually controls searching the directory, not executing
    its  contents - the execute bit of a file controls whether the file
    can be executed or not). Files used to store data  created  by  the
    running BookServer need read, write access.

Access requirements by file, for general use of BookServer:

o   All use of BookServer requires:

    -   Read,  execute  access  to the /cgi-bin/ directory and its con-
        tents
    -   Read    access    to    files    /etc/booksrv/bookmgr.80    and
        /etc/booksrv/booksrv.80

o   Only read access is ever required to /etc/booksrv/bookmgr.80 during
    normal  operation  of BookServer (this file cannot be updated using
    the Administration panel - it may only be changed by  logging  onto
    an MVS userid and editing it).

o   To use the Administration panel to change settings or to change the
    administration password, BookServer requires:

    -   Read, write access to file /etc/booksrv/booksrv.80

In  addition  to  the  above,  specific functions of BookServer require
additional access as follows:

o   To use the Administration panel to process bookshelves,  bookcases,
    indexes, catalog, and so forth, BookServer requires:

    -   Read   access   to  the  /bkshelf/,  /bkcase/,  /books/,  /cgi-
        bin/catalog/, /cgi-bin/catalog/books/, /cgi-bin/catalog/cases/,
        /cgi-bin/catalog/docnums/, and /cgi-bin/catalog/shelves/ direc-
        tories
    -   Read, write access to the contents of the above directories
    -   Read, write access to the file /etc/booksrv/booksrv.80

o   For searching and displaying  books,  bookcases,  bookshelves,  and
    collections, BookServer requires:

    -   Read,  write  access  to  the /cgi-bin/bookmgr.log file, if Log
        Book Access Requests has been selected  on  the  Administration
        panel.
    -   Read,  write,  execute  access  to the /cgi-bin/catalog/, /cgi-
        bin/catalog/books/,       /cgi-bin/catalog/cases/,        /cgi-
        bin/catalog/docnums/,       and       /cgi-bin/catalog/shelves/
        directories. Cataloging a book involves creating one  new  file
        in  each  directory.  BookServer  automatically catalogs a book
        when its Table of Contents page is requested, if  the  book  is
        not  already  found in the /cgi-bin/catalog/ directory.  There-
        fore, if all books have previously been  cataloged,  then  only
        read, execute access is required.
    -   Read,  write  access to all files within the /cgi-bin/catalog/,
        /cgi-bin/catalog/books/,     /cgi-bin/catalog/cases/,     /cgi-
        bin/catalog/docnums/,  and  /cgi-bin/catalog/shelves/  directo-
        ries, unless all books have previously been cataloged.
    -   Read, execute access to all BookServer directories.
    -   Read access to all other files within the BookServer  directory
        structure.

    NOTE:    The   default  directories  for  books,  bookshelves,  and
           bookcases are /books/, /bkshelf/, and  /bkcase/,  but  addi-
           tional  directories may be specified and/or the defaults may
           be deleted, via the Administration panel. All of these addi-
           tional directories, and their  contents,  require  the  same
           access as the default directories and contents. See z/OS IBM
           BookManager  BookServer for World Wide Web: Getting Started,
           SC31-8814, for further  information  about  organizing  your
           BookManager BookServer library.

o   If the books contain graphics, then the following additional access
    is required:

    -   Read,  write,  execute  access to the /public/bookmgr/pictures/
        directory (this directory is used for work  files  required  to
        convert graphics embedded in books into a format understandable
        by Web browsers, and for caching previously converted graphics)
    -   Read, write access to all files in /public/bookmgr/pictures/
    -   Read, execute access to the MVS data set  named  in  the  CLIB=
        parameter of /etc/booksrv/bookmgr.80
    -   Write  access to the HLQ specified on the GDDMGDF= parameter of
        /etc/booksrv/bookmgr.80

o   If some books are stored in MVS data sets instead of in  HFS,  then
    read  access  is  required  to  those  MVS data sets containing the
    books, bookshelves, indexes, and bookshelf  lists  (bookshelf  list
    data  sets  must  be  identified with the QLSHELF= parameter in the
    /etc/booksrv/bookmgr.80 file).

o   If the option to present frames-based EUI for books is selected  on
    the Administration panel:

    -   Read,  write,  execute  access  to  the  /public/bookmgr/frames
        directory (this directory holds  the  work  files  required  to
        render frames-based html for books in the Web browser)
    -   Read, write access to all files in /public/bookmgr/frames

o   To  add,  change, or delete notes (this function is normally avail-
    able to all  clients  who  can  access  books),  the  following  is
    required:

    -   Read, write, execute access to /public/bookmgr/notes/
    -   Read,  write access to all files within /public/bookmgr/notes/,
        in addition to the access required for searching and displaying
        books (see above)

o   Selecting Generate Diagnostic Output on  the  Administration  panel
    (see  z/OS  IBM  BookManager BookServer for World Wide Web: Getting
    Started,  SC31-8814)  will  write  certain  BookManager  BookServer
    information to /cgi-bin/bookmgr.dbg:

    -   write access to /cgi-bin/bookmgr.dbg

NOTE:   If you are using any vendor security products, such as ACF2, or
       Top Secret, contact Vendor Products or visit the Web site:

         http://www.s390.ibm.com/os390/os390vend.html

       for Vendor product compatibility with OS/390 information.

Additional Site Customization

Other site options may be set using the Administration form at:

  http://your.hostname/bookmgr-cgi/EPHBOOKS/administration

NOTE:  If you have selected 'Produce running IBM footer' on the  Admin-
       istration form, you have the option to change the links found in
       the  footer.  To  change the links, copy /public/custrout.htm to
       the   /usr/lpp/booksrv/public/bookmgr/   directory    as    file
       bmrouter.htm.  The mode setting on this file should be 644. Edit
       the file bmrouter.htm as desired.

Performance Guidelines

The following is a list of general guidelines for improving performance
of UNIX and BookServer.

o   Update PARMLIB to give the IBM HTTP Server a  higher  service  pri-
    ority.  If  you are using a data set migration product, ensure that
    books and bookshelves used by BookServer clients are not  migrated.
    Check    settings   for   ServerPriority,   MaxActiveThreads,   and
    MinActiveThreads. For more information, see z/OS HTTP Server  Plan-
    ning, Installing, and Using, SC34-4826.

The following are specific suggestions for BookManager BookServer:

o   Do not enable/create library.htm unless it is really needed
o   Do not enable the header or footer unless it is really needed

./ ADD NAME=M0BTXSRH 0114-04350-04350-1300-00045-00047-00000-HOWTO
z/OS 1.4 Text Search


Customize HTTP Server
Customization of Text Search requires the use of an administration
group and user ID.  These ID's are set up as part of the IBM HTTP
Server customization and set up.  If you have not already done so,
complete the customization of HTTP Server prior to continuing
with the set up of Text Search.

Update BPXPRMxx PARMLIB Member

Update the BPXPRMxx member as follows:

o   Minimum settings for shared memory and semaphores must be:

      STEPLIBLIST('/etc/steplib')
      IPCSEMNSEMS(50)
      IPCSHMMPAGES(2048)

o   To  give  users access to Text Search programs, add the Text Search
    load library IMO.SIMOMOD1 to  the  sanctioned  list  (if  only  the
    IMO.SIMOMOD1  load  library  was  not  added  to LNKLSTxx or PROGxx
    PARMLIB members). This action  allows  programs  with  settings  of
    set-user-ID  and  set-group-ID to run. The sanctioned list is a HFS
    file pointed to by the STEPLIBLIST  entry  in  the  BPXPRMxx.    So
    update BPXPRMxx with the sanction list entry:

      STEPLIBLIST('/etc/steplib')

    and add the entry IMO.SIMOMOD1 to the HFS file '/etc/steplib'.

For  detailed  information,  see  UNIX System Services Planning manual.
The following additional information is available in z/OS
UNIX text file "/usr/lpp/TextTools/install/readme":

o   Steps for final installation using the final installation procedure
o   A description of last minute changes
o   Hints for trouble shooting
o   A description of the included samples
o   A listing of all HFS files after customization

The main installation  path  "/usr/lpp/TextTools/"  can  be  customized
during installation.

./ ADD NAME=M0CHTTPS 0114-04350-04350-1300-00012-00013-00000-HOWTO
z/OS 1.4 IBM HTTP Server


To set-up IBM HTTP Server for your new system, you will run
the HIMW530M job in the installation dialog.   To  run  the
job, your user ID requires superuser privileges.

If your order includes Java,  it  is  recommended  that you
ensure that JAVA_HOME is set in the  default profile before
you submit the job for execution.

Run this job from the target system.
./ ADD NAME=M1HTTPSV 0114-04350-04350-1300-00076-00076-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*------------------------------------------------------------------
//* This job sets up the HTTP Server
//* This job must be run from a UserID with SuperUser priviledges
//* This job must be run from the target system
//*------------------------------------------------------------------
//SET     EXEC  PGM=BPXBATCH,COND=(4000,LT),
// PARM='SH export PATH=/bin:.;cd /usr/lpp/internet/sbin/;setup.sh'
//STDOUT     DD   PATH='/out',
//             PATHOPTS=(OCREAT,OTRUNC,OWRONLY),PATHMODE=SIRWXU
//STDIN      DD   PATH='/null',
//             PATHOPTS=(OCREAT,ORDONLY),PATHMODE=SIRWXU
//STDERR     DD   PATH='/error',
//             PATHOPTS=(OCREAT,OTRUNC,OWRONLY),PATHMODE=SIRWXU
//*
//ERR     EXEC PGM=IKJEFT01,COND=(4000,LT)
//*
//*  ***********************************************************
//*  *   Copy the error file output to JES output spool        *
//*  ***********************************************************
//*
//JES      DD  SYSOUT=*,DCB=(RECFM=V,LRECL=256)
//ERRORF   DD  PATH='/error',
//             PATHOPTS=ORDONLY
//OUT      DD  PATH='/out',
//             PATHOPTS=ORDONLY
//SYSTSPRT DD  DUMMY
//SYSTSIN  DD  *
  OCOPY INDD(ERRORF) OUTDD(JES)
  OCOPY INDD(OUT) OUTDD(JES)
//*
//ULK     EXEC PGM=IEBGENER,COND=(4000,LT)
//*
//*  ***********************************************************
//*  *   Delete Error Files from the HFS                       *
//*  ***********************************************************
//*
//SYSIN    DD DUMMY
//SYSUT2   DD DSN=&REXX(MEM1),
//         DISP=(,PASS),UNIT=SYSALLDA,
//         DCB=(LRECL=80,RECFM=FB,BLKSIZE=8000),
//         SPACE=(TRK,(1,1,1))
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DATA,DLM=GQ
 /* REXX */
  call syscalls('ON')
  call syscallm unlink '/out'
  call syscallm unlink '/error'
  call syscallm unlink '/null'
  exit 0
  syscallm:
    parse arg cmd
    address syscall cmd
  return
GQ
//*
//DEL    EXEC PGM=IKJEFT01,PARM='MEM1',COND=(4000,LT)
//*
//*  ***********************************************************
//*  *   Delete Error Files from the HFS                       *
//*  ***********************************************************
//*
//SYSPROC  DD   DSNAME=&REXX,DISP=(OLD,DELETE)
//SYSTSPRT DD   SYSOUT=*
//SYSTSIN  DD   DUMMY
//*
./ ADD NAME=M2ACCPHP 0114-04350-04350-1300-00016-00016-00000-HOWTO
z/OS 1.4 C/C++ Host Performance Analyzer


REVIEW NECESSARY SECURITY AUTHORIZATIONS

If C/C++ Host Performance Analyzer is to be used with Web Server appli-
cations, then there is a requirement that the modules in hlq.SCTVMOD be
defined  as  RACF  controlled  programs and that users of Analyzer have
access to these modules.

   RALTER PROGRAM ** ADDMEM('hlq.SCTVMOD'//NOPADCHK)  UACC(READ)
   SETROPTS WHEN(PROGRAM) REFRESH

You  will  need  to  review these settings to make sure they are appro-
priate for your security environment.

./ ADD NAME=M3ANFS   0114-04350-04350-1300-00044-00046-00000-HOWTO
z/OS 1.4 Network File System


Updating BPXPRMxx PARMLIB Member

Add the FILESYSTYPE statement shown below to BPXPRMxx:

  FILESYSTYPE TYPE(NFS)
  ENTRYPOINT(GFSCINIT)
  PARM('installation parms')
  ASNAME(proc_name)

NOTES:

1.  PARM('installation  parms')  specifies  the installation parameters
    for z/OS Network File System Client.

2.  ASNAME(proc_name) specifies the procedure name in SYS1.PROCLIB that
    is used by z/OS UNIX System Services to start the address  space
    in which the z/OS Network File System Client is initialized.


Updating PROCLIB

The startup procedures for the Network File System provided in the
target data set NFSSAMP, have been copied to EXMP.PROCLIB.

+---------------------------------------------------------------------+
|Table 1. NFS Startup Procedures                                      |
+----------+----------------------------------------------------------+
|Name      | Description                                              |
+----------+----------------------------------------------------------+
|GFSAPROC  | Procedure that starts the Network File System Server     |
+----------+----------------------------------------------------------+
|GFSCPROC  | Procedure that starts the Network File System Client     |
+----------+----------------------------------------------------------+
|GFSAPRST  | Procedure that starts the Network Status Monitor         |
+----------+----------------------------------------------------------+
|GFSAPRLK  | Procedure that starts the Network Lock Manager           |
+----------+----------------------------------------------------------+

For detailed information, see Network File System Customization and
Operation manual.

./ ADD NAME=N1IVPDOC 0114-04350-04350-1300-00055-00050-00000-HOWTO
VERIFYING THE INSTALLATION  -  Automated Operations

IBM recommends that you run the installation verification
programs (IVPs) that are appropriate for your environment.
Doing so ensures that the products in your order have been
installed successfully.

LOGGING ON TO MSYS FOR OPERATIONS

If  you  used  the  full  system  replacement  option  to
generate  the  installation  jobs, msys for Operations is
automatically started whenever you IPL the target system.
msys for Operations    is    started    by    the   entry
COM='S MSOAPROC' in the  COMMND00 member  of your order's
EXMP.PARMLIB data set.

To verify the  operation  of  msys for Operations,  it is
recommended  that  you  log on to the msys for Operations
console.   To do so, you can use the following procedure:

1.  Ensure  that  msys for Operations is running
    (it was started during the initial IPL of the
    target system). If it is not active, enter the following
    command at the system console:
      S MSOAPROC
    The following messages are displayed:
    DSI802A MSOAC    REPLY WITH VALID NCCF SYSTEM OPERATOR COMMAND
    AOF532I 22:26:32 : AUTOMATION ENVIRONMENT HAS BEEN INITIALIZED
    AOF540I 11:40:10 : INITIALIZATION RELATED PROCESSING HAS BEEN
    COMPLETED.

2.  Before you can log on to the msys for Operations console, its VTAM
    application must be active:
    Enter this command from the system console to display the
    VTAM application:
           D NET,ID=APMSO,E
    If the VTAM application is not active, enter the following
    command from the system console to activate the VTAM application:
           V NET,ID=APMSO,ACT

3.  Log on to the msys for Operations console by entering
    the  following   command  from  a local TSO terminal:
      LOGON APPLID=MSOxx
    where 'xx' is the last two characters  of  the system
    name (SYSNAME).    By  default,  the  SYSNAME for the
    target system is EXMP.

4.  When  the  logon  panel   is   displayed,  enter  the
    appropriate operator ID and password (for example,
    OPER1 password OPER1).   The main menu of msys for
    Operations is displayed.

For information about modifying  the  msys for Operations
startup procedure, see    msys for Operations: Setting Up
and Using.
./ ADD NAME=N2IVPBCP 0114-04350-04350-1300-00014-00018-00000-HOWTO
z/OS 1.4 BCP

To  verify  that the base control program (BCP) was installed properly,
run the N3IVPBCP job in the installation dialog (IVPJOBS in the program
directory).

See the comments in the job for instructions and the expected condition
codes and output.

The command statement labeled "LISTACTV" issues  a  Console  Management
"DISPLAY  ACTIVE,  LIST"  COMMAND.  It also issues a WTO  which  should
be responded to immediately.   The  system will not accept any new work
until the operator has replied to the IEFC166D message.

./ ADD NAME=N3IVPBCP 0114-04350-04350-1300-00347-00349-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*********************************************************************
//* JOB: N3IVPBCP  (product-supplied job IVPJOBS in library SAMPLIB)
//*
//* DOC: MVS Installation Verification Procedure
//*
//*      Functions:
//*
//*      The command statement labeled "LISTACTV" issues a Console
//*      Management "DISPLAY ACTIVE, LIST" ('D, A,L') COMMAND
//*      to list active address spaces.
//*
//*      Step IVP - copies three members of SYS1.PARMLIB, using
//*      IEBPTPCH, to SYSUT2.  If all members are present the return
//*      code is 0.  If any are not present the return code is 8.
//*
//*      Step ASM - assembles a sample program using HLASM.
//*      The HLASM program output is written to SYSPRINT.
//*      The return code from the HLASM program should be 0.
//*
//*      Step LKED - linkedits the sample program using the
//*      Program Management Binder (HEWLH096).
//*      The Binder output is written to SYSPRINT.
//*      The return code should be 0.
//*
//*      Step GO - executes the sample program assembled and
//*      linkedited above.  A message is written to SYSPRINT
//*      which indicates successful completion of the program.
//*      The return code should be 0.
//*
//*      Step ABEND - tries to load a nonexistent module (EXPCT806).
//*      This should result in ABEND 806 reason code 4.  A region
//*      DUMP is written to SYSUDUMP unless prevented by SLIP
//*      TRAP or installation-specified DUMP parameters.
//*
//*      NOTE: This step is intended to ABEND by trying to
//*      call a program named EXPCT806, which is not expected to exist.
//*      If your installation has a program named EXPCT806 in the order
//*      of program call (for example, in the LPA list or LINK list),
//*      change EXPCT806 to the name of a program that does not
//*      exist.
//*
//*********************************************************************
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*        ** UNCOMMENT ** UNCOMMENT** UNCOMMENT **
//*  The following line if you wish to test the command facility.
//*
//*LISTACTV COMMAND  'D A,L'   LIST ACTIVE ADDRESS SPACES
//*
//* This command will issue a "DISPLAY ACTIVE, LIST" command
//* unless disabled by the job entry subsystem or disallowed for
//* the submitting user by RACF. A WTO message IEFC166D
//* asking for the operator to respond will be written to the
//* system console.  This job will not continue execution until
//* the WTO message is responded to.
//* For more information about the command statement, refer
//* to the z/OS MVS JCL Reference.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//*  The following step will print four members of SYS1.PARMLIB
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//IVP      EXEC PGM=IEBPTPCH,
//            REGION=4M
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSNAME=SYS1.IBM.PARMLIB,
//            DISP=SHR
//SYSUT2   DD SYSOUT=*
//SYSIN    DD *
       PRINT   TYPORG=PO,MAXFLDS=5,MAXNAME=5
       MEMBER  NAME=IEACMD00
       RECORD  FIELD=(80)
       MEMBER  NAME=IEAIPS00
       RECORD  FIELD=(80)
       MEMBER  NAME=CLOCK00
       RECORD  FIELD=(80)
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//*  THE FOLLOWING STEP ASSEMBLES A SAMPLE PROGRAM.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//ASM   EXEC PGM=ASMA90,
//            PARM=(NODECK,OBJECT),
//            REGION=4M
//SYSLIB   DD DSN=SYS1.MACLIB,
//            DISP=SHR
//SYSUT1   DD DSN=&UT1,
//            SPACE=(1700,(400,50)),
//            UNIT=SYSALLDA
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&LOADSET,
//            UNIT=SYSALLDA,
//            SPACE=(400,(40,10)),
//            DISP=(MOD,PASS),
//            DCB=(LRECL=80,BLKSIZE=0,RECFM=FB)
//SYSIN    DD  *
EXAM     TITLE 'SAMPLE PROGRAM'
         PRINT DATA
*
*        THIS IS THE MACRO DEFINITION
*
         MACRO
         MOVE  &TO,&FROM
.*
.*       DEFINE SETC SYMBOL
.*
         LCLC  &TYPE
.*
.*       CHECK NUMBER OF OPERANDS
.*
         AIF   (N'&SYSLIST NE 2).ERROR1
.*
.*       CHECK TYPE ATTRIBUTES OF OPERANDS
.*
         AIF   (T'&TO NE T'&FROM).ERROR2
    AIF   (T'&TO EQ 'C' OR T'&TO EQ 'G' OR T'&TO EQ 'K').TYPECGK
    AIF   (T'&TO EQ 'D' OR T'&TO EQ 'E' OR T'&TO EQ 'H').TYPEDEH
         AIF   (T'&TO EQ 'F').MOVE
         AGO   .ERROR3
.TYPEDEH ANOP
.*
.*       ASSIGN TYPE ATTRIBUTE TO SETC SYMBOL
.*
&TYPE    SETC  T'&TO
.MOVE    ANOP
*        NEXT TWO STATEMENTS GENERATED FOR MOVE MACRO
         L&TYPE   2,&FROM
         ST&TYPE  2,&TO
         MEXIT
.*
.*       CHECK LENGTH ATTRIBUTES OF OPERANDS
.*
.TYPECGK AIF   (L'&TO NE L'&FROM OR L'&TO GT 256).ERROR4
*        NEXT STATEMENT GENERATED FOR MOVE MACRO
         MVC   &TO,&FROM
         MEXIT
.*
.*       ERROR MESSAGES FOR INVALID MOVE MACRO INSTRUCTIONS
.*
.ERROR1  MNOTE 1,'IMPROPER NUMBER OF OPERANDS, NO STATEMENTS GENERATED'
         MEXIT
.ERROR2  MNOTE 1,'OPERAND TYPES DIFFERENT, NO STATEMENTS GENERATED'
         MEXIT
.ERROR3  MNOTE 1,'IMPROPER OPERAND TYPES, NO STATEMENTS GENERATED'
         MEXIT
.ERROR4  MNOTE 1,'IMPROPER OPERAND LENGTHS, NO STATEMENTS GENERATED'
         MEND
*
*        MAIN ROUTINE
*
SAMPLR   CSECT
SAMPLR   AMODE 31
SAMPLR   RMODE ANY
BEGIN    SAVE  (14,12),,*
         BALR  R12,0              ESTABLISH ADDRESSABILITY OF PROGRAM
         USING *,R12              TELL THE ASSEMBLER WHAT BASE TO USE
         ST    13,SAVE13
         LM    R5,R7,=A(LISTAREA,16,LISTEND)  LOAD LIST AREA PARAMETERS
         USING LIST,R5            REGISTER 5 POINTS TO THE LIST
MORE     BAL   R14,SEARCH         FIND LIST ENTRY IN TABLE
         TM    SWITCH,NONE        CHECK TO SEE IF NAME WAS FOUND
         BO    NOTTHERE           BRANCH IF NOT
         USING TABLE,R1           REGISTER 1 NOW POINTS TO TABLE ENTRY
         MOVE  TSWITCH,LSWITCH          MOVE FUNCTIONS
         MOVE  TNUMBER,LNUMBER               FROM LIST ENTRY
         MOVE  TADDRESS,LADDRESS                  TO TABLE ENTRY
LISTLOOP BXLE  R5,R6,MORE         LOOP THROUGH THE LIST
         CLC   TESTTABL(240),TABLAREA
         BNE   NOTRIGHT
         CLC   TESTLIST(96),LISTAREA
         BNE   NOTRIGHT
         WTO '  ASSEMBLER SAMPLE PROGRAM SUCCESSFUL'
EXIT     L     R13,SAVE13
         RETURN (14,12),RC=0
*
NOTRIGHT WTO '  ASSEMBLER SAMPLE PROGRAM UNSUCCESSFUL'
         B     EXIT
NOTTHERE OI    LSWITCH,NONE       TURN ON SWITCH IN LIST ENTRY
         B     LISTLOOP           GO BACK AND LOOP
SAVE13   DC    F'0'
SWITCH   DC    X'00'
NONE     EQU   X'80'
*
*        BINARY SEARCH ROUTINE
*
SEARCH   NI    SWITCH,255-NONE    TURN OFF NOT FOUND SWITCH
         LM    R1,R3,=F'128,4,128' LOAD TABLE PARAMETERS
         LA    R1,TABLAREA-16(R1) GET ADDRESS OF MIDDLE ENTRY
LOOP     SRL   R3,1               DIVIDE INCREMENT BY 2
         CLC   LNAME,TNAME        COMPARE LIST ENTRY WITH TABLE ENTRY
         BH    HIGHER             BRANCH IF SHOULD BE HIGHER IN TABLE
         BCR   8,R14              EXIT IF FOUND
         SR    R1,R3              OTHERWISE IT IS LOWER IN THE TABLE   X
                                     SO SUBTRACT INCREMENT
         BCT   R2,LOOP            LOOP 4 TIMES
         B     NOTFOUND           ARGUMENT IS NOT IN THE TABLE
HIGHER   AR    R1,R3              ADD INCREMENT
         BCT   R2,LOOP            LOOP 4 TIMES
NOTFOUND OI    SWITCH,NONE        TURN ON NOT FOUND SWITCH
         BR    R14                EXIT
*
*        THIS IS THE TABLE
*
         DS    0D
TABLAREA DC    XL8'0',CL8'ALPHA'
         DC    XL8'0',CL8'BETA'
         DC    XL8'0',CL8'DELTA'
         DC    XL8'0',CL8'EPSILON'
         DC    XL8'0',CL8'ETA'
         DC    XL8'0',CL8'GAMMA'
         DC    XL8'0',CL8'IOTA'
         DC    XL8'0',CL8'KAPPA'
         DC    XL8'0',CL8'LAMBDA'
         DC    XL8'0',CL8'MU'
         DC    XL8'0',CL8'NU'
         DC    XL8'0',CL8'OMICRON'
         DC    XL8'0',CL8'PHI'
         DC    XL8'0',CL8'SIGMA'
         DC    XL8'0',CL8'ZETA'
*
*        THIS IS THE LIST
*
LISTAREA DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)
         DC    CL8'THETA',X'02',FL3'45',A(BEGIN)
         DC    CL8'TAU',X'00',FL3'0',A(1)
         DC    CL8'LIST',X'1F',FL3'465',A(0)
LISTEND  DC    CL8'ALPHA',X'00',FL3'1',A(123)
*
*        THIS IS THE CONTROL TABLE
*
         DS    0D
TESTTABL DC    FL3'1',X'00',A(123),CL8'ALPHA'
         DC    XL8'0',CL8'BETA'
         DC    XL8'0',CL8'DELTA'
         DC    XL8'0',CL8'EPSILON'
         DC    XL8'0',CL8'ETA'
         DC    XL8'0',CL8'GAMMA'
         DC    XL8'0',CL8'IOTA'
         DC    XL8'0',CL8'KAPPA'
         DC    FL3'29',X'0A',A(BEGIN),CL8'LAMBDA'
         DC    XL8'0',CL8'MU'
         DC    XL8'0',CL8'NU'
         DC    XL8'0',CL8'OMICRON'
         DC    XL8'0',CL8'PHI'
         DC    XL8'0',CL8'SIGMA'
         DC    FL3'5',X'05',A(LOOP),CL8'ZETA'
*
*        THIS IS THE CONTROL LIST
*
TESTLIST DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)
         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)
         DC    CL8'THETA',X'82',FL3'45',A(BEGIN)
         DC    CL8'TAU',X'80',FL3'0',A(1)
         DC    CL8'LIST',X'9F',FL3'465',A(0)
         DC    CL8'ALPHA',X'00',FL3'1',A(123)
*
*        THESE ARE THE SYMBOLIC REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R5       EQU   5
R6       EQU   6
R7       EQU   7
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*        THIS IS THE FORMAT DEFINITION OF LIST ENTRIES
*
LIST     DSECT
LNAME    DS    CL8
LSWITCH  DS    C
LNUMBER  DS    FL3
LADDRESS DS    F
*
*        THIS IS THE FORMAT DEFINITION OF TABLE ENTRIES
*
TABLE    DSECT
TNUMBER  DS    FL3
TSWITCH  DS    C
TADDRESS DS    F
TNAME    DS    CL8
         END   BEGIN
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* THIS STEP WILL LINKEDIT THE PROGRAM ASSEMBLED ABOVE IF THE
//* RETURN CODE FROM ASM WAS ACCEPTABLE.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//LKED  EXEC PGM=HEWLH096,
//            PARM=(XREF,LET,LIST,NCAL),
//            REGION=4M,
//            COND=(8,LT,ASM)
//SYSLIN   DD DSN=&LOADSET,
//            DISP=(OLD,DELETE)
//SYSLMOD  DD DSN=&GOSET(GO),
//            UNIT=SYSALLDA,
//            SPACE=(1024,(50,20,1)),
//            DISP=(MOD,PASS)
//SYSUT1   DD DSN=&UT1,
//            UNIT=SYSALLDA,
//            SPACE=(1024,(50,20))
//SYSPRINT DD SYSOUT=*
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* THIS STEP WILL RUN THE PROGRAM IF THE RETURN CODES FROM ASM
//* AND LKED WERE ACCEPTABLE.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//GO    EXEC  PGM=*.LKED.SYSLMOD,
//          COND=((8,LT,ASM),(4,LT,LKED))
/*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//*
//* THIS STEP WILL ATTEMPT TO RUN PROGRAM EXPCT806, WHICH IBM DOES
//* NOT SUPPLY.  IF YOU HAVE A PROGRAM IN YOUR INSTALLATION WITH
//* THIS NAME, CHANGE EXPCT806 TO THE NAME OF A PROGRAM THAT DOES
//* NOT EXIST.  AN ATTEMPT TO LOAD A NONEXISTENT PROGRAM WILL
//* CAUSE AN ABEND 806-4.  UNLESS SLIP SUPPRESSES THE DUMP, A
//* REGION DUMP WILL BE WRITTEN TO SYSUDUMP.
//*
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//ABEND EXEC  PGM=EXPCT806,     THIS PROGRAM SHOULD NOT EXIST, SO
//          COND=EVEN         CALLING IT WILL GET ABEND806 AND DUMP
//SYSUDUMP DD  SYSOUT=*
/*
./ ADD NAME=N4ACDBUG 0114-04350-04350-1300-00020-00020-00000-HOWTO
z/OS 1.4 C/C++ Debug Tool


Run the IVP job, EQAWIVP2, to ensure that Debug Tool shipped with C/C++
was  installed  properly.    Be  sure  that  you  have already run jobs
EQAWLU62 and EQAWLECS before you run job  EQAWIVP2.    For  information
about  jobs  EQAWLU62  and  EQAWLECS,  see  the  current OS/390 or z/OS
Program Directory, section Run C/C++ Debug Tool Post-APPLY Jobs.

Jobs EQAWLU62, EQAWLECS, and EQAWIVP2 can be found in your target  data
set SCBCJCL (for C/C++ Compiler) or SCCNJCL (for ANSI C/C++ Compiler).

The sample job EQAWIVP2 compiles a C test program with the TEST compile
option  and  executes  it  using the TEST run-time option so that Debug
Tool is invoked.  The program then executes some  Debug  Tool  commands
(located  in member EQAWCMD2 of your SEQASAMP data set) and generates a
log of the results.

See the job for instructions and expected results.

./ ADD NAME=N4BGDDM  0114-04350-04350-1300-00091-00096-00000-HOWTO
z/OS 1.4 GDDM


Before you can test GDDM and any of the GDDM programs,  you  must  have
installed  support  for at least one national language from  GDDM  NLS,
If you have not  installed  NLS  for  U.S.  English,  use  the  NATLANG
external default to specify the language you want to use.

To  specify a national language other than U.S. English for your enter-
prise, add the following line to the external  defaults  file,  or  the
external defaults module:

   ADMMDFT NATLANG=N

where  "N"  identifies  the  new  language  selected,  in this instance
Norwegian.  The line must start with a space in column  1.

TESTING GDDM/MVS BASE

Before performing  the installation verification procedures, ensure the
default  User Control key  is set. The  default User Control key is PA3.
If your keyboard does  not have  a PA3 key, or the  PA3 key  is already
used by another application, set the User Control key to another value.
To do this, add the  following nickname  user default  specification to
the external defaults file, or external defaults module:

       ADMMNICK FAM=1,PROCOPT=((CTLKEY,type,value))

Where  "type"  defines  the  type of key  selected  for  entering  User
Control (1=PF key, 4=PA key), and "value" defines  the number of the PF
or PA key to be used. The line must start with a space in column 1.

For more  information about nicknames and supplying user-default speci-
fications, see the GDDM System Customization and Administration book.

For more information about User Control, see the GDDM User's Guide.


Testing GDDM Base

To test that GDDM has been installed successfully for use under TSO:

1.  Allocate the GDDM symbol and map data sets on your TSO  session  by
    typing:

       ALLOC F(ADMSYMBL) DA('GDDM.SADMSYM') SHR REU
       ALLOC F(ADMGDF)   DA('GDDM.SADMGDF') SHR REU

    If  you  also  intend  to  use this step to test the GDDM TSO Print
    Utility, you must allocate the Master Print Queue data set:

       ALLOC F(ADMPRNTQ) DA('your-master-print-queue') SHR REU

2.  Run the GDDM installation verification program:

       CALL 'GDDM.SADMMOD(ADMUGC)' 'FROM(ADMTEST)'

    A picture should be displayed that shows the words "Welcome to GDDM
    Version 3.2".  This picture is the ADMTEST ADMGDF from the  SADMGDF
    data set being displayed by the ADMUGC conversion utility.

    If the terminal does  not  support graphics, the  following message
    will be displayed:

       ADM0275 W GRAPHICS CANNOT BE SHOWN.  REASON CODE 3

3.  Go  into  GDDM  User Control by pressing the User Control key.

    The  User Control panel should now be superimposed on the bottom of
    the display, using the language specified by the  NATLANG  external
    default.

    While  you  are  in  this  panel,  you can also test the GDDM print
    utility if you have already customized it.   For information  about
    the  print  utility, see the GDDM System Customization and Adminis-
    tration book.  To create a file for testing the GDDM print  utility
    using GDDM User Control:

    a.  Press PF4 for the User Control output panel.
    b.  Type  the  terminal ID of the printer to which you want to send
        the output, as defined to VTAM or  in  your  external  defaults
        module.
    c.  Press  PF4  to  send  the  file  to be printed.   A highlighted
        message is displayed when the print has completed successfully.

4.  Press PF3 until you are back in TSO.

This completes the test of the graphic and  alphanumeric  functions  of
GDDM/MVS.


./ ADD NAME=N4DGDDMD 0114-04350-04350-1300-00022-00025-00000-HOWTO
z/OS 1.4 GDDM

What to Do if any of the Installation Tests Fail

If  any  of  the  tests  fail,  the first thing you may see is an error
message displayed on your screen.  On the other hand, you may find that
graphics are not displayed on your screen.

Error Messages

If you receive an error message, look it up in the GDDM Messages  book.
If  it  is  a GDDM-OS/2 Link message, you can also use the online help.

If  graphics  cannot  be shown on one or more of the terminals when you
test GDDM or the telecommunication  network,  see  the  GDDM  Diagnosis
book.

If  you cannot quickly identify the cause of the error, you may find it
useful to read the GDDM Diagnosis book, which contains detailed  infor-
mation   about  diagnosing  problems  with  GDDM  and  its  components.
Information  about  detailed  diagnosis and the procedure for reporting
errors can be found in the GDDM Diagnosis book.
./ ADD NAME=N4EHLASM 0114-04350-04350-1300-00016-00017-00000-HOWTO
z/OS 1.4 HIGH LEVEL ASSEMBLER


RUNNING THE HIGH LEVEL ASSEMBLER IVP


Run  job  HMQ4140I  in  the  installation  dialog   (ASMAIVP  in    the
SASMSAM1  library)   to   verify   that   the  product  has   installed
correctly.    This  job  assembles  the  source  statements from member
ASMASAMP  to  verify  that  the  product  is  installed and functioning
correctly.

The  program  being  assembled  is  not  intended  to be run.   If run,
the program sets a return code of  zero  and  returns  to  the  caller.


./ ADD NAME=N5HLASM  0114-04350-04350-1300-00051-00053-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//* JOB: N5HLASM  (product-supplied job ASMAIVP in library SASMSAM1)
//*
//* DOC: This job assembles the source statements from
//*      member ASMASAMP from the SASMSAM1 librery. The assembly
//*      of ASMASAMP verifies that the product is installed and
//*      functions correctly.
//*
//* NOTES: 1. The assembly will have a return code of zero.
//*        2. The program is not intended to be run; however, if it
//*        is run, it sets a return code of zero and returns to the
//*        caller.
//*
//********************************************************************
//*
//***********************************************************
//*  PROC TO RUN ASSEMBLY                                   *
//***********************************************************
//PROCIVP  PROC
//*
//IVP      EXEC PGM=ASMA90,PARM='NOOBJECT,NODECK,BATCH'
//SYSIN    DD DSN=ASM.SASMSAM1(ASMASAMP),
//            DISP=SHR
//SYSLIB   DD DSN=ASM.SASMMAC1,
//            DISP=SHR
//         DD DSN=SYS1.MACLIB,
//            DISP=SHR
//STEPLIB  DD DSN=ASM.SASMMOD1,
//            DISP=SHR
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(5,3))
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD DUMMY
//*
//EPROCIVP PEND
//***********************************************************
//*  STEP TO EXECUTE THE PROC                               *
//***********************************************************
//EXECIVP EXEC PROCIVP
/*
./ ADD NAME=N6AICKDS 0114-04350-04350-1300-00034-00034-00000-HOWTO

z/OS 1.4 ICKDSF


VERIFYING THE INSTALLATION OF ICKDSF

Customize and run job EDU1H01G in the installation  dialog  (ICKVER  in
the  program  directory)  to verify that ICKDSF has been installed cor-
rectly.  Run this sample job for any offline  supported  direct  access
device.

Informational  messages  such  as  the  following  are  written  to the
SYSPRINT data set:

  ICKDSF - MVS/ESA     DEVICE SUPPORT FACILITIES 17.0
     ANALYZE UNIT(ccuu) NODRIVE SCAN CYLR(1,2)
  ICK00700I DEVICE INFORMATION FOR ccuu IS CURRENTLY AS FOLLOWS:
            PHYSICAL DEVICE = xxxx
            STORAGE CONTROLLER = xxxx
            STORAGE CONTROL DESCRIPTOR = xx
            DEVICE DESCRIPTOR = xx
            ADDITIONAL DEVICE INFORMATION = xxxxxxxx
  ICK04000I DEVICE IS IN SIMPLEX STATE
  ICK00091I ccuu NED=xxxxxx.xxx.xxx.xx.xxxxxxxxxxxx
  ICK01400I ccuu ANALYZE STARTED
  ICK01408I ccuu DATA VERIFICATION TEST STARTED
  ICK01405I ccuu ALL DATA "MACHINE READABLE" WITHOUT ERRORS
  ICK01406I ccuu ANALYZE ENDED
  ICK00001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 0
            hh:mm:ss    dd/mm/yy

These  messages can vary, depending on the specific device types in use
at your installation.

./ ADD NAME=N6ICKDSF 0114-04350-04350-1300-00040-00042-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//******************************************************************
//* JOB: N6ICKDSF  (product-supplied job ICKVER in library SAMPLIB)
//*
//* DOC: This job verifies that Device Support Facilities (ICKDSF)
//*      has been installed correctly by running the ANALYZE command
//*      against the indicated device.
//*
//* MRC: The maximum expected return code is 0.
//*
//* NOTES:
//*      Before submitting this job, change the following:
//*
//*      1. Change "ccuu" to the hexadecimal address of the device
//*         to be inspected.  Device must be offline.
//*
//******************************************************************
//DSFIVP    EXEC  PGM=ICKDSF,REGION=4M
//**************************************************************
//*     Device Support Facility Verification
//**************************************************************
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD *
  ANALYZE    -
  UNIT(ccuu) -
  NODRIVE    -
  SCAN       -
  CYLR(1,2)
/*
./ ADD NAME=N7ASDSFV 0114-04350-04350-1300-00027-00027-00000-HOWTO
z/OS 1.4 SDSF


To verify SDSF, access it from ISPF and TSO/E.  Do the following:

1.  Activate your changes.   If you changed your TSO/E logon procedure,
    log off the  system  and  log  on  again  to  execute  the  changed
    procedure.    If   you  changed  your  ISPF  initialization  CLIST,
    exit ISPF and reaccess it.

2.  Access SDSF.

    o   FROM ISPF:   If you used the ISPF sample panels to enable SDSF,
        select  Option  13  from  the  ISPF Primary Options Menu,  then
        Option 14  on  the z/OS Applications panel. The SDSF Primary
        Options Menu should be displayed.   Display  the  panel name by
        entering PANELID on the command line.  The  panel  name  should
        be ISFPCU41.

        If you modified another ISPF panel to enable SDSF,  select  the
        SDSF option  from  that  panel.   The SDSF Primary Options Menu
        should be displayed.   If  not,  or  the  Primary Options Panel
        shows only options LOG, DA, O, and H, or is garbled, check your
        modified ISPF panel and correct the problems before continuing.

    o   FROM TSO/E:  Enter SDSF or ISF.  The SDSF Primary Options Menu
        should be displayed.
./ ADD NAME=N8AJAVA2 0114-04350-04350-1300-00081-00081-00000-HOWTO

IBM Developer Kit for OS/390, Java 2 Technology Edition 1.1.0


This  section describes  the  activation  steps  for  Java 2 Technology
Edition.

UPDATE THE ENVIRONMENT PATH

IBM Developer Kit for OS/390, Java 2 Technology Edition is invoked as a
command under the OS/390 UNIX System Services shell.   You must  update
the  path environment variable to refer to the Java executables so that
the command is found.  To do so, use the following shell command:

    export PATH=/usr/lpp/java/IBM/J1.3/bin:$PATH

The "export" command references the default path in which IBM Developer
Kit for OS/390, Java 2 Technology Edition was installed.        If  you
changed the default path, change the "export" command also.

Alternatively,  you  can  add  the IBM Developer Kit for OS/390, Java 2
Technology Edition path to the system path variable in "/etc/profile".

After the path environment variable is set, you can enter the following
shell commands:

    java
    java -version

IBM Developer Kit for OS/390, Java 2 Technology Edition is successfully
installed if the "java" command returns a summary of available  options
and the version option returns the current version of the IBM Developer
Kit for OS/390, Java 2 Technology Edition code.

USING THE JUST-IN-TIME COMPILER

IBM  Developer  Kit  for  OS/390,  Java 2 Technology Edition contains a
just-in-time (JIT) compiler  designed  specifically  for  OS/390.    By
default, the JIT compiler is active.  However, you can deactivate it by
setting  an  environment variable.  To do so, enter the following shell
command before you start Java:

    export JAVA_COMPILER=

To reactivate the JIT  compiler,  enter  the  following  shell  command
before you start Java:

    unset JAVA_COMPILER

The  environment  variable  names  and values are case sensitive; enter
them exactly as shown.

USING JAVA WINDOWING SUPPORT

To use the Java Windowing Support (AWT), you must  have  the  X/Windows
feature  of  OS/390 V2R8 (or higher) SecureWay Communications Server IP
installed on the OS/390 host system.  Also, your  workstation  requires
the  appropriate X/Windows server software to communicate with the host
system.

Set the DISPLAY environment variable to the IP address or name of the X
server (the workstation) on which the window is to be displayed.    For
example:

    export DISPLAY=myhost.hursley.ibm.com:0.0

defines "myhost.hursley.ibm.com" as the workstation that is running the
X server.

You must set the DISPLAY variable before you start Java.

AUDIO SUPPORT

Audio  is  not  supported for applets.   An applet that attempts to use
audio will function but no audio will be produced.

For information about running  Java  applications  and  compiling  Java
source code, see the following web site:

  http://www.ibm.com/s390/java

./ ADD NAME=N9AHCDV  0114-04350-04350-1300-00015-00015-00000-HOWTO
z/OS 1.4 Hardware Configuration Definition (HCD)


To verify that HCD is installed, start HCD.  The system displays
the  primary  task  selection  panel,  "Hardware Configuration."
Verify that the panel identifies  the  current  release  of HCD.

Specify your system's IODF on the panel  and  select some of the
options, such as the following:

o   What's new in this release
o   View configuration data
o   Maintain I/O definition files.


./ ADD NAME=N9BRMFV  0114-04350-04350-1300-00030-00030-00000-HOWTO
z/OS 1.4 RMF


RUN THE RMF INSTALLATION VERIFICATION PROCEDURE

Verify that RMF has been installed properly by performing the following
steps:

1.  Test  the  new  element  level by issuing the START command for RMF
    with PARMLIB member ERBRMF02 and reply with the desired options  or
    GO. Start command: S RMF,PARM='MEMBER(02)'.

2.  Modify  RMF  to  start  one or more Monitor II background sessions,
    using PARMLIB member ERBRMF03.  Command: F RMF,S II,MEMBER(03).
    These members test Monitor I and Monitor II reports.

3.  Modify RMF to start a Monitor  III  data  gatherer  session,  using
    PARMLIB member ERBRMF04, and then start a data reporter session.
    Command: F RMF,S III,MEMBER(04).

4.  Request  several reports on the Monitor III report screen to verify
    these functions are working.

Monitor I and II and the Monitor III gatherer will run without  further
attention or until the sessions are over or until the next IPL.

For  more  information  on  starting RMF and the available options, see
z/OS RMF User's Guide, SC33-7990.
_____________________

./ ADD NAME=O0FFSTV  0114-04350-04350-1300-00012-00013-00000-HOWTO
z/OS 1.4 FFST


There is one installation verification job, EPW12012, that you can  run
to  ensure that FFST was properly installed.   This job issues  several
EPW90xxI messages.  See FFST/MVS  FFST/VM Operations Guide,  SC31-8604,
detailed explanations.

The sample job EPW12012 is  provided  in  the  installation  dialog  as
O1FFSTV.


./ ADD NAME=O1FFSTV  0114-04350-04350-1300-00034-00034-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//***************************************************************
//*                                                             *
//*    TITLE: START THE FFST IVP                                *
//*                                                             *
//* FUNCTION: THIS JOB IS OPTIONAL, IT WILL START THE FFST      *
//*           INSTALLATION VERIFICATION PROGRAM EPWIVP.         *
//*                                                             *
//*        EXPECTED CONDITION CODE = 0000                       *
//*                                                             *
//* NOTE:                                                       *
//*                                                             *
//*  MAKE SURE THAT TASK EPWFFST HAS BEEN STARTED               *
//*  BEFORE RUNNING THIS IVP.                                   *
//*                                                             *
//***************************************************************
//STEP1    EXEC PGM=EPWIVP,REGION=3000K
//STEPLIB  DD DSN=FFST.V120ESA.SEPWMOD3,
//            DISP=SHR
//FFSTLIB  DD DSN=FFST.V120ESA.SEPWMOD3,
//            DISP=SHR
//SYSPRINT DD SYSOUT=A
//SYSABEND DD SYSOUT=A
//*
./ ADD NAME=P0LEVDOC 0114-04350-04350-1300-00010-00011-00000-HOWTO

z/OS 1.4 Language Environment


To verify Language Environment was installed properly, run the P1LEIVP
job in the installation dialog (CEEWIVP in the program directory).

See the comments in the job for instructions, expected condition codes,
and expected output.

./ ADD NAME=P1LEIVP  0114-04350-04350-1300-00305-00307-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//*
//********************************************************************
//* JOB: P1LEIVP   (product-supplied job CEEWIVP in library SCEESAMP)
//*
//* DOC: IVP for Language Environment
//*
//*******************************************************************
//*------------------------------------------------------------------
//* IVP DESCRIPTION: This IVP will test the interfaces between
//*                : Language Environment and assembler, COBOL,
//*                : C/C++, C pre-linker, SPC, PL/1, and FORTRAN to
//*                : ensure that Language Environment was installed
//*                : properly.
//*------------------------------------------------------------------
//* IVP INSTRUCTIONS:
//*
//*   Before submitting this job, the JCL must be customized
//*   for your installation.
//*
//*------------------------------------------------------------------
//* IVP NATIONAL LANGUAGE INSTRUCTIONS:
//*    1. To receive pre-link messages in Japanese, change the
//*       EDCPMSGE member name to EDCPMSGK in //SYSMSGS DD in the
//*       PLINK step.
//*    2. You may override the NATLANG(ENU) run-time option default
//*       by specifying one of the following on each step listed.
//*             PARM='NATLANG(UEN)/' or PARM='NATLANG(JPN)'
//*       STEPS: RUNASSEM,RUNCOBOL,RUNC2,RUNSPC,RUNPLI,RUNFORT
//*    3. For step RUNC1 and RUNC3, you may override the
//*       NATLANG(ENU) run-time option default by modifying and
//*       linking a CEEUOPT with EDC1VLIB in the LINK step. See
//*       the OS/390 Language Environment Customization manual for
//*       instructions on modifying CEEUOPT.  You will need to
//*       change the line in CEEUOPT from NATLANG=(ENU)to
//*       NATLANG=(UEN) or NATLANG(JPN).
//*    4. The expected output from each step, starting with
//*       RUNASSEM, is not changed when NATLANG is changed.
//*
//*
//*------------------------------------------------------------------
//* IVP OUTPUT:
//*
//*   ASSEM:
//*      A. Acceptable return codes: 0
//*
//*   PLINK:
//*      A. Acceptable return codes: 4
//*      B. Acceptable messages: EDC4015 to indicate the
//*          following references are unresolved:
//*          CEEBETBL CEEROOTA printf CEESG003 EDCINPL
//*
//*   LINK:
//*      A. Acceptable return codes: 0
//*
//*   RUNASSEM:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*             Today is Friday, 30 November 2001.
//*             Today is FRIDAY, NOVEMBER 30, 2001.
//*             Today is Friday, 11/30/01 15:51:12.33
//*             Today is day 334 of 2001
//*             Program Complete.
//*
//*   RUNCOBOL:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*             ***** START OF CALLIVP1 *****
//*             ***** CALLIVP1 SUCCESSFUL *****
//*
//*   RUNC1:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*      *** C run-time component of Language Environment
//*      HELLO WORLD *** TEST SUCCESSFUL ***
//*
//*   RUNC2:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*             ******* VERIFICATION SUCCESSFUL ******
//*
//*   RUNC3:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*      *** C run-time component of Language Environment
//*      HELLO WORLD, FROM XPLINK ** SUCCESS **
//*
//*   RUNSPC:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*             Hello SPC     *** Test successful ***
//*
//*   RUNPLI:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*       ***********************
//*       *** Word-use Report ***
//*       ***********************
//*       -count-   --word--
//*           3      BEGIN
//*           1      CLOSE
//*          13      DCL
//*          24      DECLARE
//*           2      DISPLAY
//*          14      DO
//*          13      ELSE
//*          23      END
//*           1      GO
//*          13      IF
//*      ------------The previous value should have been    14
//*           7      LIST
//*           4      ON
//*           1      OPEN
//*           2      PROC
//*           3      PROCEDURE
//*           2      READ
//*           4      RETURN
//*           1      SELECT
//*           2      STOP
//*          13      THEN
//*           2      WHEN
//*       There were            148 references to    36 words.
//*       There was a discrepancy in at least one of the word-counts.
//*
//*   RUNFORT:
//*      A. Acceptable return codes: 0
//*      B. Expected output:
//*             AFHXIVPA - sample program was successful
//*******************************************************************
//*
//LIBSET  SET
//*
//*******************************************************************
//*
//ASSEM    EXEC PGM=ASMA90,PARM='OBJECT,NODECK'
//SYSLIB   DD DSN=CEE.SCEEMAC,
//            DISP=SHR
//         DD DSN=SYS1.MACLIB,
//            DISP=SHR
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(3,1)),DISP=(NEW,DELETE)
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(3,1)),DISP=(NEW,DELETE)
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(3,1)),DISP=(NEW,DELETE)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&&TEMPOBJ1(CEEIVP),DISP=(,PASS),UNIT=SYSALLDA,
//            SPACE=(CYL,(5,5,2)),DCB=BLKSIZE=800
//SYSIN    DD DSN=CEE.SCEESAMP(CEEIVP),
//            DISP=SHR
//*
//********************************************************************
//*
//PLINK    EXEC PGM=EDCPRLK,PARM='NCAL'
//STEPLIB  DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//SYSMSGS  DD  DSN=CEE.SCEEMSGP(EDCPMSGE),
//             DISP=SHR
//SYSLIB   DD  DUMMY
//SYSIN    DD  DSN=CEE.SCEESAMP(EDC1VPRL),
//             DISP=SHR
//SYSMOD   DD  DSN=&&TEMPOBJ2(EDC1VPRL),UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30,1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN2   DD  DUMMY
//*
//********************************************************************
//*
//LINK     EXEC  PGM=IEWL,COND=(4,LT,PLINK),
//         PARM='LIST,LET,AMODE=31,RMODE=ANY,XREF,MAP'
//SYSLIB   DD  DSN=CEE.SCEELKED,
//             DISP=SHR
//         DD  DSN=CEE.SCEESPC,
//             DISP=SHR
//INOBJ1   DD  DSN=&&TEMPOBJ1,DISP=(OLD,DELETE)
//INOBJ2   DD  DSN=CEE.SCEESAMP,
//             DISP=SHR
//INOBJ3   DD  DSN=&&TEMPOBJ2,DISP=(OLD,DELETE)
//SYSPRINT DD  SYSOUT=*
//SYSLMOD  DD  DSN=&&LOADLIB,DISP=(NEW,PASS),
//             UNIT=SYSALLDA,SPACE=(3200,(50,20,5)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(TRK,(10,10))
//SYSLIN   DD  *
   INCLUDE INOBJ1(CEEIVP)
   ENTRY CEEIVP
   NAME CEEIVP(R)
   INCLUDE INOBJ2(IGZIVP)
   ENTRY CALLIVP1
   NAME IGZIVP(R)
   INCLUDE INOBJ2(EDC1VLIB)
   ENTRY CEESTART
   NAME EDC1VLIB(R)
   INCLUDE INOBJ3(EDC1VPRL)
   ENTRY CEESTART
   NAME EDC1VPRL(R)
   INCLUDE SYSLIB(EDCXSTRL)
   INCLUDE INOBJ2(EDC4VSPC)
   ENTRY EDCXSTRL
   NAME EDC4VSPC(R)
   INCLUDE INOBJ2(IBMALOB1)
   ENTRY CEESTART
   NAME IBMALOB1(R)
   INCLUDE INOBJ2(AFHXOBJ1)
   ENTRY MAIN#
   NAME AFHXOBJ1(R)
/*
//*
//********************************************************************
//*
//RUNASSEM EXEC PGM=CEEIVP,COND=(4,LT,LINK),
//  PARM='TER(DUMP)/'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNCOBOL EXEC PGM=IGZIVP,COND=(4,LT,LINK),
//  PARM='/TER(DUMP)'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNC1    EXEC PGM=EDC1VLIB,COND=(4,LT,LINK),
//  PARM='TER(DUMP)/HELLO WORLD *** TEST SUCCESSFUL ***'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNC2    EXEC PGM=EDC1VPRL,COND=(4,LT,LINK),
//  PARM='TER(DUMP)/******* VERIFICATION SUCCESSFUL ******'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNC3    EXEC PGM=EDC1VLIB,COND=(4,LT,LINK),
//  PARM='TER(DUMP),XPLINK(ON)/HELLO WORLD, FROM XPLINK ** SUCCESS **'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//         DD  DSN=CEE.SCEERUN2,
//             DISP=SHR
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNSPC   EXEC PGM=EDC4VSPC,COND=(4,LT,LINK)
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNPLI   EXEC PGM=IBMALOB1,COND=(4,LT,LINK),
//  PARM='TER(DUMP)/'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//SOURCE   DD  DSN=CEE.SCEESAMP(IBMALSO1),
//             DISP=SHR
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//********************************************************************
//*
//RUNFORT  EXEC PGM=AFHXOBJ1,COND=(4,LT,LINK),
//  PARM='TER(DUMP)/'
//STEPLIB  DD  DSN=&&LOADLIB,DISP=(OLD,PASS)
//         DD  DSN=CEE.SCEERUN,
//             DISP=SHR
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//*
//
./ ADD NAME=P2DFSMSV 0114-04350-04350-1300-00050-00052-00000-HOWTO

z/OS 1.4 DFSMSdfp


VERIFY INSTALLATION OF DFSMSDFP

To  test the successful installation of DFSMS run the following Instal-
lation Verification Procedures (IVPs) found in SAMPLIB:

o   DFPS1IVP
o   DFPS2IVP
o   DFPS3IVP
o   DFPX1IVP
o   DFPX2IVP
o   DFPX3IVP

You will need to update these jobs with your environment requirements
before submitting.

NOTE:  The members with the prefix DFPS use SMS managed volumes and
       data sets. The members with the prefix DFPX use non-SMS managed
       volumes and data sets.

For  IVP  jobs  specific to the Object Access Method (OAM) component of
DFSMS, see z/OS DFSMS OAM Planning, Installation, and Storage  Adminis-
tration Guide for Object Support, SC35-0426.

VERIFY INSTALLATION OF DFSMS/HFS

In  order  to  verify  the  installation of DFSMS/HFS, perform the fol-
lowing:

1.  Invoke  command  confighfs  located  under  the  /usr/lpp/dfsms/bin
    directory:

       cd /usr/lpp/dfsms/bin
       ./confighfs -l /

    NOTE:  In the above example, -l is the lowercase of the letter l.

Expected output is:

+---------------------------------------------------------------------+
|                                                                     |
|  HFS Limits                                                         |
|   Maximum virtual storage: ________32(MB)                           |
|   Minimum fixed storage:   _________0(MB)                           |
|                                                                     |
+---------------------------------------------------------------------+

./ ADD NAME=P3MSYSV  0114-04350-04350-1300-00007-00009-00000-HOWTO

z/OS 1.4 Managed System Infrastructure for Setup


See z/OS Managed System Infrastructure for Installation, SC33-7997, for
detailed information on installation verification procedures.

./ ADD NAME=P4BOOKRV 0114-04350-04350-1300-00148-00147-00000-HOWTO
z/OS 1.4 BookManager READ


SET BOOKSHELF DEFAULTS AND VERIFY THE INSTALLATION

To make the BookManager READ/MVS bookshelf available and to verify
BookManager READ has been installed properly, perform the following
steps:

1.  Log on to a user ID and start ISPF.

2.  Select the BookManager READ option from the  ISPF  panel  you  have
    previously customized.
    NOTE:   If you are not using a customized panel enter %BOOKMGR from
    ISPF option 6.
    BookManager READ logo information is displayed.

3.  Press ENTER.  A warning panel is displayed that indicates a failure
    opening the data set because there  are  no  bookshelves  currently
    available.

4.  Press  ENTER.   If your function key definitions are not showing at
    the bottom of the screen, type FKA on the command  line  and  press
    ENTER.

5.  Select BOOKS on the menu bar.  The BOOKS pull-down is displayed.

6.  Select  PERFORM FILE FUNCTIONS in the BOOKS pull-down.  The PERFORM
    FILE FUNCTIONS window is displayed.

7.  Select ADD in the FUNCTION TO PERFORM field.    The  ADD  BOOKSHELF
    window is displayed.

8.  Type  the  BookManager READ bookshelf data set name in the DATA SET
    NAME field and press ENTER.   This data set was  created  when  the
    online books were copied from the SMP/E target libraries to sequen-
    tial  data  sets.   If you used the data set names specified in the
    supplied  sample JCL, type the following for the bookshelf data set
    name:

    'EOY.ENU.BOOKMGRR.BKSHELF'

    Be sure to type single quotation marks immediately before and after
    the name.

    NOTE:  This value is the fully qualified default data set name,  as
    specified  in  the  sample unload job.  The ENU qualifier specifies
    English.

    The BOOKSHELF LIST DATA SET TO BE  MODIFIED  window  is  displayed.
    The DATA SET NAME field contains the data set name of your personal
    bookshelf list.

9.  Replace the bookshelf list data set name in the DATA SET NAME field
    with  the  fully-qualified  data  set  name  of  your site's system
    bookshelf list.  This data set name is specified  in  the  EOXVOPTS
    option  QLSHELF  (see  6.11.1.12, "List of Bookshelves Available to
    All Users" in the  program  directory).   Then  press  ENTER.
    The  BOOKSHELF  LIST  DATA  SET  TO  BE  MODIFIED  window  is
    removed and the bookshelf is added to the system bookshelf list.

    NOTE: A default EOY.BKLSHELF has been allocated as part of the
    installation.

10. Press  PF5  to  refresh  the bookshelf list.   The BookManager READ
    bookshelf is now in the list.

11. If you installed the BookManager READ bookshelf  search  index  and
    books  using  the default data set names, go to step 13.
    Otherwise,  modify  the  BookManager  READ  bookshelf  using  these
    procedures:

    a.  Type  a  slash  (/)  over  the  underscore  to  the left of the
        bookshelf name.

    b.  Select BOOKS on the menu bar.

    c.  Select PERFORM FILE FUNCTIONS.    The  PERFORM  FILE  FUNCTIONS
        window is displayed.

    d.  Select EDIT in the FUNCTION TO PERFORM field.

        It  is assumed that you used the default data set names, except
        for a different high-level qualifier.  If you chose  completely
        different  data  set  names, please see the chapter "Performing
        File Functions" in BookManager READ: Displaying  Online Books.

    e.  Select  CHANGE  HIGH-LEVEL  QUALIFIERS  in  the  EDIT BOOKSHELF
        window.  The CHANGE HIGH-LEVEL QUALIFIERS window is displayed.

    f.  Type EOY.ENU in the  FROM  field.    Type  the  new  high-level
        qualifier(s) in the TO field.

        NOTE:  The ENU qualifier specifies English.

    g.  Press ENTER.  A confirmation window is displayed.

    h.  Select  YES  to  accept  the  change  and  return  to  the EDIT
        BOOKSHELF window.

    i.  Press F12 twice to return to the bookshelf list.

12. Move the cursor to the bookshelf  listed  and  press  ENTER.    The
    bookshelf is displayed with the list of books on it.  The cursor is
    next  to  the  first  book  (BookManager READ: Getting Started  and
    Command Summary).

13. Press ENTER to display the book.

14. Move the cursor  to  the  command  line,  and  type  the  following
    command:

    SEARCH online

    Then  press ENTER.  The LIST ALL TOPICS WITH MATCHES window is dis-
    played.  The cursor is next to the first entry.

15. Press ENTER to see the selected topic.

16. Select BOOKS on the menu bar.

17. Select EXIT BOOKMANAGER in the BOOKS  pull-down.    A  confirmation
    window is displayed.

18. Select YES in the confirmation window to exit BookManager.


NOTE:
o   For more information on the panels described in this  section,  see
    IBM BookManager READ/MVS: Displaying Online Books, SC38-2034.
o   Each   BookManager   READ  user  requires  access  to  the  product
    libraries.
o    A region size of 4 megabytes is recommended.  Larger  books  or  a
    larger bookshelf may require a larger region size.
o   If  you  are  also installing BookManager BUILD/MVS, you should add
    its online bookshelf data set name to  the  system  bookshelf  list
    data set.


Run the BookManager DBCS Print Utility IVP

To verify that BookManager DBCS Print Utility has  been  installed  and
activated  properly,  logon to TSO using a LOGON procedure which points
to BookManager DBCS Print Utility code, select ISPF option 6 and  issue
the  command:  EPH2PRNT.    This should activate BookManager DBCS Print
Utility.

The installation verification is complete.
./ ADD NAME=P5ISPFV  0114-04350-04350-1300-00170-00170-00000-HOWTO
z/OS 1.4 ISPF


RUN THE ISPF INSTALLATION VERIFICATION PROCEDURE

There are three ways to invoke ISPF:

o   ISPSTART.  Default parms are: PANEL(ISP@MSTR) NEWAPPL(ISP)
o   ISPF.  Default parms are: PANEL(ISR@PRIM) NEWAPPL(ISR)
o   PDF.  Default parms are: PANEL(ISR@PRIM) NEWAPPL(ISR)

Begin  the IVP by logging on to a TSO/E session using a logon procedure
that includes the z/OS 1.4  ISPF  data  sets  allocated  to  the
appropriate DDs.

Enter  "ISPSTART  nlslang"  at the TSO/E READY prompt (where nlslang is
the NLS language you are using).  The shipped default is English.   The
ISPF  Master  Application  Menu  should  appear with the ISPF logo in a
pop-up window.  The contents of the logo  should  contain  a  copyright
date of "1980, 2001" as shown below:

+---------------------------------------------------------------------+
|                                                                     |
|      Licensed Materials - Property of IBM                           |
|      5694-A01 (C) Copyright IBM Corp. 1980, 2001.                   |
|      All rights reserved.                                           |
|      US Government Users Restricted Rights -                        |
|      Use, duplication or disclosure restricted                      |
|      by GSA ADP Schedule Contract with IBM Corp.                    |
|                                                                     |
+---------------------------------------------------------------------+
Figure 1. ISPF Copyright logo

Enter  the  command  "PANELID"  on  the  "Option"  line.   The panel ID
ISP@MSTR should appear in the upper left corner of the screen.

NEWSYSTEM includes  an ISP@MSTR panel in  the  EXMP.ISPPLIB  data  set.
By  default,  this  data  set  appears  before  the  ISPF  data sets in
your ISPPLIB concatenation.   With the  default set-up, the first panel
from the ISPSTART  command  is  the  CustomPac Master Application Menu,
which does not contain a copyright logo.

Enter "X" on the "Option" line to return to TSO/E READY.

Enter "ISPF nlslang" or "PDF nlslang" at the TSO/E READY prompt  (where
nlslang  is  the  NLS  language you are using).  The shipped default is
English.

The ISPF Primary Option Menu should be displayed with the ISPF logo  in
a  message  pop-up  window.   The contents of the logo should contain a
copyright date of "1980, 2001" as shown above.

Execute the following steps to verify that the   basic  ISPF  functions
have been properly installed.   Enter the command "PANELID" to have the
panel name appear in the upper left corner of the screen.

+------------------------------------------------------------------+
|Table 1. Installation Verification Functions                      |
+-------------------------------+------------+---------------------+
|In command line                | Enter      | Panel displayed     |
|of panel ...                   |            |                     |
+-------------------------------+------------+---------------------+
|ISPF Primary Option            | PANELID    | ISR@PRIM            |
+-------------------------------+------------+---------------------+
|ISR@PRIM                       |   0        | ISPISMMN            |
+-------------------------------+------------+---------------------+
|ISPISMMN                       |   =1       | ISRBRO01            |
+-------------------------------+------------+---------------------+
|ISRBRO01                       |   =2       | ISREDM01            |
+-------------------------------+------------+---------------------+
|ISREDM01                       |   =3.1     | ISRUDA1             |
+-------------------------------+------------+---------------------+
|ISRUDA1                        |   =3.2     | ISRUDA2 (ISRUDA2S   |
|                               |            | if SMS is active)   |
+-------------------------------+------------+---------------------+
|ISRUDA2/ISRUDA2S               |   =3.3     | ISRUMC1             |
+-------------------------------+------------+---------------------+
|ISRUMC1                        |   =3.4     | ISRUDLP             |
+-------------------------------+------------+---------------------+
|ISRUDLP                        |   =3.12    | ISRSSNEW            |
+-------------------------------+------------+---------------------+
|ISRSSNEW                       |   =3.13    | ISRSEPRI            |
+-------------------------------+------------+---------------------+
|ISRSEPRI                       |   =3.14    | ISRSFSPR            |
+-------------------------------+------------+---------------------+
|ISRSFSPR                       |   =4.1     | ISRFP01             |
+-------------------------------+------------+---------------------+
|ISRFP01                        |   =5.1     | ISRJP01             |
+-------------------------------+------------+---------------------+
|ISRJP01                        |   =6       | ISRTSO              |
+-------------------------------+------------+---------------------+
|ISRTSO                         |   =7       | ISPYXD1             |
+-------------------------------+------------+---------------------+
|ISPYXD1                        |   =X;8     | ISRDIIS             |
+-------------------------------+------------+---------------------+
|ISRDIIS                        |   =11      | ISRWORK             |
+-------------------------------+------------+---------------------+
|ISRWORK                        |   =10      | FLMDMN              |
+-------------------------------+------------+---------------------+

RUN THE ISPF SCLM INSTALLATION VERIFICATION PROCEDURE

This  procedure allocates, assembles, and linkedits a test SCLM project
and  uses  this  project  to save and build an assembler source module.

To execute this procedure, you need the following information:

o   A high-level qualifier to be used to define the  temporary  project
    definition.    This forms the prefix for the data sets allocated by
    the procedure.  You can use your userid as the high-level qualifier
    (hlq).  Seven data sets will be allocated, as follows:

    -   hlq.PROJDEFS.ACCTDB
    -   hlq.PROJDEFS.BLDLIST
    -   hlq.PROJDEFS.INFO
    -   hlq.PROJDEFS.LOAD
    -   hlq.PROJDEFS.OBJ
    -   hlq.PROJDEFS.SOURCE
    -   hlq.PROJDEFS.SYSPRINT

    These  data  sets  must not already exist.   A minimum of nine 3380
    DASD tracks are required for the allocation.   At the  end  of  the
    procedure, you are given the option to delete these data sets.

o   The name of the SCLM macro library.  This library is  installed  by
    SMP/E into the SISPMACS data set.

o   A volume serial for a VSAM  data set.   The  volume  used  for  the
    allocation of the hlq.PROJDEFS.ACCTDB data set.

o   The  location  of  the  high   level   assembler   module   ASMA90.
    This  location  will  be  either  in  normal  MVS  search  sequence
    (STEPLIB,  LINKLST,  LPA, and so forth) or the High Level Assembler
    data set name (SASMMOD1).

After you have obtained the required information, follow these steps to
perform the installation verification:

1.  From the ISPF Primary Option Panel, select Option 10, SCLM.

2.  From the SCLM panel, select Option 6, TSO or SCLM Commands.

3.  Enter the command: "FLMIVP"

4.  Answer the four prompts with the information gathered during prepa-
    ration.

5.  At this point, the procedure will do the following:

    o   Allocate the necessary data sets.   If the data set  allocation
        fails, you should diagnose the problem, take corrective action,
        and rerun the FLMIVP procedure.

    o   Create, assemble, and linkedit the SCLM project definition.

    o   Test the installation by executing SAVE and BUILD commands.

    o   Indicate  whether  the  installation test passed or failed.  If
        the test failed, the messages reported to the  screen  and  the
        contents  of the hlq.PROJDEFS.SYSPRINT and hlq.PROJDEFS.BLDLIST
        data sets can be used to determine the cause  of  the  failure.
        If  you  cannot determine the cause of the failure, contact the
        IBM Support Center.

    o   Prompt you to determine if the data sets should be  deleted  or
        retained.

    If errors occur during the SCLM IVP, use the FLMIVPC exec to delete
    the data sets allocated by FLMIVP.

./ ADD NAME=P6TCPIPV 0114-04350-04350-1300-00191-00207-00000-HOWTO

z/OS 1.4 Communications Server IP Services



VERIFICATION STEPS


1.  Verify TCP/IP

    o   Verify the following messages are in the system log:

              EZZ4202I OPENEDITION-TCP/IP CONNECTION
              ESTABLISHED FOR TCPIP_procname

        and

              EZB6473I TCP/IP STACK FUNCTIONS INITIALIZATION
              COMPLETE

        and

              EZZ0400I TELNET/VTAM (SECOND PASS) BEGINNING FOR
              FILE:  DD:PROFILE
              EZZ3003I TELNET LISTENING ON PORT    23
              EZZ0403I TELNET/VTAM (SECOND PASS) COMPLETE FOR
              FILE:  DD:PROFILE

2.  Verify the FTP daemon

    o   Verify  the following messages appear in the syslogd daemon log
        or your system log:

              EZY2702I SERVER-FTP: INITIALIZATION COMPLETED AT
              nn:nn:nn ON mm/dd/yy

3.  Verify the SNMP agent


    o   Verify the following messages are displayed in the system log:

              EZZ3225I SNMP AGENT: INITIALIZATION COMPLETE

        and

              EZZ3202I SNMP SUBAGENT: INITIALIZATION COMPLETE

        and

              EZZ3221I SNMP SUBAGENT: SET REQUESTS DISABLED

4.  Test the following commands from TSO:

    o   Issue:

              ping loopback

    o   Expected results:

              CS VyRx: Pinging host LOOPBACK  (127.0.0.1).
              PING: Ping #1 response took 0.003 seconds.

    o   Issue:

              netstat home

    o   Expected results:

              MVS TCP/IP NETSTAT CS VyRx   TCPIP NAME:
              TCPIP_procname  hh:mm:ss
              Home address list:
              Address          Link             Flg
              -------          ----             ---
              127.0.0.1        LOOPBACK         P

        NOTE:  If you are using the sample profile without any changes,
        then you will not see the '"P"' under the Flg header.

    o   Issue:

              telnet loopback 23

    o   Expected results:

        -   First response:

                  MVS TCP/IP TELNET CS VxRy
                  Connecting to LOOPBACK 127.0.0.1, port
                  TELNET (23)

        -   Press Enter, and look for the following response:


                  Using Transparent Mode...
                  Notes on using Telnet when in Transparent Mode:
                    - To enter Telnet Command, Hit PA1

        -   Press enter and get the prompt:

                  IKJ56700A ENTER USERID -

        -   Enter a valid TSO userid.  Then complete the TSO logon.

        -   If  desired,  try  the  following  command  from the Telnet
            session:

                  "netstat home tcp "TCPIP

            Expected results: Netstat command results shown above.

        -   Log off the TSO  user,  hit  PA1  to  retrieve  the  Telnet
            command  line.    Type  "'quit'" and press enter to end the
            Telnet session.

5.  Test commands from the z/OS UNIX shell

    o   The following steps may require superuser authority to execute.

    o   Ensure you have write access to your local directory. Then,  in
        the z/OS UNIX shell, copy the verification shell script to your
        local directory.  For example:

              cp /usr/lpp/tcpip/samples/ivp.scp
                   /your_target_directory/ivp.scp

    o   Make     sure    the    hostname    is    correct    in    your
        TCPIVP.TCPPARMS(TCPDATA).

        -   Set the following environment variables in the  Unix  Shell
            for  the  userid from which the IVP will be executed.  From
            the Unix Shell, enter the following commands:
                export X_SITE="//'TCPIP.HOSTS.SITEINFO'"
                export X_ADDR="//'TCPIP.HOSTS.ADDRINFO'"
                export RESOLVER_CONFIG="//'TCPIVP.TCPPARMS(TCPDATA)'"
             Run the shell script, directing output to a file:
              ivp.scp > ivp.out

    o   The  following  tests are done by the shell script.  The script
        will display the expected results and the actual results.

        -   "oping loopback"
        -   "onetstat -h"

    o   Review the ivp.out file, ensuring the actual results match  the
        expected results.

6.  Test the following commands from the MVS operator console

    o   Issue the following DISPLAY command:

              "display tcpip,"TCPIP",netstat,home"

    o   Expected results:


              "EZZ2500I NETSTAT CS VxRy" TCPIP
              "HOME ADDRESS LIST:"
              "ADDRESS          LINK             FLG"
              "127.0.0.1        LOOPBACK         P"
              "1 OF 1 RECORDS DISPLAYED"

7.  Run  the batch job P7TCPIVP in the installation dialog to test that
    FTP has been correctly set up

    o   This job will get a sample file, FTPTESTP,  from  the  SEZAINST
        partitioned  data set and store it into the /tmp directory.  It
        will then get the file from the /tmp directory hfs and store it
        in the TCPIVP.TCPPARMS partitioned data set as FTPTESTG.

    o   The  equivalent  product  supplied  job   can   be   found   in
        hlq.SEZAINST(IVPFTP).

    o   Change the  input values for 'userid password' to match the TSO
        userid  and  password  to  be  used in as the FTP client.   For
        example:

              USER1 USER1PW

    o   Submit batch P7TCPIVP (IVPFTP)

        -   Expected results:

            --  The job should complete with condition code zero.
            --  The  /tmp  directory  should  contain  a  file   called
                ftptestp.
            --  The TCPIVP.TCPPARMS should contain member FTPTESTG.
            --  Both  the  new  file  and  the new partitioned data set
                member should contain the one line:

                      The File Transfer Protocol is working!!!

./ ADD NAME=P7TCPIVP 0114-04350-04350-1300-00057-00059-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*
//********************************************************************
//* JOB: P7TCPIVP  (product-supplied job IVPFTP in library SEZAINST)
//*
//* DOC: This job will test the installation of FTP. It will run under
//*      the userid specified in the input below.  This userid must
//*      have the appropriate  UNIX access.
//*
//********************************************************************
//*
//*  The job will:
//*  - Issue the LOCSTAT command to display local status information.
//*  - Copy member FTPTESTP from the SEZAINST library into
//*    /tmp/ftptestp.
//*  - Copy /tmp/ftptestp into the IVP configuration dataset as
//*    member FTPTESTG.
//*
//*  Before running the job, do the following:
//*  - If necessary, change DSN on the SYSFTPD DD card to pick up the
//*    appropriate FTP client FTP.DATA file
//*  - If necessary, change DSN on the SYSTCPD DD card to pick up the
//*    appropriate TCPIP.DATA file
//*  - Change the input values for 'userid password' to match the
//*    userid and password you wish to FTP in under.
//*      For example: USER1 USER1PW
//*  - Change 'TCPIVP.TCPPARMS' on the GET statement to the
//*    name of the IVP configuration dataset, if not using the
//*    default of 'TCPIVP.TCPPARMS'
//*
//********************************************************************
//STEP01 EXEC PGM=FTP,REGION=2048K
//*
//SYSFTPD    DD  DSN=TCPIVP.TCPPARMS(FTCDATA),DISP=SHR
//SYSTCPD    DD  DSN=TCPIVP.TCPPARMS(TCPDATA),DISP=SHR
//SYSPRINT  DD  SYSOUT=*
//OUTPUT    DD  SYSOUT=*
//INPUT     DD  *
; Comments can be inserted in this area.
127.0.0.1 21
userid password
; Connection to the server is not required for LOCSTAT command.
LOCSTAT
PUT 'TCPIP.SEZAINST(FTPTESTP)'  /tmp/ftptestp
GET  /tmp/ftptestp 'TCPIVP.TCPPARMS(FTPTESTG)'
QUIT
/*
./ ADD NAME=P8DCEBSV 0114-04350-04350-1300-00088-00088-00000-HOWTO
z/OS 1.4 DCE Base Services


+--- Coexistence Considerations --------------------------------------+
|                                                                     |
| If  you  are  installing z/OS DCE Base Services on the same host    |
| machine and DCE cell as DCE Base Services Release 1.0  (at  MVS/ESA |
| SP  5.x  level), you must deconfigure DCE Base Services Release 1.0 |
| from the cell before configuring z/OS DCE Base  Services.    See    |
| "Set  Up  HFS  Directories"  of the Program Directory.  If you have |
| Distributed File Service configured in the  DCE  cell,  you  should |
| always deconfigure DFS before deconfiguring DCE.                    |
|                                                                     |
+---------------------------------------------------------------------+

To  ensure  that  the  installation completed successfully, do the fol-
lowing:

1.  If your system supports LPARs, then you should create an ether_addr
    file for each DCE configuration, see items below for details of how
    to process the ether_addr file.

    NOTE:

    Beginning with DCE Base Version 2 Release 5, if an ether_addr  file
    is  not  present  on  the system, a default "MAC address" string is
    generated for use by DCE.

    The default "MAC address" string is: 40mmmmssssss

      mmmm   = the 4-digit model number of the cpu
      ssssss = the 6-digit serial number of the cpu

    If your system does not support LPARs, then  you  do  not  need  an
    ether_addr  file.    To  create  an  ether_addr file for systems in
    LPARS, do the following:

    o   Use OEDIT to create the /opt/dcelocal/etc/ether_addr file  con-
        taining  the  "MAC  address"  string to be used by your system.
        The suggested form of the address you place in  the  ether_addr
        file is 4xmmmmssssss, where:

          x      = a 1-character lpar number
          mmmm   = the 4-digit model number of the cpu
          ssssss = the 6-digit serial number of the cpu

        note that the allowable values for x, m, and s are:

              0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,and F

        OEDIT /opt/dcelocal/etc/ether_addr

        The ether_addr file should contain a single line, with the "MAC
        address" string in columns 1 through 12.

    o   Set permission bits:

             BPXBATCH sh chmod 644 /opt/dcelocal/etc/ether_addr

        The following is how DCE uses the "MAC address" string from the
        ether_addr file:

        -   The  ether_addr is used by uuidgen whenever a UUID needs to
            be generated.  The  data  in  ether_addr  is  used  with  a
            timestamp  and  a  random  number to create a unique string
            used as a UUID.

        -   The use of cpu model and serial  number  in  ether_addr  is
            done to add another level of uniqueness to the UUID.

        -   Changing  the  ether_addr  file  will  not  affect existing
            applications or functions. Once a particular UUID has  been
            created, it is not dependent on the value in ether_addr.

2.    Use  BPXBATCH to copy the default configuration file EUVPDCF from
    /usr/lpp/dce/etc to /opt/dcelocal/etc.

  BPXBATCH sh cp /usr/lpp/dce/etc/euvpdcf /opt/dcelocal/etc/euvpdcf

3.   Start the DCEKERN started task.  View SYSLOG and look for the fol-
    lowing message:

          EUVP00024I DCE kernel initialization is complete

    This indicates that the DCE kernel is ready for  configuration.  If
    the DCEKERN started task ends, the reason might be that the started
    task could not initialize; contact the IBM Support Center for help.

./ ADD NAME=P9DFSIVP 0114-04350-04350-1300-00061-00065-00000-HOWTO

z/OS 1.4 Distributed File Service


To  ensure that Distributed File Service was installed successfully, do
the following:

1.  Start the DFS started task:

       S DFS,PARM='-nodfs'

    View SYSLOG and look for the following message:

       IOEP01103I DFS kernel initialization complete.

    This indicates that the DFS server has  started  successfully.  The
    server  can be used as a DFS server for DCE or as an SMB File/Print
    server after additional configuration is performed (see below).

2.  If the BPXPRMxx entry was previously updated with the  DFSC  entry,
    determine  if  the  DFS client (DFSCM) is started in the DCE. To do
    this, view SYSLOG and look for the following message:

       IOEC04183I dfsd: initialization complete.

    The following message in SYSLOG indicates a possible error:

       nn BPXF032D FILESYSTYPE DFSC Terminated. Reply 'R' when ready
          to restart.  Reply 'I' to ignore.

3.  If the BPXPRMxx entry  for  zFS  was  made,  determine  if  zFS  is
    started.    To  do  this,  view  SYSLOG  and look for the following
    message:

       IOEZ00055I ZFS kernal: Initialization Complete.

    The following message in SYSLOG indicates a possible error:

       nn BPXF032D FILESYSTYPE ZFS Terminated. Reply 'R' when ready
          to restart. Reply 'I' to ignore.

    The possible cause is that the started task could  not  initialize;
    contact the IBM Support Center for help.

You  must  now  perform additional configuration work to enable the SMB
File/Print support, the DFS support for DCE, or the zFS support.

To use the SMB File/Print support, see  the  "Post  Installation  Proc-
essing"  section  in  z/OS Distributed File Service SMB Administration,
SC24-5918.  Again, to use only the SMB support, the DCE  Base  Services
element  must only be installed as part of the normal release installa-
tion process.  Once DCE is installed, no further action is required  to
configure or run DCE and the DFS support.

To  use  the  DFS  support  for  DCE, see the "Configuring DFS for DCE"
chapter in z/OS Distributed File Service Customization, SC24-5916.

To  use the zFS support, see z/OS Distributed File Service zSeries File
System Administration, SC24-5989, for instructions on how to define zFS
aggregates and file systems.

./ ADD NAME=Q0AC     0114-04350-04350-1300-00018-00018-00000-HOWTO
z/OS 1.4 C/C++ Compiler


IBM provides two IVP jobs in the installation dialog to help you ensure
that  the  C/C++  compilers  are installed properly.   See the jobs for
instructions and expected results.

Run job Q1AC in the installation dialog (CBC3JIV1  in  the  program
directory) to verify the C Compiler installation.

NOTE:   Because of C/C++ Compiler storage requirements, you may need to
increase the REGION size specified on the JOB card. The value should be
at least 48M.  Failure to do so may result in  message  IEW4000I  Fetch
Failed or CSV031I Library Access Failed.

Run job Q2ACPL in the installation dialog (CBC3JIV2  in  the  program
directory) to verify the C++ Compiler installation.

./ ADD NAME=Q1AC     0114-04350-04350-1300-00132-00134-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//  SET #CPP=CBC
//  SET #LE=CEE
//PROC JCLLIB ORDER=(CBC.SCBCPRC,
//   &#LE..SCEEPROC)
//********************************************************************
//* JOB: Q1AC  (product-supplied job CBC3JIV1 in library SCBCJCL)
//*
//* DOC: Verify the C Compiler installation
//*
//* IVP INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be
//*   made:
//*
//*    1. If you chose to use a different prefix than the IBM supplied
//*       one for the C/C++ Compiler, please change the value of CBC
//*       to your chosen prefix on the // SET #CPP=CBC statement.
//*    2. If you chose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE statement.
//*    3. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it, uncomment the CRUN
//*       lines.
//*    4. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it for IPA, uncomment the
//*       IRUN line.
//*    5. If you have installed Kanji Messages for the Language
//*       Environment and want to enable it, uncomment the PLANG lines
//*       below.
//*    6. You may have to change the unit TUNIT='SYSALLDA' to your
//*       locally-defined esoteric name.
//*    7. If a REGION is specified on the JOB card, the supplied value
//*       should be at least 48M.
//*
//* REQUIRED ENVIRONMENT FOR IVP:
//*    1. Run on target system.
//*    2. C/C++ Compiler and Language Environment must be installed on
//*       the system prior to execution of the IVP.
//*
//* IVP INPUT:
//*    1. Input data set:
//*       CBC.SCBCSAM(CBC3YIV1).
//*
//* IVP OUTPUT:
//*    1. Return code of zero for all steps except the PLKED steps
//*       which have return code of four.
//*    2. The PLKED steps will issue the warning message EDC4015 which
//*       should be ignored.
//*    3. Output:
//*    TEST1L.GO: @@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@
//*    TEST2L.GO: @@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@
//*    STEPGO   : @@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@
//*
//********************************************************************
//TEST1L  EXEC EDCCPLG,
//        CPARM='RENT,SOURCE',
//        TUNIT='SYSALLDA',
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//       INFILE=CBC.SCBCSAM(CBC3YIV1),
//        OUTFILE='&&GSET(GO),DISP=(NEW,PASS),SPACE=(TRK,(7,7,1))',
//*       PLANG='EDCPMSGK',
//*       CRUN='NATLANG(JPN)',
//      PARM.GO='@@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@'
//LKED.SYSLMOD DD DSN=&OUTFILE,UNIT=&TUNIT.
//*------------------------------------------------------------------
//TEST2L  EXEC EDCCPLG,
//       INFILE=CBC.SCBCSAM(CBC3YIV1),
//        CPARM='RENT,SOURCE,OPT(2)',
//        TUNIT='SYSALLDA',
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//*       PLANG='EDCPMSGK',
//*       CRUN='NATLANG(JPN)',
//      PARM.GO='@@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@'
//COMPILE.SYSLIN   DD  DSN=&&LDSET,UNIT=&TUNIT.,
//       DISP=(MOD,PASS),SPACE=(TRK,(3,3)),
//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=&SYSLBLK)
//PLKED.SYSMOD   DD  DSN=&&PKST,UNIT=&TUNIT.,DISP=(NEW,PASS),
//       SPACE=(32000,(30,30)),
//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=&SYSLBLK)
//LKED.SYSLMOD   DD  DSN=&&TST2LD(GO),UNIT=&TUNIT.,DISP=(,PASS),
//       SPACE=(TRK,(5,5,5))
//*--------------------------------------------------------------------
//STEPC   EXEC EDCC,
//       INFILE=CBC.SCBCSAM(CBC3YIV1),
//        CPARM='RENT,SOURCE,IPA,LONGNAME',
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//*       CRUN='NATLANG(JPN)',
//        TUNIT='SYSALLDA'
//COMPILE.SYSLIN   DD  DSN=&&OBJ1,UNIT=&TUNIT.,
//       DISP=(NEW,PASS),SPACE=(TRK,(1,1))
//*
//STEPI   EXEC EDCI,COND=(4,LT),
//        INFILE='&&OBJ1',
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//*       IRUN='NATLANG(JPN)',
//        TUNIT='SYSALLDA'
//IPALINK.SYSLIN   DD  DSN=&&OBJ2,UNIT=&TUNIT.,
//       DISP=(NEW,PASS),SPACE=(TRK,(1,1))
//*
//STEPPL  EXEC EDCPL,COND=(4,LT),
//        INFILE='&&OBJ2',
//        LIBPRFX=&#LE.,
//*       PLANG='EDCPMSGK',
//        TUNIT='SYSALLDA'
//LKED.SYSLMOD   DD  DSN=&&LOAD(GO),UNIT=&TUNIT.,DISP=(,PASS),
//       SPACE=(TRK,(5,5,5))
//*
//*--------------------------------------------------------------------
//STEPGO  EXEC PGM=GO,COND=(4,LT),REGION=2048K,
//        PARM='/@@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@'
//STEPLIB  DD  DSN=&&LOAD,DISP=SHR
//         DD  DSN=&#LE..SCEERUN,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
./ ADD NAME=Q2ACPL   0114-04350-04350-1300-00132-00134-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//  SET #CPP=CBC
//  SET #LE=CEE
//PROC JCLLIB ORDER=(CBC.SCBCPRC)
//********************************************************************
//* JOB: Q2ACPL  (product-supplied job CBC3JIV2 in library SCBCJCL)
//*
//* DOC: Verify the C++ Compiler installation
//*
//* IVP INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be
//*   made:
//*
//*    1. If you chose to use a different prefix than the IBM supplied
//*       one for the C/C++ Compiler, please change the value of CBC
//*       to your chosen prefix on the // SET #CPP=CBC statement.
//*    2. If you chose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE statement
//*       and on the SEARCH parameters.
//*    3. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it, uncomment the CRUN
//*       lines.
//*    4. If you have installed Kanji Messages for the Language
//*       Environment and want to enable it, uncomment the PLANG lines
//*       below.
//*    5. Type over the "YYYY/MM/DD" on the two GO.SYSIN instream data
//*       with your birth date.
//*    6. You may have to change the unit TUNIT='SYSALLDA' to your
//*       locally-defined esoteric name.
//*
//* REQUIRED ENVIRONMENT FOR IVP:
//*    1. Run on target system.
//*    2. C/C++ Compiler and Language Environment must be installed on
//*       the system prior to execution of the IVP.
//*
//* IVP INPUT:
//*    1. Input data set:
//*       CBC.SCBCSAM(CBC3YIV2).
//*
//* IVP OUTPUT:
//*    Output:
//*     DOCLG1.GO   Local time is "compilation date and time"
//*
//*                 Please enter your birthdate in the form yyyy/mm/dd
//*                 Total Days  : 0
//*                 Physical    : 0.000000
//*                 Emotional   : 0.000000
//*                 Intellectual: 0.000000
//*
//*     DOCLG2.GO   Local time is "compilation date and time"
//*
//*                 Please enter your birthdate in the form yyyy/mm/dd
//*                 Total Days  : 0
//*                 Physical    : 0.000000
//*                 Emotional   : 0.000000
//*                 Intellectual: 0.000000
//*
//*     NOTES: "compilation date and time" is the date and time when
//*     you submit the job for example:
//*     Tue Jul 2 14:32:12 1996
//*
//********************************************************************
//DOCLG1  EXEC  CBCCLG,
//       INFILE=CBC.SCBCSAM(CBC3YIV2),
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//        CLBPRFX='NULLFILE ',
//        OUTFILE='&&GSET(GO),DISP=(NEW,PASS),SPACE=(TRK,(7,7,1))',
//*       PLANG='EDCPMSGK',
//*       CRUN='NATLANG(JPN)',
//        CPARM='OPTFILE(DD:CCOPT)',
//        TUNIT='SYSALLDA'
//COMPILE.CCOPT DD *
   SEARCH('CEE.SCEEH.+')
   CSECT SO OPT
/*
//COMPILE.USERLIB DD DSN=CBC.SCBCSAM,
//             DISP=SHR
//LKED.SYSLMOD DD DSN=&OUTFILE,UNIT=&TUNIT.
//GO.STEPLIB DD
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//*
//* Enter your birth date in the form YYYY/MM/DD
//GO.SYSIN DD *
  YYYY/MM/DD
/*
//*--------------------------------------------------------------------
//DOCLG2  EXEC  CBCCLG,
//       INFILE=CBC.SCBCSAM(CBC3YIV2),
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//        CLBPRFX='NULLFILE ',
//*       PLANG='EDCPMSGK',
//*       CRUN='NATLANG(JPN)',
//        CPARM='MAXMEM(*) OPTFILE(DD:CCOPT)',
//        TUNIT='SYSALLDA'
//COMPILE.CCOPT DD *
   SEARCH('CEE.SCEEH.+')
   CSECT SO OPT(2)
/*
//COMPILE.USERLIB DD DSN=CBC.SCBCSAM,
//             DISP=SHR
//COMPILE.SYSLIN   DD  DSN=&&LDSET,UNIT=&TUNIT.,
//       DISP=(MOD,PASS),SPACE=(TRK,(3,3)),
//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//PLKED.SYSMOD   DD  DSN=&&PKST,UNIT=&TUNIT.,DISP=(NEW,PASS),
//       SPACE=(32000,(30,30)),
//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//LKED.SYSLMOD   DD  DSN=&&DOC2LD(GO),UNIT=&TUNIT.,DISP=(,PASS),
//       SPACE=(TRK,(5,5,5))
//GO.STEPLIB DD
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//*
//* Enter your birth date in the form YYYY/MM/DD
//GO.SYSIN DD *
  YYYY/MM/DD
/*
//*
./ ADD NAME=Q3CANSI  0114-04350-04350-1300-00016-00016-00000-HOWTO
z/OS 1.4 ANSI C/C++ Compiler


IBM provides two IVP jobs in the installation dialog to help you ensure
that the ANSI C/C++ compilers are installed properly.  See the jobs for
instructions and expected results.

NOTE:  You may need to set the REGION size specified on the JOB card to
a value of 0M, do to C/C++ Compiler storage requirements. Failure to do
so may result in a Fetch or Library access failure.
Run  job  Q4AC  in  the installation dialog (CCNJIV1 in the program
directory) to verify the ANSI C Compiler installation.

Run job Q5ACPL in the installation dialog  (CCNJIV2  in  the  program
directory) to verify the ANSI C++ Compiler installation.

./ ADD NAME=Q4AC     0114-04350-04350-1300-00122-00124-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
// SET #CPP=CBC
// SET #LE=CEE
//PROC JCLLIB ORDER=(CBC.SCCNPRC,
//   &#LE..SCEEPROC)
//********************************************************************
//* JOB: Q4AC  (product-supplied job CCNJIV1 in library SCCNJCL)
//*
//* DOC: Verify the C Compiler installation
//*
//* IVP INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be made:
//*
//*    1. If you chose to use a different prefix than the IBM supplied
//*       one for the C/C++ Compiler, please change the value of CBC
//*       to your chosen prefix on the // SET #CPP=CBC statement.
//*    2. If you chose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE statement.
//*    3. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it, uncomment the CRUN
//*       lines.
//*    4. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it for IPA, uncomment the
//*       IRUN line.
//*    5. You may have to change the unit TUNIT='SYSALLDA' to your
//*       locally-defined esoteric name.
//*
//* REQUIRED ENVIRONMENT FOR IVP:
//*    1. Run on target system.
//*    2. C/C++ Compiler and Language Environment must be installed on
//*       the system prior to execution of the IVP.
//*
//* IVP INPUT:
//*    1. Input data set:
//*             CBC.SCCNSAM(CCNYIV1).
//*
//* IVP OUTPUT:
//*    1. Return code of zero for all steps.
//*    2. Output:
//*    TEST1L.GO: @@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@
//*    TEST2L.GO: @@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@
//*    STEPGO   : @@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@
//*
//*  NOTE:
//*
//*    You may receive  IEW4000I FETCH FOR MODULE xxxxxxx IN
//*    STEPLIB BECAUSE INSUFFICIENT STORAGE WAS AVAILABLE if the
//*    REGION size specified on the JOB card is to small.
//*    The recommended value is 48M for this IVP.
//*
//********************************************************************
//TEST1L  EXEC EDCCBG,
//       CPARM='RENT,SOURCE',
//       TUNIT='SYSALLDA',
//       LIBPRFX=&#LE.,
//       LNGPRFX=&#CPP.,
//       INFILE=CBC.SCCNSAM(CCNYIV1),
//*      CRUN='NATLANG(JPN)',
//       GPARM='@@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@'
//BIND.SYSLMOD DD DSN=&&GSET(GO),SPACE=(TRK,(7,7,1)),UNIT=SYSALLDA,
//       DSNTYPE=LIBRARY,DISP=(NEW,PASS)
//*--------------------------------------------------------------------
//TEST2L  EXEC EDCCBG,
//       INFILE=CBC.SCCNSAM(CCNYIV1),
//       CPARM='RENT,SOURCE,OPT(2)',
//       TUNIT='SYSALLDA',
//       LIBPRFX=&#LE.,
//       LNGPRFX=&#CPP.,
//*      CRUN='NATLANG(JPN)',
//       GPARM='@@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@'
//COMPILE.SYSLIN   DD  DSN=&&LDSET,UNIT=&TUNIT.,
//       DISP=(MOD,PASS),SPACE=(TRK,(3,3)),
//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//BIND.SYSLMOD   DD  DSN=&&TST2LD(GO),DISP=(,PASS),
//       SPACE=(TRK,(5,5,5)),UNIT=SYSALLDA,DSNTYPE=LIBRARY
//*--------------------------------------------------------------------
//STEPC   EXEC EDCC,
//       INFILE=CBC.SCCNSAM(CCNYIV1),
//       CPARM='RENT,SOURCE,IPA,LONGNAME',
//       LIBPRFX=&#LE.,
//       LNGPRFX=&#CPP.,
//*      CRUN='NATLANG(JPN)',
//       TUNIT='SYSALLDA'
//COMPILE.SYSLIN   DD  DSN=&&OBJ1,UNIT=&TUNIT.,
//       DISP=(NEW,PASS),SPACE=(TRK,(1,1))
//*
//STEPI   EXEC EDCI,COND=(4,LT),
//       INFILE='&&OBJ1',
//       LIBPRFX=&#LE.,
//       LNGPRFX=&#CPP.,
//*      IRUN='NATLANG(JPN)',
//       TUNIT='SYSALLDA'
//IPALINK.SYSLIN   DD  DSN=&&OBJ2,UNIT=&TUNIT.,
//       DISP=(NEW,PASS),SPACE=(TRK,(1,1))
//*
//STEPL   EXEC CEEWL,COND=(4,LT),
//       LIBPRFX=&#LE.
//LKED.SYSIN     DD  DSN=&&OBJ2,DISP=(SHR,PASS)
//LKED.SYSLMOD   DD  DSN=&&LOAD(GO),DISP=(,PASS),
//       SPACE=(TRK,(5,5,5)),UNIT=SYSALLDA,DSNTYPE=LIBRARY
//*--------------------------------------------------------------------
//STEPGO  EXEC PGM=GO,COND=(4,LT),REGION=2048K,
//       PARM='/@@@@@@@ VERIFICATION SUCCESSFUL @@@@@@@'
//STEPLIB  DD  DSN=&&LOAD,DISP=SHR
//         DD  DSN=&#LE..SCEERUN,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
./ ADD NAME=Q5ACPL   0114-04350-04350-1300-00128-00130-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
// SET #CPP=CBC
// SET #LE=CEE
//PROC JCLLIB ORDER=(CBC.SCCNPRC)
//********************************************************************
//* JOB: Q5ACPL  (product-supplied job CCNJIV2 in library SCCNJCL)
//*
//* DOC: Verify the C++ Compiler installation
//*
//* IVP INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be made:
//*    1. If you chose to use a different prefix than the IBM supplied
//*       one for the C/C++ Compiler, please change the value of CBC
//*       to your chosen prefix on the // SET #CPP=CBC statement.
//*    2. If you chose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE statement
//*       and on the SEARCH parameters.
//*    3. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it, uncomment the CRUN
//*       lines.
//*    4. Type over the "YYYY/MM/DD" on the two GO.SYSIN instream data
//*       with your birth date.
//*    5. You may have to change the unit TUNIT='SYSALLDA' to your
//*       locally-defined esoteric name.
//*
//* REQUIRED ENVIRONMENT FOR IVP:
//*    1. Run on target system.
//*    2. C/C++ Compiler and Language Environment must be installed on
//*       the system prior to execution of the IVP.
//*
//* IVP INPUT:
//*    1. Input data set:
//*             CBC.SCCNSAM(CCNYIV2).
//*
//* IVP OUTPUT:
//*    1. Return code of zero for all steps.
//*    2. Output:
//*     DOCLG1.GO   Local time is "compilation date and time"
//*
//*                 Please enter your birth date in the form YYYY/MM/DD
//*                 Total Days  : 0
//*                 Physical    : 0.000000
//*                 Emotional   : 0.000000
//*                 Intellectual: 0.000000
//*
//*     DOCLG2.GO   Local time is "compilation date and time"
//*
//*                 Please enter your birth date in the form YYYY/MM/DD
//*                 Total Days  : 0
//*                 Physical    : 0.000000
//*                 Emotional   : 0.000000
//*                 Intellectual: 0.000000
//*
//*     NOTES: "compilation date and time" is the date and time when
//*     you submit the job for example:
//*     Tue Jul 2 14:32:12 1996
//*
//********************************************************************
//DOCLG1  EXEC  CBCCBG,
//       INFILE=CBC.SCCNSAM(CCNYIV2),
//       LIBPRFX=&#LE.,
//       LNGPRFX=&#CPP.,
//       CLBPRFX='NULLFILE ',
//*      CRUN='NATLANG(JPN)',
//       CPARM='OPTFILE(DD:CCOPT)',
//       TUNIT='SYSALLDA'
//BIND.SYSLMOD DD DSN=&&GSET(GO),SPACE=(TRK,(7,7,1)),UNIT=SYSALLDA,
//        DSNTYPE=LIBRARY,DISP=(NEW,PASS)
//COMPILE.CCOPT DD *
   SEARCH('CEE.SCEEH.+')
   CSECT SO
/*
//GO.STEPLIB DD
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//*
//* Enter your birth date in the form YYYY/MM/DD
//GO.SYSIN DD *
  YYYY/MM/DD
/*
//*--------------------------------------------------------------------
//DOCLG2  EXEC  CBCCBG,
//       INFILE=CBC.SCCNSAM(CCNYIV2),
//       LIBPRFX=&#LE.,
//       LNGPRFX=&#CPP.,
//       CLBPRFX='NULLFILE ',
//*      CRUN='NATLANG(JPN)',
//       CPARM='MAXMEM(*) OPTFILE(DD:CCOPT)',
//       TUNIT='SYSALLDA'
//COMPILE.CCOPT DD *
   SEARCH('CEE.SCEEH.+')
   CSECT SO OPT(2)
/*
//COMPILE.SYSLIN   DD  DSN=&&LDSET,UNIT=&TUNIT.,
//       DISP=(MOD,PASS),SPACE=(TRK,(3,3)),
//       DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//BIND.SYSLMOD   DD  DSN=&&DOC2LD(GO),DISP=(,PASS),
//       SPACE=(TRK,(5,5,5)),DSNTYPE=LIBRARY,
//       UNIT=SYSALLDA
//GO.STEPLIB DD
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//           DD   DSN=&#LE..SCEERUN,
//             DISP=SHR
//*
//* Enter your birth date in the form YYYY/MM/DD
//GO.SYSIN DD *
  YYYY/MM/DD
/*
//*
./ ADD NAME=R0AINFOP 0114-04350-04350-1300-00050-00052-00000-HOWTO

z/OS 1.4 Infoprint Server


If  Infoprint Server has been enabled, verify Infoprint Server has been
installed properly by performing the steps described in this section.

This   installation   verification   procedure   (IVP)   assumes    the
customization  has  been  completed  as described in section "Infoprint
Server Customization Considerations" of the program directory, and  the
logon  procedure  is set up as described in section "z/OS ISPF Setup
Considerations" of the program directory so  you  have  access  to  the
Infoprint Server ISPF panels.

The  IVP  described  in  this  section  verifies  the Printer Inventory
Manager and Print Interface components of Infoprint Server.  No IVP  is
provided for the NetSpool or IP PrintWay components.

You can perform a simple verification test by printing a file using the
lp command.

1.  Start the Printer Inventory Manager.

    Start  the  Printer  Inventory  Manager  by  entering the following
    command from within OMVS:

      aopstart

    Note that you must be connected to the RACF group AOPOPER in  order
    to successfully issue the aopstart command.

2.  Define one or more printers using the Infoprint Server ISPF panels.

    For  detailed  information  on defining printers, refer to the z/OS
    Infoprint Server Operation and Administration, S544-5745.

3.  Ensure that your PATH environment variable is  correctly  set  with
    "/usr/lpp/Printsrv/bin"  concatenated  ahead  of  "/bin" before you
    attempt to enter the lp command.

4.  Print a sample file to the printer you just defined. You can  print
    the  sample  configuration  file  provided  with Print Interface by
    entering the following command from within z/OS UNIX System Ser-
    vices:

      lp -d printer_name /etc/Printsrv/aopd.conf

    where "printer_name" is the name of the printer that you defined in
    step 2 above.

./ ADD NAME=R0BBKMSV 0114-04350-04350-1300-00043-00043-00000-HOWTO

z/OS 1.4 BookManager BookServer


Once   you   have  completed  your  configuration,  you  should  verify
BookManager BookServer works from a browser. You can run a simple  ver-
ification test by using the sample welcome page in /public/index.html.

1.  Copy  /public/index.html  to  the  /usr/lpp/booksrv/public/bookmgr/
    directory. The mode setting on this file should be 644. Locate  the
    statement:

      <base href="http://your.hostname/">

    Replace  your.hostname  with  the fully qualified domain name or IP
    address of your server.

2.  From a Web browser, open the URL

      http://your.hostname/bookmgr/

    (replacing your.hostname with the domain name or IP address of your
    server).

    The index.html welcome page should display.

    If not, check the AlwaysWelcome parameter in the configuration file
    httpd.conf is set to On and index.html is  listed  as  one  of  the
    default welcome file names.

3.  From a Web browser, open the URL

      http://your.hostname/bookmgr-cgi/EPHBOOKS

    (replacing your.hostname with the domain name or IP address of your
    server).

    The BookManager BookServer library page should display.

NOTE:   The Rebuild Catalog function on the Administration Page must be
       run in order for the Getting Started book and Help  text  to  be
       available.

./ ADD NAME=R0COCSFV 0114-04350-04350-1300-00056-00057-00000-HOWTO


z/OS 1.4 Cryptographic Services OCSF


Once  you  have completed the previous steps, run the installation ver-
ification procedure (IVP).  This verifies that you have  installed  and
configured correctly.  To correctly test your configuration, it is sug-
gested that run the IVP under a few different user identities that have
been authorized to issue OCSF applications.

Perform the following steps:

1.  Go to the correct directory, for example:

            cd /usr/lpp/ocsf/ivp

2.  Read the README.ivp and follow the instructions for running the

            Installation Verification Procedure.

3.  Run  the following script: ocsf_baseivp .  You will receive the the
    following messages:

        output Starting OCSF base addins ivpInitializing CSSMCSSM
        InitializedAttaching ibmwkcspAttach successful, detaching
        ibmwkcspDetach of ibmwkcsp successful
        Attaching ibmswcspAttach successful, detaching ibmswcspDetach of
        ibmswcsp successful
        Attaching ibmccaAttach successful, detaching ibmccaDetach of ibm
        successfulAttaching ibmclAttach successful, detaching ibmclDetac
        ibmcl successfulAttaching ibmcl2Attach successful, detaching
        ibmcl2Detach of ibmcl2 successfulAttaching ibmdl2
        Attach successful, detaching ibmdl2Detach of ibmdl2 successful
        Attaching ldapdl
        Attach successful, detaching ldapdl
        Detach of ldapdl successful
        Attaching ibmtpAttach successful, detaching ibmtpDetach of ibmtp
        successfulAttaching ibmtp2Attach successful, detaching ibmtp2Det
        of ibmtp2 successfulCompleted OCSF base addins ivp

4.  When this runs correctly, your installation is complete.

NOTE:  When you have the Security Level 3 Feature installed, you should
perform the additional step of verifying that the correct policy  table
files  are  being  used.   The files /usr/lpp/ocsf/lib/cssmmanp.dll and
/usr/lpp/ocsf/lib/cssmusep.dll are actually links.  When only the  OCSF
base  is  installed,  these  links should point to cssmmanp_sl2.dll and
cssmusep_sl2.dll.  When the Security Level 3 Feature is installed, they
should point to cssmmanp_sl3.dll and cssmusep_sl3.dll.

For more information about the IVP, setting up security authorizations
and common problems, see
:cit.z/OS Open Cryptographic Services Facility Application
Programming:ecit., SC24-5899.

./ ADD NAME=R0DCPLOC 0114-04350-04350-1300-00025-00025-00000-HOWTO
z/OS 1.4 C++ IBM Open Class Library


RUN THE C++ IBM OPEN CLASS LIBRARY IVPS

IBM provides two IVP jobs in the installation dialog to help you ensure
that  the  C++  IBM Open Class Library was installed properly.  See the
jobs for instructions and expected results.


Verify the IO Streams Class Library and Complex Class Library
Installation

Run job R1CPLSTC in the installation dialog (CLB3JIV1  in  the  program
directory)  to  verify  that  the  C++  IBM Open Class IO Streams Class
Library and Complex Class Library was installed properly.


Verify the Application Support Class Library and Collection Class
Library Installation

Run job R2CPLOPC in the installation dialog (CLB3JIV2  in  the  program
directory)  to  verify  that the C++ IBM Open Class Application Support
Class Library and Collection Class Library was installed properly.

./ ADD NAME=R1CPLSTC 0114-04350-04350-1300-00113-00115-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
// SET #CLIB=CBC
// SET #LE=CEE
//PROC JCLLIB ORDER=(&#LE..SCEEPROC)
//********************************************************************
//* JOB: R1CPLSTC  (product-supplied job CLB3JIV1 in library SCLBJCL)
//*
//* DOC: Verify the Standard Class Library installation
//*
//* IVP INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be made
//*
//*    1. If you choose to use a different prefix than the IBM supplied
//*       one for the C/C++ IBM Open Class (IOC) Library, please change
//*       the value of CBC to your chosen prefix on the
//*       // SET #CLIB=CBC statement.
//*    2. If you choose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE statement.
//*    3. If you have installed Kanji Messages for the C/C++ IOC
//*       Library and wanted to enable it, comment out the current
//*       PARM lines //         PARM='ERRCOUNT(0)/'  and replace with
//*       PARM lines //*        PARM='ERRCOUNT(0) NATLANG(JPN)/' that
//*       comment out.
//*
//* REQUIRED ENVIRONMENT FOR IVP:
//*    1. Run on target system.
//*    2. C/C++ IOC Library and Language Environment must be
//*       installed on the system prior to execution of the IVP.
//*
//* IVP INPUT:
//*    1. Input data sets:
//*             CBC.SCLBJCL(CLBIVP10)
//*             CBC.SCLBJCL(CLBIVP11)
//*
//* IVP OUTPUT:
//*    1. Return code of zero for all steps.
//*    2. Output:
//*  GO1:
//*      Enter some integers (/* to terminate)
//*       1 2 5 3 7 8 3 2 10 11
//*      Jackson, Joseph
//*       comes before Bloe, Joe
//*      23 comes before 28
//*
//*  GO2:
//*      The value of cos()  for (pi,pi/2) is: (6.123234e-17,0.000000)
//*      The value of cosh() for (pi,pi/2) is:(2.509178,0.000000)
//*      The value of sin()  for (pi,pi/2) is:(1.000000,0.000000)
//*      The value of sinh() for (pi,pi/2) is:(2.301299,0.000000)
//*      *** COMPLEX CLASS INSTALLATION SUCCESSFUL ***
//********************************************************************
//*----------------------------------------------------------------
//* L1 step:
//*----------------------------------------------------------------
//L1      EXEC CEEWL,
//        LIBPRFX=&#LE.,
//        TUNIT='SYSALLDA'
//LKED.SYSIN   DD  DISP=SHR,
//       DSN=CBC.SCLBJCL(CLBIVP10)
//LKED.SYSLMOD DD  DSN=&&GSET(GO),UNIT=&TUNIT.,DISP=(,PASS),
//       SPACE=(TRK,(5,5,5))
//*----------------------------------------------------------------
//* GO1 step:
//*----------------------------------------------------------------
//GO1      EXEC PGM=*.L1.LKED.SYSLMOD,REGION=2048K,
//         COND=((1,LE,L1.LKED)),
//*        PARM='ERRCOUNT(0) NATLANG(JPN)/'
//         PARM='ERRCOUNT(0)/'
//STEPLIB  DD  DSN=&#LE..SCEERUN,
//             DISP=SHR
//         DD  DSN=CBC.SCLBDLL,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSIN    DD  DATA,DLM='<>'
 1 2 5 3 7 8 3 2 10 11  \*
<>
//*----------------------------------------------------------------
//* L2 step:
//*----------------------------------------------------------------
//L2      EXEC CEEWL,
//        LIBPRFX=&#LE.,
//        TUNIT='SYSALLDA'
//LKED.SYSIN   DD  DISP=SHR,
//       DSN=CBC.SCLBJCL(CLBIVP11)
//LKED.SYSLMOD DD  DSN=&&GSET(GO),UNIT=&TUNIT.,DISP=(OLD,PASS),
//       SPACE=(TRK,(5,5,5))
//*----------------------------------------------------------------
//* GO2 step:
//*----------------------------------------------------------------
//GO2      EXEC PGM=*.L2.LKED.SYSLMOD,REGION=2048K,
//         COND=((1,LE,L2.LKED)),
//*        PARM='ERRCOUNT(0) NATLANG(JPN)/'
//         PARM='ERRCOUNT(0)/'
//STEPLIB  DD  DSN=&#LE..SCEERUN,
//             DISP=SHR
//         DD  DSN=CBC.SCLBDLL,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//*
./ ADD NAME=R2CPLOPC 0114-04350-04350-1300-00108-00110-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
// SET #CLIB=CBC
// SET #LE=CEE
//PROC JCLLIB ORDER=(&#LE..SCEEPROC)
//********************************************************************
//* JOB: R2CPLOPC  (product-supplied job CLB3JIV2 in library SCLBJCL)
//*
//* DOC: Verify Application Support and Collection Class Library
//*      installation
//*
//* IVP INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be made:
//*
//*    1. If you choose to use a different prefix than the IBM supplied
//*       one for the C/C++ IBM Open Class (IOC) Library, please change
//*       the value of CBC to your chosen prefix on the
//*       // SET #CLIB=CBC statement.
//*    2. If you choose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE statement.
//*    3. If you have installed Kanji Messages for the C/C++ IOC
//*       Library and wanted to enable it, comment out the current
//*       GPARM lines //         PARM='ERRCOUNT(0)/'  and replace with
//*       GPARM lines //*        PARM='ERRCOUNT(0) NATLANG(JPN)/' that
//*       commented out.
//*
//* REQUIRED ENVIRONMENT FOR IVP:
//*    1. Run on target system.
//*    2. C/C++ IOC Class Library and Language Environment must be
//*       installed on the system prior to execution of the IVP.
//*
//* IVP INPUT:
//*    1. Input data sets:
//*             CBC.SCLBJCL(CLBIVP20)
//*             CBC.SCLBJCL(CLBIVP22)
//*
//* IVP OUTPUT:
//*    1. Return code of zero for all steps.
//*    2. Output:
//*       GO1:      < APPLICATION >
//*                 < SUPPORT CLASS INSTALLATION >
//*                 < SUCCESSFUL >
//*
//*       GO2:       Odds less than 10:    1   3   5   7   9
//*                  Primes less than 10:    2   3   5   7
//*                  Odd primes less than 10:    3   5   7
//*                  Even primes less than 10:    2
//*                 *** COLLECTION CLASS INSTALLATION SUCCESSFUL ***
//*
//********************************************************************
//*----------------------------------------------------------------
//* L1 step:
//*----------------------------------------------------------------
//L1      EXEC CEEWL,
//        LIBPRFX=&#LE.,
//        TUNIT='SYSALLDA'
//LKED.SYSIN   DD  DISP=SHR,
//       DSN=CBC.SCLBJCL(CLBIVP20)
//LKED.SYSLMOD DD  DSN=&&GSET(GO),UNIT=&TUNIT.,DISP=(,PASS),
//       SPACE=(TRK,(5,5,5))
//*----------------------------------------------------------------
//* GO1 step:
//*----------------------------------------------------------------
//GO1      EXEC PGM=*.L1.LKED.SYSLMOD,REGION=2048K,
//         COND=((1,LE,L1.LKED)),
//*        PARM='ERRCOUNT(0) NATLANG(JPN)/'
//         PARM='ERRCOUNT(0)/'
//STEPLIB  DD  DSN=&#LE..SCEERUN,
//             DISP=SHR
//         DD  DSN=CBC.SCLBDLL,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//*----------------------------------------------------------------
//* L2 step:
//*----------------------------------------------------------------
//L2      EXEC CEEWL,
//        LIBPRFX=&#LE.,
//        TUNIT='SYSALLDA'
//LKED.SYSIN   DD  DISP=SHR,
//       DSN=CBC.SCLBJCL(CLBIVP22)
//LKED.SYSLMOD DD  DSN=&&GSET(GO),UNIT=&TUNIT.,DISP=(OLD,PASS),
//       SPACE=(TRK,(5,5,5))
//*----------------------------------------------------------------
//* GO2 step:
//*----------------------------------------------------------------
//GO2      EXEC PGM=*.L2.LKED.SYSLMOD,REGION=2048K,
//         COND=((1,LE,L2.LKED)),
//*        PARM='ERRCOUNT(0) NATLANG(JPN)/'
//         PARM='ERRCOUNT(0)/'
//STEPLIB  DD  DSN=&#LE..SCEERUN,
//             DISP=SHR
//         DD  DSN=CBC.SCLBDLL,
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//*
./ ADD NAME=R3ENCINA 0114-04350-04350-1300-00017-00019-00000-HOWTO

z/OS 1.4 Encina Toolkit Executive


The  Encina  IVP  is a prebuilt version of the telshop example program,
consisting of a telshop client and a BASE_MERCHANDISE server.    It  is
found in the

           /usr/lpp/encina/example/telshop

directory,  along  with a README.IVP file that contains the information
on how to prepare for and perform the telshop install verification pro-
cedure.

For detailed information about the Encina  Tool  Kit  refer  to  OS/390
Encina Toolkit Executive Guide and Reference, SC24-5832.

./ ADD NAME=R4HOSTPA 0114-04350-04350-1300-00008-00008-00000-HOWTO
z/OS 1.4 C/C++ Host Performance Analyzer


Run  job  R5CPTRAC  in the installation dialog (PROFFUNC in the program
directory) to verify the C/C++ Host Performance Analyzer installation.

See the job for instructions and expected results.

./ ADD NAME=R5CPTRAC 0114-04350-04350-1300-00079-00081-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//  SET #CPP=CBC
//  SET #LE=CEE
//PROC JCLLIB ORDER=(CBC.SCBCPRC,
//   &#LE..SCEEPROC)
//********************************************************************
//* JOB: R5CPTRAC  (product-supplied job CTVFUNC in library SCTVJCL)
//*
//* DOC: C/C++ Host Performance Analyzer Sample JCL for
//*      Function Level Trace
//*
//* INSTRUCTIONS:
//*   Before submitting this job, the JCL must be customized
//*   for your installation.  The following changes need to be made:
//*
//*    1. If you chose to use a different prefix than the IBM supplied
//*       one for the C/C++ Compiler, please change the value of CBC
//*       to your chosen prefix on the // SET #CPP=CBC statement.
//*    2. If you chose to use a different prefix than the IBM supplied
//*       one for the Language Environment, please change the value
//*       of CEE to your chosen prefix on the // SET #LE=CEE
//*       statement.
//*    3. If you have installed Kanji Messages for the C/C++ Compiler
//*       on your system and want to enable it, uncomment the CRUN
//*       line.
//*
//* REQUIRED ENVIRONMENT:
//*    1. C/C++ Compiler and Language Environment must be installed on
//*       the system prior to execution of this JCL.
//*
//* INPUT:
//*    1. Input data set:
//*       CBC.SCBCSAM(CBC3GDC1)
//*
//* OUTPUT:
//*    1. Return code of zero for all steps.
//*    2. Function trace file userid.CBC3GDC1.FUNCTION.TRC is
//*       generated.
//*    3. Output from the program:
//*       res_add =11.87655
//*       res_sub =0.34
//*       res_mul =-1.4814000
//*       res_div =1.12079927338782
//*
//********************************************************************
//PROFTST EXEC EDCCLG,
//        CPARM='OPTFILE(DD:OPTION)',
//        TUNIT='SYSALLDA',
//        LIBPRFX=&#LE.,
//        LNGPRFX=&#CPP.,
//*       CRUN='NATLANG(JPN)',
//       INFILE=CBC.SCBCSAM(CBC3GDC1),
// OUTFILE='&&GSET(GO),DISP=(,PASS),SPACE=(TRK,(7,7,1))',
//    GPARM='PROFILE(ON,"FUNC,T,N,W"),ENVAR("_CEE_ENVFILE=DD:MYVARS")/'
//OPTION DD *
LIST
TEST(HOOK)
NOGONUMBER
OPT(1)
/*
//LKED.SYSLMOD  DD  DSN=&OUTFILE,UNIT=&TUNIT.
//GO.MYVARS   DD *
__PROF_FILE_NAME=CBC3GDC1.FUNCTION.TRC
__PROF_HOOKS=ALL
/*
//GO.STEPLIB  DD
//            DD  DSN=CBC.SCTVMOD,
//             DISP=SHR
//*
./ ADD NAME=R6NFSIVP 0114-04350-04350-1300-00096-00100-00000-HOWTO
z/OS 1.4 Network File System


Before  you  begin to verify that Network File System is installed cor-
rectly, perform the following sequence:

1.  Attach Network Controller  (for example, IBM 3172 Controller)
    to your system
2.  Ensure that the following have started correctly:
    a.  z/OS UNIX
    b.  eNetwork Communications Server IP
    c.  PORTMAP
    d.  Network File System

        For  the Server, the operator's console should display the fol-
        lowing GFSA348I message:

          GFSA348I OS/390 NETWORK FILE SYSTEM SERVER (HDZ11TS) STARTED.

        For the Client, the operator's console should display the  fol-
        lowing GFSC700I message:

          GFSC700I OS/390 NETWORK FILE SYSTEM CLIENT (HDZ11TC) STARTED.

        Detailed  steps to start the Network File System are defined in
        the Network File System Customization and Operation, manual.

NETWORK FILE SYSTEM CLIENT

The examples below illustrate the command sequences used by the AIX and
OS/2  Network  File  System clients to verify that the server is opera-
tional. In each example the following parameters are used:

mvshost   The nickname of the remote host where the Network File System
          is running.

user01    The MVS login userid. Refer to Security Server(RACF) Security
          Administrator's Guide, for  information  on  how  to define a
          userid for the  Network File System client  user  in order to
          access the Network File System.

nfstest   The MVS data set's high-level qualifier or an alias of a user
          catalog. Also "nfstest" should be specified  in  the  EXPORTS
          file properly before the Network File System is started.

Refer to the Network File System User's Guide, for  further information
about the commands and related parameters.

NETWORK FILE SYSTEM AIX CLIENT

The following example illustrates the command sequences  input  to  AIX
and the expected confirmation of operation:

+---------------------------------------------------------------------+
|                                                                     |
|  $ mkdir /mvsdir                                                    |
|  $ su                                                               |
|  Password:                                                          |
|  # mount mvshost:nfstest /mvsdir                                    |
|  # <enter "control and D" to exit super user mode>                  |
|  $ mvslogin mvshost user01                                          |
|  Password required                                                  |
|  GFSA973A Enter MVS password:                                       |
|  GFSA955I user01 logged in ok.                                      |
|  $ cat > "/mvsdir/testfile"                                         |
|  This is a string of text entered.                                  |
|  <enter "control and D" keys to finish entering the data>           |
|  $ cat "/mvsdir/testfile"                                           |
|  This is a string of text entered.                                  |
|  $                                                                  |
|                                                                     |
+---------------------------------------------------------------------+

NETWORK FILE SYSTEM OS/2 CLIENT

The  following  OS/2 example illustrates the command sequences input to
OS/2 and the expected confirmation of operation:

+---------------------------------------------------------------------+
|                                                                     |
|   C:\ mount z: mvshost:nfstest                                      |
|  Drive 'z:' was attached successfully.                              |
|   C:\ mvslogin mvshost user01                                       |
|  Password required                                                  |
|  GFSA973A Enter MVS password:                                       |
|  GFSA955I user01 logged in ok.                                      |
|   C:\ copy con z:testfile                                           |
|  This is a string of text entered.                                  |
|  <enter "Ctrl and Z" keys and then "Enter" key to finish            |
|  entering the data>                                                 |
|   C:\ type z:testfile                                               |
|  This is a string of text entered.                                  |
|   C:\                                                               |
|                                                                     |
+---------------------------------------------------------------------+

./ ADD NAME=S0AFINIS 0114-04350-04350-1300-00012-00013-00000-HOWTO
COMPLETING THE INSTALLATION


This section  identifies  optional  steps  you  can  take  after  you
have verified that your new target system was installed successfully:

o   Updating your new master catalog
o   Cleaning up your driver system after the installation
o   Receiving additional service.

Update the LNKLST concatenation on your target system to remove
data set EXMP.LINKLIB from the list.
./ ADD NAME=S0BMSCAT 0114-04350-04350-1300-00161-00159-00000-HOWTO
+--- IMPORTANT! ------------------------------------------+
|                                                         |
| Read the section "Merging a Master Catalog with the     |
| NEWSYSTEM Master Catalog" in your hardcopy installation |
| guide before returning to this section to submit the    |
| S1CATCVT or S2CATCVT jobs.                              |
|                                                         |
| Note that you run S1CATCVT and S2CATCVT only on one     |
| system only, to create the master catalog for this      |
| order.  Do not use these jobs to migrate catalogs to    |
| subsequent systems.                                     |
|                                                         |
+---------------------------------------------------------+

JOB S1CATCVT
You must run S1CATCVT on the driving system.
Run S1CATCVT on one system only;  do not use this job to
migrate catalogs to subsequent systems.
Before running this job, IBM recommends that you do the
following:

o   Get a full-volume dump of your existing master
    catalog volume, and of all volumes on which VSAM data
    sets (except page data sets) and SMS-managed data
    sets owned by your master catalog reside.
    If this is a single-system environment, or a shared
    master catalog environment, and you use DFSMSdss,
    place the dump data sets on the first file of each
    tape so they can be restored using standalone restore
    if necessary.
o   Run a LISTCATALOG ALL command against your existing
    master catalog and save the output.
o   Verify that SHAREOPTIONS(3,4) is set for your
    existing master catalog.  REPRO processing serializes
    access to the input catalog based on the SHAREOPTIONS
    to preserve data integrity.
o   Verify that the HCD definitions for all volumes containing
    catalogs that will be read or updated by the jobs that are
    shared by other systems specify FEATURE=SHARED, both for
    the system on which the jobs will run and on all other
    sharing systems.  If FEATURE=SHARED is not specified for
    one or more of these volumes, either update HCD and make
    the change effective (by dynamic activation or IPL) or
    take the volumes offline to the other systems before
    running the jobs.  Cross-system serialization of catalogs
    to preserve data integrity is based on the SHAREOPTIONS
    and the HCD definitions for the devices on which the
    catalogs reside.
o   Ensure that no updates will be made to your master catalog
    during the REPRO.  For example, make sure that VSAM data
    sets (other than page spaces) are closed.  Notify your
    storage and TSO/E administrators that they should not
    make changes, or add or delete aliases for user IDs
    while the job is running.
The S1CATCVT job checks your existing catalog using  the  IDCAMS EXAMINE
command be fore making  the  REPRO copy.   If  problems  are found, the
other steps are  not run.    Resolve  any  problems  in  your  existing
catalog  before  running  the remaining steps.
You should consider adding  a  step  that  invokes the DIAGNOSE command
step for each volume on which a  VSAM or  SMS-managed data set owned by
your master catalog resides, and adding  a  COMPAREDD  parameter to the
DIAGNOSE command.  Doing so will  help  you  to  ensure  that  the VSAM
volume records (VVRs) and non-VSAM records (NVRs) for those  data  sets
eventually point to the correct  catalog.    Also,  adding  such a step
might help avoid problems during the REPRO operations.
The S1CATCVT job creates a  temporary catalog and makes a  REPRO copy of
your existing master catalog.    The temporary catalog is used as input
to the next job, S2CATCVT.
Because REPRO changes volume ownership  for  SMS-managed  and VSAM data
sets, do not use S1CATCVT or S2CATCVT to  migrate catalogs  to subsequent
systems, particularly for  systems  that  share  DASD  with  the  first
system.   These  jobs cannot serve as general-purpose catalog migration
procedures.
NOTES:
1.  You should allocate the temporary catalog on a volume
    having no active page data sets.  Otherwise, though
    the copy and merge operations complete successfully,
    it might not be possible to delete the temporary
    catalog when the jobs have finished processing.
2.  If the REPRO ends in error, do not delete the REPRO
    copy of the catalog.  After correcting the problem
    that caused the REPRO to fail, allocate another new
    catalog and use it as the target of the REPRO operation.
    Then, run the S2CATCVT job twice, using the two REPRO
    copies as input in the same order in which they were
    created.  This will update the VVRs and NVRs to point
    to the correct catalog.
3.  If all volumes containing VSAM or SMS-managed data
    sets are not available when the REPRO is run, IDCAMS
    will issue message IDC3576I (ALTER CATALOG NAME FOR
    dsn FAILED).  If the data sets no longer exist, you
    can delete their entries using IDCAMS.  If they still
    exist, save the REPRO copy, make the volumes available,
    and proceed as described above.
JOB S2CATCVT
  You must run this job on the driving system.
  Run S2CATCVT on one system only; do not use this job to migrate
  catalogs to subsequent systems.
  Before  running  the  S2CATCVT  job,  IBM  recommends  that  you enter
  EXPORT DISCONNECT  for  any  catalogs  that  you   manually   entered
  IMPORT  CONNECT   after    the  new    master  catalog    was  built.
  Doing so  will  cause  their  catalog  connector  entries  and  their
  associated alias entries tobe merged automatically by REPRO MERGECAT.
  The S2CATCVT job  first checks  your new catalog and the REPRO copy of
  your master catalog using the  IDCAMS EXAMINE  command.   If problems
  are found, the other steps are not processed.    Resolve any problems
  before running the remaining steps.
  Next,  S2CATCVT  locks the  REPRO  copy of your master catalog and the
  target  catalog  to  ensure  data  integrity.   Access  to  the  RACF
  FACILITY  class  profile  for  IGG.CATLOCK  and  ALTER  access to the
  profile protecting the catalogs are required for  the  user ID  under
  which the job will run.
  Then,  S2CATCVT  uses  IDCAMS REPRO MERGECAT  to merge the REPRO  copy
  of  your  existing  master  catalog  into  the  new  master  catalog.
  If  the  return code  from  REPRO MERGECAT is zero, the REPRO copy of
  your  existing  catalog  is deleted.    Generally, however, this will
  not be true  because  there  will be  entries  in  both  catalogs for
  data sets with the same  names,  and  an  IDCAMS  LISTCAT  command is
  run against the REPRO  copy  so  you  can  see which entries were not
  moved.
  Check to see whether there are any entries for  VSAM  or  SMS-managed
  data sets listed in the  LISTCAT  output,  and  ensure  that  catalog
  ownership for these data sets is assigned  to  a  catalog  that  will
  be  kept.      If  any  user  catalog  connector  entries  and  their
  associated  alias  entries  are  listed,  either redefine the aliases
  or export the catalog and  rerun  REPRO MERGECAT  as described above.
  When all  VSAM  and  SMS-managed  data sets  are owned by a permanent
  catalog, and all needed alias entries are  present  in the new master
  catalog,  you  can  delete  the  REPRO  copy  of your existing master
  catalog.  You can run the DELETE2 step of  the  S2CATCVT job to delete
  the catalog.
  NOTES:
  1.  If the REPRO MERGECAT ends prematurely for some reason
      (for example, the operator cancels the job or the CPU
      time limit for the jobstep is exceeded), simply restart it.
      The job resumes at the point at which it was interrupted.
  2.  Both catalogs are unlocked unless the job abends.  If the
      job abends, unlock them using the IDCAMS ALTER command.
CATALOG CLEANUP AFTER MERGING
When you have finished merging  the copy of your existing
master catalog with the target system master catalog, you
might find that  some of the entries in the target system
master catalog are  for  data sets  you no longer have on
the new system.  To identify such entries, use one of the
following methods, as appropriate:
o   If you use different volume serials  for  the  target
    system, you can identify these  entries  through  the
    IDCAMS LISTCAT command Use IDCAMS LISTCAT to list the
    contents of the target system  master catalog so that
    you can determine which entries point to volumes that
    do not exist.
o   If you chose the same volume serials, you can compare
    the catalog listing to IEHLIST LISTVTOC  listings for
    each volume to identify unneeded entries.
o   If you have a license for  DFSMShsm,  you can use the
    MODIFY DFHSM,AUDIT USERCATALOG  (or  MASTERCATALOG)
    command to identify such entries.  For more information,
    see   z/OS DFSMShsm Storage Administration Reference.
          ______________________________________________
When you have identified the unneeded entries, you can
remove the entries through the IDCAMS DELETE command.
./ ADD NAME=S1CATCVT 0114-04350-04350-1300-00119-00119-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* ## THIS JOB SHOULD BE RUN FROM THE DRIVING SYSTEM. ##
//*-------------------------------------------------------------------
//*
//***Important***Important***Important***Read BEFORE Submitting***
//***Important***Important***Important***Read BEFORE Submitting***
//*                                                              *
//*  Read the entire section of Installing Your Order:           *
//*  'Merging Your Existing Catalog with the NEWSYSTEM Master    *
//*  Catalog' prior to submitting this job.                      *
//*                                                              *
//***Important***Important***Important***Read BEFORE Submitting***
//***Important***Important***Important***Read BEFORE Submitting***
//*
//*
//* S1CATCVT CREATES A COPY OF THE DRIVING SYSTEM MASTER CATALOG IN
//* A TEMPORARY CATALOG. THIS IS DONE TO PRESERVE THE DRIVING SYSTEM
//* MASTER CATALOG AND CREATE THE ENTRIES FOR THE TARGET SYSEM CATALOG.
//*
//* STEPNAME     FUNCTION
//*
//* ALLOCAT      DEFINES THE TEMPORARY CATALOG
//*
//* EXAMINE1     EXAMINES THE CONTENT OF THE DRIVING SYSTEM MASTER
//*              CATALOG
//*
//* DIAGNOSE     DIAGNOSES THE CONTENT OF THE DRIVING SYSTEM MASTER
//*              CATALOG
//*
//* (Accoring to the Installing Your Order's recommendation,
//*  please consider to add COMPAREDD operands to the DIAGNOSE
//*  command and add the corresponding DD statements for volumes
//*  which have all VSAM and SMS-managed data sets.)
//*
//* REPROCAT     REPROS THE CONTENT OF THE DRIVING SYSTEM MASTER
//*              CATALOG TO THE TEMPORARY CATALOG
//*
//*******************************************************************
//*
//* NOTE: SMS AND ACS MUST BE ACTIVE IF YOU HAVE SMS-MANAGED DATA.
//*       THE DRIVING SYSTEM MASTER CATALOG MUST BE ONLINE.
//*
//*-------------------------------------------------------------------
//*
//*-------------------------------------------------------------------
//*  ALLOCATE TEMPORARY WORK CATALOG,DSN=CATALOG.MERGEBAS.TEMPCAT
//*-------------------------------------------------------------------
//ALLOCAT EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//CATVOL   DD VOL=SER=C4WRK1,UNIT=SYSALLDA,DISP=SHR
//SYSIN    DD *
  DEFINE UCAT (ICFCAT -
               NAME(CATALOG.MERGEBAS.TEMPCAT) -
               FILE(CATVOL) -
               CYL(12 4) -
               VOLUME(C4WRK1) -
               SHR(3 4) -
               STRNO(3) -
               FREESPACE(10 10) -
                                   ) -
         DATA  (CISZ(4096) -
                BUFND(4) ) -
         INDEX (BUFNI(4) )
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALLOCAT),(4000,LT))
//*
//*-------------------------------------------------------------------
//* EXAMINES THE CONTENT OF THE DRIVING SYSTEM MASTER
//*-------------------------------------------------------------------
//EXAMINE1 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  EXAMINE -
      NAME(CATALOG.ZOS.MASTER) -
      ERRORLIMIT(100)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EXAMINE1),(4000,LT))
//*
//*-------------------------------------------------------------------
//* DIAGNOSES THE CONTENT OF THE DRIVING SYSTEM MASTER CATALOG
//*
//*  Note: Accoring to the Installing Your Order's recommendation,
//*  please consider to add COMPAREDD operands to the DIAGNOSE
//*  command and add the corresponding DD statements for volumes
//*  which have all VSAM and SMS-managed data sets.)
//*-------------------------------------------------------------------
//DIAGNOSE EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DIAGNOSE -
      ICFCATALOG -
      INDATASET(CATALOG.ZOS.MASTER)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DIAGNOSE),(4000,LT))
//*
//*-------------------------------------------------------------------
//* REPROS THE CONTENT OF THE DRIVING SYSTEM MASTER CATALOG TO
//* THE TEMPORARY CATALOG
//*-------------------------------------------------------------------
//REPROCAT EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  REPRO -
      INDATASET(CATALOG.ZOS.MASTER) -
      OUTDATASET(CATALOG.MERGEBAS.TEMPCAT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,REPROCAT),(4000,LT))
//*
./ ADD NAME=S2CATCVT 0114-04350-04350-1300-00153-00153-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* ## THIS JOB MUST BE RUN FROM THE DRIVING SYSTEM ##
//*-------------------------------------------------------------------
//*
//***Important***Important***Important***Read BEFORE Submitting***
//***Important***Important***Important***Read BEFORE Submitting***
//*                                                              *
//*  Read the entire section of Installing Your Order:           *
//*  'Merging Your Existing Catalog with the NEWSYSTEM Master    *
//*  Catalog' prior to submitting this job.                      *
//*                                                              *
//***Important***Important***Important***Read BEFORE Submitting***
//***Important***Important***Important***Read BEFORE Submitting***
//*
//*  #####  THIS JOB MUST BE RUN ON THE DRIVING SYSTEM  #####
//*  #####                                              #####
//*  #####   You need READ access to IGG.CATLOCK via    #####
//*  #####   the FACILITY class profile protecting it   #####
//*  #####   and ALTER access to the catalogs to be     #####
//*  #####   locked.                                    #####
//*  #####                                              #####
//*  #####  THIS JOB MUST BE RUN ON THE DRIVING SYSTEM  #####
//*
//* JOB S2CATCVT EXECUTES A REPRO MERGECAT STATEMENT TO POPULATE THE
//* NEW TARGET SYSTEM MASTER CATALOG.  THE TEMPORARY CATALOG IS
//* DELETED AFTER SUCCESSFUL COMPLETION OF THE REPRO MERGECAT AND
//* DISCONNECTION FROM THE DRIVER SYSTEM MASTER CATALOG.
//*
//* STEPNAME     FUNCTION
//*
//* EXAMINE2     EXAMINE TEMP AND TARGET SYSTEM MASTER CATALOG
//*
//* ALTLOCK2     GET LOCKS FOR TEMP AND TARGET SYSTEM MASTER CATALOG
//*
//* MERGCAT      POPULATE TARGET SYSTEM MASTER CATALOG
//*
//* LISTCAT2     LISTCAT THE TEMP CATALOG
//*
//* DCON         DISCONNECT FROM THE DRIVING SYSTEM MASTER CATALOG
//*
//* DELETE2      DELETE THE TEMPORARY CATALOG.
//*
//* THE NEW TARGET SYSTEM MASTER CATALOG IS UPDATED WITH:
//*       - ALIASES
//*       - NON-VSAM
//*       - VSAM
//*       - SMS-MANAGED DATA
//*
//*-------------------------------------------------------------------
//*
//* NOTE: SMS AND ACS MUST BE ACTIVE IF YOU HAVE SMS-MANAGED DATA
//*       THE DRIVING SYSTEM MASTER CATALOG MUST BE ONLINE
//*
//*-------------------------------------------------------------------
//EXAMINE2 EXEC PGM=IDCAMS
//*-------------------------------------------------------------------
//* EXAMINES TEMPORARY CATLG AND TARGET SYSTEM MASTER CATLG
//*-------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 EXAMINE -
     NAME(CATALOG.MERGEBAS.TEMPCAT) -
     ERRORLIMIT(100)
 EXAMINE -
      NAME(CATALOG.C14.MASTER) -
     ERRORLIMIT(100)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,EXAMINE2),(4000,LT))
//*
//ALTLOCK2 EXEC PGM=IDCAMS,COND=(4000,LT)
//*-------------------------------------------------------------------
//* GET LOCKS FOR TEMPORARY CATLG AND TARGET SYSTEM MASTER CATLG
//*-------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 ALTER -
     CATALOG.MERGEBAS.TEMPCAT -
     LOCK
 ALTER -
      CATALOG.C14.MASTER -
     LOCK
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,ALTLOCK2),(4000,LT))
//*
//MERGECAT EXEC PGM=IDCAMS,COND=(4000,LT)
//*-------------------------------------------------------------------
//* REPRO MERGECAT FROM TEMPORARY CATLG TO TARGET SYSTEM MASTER CATLG
//* AND UNLOCK BOTH CATLGS
//*-------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 REPRO -
     INDATASET(CATALOG.MERGEBAS.TEMPCAT) -
      OUTDATASET(CATALOG.C14.MASTER) -
     MERGECAT
 ALTER -
     CATALOG.MERGEBAS.TEMPCAT -
     UNLOCK
 ALTER -
      CATALOG.C14.MASTER -
     UNLOCK
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((8,GE,MERGECAT),(4000,LT))
//*
//LISTCAT2 EXEC PGM=IDCAMS,COND=(4000,LT)
//*-------------------------------------------------------------------
//* LISTCAT the TEMPORARY CATLG TO make sure that all VSAM and
//* SMS-managed data sets were successfully merged with the target
//* catalog.
//*-------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 LISTCAT -
   ALL -
   CAT(CATALOG.MERGEBAS.TEMPCAT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,LISTCAT2),(4000,LT))
//*
//DCON    EXEC PGM=IDCAMS,COND=((0,LT,MERGECAT),(4000,LT))
//*-------------------------------------------------------------------
//*  DISCONNECT THE OLD MASTER CATALOG
//*-------------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  EXPORT  -
      CATALOG.ZOS.MASTER  -
      DISCONNECT   -
      CATALOG(CATALOG.C14.MASTER)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DCON),(4000,LT))
//*
//DELETE2 EXEC PGM=IDCAMS,COND=((0,LT,MERGECAT),(4000,LT))
//*-----------------------------------------------------------------
//*  DELETE TEMPORARY WORK CATALOG DSN=CATALOG.MERGEBAS.TEMPCAT
//*-----------------------------------------------------------------
//SYSPRINT DD SYSOUT=*
//DD1      DD DISP=SHR,UNIT=SYSDA,VOL=SER=C4WRK1
//SYSIN    DD *
  DELETE CATALOG.MERGEBAS.TEMPCAT FILE(DD1) UCAT RECOVERY
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,DELETE2),(4000,LT))
//*
./ ADD NAME=T0CLEAN  0114-04350-04350-1300-00065-00059-00000-HOWTO
RUNNING THE CLEAN-UP JOBS

The jobs described in this section clean up the catalog entries that
are no longer needed.  These jobs perform such tasks as the following:

o   Delete system-specific aliases (SSAs)
o   Remove NEWSYSTEM-supplied data sets and indexes.

Run these jobs after you have finished installing the order and have
verified that the system is stable.
Some of the clean-up jobs are optional, depending on whether you plan
to keep the SSAs you defined earlier through the installation dialog.

After the jobs complete, the following will be true:

o   Jobs that use SSA data set names cannot run
o   Jobs  that  use  the  target system master catalog can no longer
    connect to the driving system
o   Jobs  that  use  SMS-managed target system data sets can no longer
    run on the driving system.

Run these jobs on the driving  system,  except  jobs
T3CLEAN and  T6CLEAN,  which  must run on the target
system:

T1CLEAN
          This job updates the  SMP/E DDDEF  entries
          in  your  CSI.  Run this job if you do not
          plan to use catalog entries to access your
          data sets.
          For  non-SMS-managed  data  sets,  T1CLEAN
          does the following:
          o  Removes SSAs from data set names
          o  Adds UNIT, VOLSER, and WAITFORDSN values.
          T1CLEAN processes the DDDEF statements with
          ZONEEDIT   to   remove   the   installation
          directory from the  UNIX file system paths.
T2CLEAN
          Run this job to update DD define statements
          to point to the true names  of  target  and
          distribution  library   DD definition  data
          sets, rather than SSA names.
          This job is optional.    Run it only if you
          did not run job T1CLEAN.
          This job also ZONEEDITs the DDDEF statements
          to unconcatenate the install directory that
          you specified for  the  UNIX  file  system.
T3CLEAN
          T3CLEAN removes unneeded SSAs from  SMP/E DD
          definition statements, such as SMPPTS.
          This job is optional.    Run it only if you
          did not run job T1CLEAN.
T4CLEAN
          Run this job to delete data set name aliases
          from target system catalogs.
T5CLEAN
          Run this job to delete the path entries for
          CSI data sets run on the driving system.
T7CLEAN
          Run this job to delete SSAs from driving system
          and target system master catalogs.
T6CLEAN
          Run this job to delete the transport data set,  which  is  no
          longer required after the data set has been restored into the
          new file system on the target system.
./ ADD NAME=T1CLEAN  0114-04350-04350-1300-09087-09089-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*------------------------------------------------------------------
//* DOC: This job updates the SMPE DDDEF entries in your CSI.
//*      For non-SMS-managed data sets, this job does the following:
//*      - Removes SSAs from data set names
//*      - Adds UNIT, VOLUME and WAITFORDSN values.
//*
//* NOTE: This is an optional job in the Full-System Replacement
//*       Installation Path
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 4
//*-------------------------------------------------------------------
//*******************************************************************
//* Zoneedit DDDEFS to unconcatenate install directory to DDDEFS
//*
//* NOTE: If you have not run the IDCAMS2 step of the RECATDS job,
//*       you must remove the SSA from the STEPLIB and SMPPTS data set
//*       names
//*
//* NOTE: After this job has run successfully, it should not be run
//*       again, unless RECATDS job has run.
//*
//*
//*******************************************************************
//UPDDHFS  EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DISP=SHR,
//         DSN=MASTER.SYS1.MIGLIB
//SMPCSI   DD DISP=SHR,
//         DSN=PRIME.SMPE.GLOBAL.CSI
//SMPPTS   DD DISP=SHR,
//         DSN=PRIME.SMPE.SMPPTS
//SMPOUT   DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPCNTL  DD *
  SET BDY(MVST100) .
  ZONEEDIT DDDEF .
  CHANGE   PATH('/Service/'*,
                '/'*) .
  ENDZONEEDIT .
/*
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,UPDDHFS),(4000,LT))
//T1CLEAN  EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DSN=MASTER.SYS1.MIGLIB,
//            DISP=SHR
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,
//            DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,
//            DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPPUNCH DD DUMMY
//SMPJCLIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(MVSD100) .
    UCLIN .
      REP DDDEF(AAOPEXEC)
          DA(AOP.AAOPEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPHFS)
          DA(AOP.AAOPHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPMENU)
          DA(AOP.AAOPMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPMOD1)
          DA(AOP.AAOPMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPPENU)
          DA(AOP.AAOPPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMAC1)
          DA(ASM.AASMMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMAC2)
          DA(ASM.AASMMAC2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMOD1)
          DA(ASM.AASMMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMOD2)
          DA(ASM.AASMMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMPUT2)
          DA(ASM.AASMPUT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMSAM1)
          DA(ASM.AASMSAM1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMSAM2)
          DA(ASM.AASMSAM2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUACF)
          DA(ASU.AASUACF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUCIDL)
          DA(ASU.AASUCIDL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUEXEC)
          DA(ASU.AASUEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHDR)
          DA(ASU.AASUHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHHDR)
          DA(ASU.AASUHHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHLIB)
          DA(ASU.AASUHLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHSAM)
          DA(ASU.AASUHSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUIDL)
          DA(ASU.AASUIDL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASULINK)
          DA(ASU.AASULINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUMENU)
          DA(ASU.AASUMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUPENU)
          DA(ASU.AASUPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUSAMP)
          DA(ASU.AASUSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUSTUB)
          DA(ASU.AASUSTUB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUTLIB)
          DA(ASU.AASUTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPAHFS)
          DA(BPA.ABPAHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBCCMP)
          DA(CBC.ACBCCMP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBCSR1)
          DA(CBC.ACBCSR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACCNCMP)
          DA(CBC.ACCNCMP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACCNSR1)
          DA(CBC.ACCNSR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBDLL)
          DA(CBC.ACLBDLL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBDLL2)
          DA(CBC.ACLBDLL2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBHFS1)
          DA(CBC.ACLBHFS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBOBJ)
          DA(CBC.ACLBOBJ)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBOBJ2)
          DA(CBC.ACLBOBJ2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR1)
          DA(CBC.ACLBSR1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR2)
          DA(CBC.ACLBSR2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR3)
          DA(CBC.ACLBSR3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR4)
          DA(CBC.ACLBSR4)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLDHFS1)
          DA(CBC.ACLDHFS1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLDSR1)
          DA(CBC.ACLDSR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACTVMOD)
          DA(CBC.ACTVMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACTVSRC)
          DA(CBC.ACTVSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDSHFS)
          DA(CDS.ACDSHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDSLINK)
          DA(CDS.ACDSLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDSSAMP)
          DA(CDS.ACDSSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAFHMOD1)
          DA(CEE.AAFHMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAFHSRC1)
          DA(CEE.AAFHSRC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEEMOD1)
          DA(CEE.ACEEMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEEMOD2)
          DA(CEE.ACEEMOD2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEESRC1)
          DA(CEE.ACEESRC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEESRC2)
          DA(CEE.ACEESRC2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEESRC3)
          DA(CEE.ACEESRC3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCCPP1)
          DA(CEE.AEDCCPP1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCHFS)
          DA(CEE.AEDCHFS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCMOD1)
          DA(CEE.AEDCMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCMOD2)
          DA(CEE.AEDCMOD2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCMSEP)
          DA(CEE.AEDCMSEP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCOBJ1)
          DA(CEE.AEDCOBJ1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCSRC6)
          DA(CEE.AEDCSRC6)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCSRC7)
          DA(CEE.AEDCSRC7)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIBMMOD3)
          DA(CEE.AIBMMOD3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIBMSRC3)
          DA(CEE.AIBMSRC3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIGZMOD1)
          DA(CEE.AIGZMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIGZSRC1)
          DA(CEE.AIGZSRC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACIMHFS)
          DA(CIM.ACIMHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACIMMOD1)
          DA(CIM.ACIMMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACIMPLUG)
          DA(CIM.ACIMPLUG)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACMXDBRM)
          DA(CMX.ACMXDBRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACMXHFS)
          DA(CMX.ACMXHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFCLI0)
          DA(CSF.ACSFCLI0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFHDRS)
          DA(CSF.ACSFHDRS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFMOD0)
          DA(CSF.ACSFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFMOD1)
          DA(CSF.ACSFMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFMSG0)
          DA(CSF.ACSFMSG0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFOBJ)
          DA(CSF.ACSFOBJ)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFPNL0)
          DA(CSF.ACSFPNL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFSKL0)
          DA(CSF.ACSFSKL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFTLIB)
          DA(CSF.ACSFTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNEXP)
          DA(ECN.AECNEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHETC)
          DA(ECN.AECNHETC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHEXP)
          DA(ECN.AECNHEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHINC)
          DA(ECN.AECNHINC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHLBR)
          DA(ECN.AECNHLBR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNLINK)
          DA(ECN.AECNLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHBOK1)
          DA(EOX.AEPHBOK1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHCLB1)
          DA(EOX.AEPHCLB1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHDAT1)
          DA(EOX.AEPHDAT1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHLOD1)
          DA(EOX.AEPHLOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHMSG1)
          DA(EOX.AEPHMSG1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHPNL1)
          DA(EOX.AEPHPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHSAM1)
          DA(EOX.AEPHSAM1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHTBL1)
          DA(EOX.AEPHTBL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOXFONT)
          DA(EOY.AEOXFONT)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOXIENU)
          DA(EOY.AEOXIENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOXOENU)
          DA(EOY.AEOXOENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX1ENU)
          DA(EOY.AEOX1ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX2ENU)
          DA(EOY.AEOX2ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX3ENU)
          DA(EOY.AEOX3ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX4ENU)
          DA(EOY.AEOX4ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYAENU)
          DA(EOY.AEOYAENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYBENU)
          DA(EOY.AEOYBENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYCLIB)
          DA(EOY.AEOYCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYGENU)
          DA(EOY.AEOYGENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYIENU)
          DA(EOY.AEOYIENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYIPRF)
          DA(EOY.AEOYIPRF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYLENU)
          DA(EOY.AEOYLENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYLEXS)
          DA(EOY.AEOYLEXS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYLOAD)
          DA(EOY.AEOYLOAD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYMC30)
          DA(EOY.AEOYMC30)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYMC40)
          DA(EOY.AEOYMC40)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYMENU)
          DA(EOY.AEOYMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYOENU)
          DA(EOY.AEOYOENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYPENU)
          DA(EOY.AEOYPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYPROC)
          DA(EOY.AEOYPROC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYSAMP)
          DA(EOY.AEOYSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYSENU)
          DA(EOY.AEOYSENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYTENU)
          DA(EOY.AEOYTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYXENU)
          DA(EOY.AEOYXENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOY1ENU)
          DA(EOY.AEOY1ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOY2ENU)
          DA(EOY.AEOY2ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOY4ENU)
          DA(EOY.AEOY4ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHBOOK)
          DA(EPH.AEPHBOOK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHCLIB)
          DA(EPH.AEPHCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHGIF)
          DA(EPH.AEPHGIF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHLOAD)
          DA(EPH.AEPHLOAD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHSAMP)
          DA(EPH.AEPHSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEQAMOD2)
          DA(EQAW.AEQAMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEQASRC2)
          DA(EQAW.AEQASRC2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVACF)
          DA(EUV.AEUVACF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVDBRM)
          DA(EUV.AEUVDBRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVEXEC)
          DA(EUV.AEUVEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVEXP)
          DA(EUV.AEUVEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHDCP)
          DA(EUV.AEUVHDCP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHDR)
          DA(EUV.AEUVHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHDRK)
          DA(EUV.AEUVHDRK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHETC)
          DA(EUV.AEUVHETC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHINC)
          DA(EUV.AEUVHINC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHLBR)
          DA(EUV.AEUVHLBR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHTCL)
          DA(EUV.AEUVHTCL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHXMP)
          DA(EUV.AEUVHXMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVIDL)
          DA(EUV.AEUVIDL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLIB)
          DA(EUV.AEUVLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLIBK)
          DA(EUV.AEUVLIBK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLIBS)
          DA(EUV.AEUVLIBS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLINK)
          DA(EUV.AEUVLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVMSG)
          DA(EUV.AEUVMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVPNL)
          DA(EUV.AEUVPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVPRC)
          DA(EUV.AEUVPRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFEXC)
          DA(EUVF.AEUVFEXC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFEXP)
          DA(EUVF.AEUVFEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFHDR)
          DA(EUVF.AEUVFHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFHFS)
          DA(EUVF.AEUVFHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFLIB)
          DA(EUVF.AEUVFLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFLNK)
          DA(EUVF.AEUVFLNK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFSAM)
          DA(EUVF.AEUVFSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPWBENU)
          DA(FFST.V120ESA.AEPWBENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPWMOD1)
          DA(FFST.V120ESA.AEPWMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPWSRC1)
          DA(FFST.V120ESA.AEPWSRC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMCDA)
          DA(GDDM.AADMCDA)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMCFO)
          DA(GDDM.AADMCFO)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMDAT)
          DA(GDDM.AADMDAT)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMGDF)
          DA(GDDM.AADMGDF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMIMG)
          DA(GDDM.AADMIMG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMMAP)
          DA(GDDM.AADMMAP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMMOD)
          DA(GDDM.AADMMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMMSG)
          DA(GDDM.AADMMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMOPS)
          DA(GDDM.AADMOPS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMPCF)
          DA(GDDM.AADMPCF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMPNL)
          DA(GDDM.AADMPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMSAM)
          DA(GDDM.AADMSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMSYM)
          DA(GDDM.AADMSYM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMCLS0)
          DA(GIM.AGIMCLS0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMMENU)
          DA(GIM.AGIMMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMPENU)
          DA(GIM.AGIMPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMSENU)
          DA(GIM.AGIMSENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMTENU)
          DA(GIM.AGIMTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDEXEC)
          DA(GLD.AGLDEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDEXPC)
          DA(GLD.AGLDEXPC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDHCLI)
          DA(GLD.AGLDHCLI)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDHDRC)
          DA(GLD.AGLDHDRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDHFS)
          DA(GLD.AGLDHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDLNK)
          DA(GLD.AGLDLNK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDSAMP)
          DA(GLD.AGLDSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGSKHFS)
          DA(GSK.AGSKHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGSKLINK)
          DA(GSK.AGSKLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGSKSAMP)
          DA(GSK.AGSKSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEEQINST)
          DA(HCM.AEEQINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHETC)
          DA(ICA.AICAHETC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHLBR)
          DA(ICA.AICAHLBR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHSAM)
          DA(ICA.AICAHSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHSCR)
          DA(ICA.AICAHSCR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICALINK)
          DA(ICA.AICALINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAPROC)
          DA(ICA.AICAPROC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICASAMP)
          DA(ICA.AICASAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMOHFS1)
          DA(IMO.AIMOHFS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMOJCL1)
          DA(IMO.AIMOJCL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMOMOD1)
          DA(IMO.AIMOMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMWEMOD)
          DA(IMW.AIMWEMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMWHENU)
          DA(IMW.AIMWHENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMWSAM1)
          DA(IMW.AIMWSAM1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEVIMOD6)
          DA(ING.AEVIMOD6)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEVIMOD7)
          DA(ING.AEVIMOD7)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEVIMOD8)
          DA(ING.AEVIMOD8)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIMOD)
          DA(ING.AINGIMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIMSG)
          DA(ING.AINGIMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGINST)
          DA(ING.AINGINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIPDB)
          DA(ING.AINGIPDB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIPNL)
          DA(ING.AINGIPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIREX)
          DA(ING.AINGIREX)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGISKL)
          DA(ING.AINGISKL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGITBL)
          DA(ING.AINGITBL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGMODC)
          DA(ING.AINGMODC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGMOD1)
          DA(ING.AINGMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGMOD2)
          DA(ING.AINGMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNMSG)
          DA(ING.AINGNMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNPNL)
          DA(ING.AINGNPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNPRF)
          DA(ING.AINGNPRF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNPRM)
          DA(ING.AINGNPRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNREX)
          DA(ING.AINGNREX)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGPWS1)
          DA(ING.AINGPWS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGSAMP)
          DA(ING.AINGSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGSRC)
          DA(ING.AINGSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOAIBIN)
          DA(IOA.AIOAIBIN)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOAJAVA)
          DA(IOA.AIOAJAVA)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOALMOD)
          DA(IOA.AIOALMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOAMMOD)
          DA(IOA.AIOAMMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOASAMP)
          DA(IOA.AIOASAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEEXEC)
          DA(IOE.AIOEEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHLIB)
          DA(IOE.AIOEHLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHSAM)
          DA(IOE.AIOEHSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHSHL)
          DA(IOE.AIOEHSHL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHSRC)
          DA(IOE.AIOEHSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOELMOD)
          DA(IOE.AIOELMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEMSGE)
          DA(IOE.AIOEMSGE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEPNLE)
          DA(IOE.AIOEPNLE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEPROC)
          DA(IOE.AIOEPROC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOESAMP)
          DA(IOE.AIOESAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFEXEC)
          DA(ISF.AISFEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFHELP)
          DA(ISF.AISFHELP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFJCL)
          DA(ISF.AISFJCL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFLINK)
          DA(ISF.AISFLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFLOAD)
          DA(ISF.AISFLOAD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFMLIB)
          DA(ISF.AISFMLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFPLIB)
          DA(ISF.AISFPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFSLIB)
          DA(ISF.AISFSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFSRC)
          DA(ISF.AISFSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFTLIB)
          DA(ISF.AISFTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPALIB)
          DA(ISP.AISPALIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPCLIB)
          DA(ISP.AISPCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPEXEC)
          DA(ISP.AISPEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPGENU)
          DA(ISP.AISPGENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPGMLI)
          DA(ISP.AISPGMLI)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPGUI)
          DA(ISP.AISPGUI)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPHELP)
          DA(ISP.AISPHELP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPMACS)
          DA(ISP.AISPMACS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPMENU)
          DA(ISP.AISPMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPMOD1)
          DA(ISP.AISPMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPPENU)
          DA(ISP.AISPPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSAMP)
          DA(ISP.AISPSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSASC)
          DA(ISP.AISPSASC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSENU)
          DA(ISP.AISPSENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSLIB)
          DA(ISP.AISPSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPTENU)
          DA(ISP.AISPTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAJVSMP1)
          DA(JAVA.AAJVSMP1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAJVS390)
          DA(JAVA.AAJVS390)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABNJPNL1)
          DA(NETVIEW.ABNJPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABNJPNL2)
          DA(NETVIEW.ABNJPNL2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABNJSRC1)
          DA(NETVIEW.ABNJSRC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMCLST)
          DA(NETVIEW.ACNMCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMINST)
          DA(NETVIEW.ACNMINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMLINK)
          DA(NETVIEW.ACNMLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMMAC1)
          DA(NETVIEW.ACNMMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMPNL1)
          DA(NETVIEW.ACNMPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMSAMP)
          DA(NETVIEW.ACNMSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIMSG1)
          DA(NETVIEW.ADSIMSG1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIOPEN)
          DA(NETVIEW.ADSIOPEN)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIPARM)
          DA(NETVIEW.ADSIPARM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIPRF)
          DA(NETVIEW.ADSIPRF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADUIMSG1)
          DA(NETVIEW.ADUIMSG1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGCAS1)
          DA(NETVIEW.AEKGCAS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGLANG)
          DA(NETVIEW.AEKGLANG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGLUTB)
          DA(NETVIEW.AEKGLUTB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGMOD1)
          DA(NETVIEW.AEKGMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGPNL1)
          DA(NETVIEW.AEKGPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGSMP1)
          DA(NETVIEW.AEKGSMP1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLCLST)
          DA(NETVIEW.AEZLCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLINST)
          DA(NETVIEW.AEZLINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLLINK)
          DA(NETVIEW.AEZLLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLPNLU)
          DA(NETVIEW.AEZLPNLU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLSAMP)
          DA(NETVIEW.AEZLSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFLBDAT1)
          DA(NETVIEW.AFLBDAT1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANVULIB)
          DA(NETVIEW.ANVULIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AACBCNTL)
          DA(SYS1.AACBCNTL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADFMAC1)
          DA(SYS1.AADFMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADRLIB)
          DA(SYS1.AADRLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADRYLIB)
          DA(SYS1.AADRYLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPDAT2)
          DA(SYS1.AAPPDAT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPDAT4)
          DA(SYS1.AAPPDAT4)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPMOD1)
          DA(SYS1.AAPPMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPMOD2)
          DA(SYS1.AAPPMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPSAMP)
          DA(SYS1.AAPPSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTCLI0)
          DA(SYS1.ABDTCLI0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTHELP)
          DA(SYS1.ABDTHELP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTMAC)
          DA(SYS1.ABDTMAC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTMOD)
          DA(SYS1.ABDTMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTMSG)
          DA(SYS1.ABDTMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTPNL0)
          DA(SYS1.ABDTPNL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTSAMP)
          DA(SYS1.ABDTSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSCLI0)
          DA(SYS1.ABLSCLI0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSKEL0)
          DA(SYS1.ABLSKEL0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSMSG0)
          DA(SYS1.ABLSMSG0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSPNL0)
          DA(SYS1.ABLSPNL0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSTBL0)
          DA(SYS1.ABLSTBL0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABMFMOD0)
          DA(SYS1.ABMFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXEXEC)
          DA(SYS1.ABPXEXEC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXMENU)
          DA(SYS1.ABPXMENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXMOD1)
          DA(SYS1.ABPXMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXPENU)
          DA(SYS1.ABPXPENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXSPC)
          DA(SYS1.ABPXSPC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXTENU)
          DA(SYS1.ABPXTENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDCLST)
          DA(SYS1.ACBDCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDEHFS)
          DA(SYS1.ACBDEHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDHENU)
          DA(SYS1.ACBDHENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDMENU)
          DA(SYS1.ACBDMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDMOD1)
          DA(SYS1.ACBDMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDMOD2)
          DA(SYS1.ACBDMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDPENU)
          DA(SYS1.ACBDPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDTEMP)
          DA(SYS1.ACBDTEMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDTENU)
          DA(SYS1.ACBDTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBRDBRM)
          DA(SYS1.ACBRDBRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBRMOD0)
          DA(SYS1.ACBRMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDMMOD0)
          DA(SYS1.ACDMMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDRMODS)
          DA(SYS1.ACDRMODS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDRTABL)
          DA(SYS1.ACDRTABL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLMMOD0)
          DA(SYS1.ACLMMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACMDLIB)
          DA(SYS1.ACMDLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSSLIB)
          DA(SYS1.ACSSLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNHF)
          DA(SYS1.ACUNHF)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNIMG)
          DA(SYS1.ACUNIMG)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNJCL)
          DA(SYS1.ACUNJCL)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMAC)
          DA(SYS1.ACUNMAC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMENU)
          DA(SYS1.ACUNMENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMJPN)
          DA(SYS1.ACUNMJPN)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMOD)
          DA(SYS1.ACUNMOD)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNREXX)
          DA(SYS1.ACUNREXX)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNSAMP)
          DA(SYS1.ACUNSAMP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNTBL)
          DA(SYS1.ACUNTBL)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADBBLIB)
          DA(SYS1.ADBBLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFPMOD0)
          DA(SYS1.ADFPMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFQMLIB)
          DA(SYS1.ADFQMLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFQPLIB)
          DA(SYS1.ADFQPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFQPSRC)
          DA(SYS1.ADFQPSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTCLIB)
          DA(SYS1.ADGTCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTLLIB)
          DA(SYS1.ADGTLLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTMLIB)
          DA(SYS1.ADGTMLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTPLIB)
          DA(SYS1.ADGTPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTPSRC)
          DA(SYS1.ADGTPSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTSLIB)
          DA(SYS1.ADGTSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTTLIB)
          DA(SYS1.ADGTTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTTSRC)
          DA(SYS1.ADGTTSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADMSSVM)
          DA(SYS1.ADMSSVM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGEXE1)
          DA(SYS1.AEDGEXE1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGMENU)
          DA(SYS1.AEDGMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGMOD1)
          DA(SYS1.AEDGMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGPENU)
          DA(SYS1.AEDGPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGPSRC)
          DA(SYS1.AEDGPSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGSRC1)
          DA(SYS1.AEDGSRC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBCLS)
          DA(SYS1.AERBCLS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBMAC1)
          DA(SYS1.AERBMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBMENU)
          DA(SYS1.AERBMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBMOD1)
          DA(SYS1.AERBMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBPENU)
          DA(SYS1.AERBPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBPWSV)
          DA(SYS1.AERBPWSV)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBT)
          DA(SYS1.AERBT)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBTENU)
          DA(SYS1.AERBTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMDATA)
          DA(SYS1.AFOMDATA)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMHDRS)
          DA(SYS1.AFOMHDRS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMHFS)
          DA(SYS1.AFOMHFS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMMOD1)
          DA(SYS1.AFOMMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMOBJ)
          DA(SYS1.AFOMOBJ)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGDEMOD0)
          DA(SYS1.AGDEMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGENLIB)
          DA(SYS1.AGENLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGFTAJL1)
          DA(SYS1.AGFTAJL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGFTAMD1)
          DA(SYS1.AGFTAMD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGFUMOD1)
          DA(SYS1.AGFUMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASMAC)
          DA(SYS1.AHASMAC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASMENU)
          DA(SYS1.AHASMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASMOD)
          DA(SYS1.AHASMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASPARM)
          DA(SYS1.AHASPARM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASPNL0)
          DA(SYS1.AHASPNL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASSAMP)
          DA(SYS1.AHASSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASSRC)
          DA(SYS1.AHASSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHELP)
          DA(SYS1.AHELP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHELPENP)
          DA(SYS1.AHELPENP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICECLIB)
          DA(SYS1.AICECLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICELIB)
          DA(SYS1.AICELIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICEMENU)
          DA(SYS1.AICEMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICEPENU)
          DA(SYS1.AICEPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICESAMP)
          DA(SYS1.AICESAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICESLIB)
          DA(SYS1.AICESLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICESRCE)
          DA(SYS1.AICESRCE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICETLIB)
          DA(SYS1.AICETLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICEUSER)
          DA(SYS1.AICEUSER)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQAB)
          DA(SYS1.AICQAB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQILIB)
          DA(SYS1.AICQILIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC1)
          DA(SYS1.AICQMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC2)
          DA(SYS1.AICQMAC2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC3)
          DA(SYS1.AICQMAC3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC4)
          DA(SYS1.AICQMAC4)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC5)
          DA(SYS1.AICQMAC5)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIEAHDR)
          DA(SYS1.AIEAHDR)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIEWMOD0)
          DA(SYS1.AIEWMOD0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIFALIB)
          DA(SYS1.AIFALIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIGDVBS1)
          DA(SYS1.AIGDVBS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIKYHFS)
          DA(SYS1.AIKYHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMAGE)
          DA(SYS1.AIMAGE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMFMOD0)
          DA(SYS1.AIMFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINDLMD)
          DA(SYS1.AINDLMD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTASGD)
          DA(SYS1.AISTASGD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTASN1)
          DA(SYS1.AISTASN1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTCMIP)
          DA(SYS1.AISTCMIP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTDAT1)
          DA(SYS1.AISTDAT1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTDAT2)
          DA(SYS1.AISTDAT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTGDMO)
          DA(SYS1.AISTGDMO)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTMAC1)
          DA(SYS1.AISTMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AITYHFS)
          DA(SYS1.AITYHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ALINKLIB)
          DA(SYS1.ALINKLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ALPALIB)
          DA(SYS1.ALPALIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMACLIB)
          DA(SYS1.AMACLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMIGLIB)
          DA(SYS1.AMIGLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMODGEN)
          DA(SYS1.AMODGEN)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMSGENP)
          DA(SYS1.AMSGENP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMSGENU)
          DA(SYS1.AMSGENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSLIB)
          DA(SYS1.ANFSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSMAC)
          DA(SYS1.ANFSMAC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSSAMP)
          DA(SYS1.ANFSSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSTARB)
          DA(SYS1.ANFSTARB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANUCLEUS)
          DA(SYS1.ANUCLEUS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSACB)
          DA(SYS1.AOSACB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSA0)
          DA(SYS1.AOSA0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSA1)
          DA(SYS1.AOSA1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSBN)
          DA(SYS1.AOSBN)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSB0)
          DA(SYS1.AOSB0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSB3)
          DA(SYS1.AOSB3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSCA)
          DA(SYS1.AOSCA)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSCD)
          DA(SYS1.AOSCD)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSCE)
          DA(SYS1.AOSCE)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSC2)
          DA(SYS1.AOSC2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSC5)
          DA(SYS1.AOSC5)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSC6)
          DA(SYS1.AOSC6)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSD0)
          DA(SYS1.AOSD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSD7)
          DA(SYS1.AOSD7)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSD8)
          DA(SYS1.AOSD8)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSG0)
          DA(SYS1.AOSG0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSJSC)
          DA(SYS1.AOSJSC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOST3)
          DA(SYS1.AOST3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOST4)
          DA(SYS1.AOST4)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSU0)
          DA(SYS1.AOSU0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSXCF)
          DA(SYS1.AOSXCF)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS00)
          DA(SYS1.AOS00)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS04)
          DA(SYS1.AOS04)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS05)
          DA(SYS1.AOS05)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS06)
          DA(SYS1.AOS06)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS11)
          DA(SYS1.AOS11)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS12)
          DA(SYS1.AOS12)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS24)
          DA(SYS1.AOS24)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS26)
          DA(SYS1.AOS26)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS28)
          DA(SYS1.AOS28)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS32)
          DA(SYS1.AOS32)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ASAMPLIB)
          DA(SYS1.ASAMPLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ASSFMOD0)
          DA(SYS1.ASSFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ATSOMAC)
          DA(SYS1.ATSOMAC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AUADS)
          DA(SYS1.AUADS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CIPLIB)
          DA(SYS1.CIPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFCLST)
          DA(SYS1.HHRFCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFMSG)
          DA(SYS1.HHRFMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFPANL)
          DA(SYS1.HHRFPANL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFSKEL)
          DA(SYS1.HHRFSKEL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(APARMLIB)
          DA(SYS1.IBM.APARMLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(APROCLIB)
          DA(SYS1.IBM.APROCLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZADBR1)
          DA(TCPIP.AEZADBR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMAC1)
          DA(TCPIP.AEZAMAC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMAC2)
          DA(TCPIP.AEZAMAC2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMAC3)
          DA(TCPIP.AEZAMAC3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMODS)
          DA(TCPIP.AEZAMODS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT1)
          DA(TCPIP.AEZARNT1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT2)
          DA(TCPIP.AEZARNT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT3)
          DA(TCPIP.AEZARNT3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT4)
          DA(TCPIP.AEZARNT4)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAROE1)
          DA(TCPIP.AEZAROE1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAROE2)
          DA(TCPIP.AEZAROE2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAROE3)
          DA(TCPIP.AEZAROE3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZASMP1)
          DA(TCPIP.AEZASMP1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLTD)
          DA(TCPIP.AEZAXLTD)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLTK)
          DA(TCPIP.AEZAXLTK)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLT1)
          DA(TCPIP.AEZAXLT1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLT2)
          DA(TCPIP.AEZAXLT2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLT3)
          DA(TCPIP.AEZAXLT3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
      REP DDDEF(AAOPEXEC)
          DA(AOP.AAOPEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPHFS)
          DA(AOP.AAOPHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPMENU)
          DA(AOP.AAOPMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPMOD1)
          DA(AOP.AAOPMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAOPPENU)
          DA(AOP.AAOPPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAOPEXEC)
          DA(AOP.SAOPEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAOPMENU)
          DA(AOP.SAOPMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAOPPENU)
          DA(AOP.SAOPPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMAC1)
          DA(ASM.AASMMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMAC2)
          DA(ASM.AASMMAC2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMOD1)
          DA(ASM.AASMMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMMOD2)
          DA(ASM.AASMMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMPUT2)
          DA(ASM.AASMPUT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMSAM1)
          DA(ASM.AASMSAM1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASMSAM2)
          DA(ASM.AASMSAM2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMMAC1)
          DA(ASM.SASMMAC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMMAC2)
          DA(ASM.SASMMAC2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMMOD1)
          DA(ASM.SASMMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMMOD2)
          DA(ASM.SASMMOD2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMPUT2)
          DA(ASM.SASMPUT2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMSAM1)
          DA(ASM.SASMSAM1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASMSAM2)
          DA(ASM.SASMSAM2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUACF)
          DA(ASU.AASUACF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUCIDL)
          DA(ASU.AASUCIDL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUEXEC)
          DA(ASU.AASUEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHDR)
          DA(ASU.AASUHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHHDR)
          DA(ASU.AASUHHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHLIB)
          DA(ASU.AASUHLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUHSAM)
          DA(ASU.AASUHSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUIDL)
          DA(ASU.AASUIDL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASULINK)
          DA(ASU.AASULINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUMENU)
          DA(ASU.AASUMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUPENU)
          DA(ASU.AASUPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUSAMP)
          DA(ASU.AASUSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUSTUB)
          DA(ASU.AASUSTUB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AASUTLIB)
          DA(ASU.AASUTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUACF)
          DA(ASU.SASUACF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUCIDL)
          DA(ASU.SASUCIDL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUEXEC)
          DA(ASU.SASUEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUHDR)
          DA(ASU.SASUHDR)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUIDL)
          DA(ASU.SASUIDL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUMENU)
          DA(ASU.SASUMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUPENU)
          DA(ASU.SASUPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUSAMP)
          DA(ASU.SASUSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUSTUB)
          DA(ASU.SASUSTUB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SASUTLIB)
          DA(ASU.SASUTLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPAHFS)
          DA(BPA.ABPAHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBCCMP)
          DA(CBC.ACBCCMP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBCSR1)
          DA(CBC.ACBCSR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACCNCMP)
          DA(CBC.ACCNCMP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACCNSR1)
          DA(CBC.ACCNSR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBDLL)
          DA(CBC.ACLBDLL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBDLL2)
          DA(CBC.ACLBDLL2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBHFS1)
          DA(CBC.ACLBHFS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBOBJ)
          DA(CBC.ACLBOBJ)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBOBJ2)
          DA(CBC.ACLBOBJ2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR1)
          DA(CBC.ACLBSR1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR2)
          DA(CBC.ACLBSR2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR3)
          DA(CBC.ACLBSR3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLBSR4)
          DA(CBC.ACLBSR4)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLDHFS1)
          DA(CBC.ACLDHFS1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLDSR1)
          DA(CBC.ACLDSR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACTVMOD)
          DA(CBC.ACTVMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACTVSRC)
          DA(CBC.ACTVSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCCMP)
          DA(CBC.SCBCCMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCDOC)
          DA(CBC.SCBCDOC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCIMG)
          DA(CBC.SCBCIMG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCJCL)
          DA(CBC.SCBCJCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCPNL)
          DA(CBC.SCBCPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCPRC)
          DA(CBC.SCBCPRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCSAM)
          DA(CBC.SCBCSAM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCSKL)
          DA(CBC.SCBCSKL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBCUTL)
          DA(CBC.SCBCUTL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNCMP)
          DA(CBC.SCCNCMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNDOC)
          DA(CBC.SCCNDOC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNIMG)
          DA(CBC.SCCNIMG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNJCL)
          DA(CBC.SCCNJCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNPNL)
          DA(CBC.SCCNPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNPRC)
          DA(CBC.SCCNPRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNSAM)
          DA(CBC.SCCNSAM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNSKL)
          DA(CBC.SCCNSKL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCCNUTL)
          DA(CBC.SCCNUTL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBCPP)
          DA(CBC.SCLBCPP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBCPP2)
          DA(CBC.SCLBCPP2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBDLL)
          DA(CBC.SCLBDLL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBDLL2)
          DA(CBC.SCLBDLL2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBHC)
          DA(CBC.SCLBH.C)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBHH)
          DA(CBC.SCLBH.H)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBHPP)
          DA(CBC.SCLBH.HPP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBHI)
          DA(CBC.SCLBH.INL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBJCL)
          DA(CBC.SCLBJCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLBSID)
          DA(CBC.SCLBSID)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCLDJCL)
          DA(CBC.SCLDJCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCTVJCL)
          DA(CBC.SCTVJCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCTVMOD)
          DA(CBC.SCTVMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDSHFS)
          DA(CDS.ACDSHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDSLINK)
          DA(CDS.ACDSLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDSSAMP)
          DA(CDS.ACDSSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCDSSAMP)
          DA(CDS.SCDSSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAFHMOD1)
          DA(CEE.AAFHMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAFHSRC1)
          DA(CEE.AAFHSRC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEEMOD1)
          DA(CEE.ACEEMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEEMOD2)
          DA(CEE.ACEEMOD2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEESRC1)
          DA(CEE.ACEESRC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEESRC2)
          DA(CEE.ACEESRC2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACEESRC3)
          DA(CEE.ACEESRC3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCCPP1)
          DA(CEE.AEDCCPP1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCHFS)
          DA(CEE.AEDCHFS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCMOD1)
          DA(CEE.AEDCMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCMOD2)
          DA(CEE.AEDCMOD2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCMSEP)
          DA(CEE.AEDCMSEP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCOBJ1)
          DA(CEE.AEDCOBJ1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCSRC6)
          DA(CEE.AEDCSRC6)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDCSRC7)
          DA(CEE.AEDCSRC7)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIBMMOD3)
          DA(CEE.AIBMMOD3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIBMSRC3)
          DA(CEE.AIBMSRC3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIGZMOD1)
          DA(CEE.AIGZMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIGZSRC1)
          DA(CEE.AIGZSRC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAFHFORT)
          DA(CEE.SAFHFORT)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEBIND)
          DA(CEE.SCEEBIND)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEBND2)
          DA(CEE.SCEEBND2)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEECICS)
          DA(CEE.SCEECICS)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEECLST)
          DA(CEE.SCEECLST)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEECMAP)
          DA(CEE.SCEECMAP)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEECPP)
          DA(CEE.SCEECPP)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEGXLT)
          DA(CEE.SCEEGXLT)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEH)
          DA(CEE.SCEEH)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEHARP)
          DA(CEE.SCEEH.ARPA.H)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEHH)
          DA(CEE.SCEEH.H)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEHNET)
          DA(CEE.SCEEH.NET.H)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEHNEI)
          DA(CEE.SCEEH.NETINET.H)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEHSYS)
          DA(CEE.SCEEH.SYS.H)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEHT)
          DA(CEE.SCEEH.T)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEELIB)
          DA(CEE.SCEELIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(PLIBASE)
          DA(CEE.SCEELKED)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEELKED)
          DA(CEE.SCEELKED)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEDCBASE)
          DA(CEE.SCEELKED)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIBMBASE)
          DA(CEE.SCEELKED)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIBMLINK)
          DA(CEE.SCEELKED)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEELKEX)
          DA(CEE.SCEELKEX)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEELOCL)
          DA(CEE.SCEELOCL)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEELOCX)
          DA(CEE.SCEELOCX)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEELPA)
          DA(CEE.SCEELPA)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEMAC)
          DA(CEE.SCEEMAC)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEMSGP)
          DA(CEE.SCEEMSGP)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEOBJ)
          DA(CEE.SCEEOBJ)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEPROC)
          DA(CEE.SCEEPROC)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEERTLS)
          DA(CEE.SCEERTLS)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEERUN)
          DA(CEE.SCEERUN)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEERUN2)
          DA(CEE.SCEERUN2)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEESAMP)
          DA(CEE.SCEESAMP)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEESPC)
          DA(CEE.SCEESPC)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEESPCO)
          DA(CEE.SCEESPCO)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEUMAP)
          DA(CEE.SCEEUMAP)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCEEUTBL)
          DA(CEE.SCEEUTBL)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIBMCALL)
          DA(CEE.SIBMCALL)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIBMCAL2)
          DA(CEE.SIBMCAL2)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIBMMATH)
          DA(CEE.SIBMMATH)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIBMTASK)
          DA(CEE.SIBMTASK)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACIMHFS)
          DA(CIM.ACIMHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACIMMOD1)
          DA(CIM.ACIMMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACIMPLUG)
          DA(CIM.ACIMPLUG)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCIMXML)
          DA(CIM.SCIMXML)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACMXDBRM)
          DA(CMX.ACMXDBRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACMXHFS)
          DA(CMX.ACMXHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCMXDBRM)
          DA(CMX.SCMXDBRM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFCLI0)
          DA(CSF.ACSFCLI0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFHDRS)
          DA(CSF.ACSFHDRS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFMOD0)
          DA(CSF.ACSFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFMOD1)
          DA(CSF.ACSFMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFMSG0)
          DA(CSF.ACSFMSG0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFOBJ)
          DA(CSF.ACSFOBJ)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFPNL0)
          DA(CSF.ACSFPNL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFSKL0)
          DA(CSF.ACSFSKL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSFTLIB)
          DA(CSF.ACSFTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFCLI0)
          DA(CSF.SCSFCLI0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFHDRS)
          DA(CSF.SCSFHDRS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFMOD0)
          DA(CSF.SCSFMOD0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFMOD1)
          DA(CSF.SCSFMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFMSG0)
          DA(CSF.SCSFMSG0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFOBJ)
          DA(CSF.SCSFOBJ)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFPNL0)
          DA(CSF.SCSFPNL0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFSKL0)
          DA(CSF.SCSFSKL0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCSFTLIB)
          DA(CSF.SCSFTLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNEXP)
          DA(ECN.AECNEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHETC)
          DA(ECN.AECNHETC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHEXP)
          DA(ECN.AECNHEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHINC)
          DA(ECN.AECNHINC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNHLBR)
          DA(ECN.AECNHLBR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AECNLINK)
          DA(ECN.AECNLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SECNEXP)
          DA(ECN.SECNEXP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHBOK1)
          DA(EOX.AEPHBOK1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHCLB1)
          DA(EOX.AEPHCLB1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHDAT1)
          DA(EOX.AEPHDAT1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHLOD1)
          DA(EOX.AEPHLOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHMSG1)
          DA(EOX.AEPHMSG1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHPNL1)
          DA(EOX.AEPHPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHSAM1)
          DA(EOX.AEPHSAM1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHTBL1)
          DA(EOX.AEPHTBL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHBOK1)
          DA(EOX.SEPHBOK1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHCLB1)
          DA(EOX.SEPHCLB1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHDAT1)
          DA(EOX.SEPHDAT1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHLOD1)
          DA(EOX.SEPHLOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHMSG1)
          DA(EOX.SEPHMSG1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHPNL1)
          DA(EOX.SEPHPNL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHSAM1)
          DA(EOX.SEPHSAM1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHTBL1)
          DA(EOX.SEPHTBL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOXFONT)
          DA(EOY.AEOXFONT)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOXIENU)
          DA(EOY.AEOXIENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOXOENU)
          DA(EOY.AEOXOENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX1ENU)
          DA(EOY.AEOX1ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX2ENU)
          DA(EOY.AEOX2ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX3ENU)
          DA(EOY.AEOX3ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOX4ENU)
          DA(EOY.AEOX4ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYAENU)
          DA(EOY.AEOYAENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYBENU)
          DA(EOY.AEOYBENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYCLIB)
          DA(EOY.AEOYCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYGENU)
          DA(EOY.AEOYGENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYIENU)
          DA(EOY.AEOYIENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYIPRF)
          DA(EOY.AEOYIPRF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYLENU)
          DA(EOY.AEOYLENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYLEXS)
          DA(EOY.AEOYLEXS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYLOAD)
          DA(EOY.AEOYLOAD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYMC30)
          DA(EOY.AEOYMC30)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYMC40)
          DA(EOY.AEOYMC40)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYMENU)
          DA(EOY.AEOYMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYOENU)
          DA(EOY.AEOYOENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYPENU)
          DA(EOY.AEOYPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYPROC)
          DA(EOY.AEOYPROC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYSAMP)
          DA(EOY.AEOYSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYSENU)
          DA(EOY.AEOYSENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYTENU)
          DA(EOY.AEOYTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOYXENU)
          DA(EOY.AEOYXENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOY1ENU)
          DA(EOY.AEOY1ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOY2ENU)
          DA(EOY.AEOY2ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEOY4ENU)
          DA(EOY.AEOY4ENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOXFONT)
          DA(EOY.SEOXFONT)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOXIENU)
          DA(EOY.SEOXIENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOXOENU)
          DA(EOY.SEOXOENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOX1ENU)
          DA(EOY.SEOX1ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOX2ENU)
          DA(EOY.SEOX2ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOX3ENU)
          DA(EOY.SEOX3ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOX4ENU)
          DA(EOY.SEOX4ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYAENU)
          DA(EOY.SEOYAENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYBENU)
          DA(EOY.SEOYBENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYCLIB)
          DA(EOY.SEOYCLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYGENU)
          DA(EOY.SEOYGENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYIENU)
          DA(EOY.SEOYIENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYIPRF)
          DA(EOY.SEOYIPRF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYLENU)
          DA(EOY.SEOYLENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYLEXS)
          DA(EOY.SEOYLEXS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYLOAD)
          DA(EOY.SEOYLOAD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYLPA)
          DA(EOY.SEOYLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYMC30)
          DA(EOY.SEOYMC30)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYMC40)
          DA(EOY.SEOYMC40)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYMENU)
          DA(EOY.SEOYMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYOENU)
          DA(EOY.SEOYOENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYPENU)
          DA(EOY.SEOYPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYPROC)
          DA(EOY.SEOYPROC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYSAMP)
          DA(EOY.SEOYSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYSENU)
          DA(EOY.SEOYSENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYTENU)
          DA(EOY.SEOYTENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOYXENU)
          DA(EOY.SEOYXENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOY1ENU)
          DA(EOY.SEOY1ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOY2ENU)
          DA(EOY.SEOY2ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEOY4ENU)
          DA(EOY.SEOY4ENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHBOOK)
          DA(EPH.AEPHBOOK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHCLIB)
          DA(EPH.AEPHCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHGIF)
          DA(EPH.AEPHGIF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHLOAD)
          DA(EPH.AEPHLOAD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPHSAMP)
          DA(EPH.AEPHSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHCLIB)
          DA(EPH.SEPHCLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHSAMP)
          DA(EPH.SEPHSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPHTAB)
          DA(EPH.SEPHTAB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEQAMOD2)
          DA(EQAW.AEQAMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEQASRC2)
          DA(EQAW.AEQASRC2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEQAAUTH)
          DA(EQAW.SEQAAUTH)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEQADUM)
          DA(EQAW.SEQADUM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEQAMOD)
          DA(EQAW.SEQAMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEQASAMP)
          DA(EQAW.SEQASAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVACF)
          DA(EUV.AEUVACF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVDBRM)
          DA(EUV.AEUVDBRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVEXEC)
          DA(EUV.AEUVEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVEXP)
          DA(EUV.AEUVEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHDCP)
          DA(EUV.AEUVHDCP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHDR)
          DA(EUV.AEUVHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHDRK)
          DA(EUV.AEUVHDRK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHETC)
          DA(EUV.AEUVHETC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHINC)
          DA(EUV.AEUVHINC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHLBR)
          DA(EUV.AEUVHLBR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHTCL)
          DA(EUV.AEUVHTCL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVHXMP)
          DA(EUV.AEUVHXMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVIDL)
          DA(EUV.AEUVIDL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLIB)
          DA(EUV.AEUVLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLIBK)
          DA(EUV.AEUVLIBK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLIBS)
          DA(EUV.AEUVLIBS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVLINK)
          DA(EUV.AEUVLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVMSG)
          DA(EUV.AEUVMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVPNL)
          DA(EUV.AEUVPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVPRC)
          DA(EUV.AEUVPRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVACF)
          DA(EUV.SEUVACF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVDBRM)
          DA(EUV.SEUVDBRM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVEXEC)
          DA(EUV.SEUVEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVEXP)
          DA(EUV.SEUVEXP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVHDR)
          DA(EUV.SEUVHDR)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVHDRK)
          DA(EUV.SEUVHDRK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVIDL)
          DA(EUV.SEUVIDL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVLIB)
          DA(EUV.SEUVLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVLIBK)
          DA(EUV.SEUVLIBK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVLIBS)
          DA(EUV.SEUVLIBS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVMSG)
          DA(EUV.SEUVMSG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVPNL)
          DA(EUV.SEUVPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVPRC)
          DA(EUV.SEUVPRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFEXC)
          DA(EUVF.AEUVFEXC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFEXP)
          DA(EUVF.AEUVFEXP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFHDR)
          DA(EUVF.AEUVFHDR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFHFS)
          DA(EUVF.AEUVFHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFLIB)
          DA(EUVF.AEUVFLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFLNK)
          DA(EUVF.AEUVFLNK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEUVFSAM)
          DA(EUVF.AEUVFSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFEXC)
          DA(EUVF.SEUVFEXC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFEXP)
          DA(EUVF.SEUVFEXP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFHDR)
          DA(EUVF.SEUVFHDR)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFLIB)
          DA(EUVF.SEUVFLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFLNK)
          DA(EUVF.SEUVFLNK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFLPA)
          DA(EUVF.SEUVFLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEUVFSAM)
          DA(EUVF.SEUVFSAM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPWBENU)
          DA(FFST.V120ESA.AEPWBENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPWMOD1)
          DA(FFST.V120ESA.AEPWMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEPWSRC1)
          DA(FFST.V120ESA.AEPWSRC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWBENU)
          DA(FFST.V120ESA.SEPWBENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWCENU)
          DA(FFST.V120ESA.SEPWCENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWMAC1)
          DA(FFST.V120ESA.SEPWMAC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWMOD1)
          DA(FFST.V120ESA.SEPWMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWMOD2)
          DA(FFST.V120ESA.SEPWMOD2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWMOD3)
          DA(FFST.V120ESA.SEPWMOD3)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWMOD4)
          DA(FFST.V120ESA.SEPWMOD4)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWPENU)
          DA(FFST.V120ESA.SEPWPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWSRC1)
          DA(FFST.V120ESA.SEPWSRC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEPWSRC2)
          DA(FFST.V120ESA.SEPWSRC2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMCDA)
          DA(GDDM.AADMCDA)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMCFO)
          DA(GDDM.AADMCFO)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMDAT)
          DA(GDDM.AADMDAT)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMGDF)
          DA(GDDM.AADMGDF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMIMG)
          DA(GDDM.AADMIMG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMMAP)
          DA(GDDM.AADMMAP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMMOD)
          DA(GDDM.AADMMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMMSG)
          DA(GDDM.AADMMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMOPS)
          DA(GDDM.AADMOPS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMPCF)
          DA(GDDM.AADMPCF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMPNL)
          DA(GDDM.AADMPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMSAM)
          DA(GDDM.AADMSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADMSYM)
          DA(GDDM.AADMSYM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMCDA)
          DA(GDDM.SADMCDA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMCFO)
          DA(GDDM.SADMCFO)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMDAT)
          DA(GDDM.SADMDAT)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMGDF)
          DA(GDDM.SADMGDF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMIMG)
          DA(GDDM.SADMIMG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMMAP)
          DA(GDDM.SADMMAP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMMOD)
          DA(GDDM.SADMMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMMSG)
          DA(GDDM.SADMMSG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMOPS)
          DA(GDDM.SADMOPS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMPCF)
          DA(GDDM.SADMPCF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMPNL)
          DA(GDDM.SADMPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMSAM)
          DA(GDDM.SADMSAM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADMSYM)
          DA(GDDM.SADMSYM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMCLS0)
          DA(GIM.AGIMCLS0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMMENU)
          DA(GIM.AGIMMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMPENU)
          DA(GIM.AGIMPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMSENU)
          DA(GIM.AGIMSENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGIMTENU)
          DA(GIM.AGIMTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGIMCLS0)
          DA(GIM.SGIMCLS0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGIMLMD0)
          DA(GIM.SGIMLMD0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGIMMENU)
          DA(GIM.SGIMMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGIMPENU)
          DA(GIM.SGIMPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGIMSENU)
          DA(GIM.SGIMSENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGIMTENU)
          DA(GIM.SGIMTENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDEXEC)
          DA(GLD.AGLDEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDEXPC)
          DA(GLD.AGLDEXPC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDHCLI)
          DA(GLD.AGLDHCLI)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDHDRC)
          DA(GLD.AGLDHDRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDHFS)
          DA(GLD.AGLDHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDLNK)
          DA(GLD.AGLDLNK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGLDSAMP)
          DA(GLD.AGLDSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGLDEXEC)
          DA(GLD.SGLDEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGLDEXPC)
          DA(GLD.SGLDEXPC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGLDHDRC)
          DA(GLD.SGLDHDRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGLDLNK)
          DA(GLD.SGLDLNK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGLDSAMP)
          DA(GLD.SGLDSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGSKHFS)
          DA(GSK.AGSKHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGSKLINK)
          DA(GSK.AGSKLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGSKSAMP)
          DA(GSK.AGSKSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGSKLOAD)
          DA(GSK.SGSKLOAD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SGSKSAMP)
          DA(GSK.SGSKSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEEQINST)
          DA(HCM.AEEQINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEEQINST)
          DA(HCM.SEEQINST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHETC)
          DA(ICA.AICAHETC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHLBR)
          DA(ICA.AICAHLBR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHSAM)
          DA(ICA.AICAHSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAHSCR)
          DA(ICA.AICAHSCR)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICALINK)
          DA(ICA.AICALINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICAPROC)
          DA(ICA.AICAPROC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICASAMP)
          DA(ICA.AICASAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICALMOD)
          DA(ICA.SICALMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICAPROC)
          DA(ICA.SICAPROC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICASAMP)
          DA(ICA.SICASAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQABTXT)
          DA(ICQ.ICQABTXT)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQCCLIB)
          DA(ICQ.ICQCCLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQILIB)
          DA(ICQ.ICQILIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQMLIB)
          DA(ICQ.ICQMLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQPLIB)
          DA(ICQ.ICQPLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQSLIB)
          DA(ICQ.ICQSLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ICQTABLS)
          DA(ICQ.ICQTABLS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMOHFS1)
          DA(IMO.AIMOHFS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMOJCL1)
          DA(IMO.AIMOJCL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMOMOD1)
          DA(IMO.AIMOMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIMOJCL1)
          DA(IMO.SIMOJCL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIMOMOD1)
          DA(IMO.SIMOMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMWEMOD)
          DA(IMW.AIMWEMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMWHENU)
          DA(IMW.AIMWHENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMWSAM1)
          DA(IMW.AIMWSAM1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIMWSDCK)
          DA(IMW.SIMWSDCK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIMWTBL1)
          DA(IMW.SIMWTBL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEVIMOD6)
          DA(ING.AEVIMOD6)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEVIMOD7)
          DA(ING.AEVIMOD7)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEVIMOD8)
          DA(ING.AEVIMOD8)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIMOD)
          DA(ING.AINGIMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIMSG)
          DA(ING.AINGIMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGINST)
          DA(ING.AINGINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIPDB)
          DA(ING.AINGIPDB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIPNL)
          DA(ING.AINGIPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGIREX)
          DA(ING.AINGIREX)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGISKL)
          DA(ING.AINGISKL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGITBL)
          DA(ING.AINGITBL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGMODC)
          DA(ING.AINGMODC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGMOD1)
          DA(ING.AINGMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGMOD2)
          DA(ING.AINGMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNMSG)
          DA(ING.AINGNMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNPNL)
          DA(ING.AINGNPNL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNPRF)
          DA(ING.AINGNPRF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNPRM)
          DA(ING.AINGNPRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGNREX)
          DA(ING.AINGNREX)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGPWS1)
          DA(ING.AINGPWS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGSAMP)
          DA(ING.AINGSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINGSRC)
          DA(ING.AINGSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEVIMOD6)
          DA(ING.SEVIMOD6)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEVIMOD7)
          DA(ING.SEVIMOD7)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEVIMOD8)
          DA(ING.SEVIMOD8)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGIMOD)
          DA(ING.SINGIMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGIMSG)
          DA(ING.SINGIMSG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGINST)
          DA(ING.SINGINST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGIPDB)
          DA(ING.SINGIPDB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGIPNL)
          DA(ING.SINGIPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGIREX)
          DA(ING.SINGIREX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGISKL)
          DA(ING.SINGISKL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGITBL)
          DA(ING.SINGITBL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGMODC)
          DA(ING.SINGMODC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGMOD1)
          DA(ING.SINGMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGMOD2)
          DA(ING.SINGMOD2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGMOD3)
          DA(ING.SINGMOD3)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGNMSG)
          DA(ING.SINGNMSG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGNPNL)
          DA(ING.SINGNPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGNPRF)
          DA(ING.SINGNPRF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGNPRM)
          DA(ING.SINGNPRM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGNREX)
          DA(ING.SINGNREX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGPWS1)
          DA(ING.SINGPWS1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGSAMP)
          DA(ING.SINGSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SINGSRC)
          DA(ING.SINGSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOAIBIN)
          DA(IOA.AIOAIBIN)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOAJAVA)
          DA(IOA.AIOAJAVA)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOALMOD)
          DA(IOA.AIOALMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOAMMOD)
          DA(IOA.AIOAMMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOASAMP)
          DA(IOA.AIOASAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOAIBIN)
          DA(IOA.SIOAIBIN)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOAJAVA)
          DA(IOA.SIOAJAVA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOAMMOD)
          DA(IOA.SIOAMMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOASAMP)
          DA(IOA.SIOASAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEEXEC)
          DA(IOE.AIOEEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHLIB)
          DA(IOE.AIOEHLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHSAM)
          DA(IOE.AIOEHSAM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHSHL)
          DA(IOE.AIOEHSHL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEHSRC)
          DA(IOE.AIOEHSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOELMOD)
          DA(IOE.AIOELMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEMSGE)
          DA(IOE.AIOEMSGE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEPNLE)
          DA(IOE.AIOEPNLE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOEPROC)
          DA(IOE.AIOEPROC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIOESAMP)
          DA(IOE.AIOESAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOEEXEC)
          DA(IOE.SIOEEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOELMOD)
          DA(IOE.SIOELMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOEMSGE)
          DA(IOE.SIOEMSGE)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOEPNLE)
          DA(IOE.SIOEPNLE)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOEPROC)
          DA(IOE.SIOEPROC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOESAMP)
          DA(IOE.SIOESAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFEXEC)
          DA(ISF.AISFEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFHELP)
          DA(ISF.AISFHELP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFJCL)
          DA(ISF.AISFJCL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFLINK)
          DA(ISF.AISFLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFLOAD)
          DA(ISF.AISFLOAD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFMLIB)
          DA(ISF.AISFMLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFPLIB)
          DA(ISF.AISFPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFSLIB)
          DA(ISF.AISFSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFSRC)
          DA(ISF.AISFSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISFTLIB)
          DA(ISF.AISFTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFEXEC)
          DA(ISF.SISFEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFHELP)
          DA(ISF.SISFHELP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFJCL)
          DA(ISF.SISFJCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFLINK)
          DA(ISF.SISFLINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFLOAD)
          DA(ISF.SISFLOAD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFLPA)
          DA(ISF.SISFLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFMLIB)
          DA(ISF.SISFMLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFPLIB)
          DA(ISF.SISFPLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFSLIB)
          DA(ISF.SISFSLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFSRC)
          DA(ISF.SISFSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISFTLIB)
          DA(ISF.SISFTLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPALIB)
          DA(ISP.AISPALIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPCLIB)
          DA(ISP.AISPCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPEXEC)
          DA(ISP.AISPEXEC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPGENU)
          DA(ISP.AISPGENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPGMLI)
          DA(ISP.AISPGMLI)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPGUI)
          DA(ISP.AISPGUI)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPHELP)
          DA(ISP.AISPHELP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPMACS)
          DA(ISP.AISPMACS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPMENU)
          DA(ISP.AISPMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPMOD1)
          DA(ISP.AISPMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPPENU)
          DA(ISP.AISPPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSAMP)
          DA(ISP.AISPSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSASC)
          DA(ISP.AISPSASC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSENU)
          DA(ISP.AISPSENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPSLIB)
          DA(ISP.AISPSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISPTENU)
          DA(ISP.AISPTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPALIB)
          DA(ISP.SISPALIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPCLIB)
          DA(ISP.SISPCLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPEXEC)
          DA(ISP.SISPEXEC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPGENU)
          DA(ISP.SISPGENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPGMLI)
          DA(ISP.SISPGMLI)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPGUI)
          DA(ISP.SISPGUI)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPHELP)
          DA(ISP.SISPHELP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPLOAD)
          DA(ISP.SISPLOAD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPLPA)
          DA(ISP.SISPLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPMACS)
          DA(ISP.SISPMACS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPMENU)
          DA(ISP.SISPMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPPENU)
          DA(ISP.SISPPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPSAMP)
          DA(ISP.SISPSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPSASC)
          DA(ISP.SISPSASC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPSENU)
          DA(ISP.SISPSENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPSLIB)
          DA(ISP.SISPSLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISPTENU)
          DA(ISP.SISPTENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAJVSMP1)
          DA(JAVA.AAJVSMP1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAJVS390)
          DA(JAVA.AAJVS390)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAJVSMP1)
          DA(JAVA.SAJVSMP1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABNJPNL1)
          DA(NETVIEW.ABNJPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABNJPNL2)
          DA(NETVIEW.ABNJPNL2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABNJSRC1)
          DA(NETVIEW.ABNJSRC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMCLST)
          DA(NETVIEW.ACNMCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMINST)
          DA(NETVIEW.ACNMINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMLINK)
          DA(NETVIEW.ACNMLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMMAC1)
          DA(NETVIEW.ACNMMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMPNL1)
          DA(NETVIEW.ACNMPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACNMSAMP)
          DA(NETVIEW.ACNMSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIMSG1)
          DA(NETVIEW.ADSIMSG1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIOPEN)
          DA(NETVIEW.ADSIOPEN)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIPARM)
          DA(NETVIEW.ADSIPARM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADSIPRF)
          DA(NETVIEW.ADSIPRF)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADUIMSG1)
          DA(NETVIEW.ADUIMSG1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGCAS1)
          DA(NETVIEW.AEKGCAS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGLANG)
          DA(NETVIEW.AEKGLANG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGLUTB)
          DA(NETVIEW.AEKGLUTB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGMOD1)
          DA(NETVIEW.AEKGMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGPNL1)
          DA(NETVIEW.AEKGPNL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEKGSMP1)
          DA(NETVIEW.AEKGSMP1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLCLST)
          DA(NETVIEW.AEZLCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLINST)
          DA(NETVIEW.AEZLINST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLLINK)
          DA(NETVIEW.AEZLLINK)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLPNLU)
          DA(NETVIEW.AEZLPNLU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZLSAMP)
          DA(NETVIEW.AEZLSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFLBDAT1)
          DA(NETVIEW.AFLBDAT1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANVULIB)
          DA(NETVIEW.ANVULIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(BNJPNL1)
          DA(NETVIEW.BNJPNL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(BNJPNL2)
          DA(NETVIEW.BNJPNL2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(BNJSRC1)
          DA(NETVIEW.BNJSRC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CNMCLST)
          DA(NETVIEW.CNMCLST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CNMINST)
          DA(NETVIEW.CNMINST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CNMLINK)
          DA(NETVIEW.CNMLINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CNMPNL1)
          DA(NETVIEW.CNMPNL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CNMSAMP)
          DA(NETVIEW.CNMSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DSIPARM)
          DA(NETVIEW.DSIPARM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DSIPRF)
          DA(NETVIEW.DSIPRF)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(NVULIB)
          DA(NETVIEW.NVULIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCNMLNK1)
          DA(NETVIEW.SCNMLNK1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCNMLPA1)
          DA(NETVIEW.SCNMLPA1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCNMMAC1)
          DA(NETVIEW.SCNMMAC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDSIMSG1)
          DA(NETVIEW.SDSIMSG1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDSIOPEN)
          DA(NETVIEW.SDSIOPEN)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDUIMSG1)
          DA(NETVIEW.SDUIMSG1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGCAS1)
          DA(NETVIEW.SEKGCAS1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGLANG)
          DA(NETVIEW.SEKGLANG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGLNK1)
          DA(NETVIEW.SEKGLNK1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGLUTB)
          DA(NETVIEW.SEKGLUTB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGMOD1)
          DA(NETVIEW.SEKGMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGMOD2)
          DA(NETVIEW.SEKGMOD2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGPNL1)
          DA(NETVIEW.SEKGPNL1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEKGSMP1)
          DA(NETVIEW.SEKGSMP1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZLCLST)
          DA(NETVIEW.SEZLCLST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZLINST)
          DA(NETVIEW.SEZLINST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZLLINK)
          DA(NETVIEW.SEZLLINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZLPNLU)
          DA(NETVIEW.SEZLPNLU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZLSAMP)
          DA(NETVIEW.SEZLSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SFLBDAT1)
          DA(NETVIEW.SFLBDAT1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SMPLTS)
          DA(SMPE.MVST100.SMPLTS)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AACBCNTL)
          DA(SYS1.AACBCNTL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADFMAC1)
          DA(SYS1.AADFMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADRLIB)
          DA(SYS1.AADRLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AADRYLIB)
          DA(SYS1.AADRYLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPDAT2)
          DA(SYS1.AAPPDAT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPDAT4)
          DA(SYS1.AAPPDAT4)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPMOD1)
          DA(SYS1.AAPPMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPMOD2)
          DA(SYS1.AAPPMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AAPPSAMP)
          DA(SYS1.AAPPSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTCLI0)
          DA(SYS1.ABDTCLI0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTHELP)
          DA(SYS1.ABDTHELP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTMAC)
          DA(SYS1.ABDTMAC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTMOD)
          DA(SYS1.ABDTMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTMSG)
          DA(SYS1.ABDTMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTPNL0)
          DA(SYS1.ABDTPNL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABDTSAMP)
          DA(SYS1.ABDTSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSCLI0)
          DA(SYS1.ABLSCLI0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSKEL0)
          DA(SYS1.ABLSKEL0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSMSG0)
          DA(SYS1.ABLSMSG0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSPNL0)
          DA(SYS1.ABLSPNL0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABLSTBL0)
          DA(SYS1.ABLSTBL0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABMFMOD0)
          DA(SYS1.ABMFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXEXEC)
          DA(SYS1.ABPXEXEC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXMENU)
          DA(SYS1.ABPXMENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXMOD1)
          DA(SYS1.ABPXMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXPENU)
          DA(SYS1.ABPXPENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXSPC)
          DA(SYS1.ABPXSPC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ABPXTENU)
          DA(SYS1.ABPXTENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDCLST)
          DA(SYS1.ACBDCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDEHFS)
          DA(SYS1.ACBDEHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDHENU)
          DA(SYS1.ACBDHENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDMENU)
          DA(SYS1.ACBDMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDMOD1)
          DA(SYS1.ACBDMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDMOD2)
          DA(SYS1.ACBDMOD2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDPENU)
          DA(SYS1.ACBDPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDTEMP)
          DA(SYS1.ACBDTEMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBDTENU)
          DA(SYS1.ACBDTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBRDBRM)
          DA(SYS1.ACBRDBRM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACBRMOD0)
          DA(SYS1.ACBRMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDMMOD0)
          DA(SYS1.ACDMMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDRMODS)
          DA(SYS1.ACDRMODS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACDRTABL)
          DA(SYS1.ACDRTABL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACLMMOD0)
          DA(SYS1.ACLMMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACMDLIB)
          DA(SYS1.ACMDLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACSSLIB)
          DA(SYS1.ACSSLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNHF)
          DA(SYS1.ACUNHF)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNIMG)
          DA(SYS1.ACUNIMG)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNJCL)
          DA(SYS1.ACUNJCL)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMAC)
          DA(SYS1.ACUNMAC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMENU)
          DA(SYS1.ACUNMENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMJPN)
          DA(SYS1.ACUNMJPN)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNMOD)
          DA(SYS1.ACUNMOD)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNREXX)
          DA(SYS1.ACUNREXX)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNSAMP)
          DA(SYS1.ACUNSAMP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ACUNTBL)
          DA(SYS1.ACUNTBL)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADBBLIB)
          DA(SYS1.ADBBLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFMAC1)
          DA(SYS1.ADFMAC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFPMOD0)
          DA(SYS1.ADFPMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFQMLIB)
          DA(SYS1.ADFQMLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFQPLIB)
          DA(SYS1.ADFQPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADFQPSRC)
          DA(SYS1.ADFQPSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTCLIB)
          DA(SYS1.ADGTCLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTLLIB)
          DA(SYS1.ADGTLLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTMLIB)
          DA(SYS1.ADGTMLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTPLIB)
          DA(SYS1.ADGTPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTPSRC)
          DA(SYS1.ADGTPSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTSLIB)
          DA(SYS1.ADGTSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTTLIB)
          DA(SYS1.ADGTTLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADGTTSRC)
          DA(SYS1.ADGTTSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ADMSSVM)
          DA(SYS1.ADMSSVM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGEXE1)
          DA(SYS1.AEDGEXE1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGMENU)
          DA(SYS1.AEDGMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGMOD1)
          DA(SYS1.AEDGMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGPENU)
          DA(SYS1.AEDGPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGPSRC)
          DA(SYS1.AEDGPSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEDGSRC1)
          DA(SYS1.AEDGSRC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBCLS)
          DA(SYS1.AERBCLS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBMAC1)
          DA(SYS1.AERBMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBMENU)
          DA(SYS1.AERBMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBMOD1)
          DA(SYS1.AERBMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBPENU)
          DA(SYS1.AERBPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBPWSV)
          DA(SYS1.AERBPWSV)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBT)
          DA(SYS1.AERBT)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AERBTENU)
          DA(SYS1.AERBTENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMDATA)
          DA(SYS1.AFOMDATA)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMHDRS)
          DA(SYS1.AFOMHDRS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMHFS)
          DA(SYS1.AFOMHFS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMMOD1)
          DA(SYS1.AFOMMOD1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AFOMOBJ)
          DA(SYS1.AFOMOBJ)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGDEMOD0)
          DA(SYS1.AGDEMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGENLIB)
          DA(SYS1.AGENLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGFTAJL1)
          DA(SYS1.AGFTAJL1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGFTAMD1)
          DA(SYS1.AGFTAMD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AGFUMOD1)
          DA(SYS1.AGFUMOD1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASMAC)
          DA(SYS1.AHASMAC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASMENU)
          DA(SYS1.AHASMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASMOD)
          DA(SYS1.AHASMOD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASPARM)
          DA(SYS1.AHASPARM)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASPNL0)
          DA(SYS1.AHASPNL0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASSAMP)
          DA(SYS1.AHASSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHASSRC)
          DA(SYS1.AHASSRC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHELP)
          DA(SYS1.AHELP)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AHELPENP)
          DA(SYS1.AHELPENP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICECLIB)
          DA(SYS1.AICECLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICELIB)
          DA(SYS1.AICELIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICEMENU)
          DA(SYS1.AICEMENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICEPENU)
          DA(SYS1.AICEPENU)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICESAMP)
          DA(SYS1.AICESAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICESLIB)
          DA(SYS1.AICESLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICESRCE)
          DA(SYS1.AICESRCE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICETLIB)
          DA(SYS1.AICETLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICEUSER)
          DA(SYS1.AICEUSER)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQAB)
          DA(SYS1.AICQAB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQILIB)
          DA(SYS1.AICQILIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC1)
          DA(SYS1.AICQMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC2)
          DA(SYS1.AICQMAC2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC3)
          DA(SYS1.AICQMAC3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC4)
          DA(SYS1.AICQMAC4)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AICQMAC5)
          DA(SYS1.AICQMAC5)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIEAHDR)
          DA(SYS1.AIEAHDR)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIEWMOD0)
          DA(SYS1.AIEWMOD0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIFALIB)
          DA(SYS1.AIFALIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIGDVBS1)
          DA(SYS1.AIGDVBS1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIKYHFS)
          DA(SYS1.AIKYHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMAGE)
          DA(SYS1.AIMAGE)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AIMFMOD0)
          DA(SYS1.AIMFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AINDLMD)
          DA(SYS1.AINDLMD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTASGD)
          DA(SYS1.AISTASGD)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTASN1)
          DA(SYS1.AISTASN1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTCMIP)
          DA(SYS1.AISTCMIP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTDAT1)
          DA(SYS1.AISTDAT1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTDAT2)
          DA(SYS1.AISTDAT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTGDMO)
          DA(SYS1.AISTGDMO)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AISTMAC1)
          DA(SYS1.AISTMAC1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AITYHFS)
          DA(SYS1.AITYHFS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ALINKLIB)
          DA(SYS1.ALINKLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ALPALIB)
          DA(SYS1.ALPALIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMACLIB)
          DA(SYS1.AMACLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMIGLIB)
          DA(SYS1.AMIGLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMODGEN)
          DA(SYS1.AMODGEN)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMSGENP)
          DA(SYS1.AMSGENP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AMSGENU)
          DA(SYS1.AMSGENU)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSLIB)
          DA(SYS1.ANFSLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSMAC)
          DA(SYS1.ANFSMAC)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSSAMP)
          DA(SYS1.ANFSSAMP)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANFSTARB)
          DA(SYS1.ANFSTARB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ANUCLEUS)
          DA(SYS1.ANUCLEUS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSACB)
          DA(SYS1.AOSACB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSA0)
          DA(SYS1.AOSA0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSA1)
          DA(SYS1.AOSA1)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSBN)
          DA(SYS1.AOSBN)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSB0)
          DA(SYS1.AOSB0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSB3)
          DA(SYS1.AOSB3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSCA)
          DA(SYS1.AOSCA)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSCD)
          DA(SYS1.AOSCD)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSCE)
          DA(SYS1.AOSCE)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSC2)
          DA(SYS1.AOSC2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSC5)
          DA(SYS1.AOSC5)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSC6)
          DA(SYS1.AOSC6)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSD0)
          DA(SYS1.AOSD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSD7)
          DA(SYS1.AOSD7)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSD8)
          DA(SYS1.AOSD8)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSG0)
          DA(SYS1.AOSG0)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSJSC)
          DA(SYS1.AOSJSC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOST3)
          DA(SYS1.AOST3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOST4)
          DA(SYS1.AOST4)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSU0)
          DA(SYS1.AOSU0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOSXCF)
          DA(SYS1.AOSXCF)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS00)
          DA(SYS1.AOS00)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS04)
          DA(SYS1.AOS04)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS05)
          DA(SYS1.AOS05)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS06)
          DA(SYS1.AOS06)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS11)
          DA(SYS1.AOS11)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS12)
          DA(SYS1.AOS12)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS24)
          DA(SYS1.AOS24)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS26)
          DA(SYS1.AOS26)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS28)
          DA(SYS1.AOS28)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AOS32)
          DA(SYS1.AOS32)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ASAMPLIB)
          DA(SYS1.ASAMPLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ASSFMOD0)
          DA(SYS1.ASSFMOD0)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ATSOMAC)
          DA(SYS1.ATSOMAC)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AUADS)
          DA(SYS1.AUADS)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CBRDBRM)
          DA(SYS1.CBRDBRM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CIPLIB)
          DA(SYS1.CIPLIB)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CMDLIB)
          DA(SYS1.CMDLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(CSSLIB)
          DA(SYS1.CSSLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DBBLIB)
          DA(SYS1.DBBLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DFQLLIB)
          DA(SYS1.DFQLLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DFQMLIB)
          DA(SYS1.DFQMLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DFQPLIB)
          DA(SYS1.DFQPLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DGTCLIB)
          DA(SYS1.DGTCLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DGTLLIB)
          DA(SYS1.DGTLLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DGTMLIB)
          DA(SYS1.DGTMLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DGTPLIB)
          DA(SYS1.DGTPLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DGTSLIB)
          DA(SYS1.DGTSLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(DGTTLIB)
          DA(SYS1.DGTTLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HELP)
          DA(SYS1.HELP)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HELPENP)
          DA(SYS1.HELPENP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFCLST)
          DA(SYS1.HHRFCLST)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFMSG)
          DA(SYS1.HHRFMSG)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFPANL)
          DA(SYS1.HHRFPANL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HHRFSKEL)
          DA(SYS1.HHRFSKEL)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HRFCLST)
          DA(SYS1.HRFCLST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HRFMSG)
          DA(SYS1.HRFMSG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HRFPANL)
          DA(SYS1.HRFPANL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(HRFSKEL)
          DA(SYS1.HRFSKEL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(APARMLIB)
          DA(SYS1.IBM.APARMLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(APROCLIB)
          DA(SYS1.IBM.APROCLIB)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(PARMLIB)
          DA(SYS1.IBM.PARMLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(PROCLIB)
          DA(SYS1.IBM.PROCLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(IGDVBS1)
          DA(SYS1.IGDVBS1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(IMAGELIB)
          DA(SYS1.IMAGELIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(ISAMLPA)
          DA(SYS1.ISAMLPA)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(LINKLIB)
          DA(SYS1.LINKLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(LPALIB)
          DA(SYS1.LPALIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(MACLIB)
          DA(SYS1.MACLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(MIGLIB)
          DA(SYS1.MIGLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(MODGEN)
          DA(SYS1.MODGEN)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(MSGENP)
          DA(SYS1.MSGENP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(MSGENU)
          DA(SYS1.MSGENU)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(NFSLIB)
          DA(SYS1.NFSLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(NFSMAC)
          DA(SYS1.NFSMAC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(NFSSAMP)
          DA(SYS1.NFSSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(NFSTARB)
          DA(SYS1.NFSTARB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(NUCLEUS)
          DA(SYS1.NUCLEUS)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SACBCNTL)
          DA(SYS1.SACBCNTL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SADRYLIB)
          DA(SYS1.SADRYLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAMPLIB)
          DA(SYS1.SAMPLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAPPDAT2)
          DA(SYS1.SAPPDAT2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAPPDAT4)
          DA(SYS1.SAPPDAT4)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAPPMOD1)
          DA(SYS1.SAPPMOD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SAPPSAMP)
          DA(SYS1.SAPPSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTCLI0)
          DA(SYS1.SBDTCLI0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTCMD)
          DA(SYS1.SBDTCMD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTHELP)
          DA(SYS1.SBDTHELP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTLIB)
          DA(SYS1.SBDTLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTLINK)
          DA(SYS1.SBDTLINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTLPA)
          DA(SYS1.SBDTLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTMAC)
          DA(SYS1.SBDTMAC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTMSG)
          DA(SYS1.SBDTMSG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTPNL0)
          DA(SYS1.SBDTPNL0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBDTSAMP)
          DA(SYS1.SBDTSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBLSCLI0)
          DA(SYS1.SBLSCLI0)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBLSKEL0)
          DA(SYS1.SBLSKEL0)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBLSMSG0)
          DA(SYS1.SBLSMSG0)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBLSPNL0)
          DA(SYS1.SBLSPNL0)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBLSTBL0)
          DA(SYS1.SBLSTBL0)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBPXEXEC)
          DA(SYS1.SBPXEXEC)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBPXMENU)
          DA(SYS1.SBPXMENU)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBPXPENU)
          DA(SYS1.SBPXPENU)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SBPXTENU)
          DA(SYS1.SBPXTENU)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBDCLST)
          DA(SYS1.SCBDCLST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBDHENU)
          DA(SYS1.SCBDHENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBDMENU)
          DA(SYS1.SCBDMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBDPENU)
          DA(SYS1.SCBDPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBDTEMP)
          DA(SYS1.SCBDTEMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCBDTENU)
          DA(SYS1.SCBDTENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCDRTABL)
          DA(SYS1.SCDRTABL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNHF)
          DA(SYS1.SCUNHF)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNIMG)
          DA(SYS1.SCUNIMG)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNJCL)
          DA(SYS1.SCUNJCL)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNMENU)
          DA(SYS1.SCUNMENU)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNMJPN)
          DA(SYS1.SCUNMJPN)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNREXX)
          DA(SYS1.SCUNREXX)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SCUNTBL)
          DA(SYS1.SCUNTBL)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDFQPSRC)
          DA(SYS1.SDFQPSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDGTPSRC)
          DA(SYS1.SDGTPSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDGTTSRC)
          DA(SYS1.SDGTTSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDMSSVM)
          DA(SYS1.SDMSSVM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDMSSVMS)
          DA(SYS1.SDMSSVMS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SDWWDLPA)
          DA(SYS1.SDWWDLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEDGEXE1)
          DA(SYS1.SEDGEXE1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEDGMENU)
          DA(SYS1.SEDGMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEDGPENU)
          DA(SYS1.SEDGPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEDGPSRC)
          DA(SYS1.SEDGPSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBCLS)
          DA(SYS1.SERBCLS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBLINK)
          DA(SYS1.SERBLINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBLPA)
          DA(SYS1.SERBLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBMENU)
          DA(SYS1.SERBMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBPENU)
          DA(SYS1.SERBPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBPWSV)
          DA(SYS1.SERBPWSV)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBT)
          DA(SYS1.SERBT)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SERBTENU)
          DA(SYS1.SERBTENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SFOMDATA)
          DA(SYS1.SFOMDATA)
          VOLUME(C4USS1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SFOMHDRS)
          DA(SYS1.SFOMHDRS)
          VOLUME(C4USS1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SFOMOBJ)
          DA(SYS1.SFOMOBJ)
          VOLUME(C4USS1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASLINK)
          DA(SYS1.SHASLINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASMAC)
          DA(SYS1.SHASMAC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASMENU)
          DA(SYS1.SHASMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASMIG)
          DA(SYS1.SHASMIG)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASPARM)
          DA(SYS1.SHASPARM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASPNL0)
          DA(SYS1.SHASPNL0)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASSAMP)
          DA(SYS1.SHASSAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SHASSRC)
          DA(SYS1.SHASSRC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICECLIB)
          DA(SYS1.SICECLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICELINK)
          DA(SYS1.SICELINK)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICELPA)
          DA(SYS1.SICELPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICEMENU)
          DA(SYS1.SICEMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICEPENU)
          DA(SYS1.SICEPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICEPROC)
          DA(SYS1.SICEPROC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICESAMP)
          DA(SYS1.SICESAMP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICESLIB)
          DA(SYS1.SICESLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICESRCE)
          DA(SYS1.SICESRCE)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICETLIB)
          DA(SYS1.SICETLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SICEUSER)
          DA(SYS1.SICEUSER)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIEAHDR)
          DA(SYS1.SIEAHDR.H)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIFALIB)
          DA(SYS1.SIFALIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SIOALMOD)
          DA(SYS1.SIOALMOD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTASGD)
          DA(SYS1.SISTASGD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTASN1)
          DA(SYS1.SISTASN1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTCLIB)
          DA(SYS1.SISTCLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTCMIP)
          DA(SYS1.SISTCMIP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTDAT1)
          DA(SYS1.SISTDAT1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTDAT2)
          DA(SYS1.SISTDAT2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTGDMO)
          DA(SYS1.SISTGDMO)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SISTMAC1)
          DA(SYS1.SISTMAC1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SORTLIB)
          DA(SYS1.SORTLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SORTLPA)
          DA(SYS1.SORTLPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SVCLIB)
          DA(SYS1.SVCLIB)
          VOLUME(C4RES1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(UADS)
          DA(SYS1.UADS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(VTAMLIB)
          DA(SYS1.VTAMLIB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZADBR1)
          DA(TCPIP.AEZADBR1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMAC1)
          DA(TCPIP.AEZAMAC1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMAC2)
          DA(TCPIP.AEZAMAC2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMAC3)
          DA(TCPIP.AEZAMAC3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAMODS)
          DA(TCPIP.AEZAMODS)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT1)
          DA(TCPIP.AEZARNT1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT2)
          DA(TCPIP.AEZARNT2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT3)
          DA(TCPIP.AEZARNT3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZARNT4)
          DA(TCPIP.AEZARNT4)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAROE1)
          DA(TCPIP.AEZAROE1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAROE2)
          DA(TCPIP.AEZAROE2)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAROE3)
          DA(TCPIP.AEZAROE3)
          VOLUME(C4DLB2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZASMP1)
          DA(TCPIP.AEZASMP1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLTD)
          DA(TCPIP.AEZAXLTD)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLTK)
          DA(TCPIP.AEZAXLTK)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLT1)
          DA(TCPIP.AEZAXLT1)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLT2)
          DA(TCPIP.AEZAXLT2)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(AEZAXLT3)
          DA(TCPIP.AEZAXLT3)
          VOLUME(C4DLB1)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZACMAC)
          DA(TCPIP.SEZACMAC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZACMTX)
          DA(TCPIP.SEZACMTX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADBCX)
          DA(TCPIP.SEZADBCX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADBRM)
          DA(TCPIP.SEZADBRM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADEFS)
          DA(TCPIP.SEZADEFS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADPIL)
          DA(TCPIP.SEZADPIL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADSIL)
          DA(TCPIP.SEZADSIL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADSIM)
          DA(TCPIP.SEZADSIM)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZADSIP)
          DA(TCPIP.SEZADSIP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAINST)
          DA(TCPIP.SEZAINST)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZALIBN)
          DA(TCPIP.SEZALIBN)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZALNK2)
          DA(TCPIP.SEZALNK2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZALOAD)
          DA(TCPIP.SEZALOAD)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZALPA)
          DA(TCPIP.SEZALPA)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAMENU)
          DA(TCPIP.SEZAMENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZANCLS)
          DA(TCPIP.SEZANCLS)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZANMAC)
          DA(TCPIP.SEZANMAC)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZANPNL)
          DA(TCPIP.SEZANPNL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAOLDX)
          DA(TCPIP.SEZAOLDX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAPENU)
          DA(TCPIP.SEZAPENU)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZARNT1)
          DA(TCPIP.SEZARNT1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZARNT2)
          DA(TCPIP.SEZARNT2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZARNT3)
          DA(TCPIP.SEZARNT3)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZARNT4)
          DA(TCPIP.SEZARNT4)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAROE1)
          DA(TCPIP.SEZAROE1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAROE2)
          DA(TCPIP.SEZAROE2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAROE3)
          DA(TCPIP.SEZAROE3)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZARPCL)
          DA(TCPIP.SEZARPCL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZATCP)
          DA(TCPIP.SEZATCP)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZATCPX)
          DA(TCPIP.SEZATCPX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZATELX)
          DA(TCPIP.SEZATELX)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAXAWL)
          DA(TCPIP.SEZAXAWL)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAXLD1)
          DA(TCPIP.SEZAXLD1)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAXLD2)
          DA(TCPIP.SEZAXLD2)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAXMLB)
          DA(TCPIP.SEZAXMLB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAXTLB)
          DA(TCPIP.SEZAXTLB)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
      REP DDDEF(SEZAX11L)
          DA(TCPIP.SEZAX11L)
          VOLUME(C4RES2)
          UNIT(3390)
          WAITFORDSN
          SHR .
    ENDUCL .
  SET BDY(GLOBAL) .
    UCLIN .
      REP DDDEF(SMPLOG)
          DATASET(SMPE.SMPGLOG)
          VOLUME(C4CAT2)
          UNIT(3390)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(SMPE.SMPGLOGA)
          VOLUME(C4CAT2)
          UNIT(3390)
          MOD .
      REP DDDEF(SMPPTS)
          DATASET(SMPE.SMPPTS)
          VOLUME(C4CAT2)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPTLIB)
          DSPREFIX(SYS1.MVS)
          VOLUME(C4RES1)
          UNIT(SYSALLDA) .
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
      REP DDDEF(SMPMTS)
          DATASET(SMPE.MVST100.SMPMTS)
          VOLUME(C4RES1)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPSCDS)
          DATASET(SMPE.MVST100.SMPSCDS)
          VOLUME(C4CAT2)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPSTS)
          DATASET(SMPE.MVST100.SMPSTS)
          VOLUME(C4RES1)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPLOG)
          DATASET(SMPE.MVST100.SMPTLOG)
          VOLUME(C4CAT2)
          UNIT(3390)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(SMPE.MVST100.SMPTLOGA)
          VOLUME(C4CAT2)
          UNIT(3390)
          MOD .
      REP DDDEF(SMPPTS)
          DATASET(SMPE.SMPPTS)
          VOLUME(C4CAT2)
          UNIT(3390)
          SHR .
    ENDUCL .
  SET BDY(MVSD100) .
    UCLIN .
      REP DDDEF(SMPLOG)
          DATASET(SMPE.MVSD100.SMPDLOG)
          VOLUME(C4CAT2)
          UNIT(3390)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(SMPE.MVSD100.SMPDLOGA)
          VOLUME(C4CAT2)
          UNIT(3390)
          MOD .
      REP DDDEF(SMPMTS)
          DATASET(SMPE.MVST100.SMPMTS)
          VOLUME(C4RES1)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPSCDS)
          DATASET(SMPE.MVST100.SMPSCDS)
          VOLUME(C4CAT2)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPSTS)
          DATASET(SMPE.MVST100.SMPSTS)
          VOLUME(C4RES1)
          UNIT(3390)
          SHR .
      REP DDDEF(SMPPTS)
          DATASET(SMPE.SMPPTS)
          VOLUME(C4CAT2)
          UNIT(3390)
          SHR .
    ENDUCL .
  SET BDY(GLOBAL) .
    UCLIN .
   REP  GZONE ZINDEX(
      (MVSD100,SMPE.MVS.DLIB.CSI,DLIB)
      (MVST100,SMPE.MVS.TARGET.CSI,TARGET)
                                   ).
    ENDUCL .
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,T1CLEAN),(4000,LT))
./ ADD NAME=T2CLEAN  0114-04350-04350-1300-04513-04515-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*------------------------------------------------------------------
//* DOC: REMOVE /Service FROM PATH NAMES
//*      REMOVE SSA FROM DATASET NAMES IN DDDEF ENTRIES
//*      EDIT ALL ZONE DDDEFS TO REMOVE THE VOLSER AND UNIT
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 4
//*-------------------------------------------------------------------
//T2CLEAN  EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DISP=SHR,
//         DSN=MASTER.SYS1.MIGLIB
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,
//            DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,
//            DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPPUNCH DD DUMMY
//SMPJCLIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(MVST100) .
  ZONEEDIT DDDEF .
      CHANGE   PATH('/Service/'*,
                    '/'*) .
  ENDZONEEDIT .
  SET BDY(MVSD100) .
    UCLIN .
      REP DDDEF(AAOPEXEC)
          DA(AOP.AAOPEXEC)
          SHR .
      REP DDDEF(AAOPHFS)
          DA(AOP.AAOPHFS)
          SHR .
      REP DDDEF(AAOPMENU)
          DA(AOP.AAOPMENU)
          SHR .
      REP DDDEF(AAOPMOD1)
          DA(AOP.AAOPMOD1)
          SHR .
      REP DDDEF(AAOPPENU)
          DA(AOP.AAOPPENU)
          SHR .
      REP DDDEF(AASMMAC1)
          DA(ASM.AASMMAC1)
          SHR .
      REP DDDEF(AASMMAC2)
          DA(ASM.AASMMAC2)
          SHR .
      REP DDDEF(AASMMOD1)
          DA(ASM.AASMMOD1)
          SHR .
      REP DDDEF(AASMMOD2)
          DA(ASM.AASMMOD2)
          SHR .
      REP DDDEF(AASMPUT2)
          DA(ASM.AASMPUT2)
          SHR .
      REP DDDEF(AASMSAM1)
          DA(ASM.AASMSAM1)
          SHR .
      REP DDDEF(AASMSAM2)
          DA(ASM.AASMSAM2)
          SHR .
      REP DDDEF(AASUACF)
          DA(ASU.AASUACF)
          SHR .
      REP DDDEF(AASUCIDL)
          DA(ASU.AASUCIDL)
          SHR .
      REP DDDEF(AASUEXEC)
          DA(ASU.AASUEXEC)
          SHR .
      REP DDDEF(AASUHDR)
          DA(ASU.AASUHDR)
          SHR .
      REP DDDEF(AASUHHDR)
          DA(ASU.AASUHHDR)
          SHR .
      REP DDDEF(AASUHLIB)
          DA(ASU.AASUHLIB)
          SHR .
      REP DDDEF(AASUHSAM)
          DA(ASU.AASUHSAM)
          SHR .
      REP DDDEF(AASUIDL)
          DA(ASU.AASUIDL)
          SHR .
      REP DDDEF(AASULINK)
          DA(ASU.AASULINK)
          SHR .
      REP DDDEF(AASUMENU)
          DA(ASU.AASUMENU)
          SHR .
      REP DDDEF(AASUPENU)
          DA(ASU.AASUPENU)
          SHR .
      REP DDDEF(AASUSAMP)
          DA(ASU.AASUSAMP)
          SHR .
      REP DDDEF(AASUSTUB)
          DA(ASU.AASUSTUB)
          SHR .
      REP DDDEF(AASUTLIB)
          DA(ASU.AASUTLIB)
          SHR .
      REP DDDEF(ABPAHFS)
          DA(BPA.ABPAHFS)
          SHR .
      REP DDDEF(ACBCCMP)
          DA(CBC.ACBCCMP)
          SHR .
      REP DDDEF(ACBCSR1)
          DA(CBC.ACBCSR1)
          SHR .
      REP DDDEF(ACCNCMP)
          DA(CBC.ACCNCMP)
          SHR .
      REP DDDEF(ACCNSR1)
          DA(CBC.ACCNSR1)
          SHR .
      REP DDDEF(ACLBDLL)
          DA(CBC.ACLBDLL)
          SHR .
      REP DDDEF(ACLBDLL2)
          DA(CBC.ACLBDLL2)
          SHR .
      REP DDDEF(ACLBHFS1)
          DA(CBC.ACLBHFS1)
          SHR .
      REP DDDEF(ACLBOBJ)
          DA(CBC.ACLBOBJ)
          SHR .
      REP DDDEF(ACLBOBJ2)
          DA(CBC.ACLBOBJ2)
          SHR .
      REP DDDEF(ACLBSR1)
          DA(CBC.ACLBSR1)
          SHR .
      REP DDDEF(ACLBSR2)
          DA(CBC.ACLBSR2)
          SHR .
      REP DDDEF(ACLBSR3)
          DA(CBC.ACLBSR3)
          SHR .
      REP DDDEF(ACLBSR4)
          DA(CBC.ACLBSR4)
          SHR .
      REP DDDEF(ACLDHFS1)
          DA(CBC.ACLDHFS1)
          SHR .
      REP DDDEF(ACLDSR1)
          DA(CBC.ACLDSR1)
          SHR .
      REP DDDEF(ACTVMOD)
          DA(CBC.ACTVMOD)
          SHR .
      REP DDDEF(ACTVSRC)
          DA(CBC.ACTVSRC)
          SHR .
      REP DDDEF(ACDSHFS)
          DA(CDS.ACDSHFS)
          SHR .
      REP DDDEF(ACDSLINK)
          DA(CDS.ACDSLINK)
          SHR .
      REP DDDEF(ACDSSAMP)
          DA(CDS.ACDSSAMP)
          SHR .
      REP DDDEF(AAFHMOD1)
          DA(CEE.AAFHMOD1)
          SHR .
      REP DDDEF(AAFHSRC1)
          DA(CEE.AAFHSRC1)
          SHR .
      REP DDDEF(ACEEMOD1)
          DA(CEE.ACEEMOD1)
          SHR .
      REP DDDEF(ACEEMOD2)
          DA(CEE.ACEEMOD2)
          SHR .
      REP DDDEF(ACEESRC1)
          DA(CEE.ACEESRC1)
          SHR .
      REP DDDEF(ACEESRC2)
          DA(CEE.ACEESRC2)
          SHR .
      REP DDDEF(ACEESRC3)
          DA(CEE.ACEESRC3)
          SHR .
      REP DDDEF(AEDCCPP1)
          DA(CEE.AEDCCPP1)
          SHR .
      REP DDDEF(AEDCHFS)
          DA(CEE.AEDCHFS)
          SHR .
      REP DDDEF(AEDCMOD1)
          DA(CEE.AEDCMOD1)
          SHR .
      REP DDDEF(AEDCMOD2)
          DA(CEE.AEDCMOD2)
          SHR .
      REP DDDEF(AEDCMSEP)
          DA(CEE.AEDCMSEP)
          SHR .
      REP DDDEF(AEDCOBJ1)
          DA(CEE.AEDCOBJ1)
          SHR .
      REP DDDEF(AEDCSRC6)
          DA(CEE.AEDCSRC6)
          SHR .
      REP DDDEF(AEDCSRC7)
          DA(CEE.AEDCSRC7)
          SHR .
      REP DDDEF(AIBMMOD3)
          DA(CEE.AIBMMOD3)
          SHR .
      REP DDDEF(AIBMSRC3)
          DA(CEE.AIBMSRC3)
          SHR .
      REP DDDEF(AIGZMOD1)
          DA(CEE.AIGZMOD1)
          SHR .
      REP DDDEF(AIGZSRC1)
          DA(CEE.AIGZSRC1)
          SHR .
      REP DDDEF(ACIMHFS)
          DA(CIM.ACIMHFS)
          SHR .
      REP DDDEF(ACIMMOD1)
          DA(CIM.ACIMMOD1)
          SHR .
      REP DDDEF(ACIMPLUG)
          DA(CIM.ACIMPLUG)
          SHR .
      REP DDDEF(ACMXDBRM)
          DA(CMX.ACMXDBRM)
          SHR .
      REP DDDEF(ACMXHFS)
          DA(CMX.ACMXHFS)
          SHR .
      REP DDDEF(ACSFCLI0)
          DA(CSF.ACSFCLI0)
          SHR .
      REP DDDEF(ACSFHDRS)
          DA(CSF.ACSFHDRS)
          SHR .
      REP DDDEF(ACSFMOD0)
          DA(CSF.ACSFMOD0)
          SHR .
      REP DDDEF(ACSFMOD1)
          DA(CSF.ACSFMOD1)
          SHR .
      REP DDDEF(ACSFMSG0)
          DA(CSF.ACSFMSG0)
          SHR .
      REP DDDEF(ACSFOBJ)
          DA(CSF.ACSFOBJ)
          SHR .
      REP DDDEF(ACSFPNL0)
          DA(CSF.ACSFPNL0)
          SHR .
      REP DDDEF(ACSFSKL0)
          DA(CSF.ACSFSKL0)
          SHR .
      REP DDDEF(ACSFTLIB)
          DA(CSF.ACSFTLIB)
          SHR .
      REP DDDEF(AECNEXP)
          DA(ECN.AECNEXP)
          SHR .
      REP DDDEF(AECNHETC)
          DA(ECN.AECNHETC)
          SHR .
      REP DDDEF(AECNHEXP)
          DA(ECN.AECNHEXP)
          SHR .
      REP DDDEF(AECNHINC)
          DA(ECN.AECNHINC)
          SHR .
      REP DDDEF(AECNHLBR)
          DA(ECN.AECNHLBR)
          SHR .
      REP DDDEF(AECNLINK)
          DA(ECN.AECNLINK)
          SHR .
      REP DDDEF(AEPHBOK1)
          DA(EOX.AEPHBOK1)
          SHR .
      REP DDDEF(AEPHCLB1)
          DA(EOX.AEPHCLB1)
          SHR .
      REP DDDEF(AEPHDAT1)
          DA(EOX.AEPHDAT1)
          SHR .
      REP DDDEF(AEPHLOD1)
          DA(EOX.AEPHLOD1)
          SHR .
      REP DDDEF(AEPHMSG1)
          DA(EOX.AEPHMSG1)
          SHR .
      REP DDDEF(AEPHPNL1)
          DA(EOX.AEPHPNL1)
          SHR .
      REP DDDEF(AEPHSAM1)
          DA(EOX.AEPHSAM1)
          SHR .
      REP DDDEF(AEPHTBL1)
          DA(EOX.AEPHTBL1)
          SHR .
      REP DDDEF(AEOXFONT)
          DA(EOY.AEOXFONT)
          SHR .
      REP DDDEF(AEOXIENU)
          DA(EOY.AEOXIENU)
          SHR .
      REP DDDEF(AEOXOENU)
          DA(EOY.AEOXOENU)
          SHR .
      REP DDDEF(AEOX1ENU)
          DA(EOY.AEOX1ENU)
          SHR .
      REP DDDEF(AEOX2ENU)
          DA(EOY.AEOX2ENU)
          SHR .
      REP DDDEF(AEOX3ENU)
          DA(EOY.AEOX3ENU)
          SHR .
      REP DDDEF(AEOX4ENU)
          DA(EOY.AEOX4ENU)
          SHR .
      REP DDDEF(AEOYAENU)
          DA(EOY.AEOYAENU)
          SHR .
      REP DDDEF(AEOYBENU)
          DA(EOY.AEOYBENU)
          SHR .
      REP DDDEF(AEOYCLIB)
          DA(EOY.AEOYCLIB)
          SHR .
      REP DDDEF(AEOYGENU)
          DA(EOY.AEOYGENU)
          SHR .
      REP DDDEF(AEOYIENU)
          DA(EOY.AEOYIENU)
          SHR .
      REP DDDEF(AEOYIPRF)
          DA(EOY.AEOYIPRF)
          SHR .
      REP DDDEF(AEOYLENU)
          DA(EOY.AEOYLENU)
          SHR .
      REP DDDEF(AEOYLEXS)
          DA(EOY.AEOYLEXS)
          SHR .
      REP DDDEF(AEOYLOAD)
          DA(EOY.AEOYLOAD)
          SHR .
      REP DDDEF(AEOYMC30)
          DA(EOY.AEOYMC30)
          SHR .
      REP DDDEF(AEOYMC40)
          DA(EOY.AEOYMC40)
          SHR .
      REP DDDEF(AEOYMENU)
          DA(EOY.AEOYMENU)
          SHR .
      REP DDDEF(AEOYOENU)
          DA(EOY.AEOYOENU)
          SHR .
      REP DDDEF(AEOYPENU)
          DA(EOY.AEOYPENU)
          SHR .
      REP DDDEF(AEOYPROC)
          DA(EOY.AEOYPROC)
          SHR .
      REP DDDEF(AEOYSAMP)
          DA(EOY.AEOYSAMP)
          SHR .
      REP DDDEF(AEOYSENU)
          DA(EOY.AEOYSENU)
          SHR .
      REP DDDEF(AEOYTENU)
          DA(EOY.AEOYTENU)
          SHR .
      REP DDDEF(AEOYXENU)
          DA(EOY.AEOYXENU)
          SHR .
      REP DDDEF(AEOY1ENU)
          DA(EOY.AEOY1ENU)
          SHR .
      REP DDDEF(AEOY2ENU)
          DA(EOY.AEOY2ENU)
          SHR .
      REP DDDEF(AEOY4ENU)
          DA(EOY.AEOY4ENU)
          SHR .
      REP DDDEF(AEPHBOOK)
          DA(EPH.AEPHBOOK)
          SHR .
      REP DDDEF(AEPHCLIB)
          DA(EPH.AEPHCLIB)
          SHR .
      REP DDDEF(AEPHGIF)
          DA(EPH.AEPHGIF)
          SHR .
      REP DDDEF(AEPHLOAD)
          DA(EPH.AEPHLOAD)
          SHR .
      REP DDDEF(AEPHSAMP)
          DA(EPH.AEPHSAMP)
          SHR .
      REP DDDEF(AEQAMOD2)
          DA(EQAW.AEQAMOD2)
          SHR .
      REP DDDEF(AEQASRC2)
          DA(EQAW.AEQASRC2)
          SHR .
      REP DDDEF(AEUVACF)
          DA(EUV.AEUVACF)
          SHR .
      REP DDDEF(AEUVDBRM)
          DA(EUV.AEUVDBRM)
          SHR .
      REP DDDEF(AEUVEXEC)
          DA(EUV.AEUVEXEC)
          SHR .
      REP DDDEF(AEUVEXP)
          DA(EUV.AEUVEXP)
          SHR .
      REP DDDEF(AEUVHDCP)
          DA(EUV.AEUVHDCP)
          SHR .
      REP DDDEF(AEUVHDR)
          DA(EUV.AEUVHDR)
          SHR .
      REP DDDEF(AEUVHDRK)
          DA(EUV.AEUVHDRK)
          SHR .
      REP DDDEF(AEUVHETC)
          DA(EUV.AEUVHETC)
          SHR .
      REP DDDEF(AEUVHINC)
          DA(EUV.AEUVHINC)
          SHR .
      REP DDDEF(AEUVHLBR)
          DA(EUV.AEUVHLBR)
          SHR .
      REP DDDEF(AEUVHTCL)
          DA(EUV.AEUVHTCL)
          SHR .
      REP DDDEF(AEUVHXMP)
          DA(EUV.AEUVHXMP)
          SHR .
      REP DDDEF(AEUVIDL)
          DA(EUV.AEUVIDL)
          SHR .
      REP DDDEF(AEUVLIB)
          DA(EUV.AEUVLIB)
          SHR .
      REP DDDEF(AEUVLIBK)
          DA(EUV.AEUVLIBK)
          SHR .
      REP DDDEF(AEUVLIBS)
          DA(EUV.AEUVLIBS)
          SHR .
      REP DDDEF(AEUVLINK)
          DA(EUV.AEUVLINK)
          SHR .
      REP DDDEF(AEUVMSG)
          DA(EUV.AEUVMSG)
          SHR .
      REP DDDEF(AEUVPNL)
          DA(EUV.AEUVPNL)
          SHR .
      REP DDDEF(AEUVPRC)
          DA(EUV.AEUVPRC)
          SHR .
      REP DDDEF(AEUVFEXC)
          DA(EUVF.AEUVFEXC)
          SHR .
      REP DDDEF(AEUVFEXP)
          DA(EUVF.AEUVFEXP)
          SHR .
      REP DDDEF(AEUVFHDR)
          DA(EUVF.AEUVFHDR)
          SHR .
      REP DDDEF(AEUVFHFS)
          DA(EUVF.AEUVFHFS)
          SHR .
      REP DDDEF(AEUVFLIB)
          DA(EUVF.AEUVFLIB)
          SHR .
      REP DDDEF(AEUVFLNK)
          DA(EUVF.AEUVFLNK)
          SHR .
      REP DDDEF(AEUVFSAM)
          DA(EUVF.AEUVFSAM)
          SHR .
      REP DDDEF(AEPWBENU)
          DA(FFST.V120ESA.AEPWBENU)
          SHR .
      REP DDDEF(AEPWMOD1)
          DA(FFST.V120ESA.AEPWMOD1)
          SHR .
      REP DDDEF(AEPWSRC1)
          DA(FFST.V120ESA.AEPWSRC1)
          SHR .
      REP DDDEF(AADMCDA)
          DA(GDDM.AADMCDA)
          SHR .
      REP DDDEF(AADMCFO)
          DA(GDDM.AADMCFO)
          SHR .
      REP DDDEF(AADMDAT)
          DA(GDDM.AADMDAT)
          SHR .
      REP DDDEF(AADMGDF)
          DA(GDDM.AADMGDF)
          SHR .
      REP DDDEF(AADMIMG)
          DA(GDDM.AADMIMG)
          SHR .
      REP DDDEF(AADMMAP)
          DA(GDDM.AADMMAP)
          SHR .
      REP DDDEF(AADMMOD)
          DA(GDDM.AADMMOD)
          SHR .
      REP DDDEF(AADMMSG)
          DA(GDDM.AADMMSG)
          SHR .
      REP DDDEF(AADMOPS)
          DA(GDDM.AADMOPS)
          SHR .
      REP DDDEF(AADMPCF)
          DA(GDDM.AADMPCF)
          SHR .
      REP DDDEF(AADMPNL)
          DA(GDDM.AADMPNL)
          SHR .
      REP DDDEF(AADMSAM)
          DA(GDDM.AADMSAM)
          SHR .
      REP DDDEF(AADMSYM)
          DA(GDDM.AADMSYM)
          SHR .
      REP DDDEF(AGIMCLS0)
          DA(GIM.AGIMCLS0)
          SHR .
      REP DDDEF(AGIMMENU)
          DA(GIM.AGIMMENU)
          SHR .
      REP DDDEF(AGIMPENU)
          DA(GIM.AGIMPENU)
          SHR .
      REP DDDEF(AGIMSENU)
          DA(GIM.AGIMSENU)
          SHR .
      REP DDDEF(AGIMTENU)
          DA(GIM.AGIMTENU)
          SHR .
      REP DDDEF(AGLDEXEC)
          DA(GLD.AGLDEXEC)
          SHR .
      REP DDDEF(AGLDEXPC)
          DA(GLD.AGLDEXPC)
          SHR .
      REP DDDEF(AGLDHCLI)
          DA(GLD.AGLDHCLI)
          SHR .
      REP DDDEF(AGLDHDRC)
          DA(GLD.AGLDHDRC)
          SHR .
      REP DDDEF(AGLDHFS)
          DA(GLD.AGLDHFS)
          SHR .
      REP DDDEF(AGLDLNK)
          DA(GLD.AGLDLNK)
          SHR .
      REP DDDEF(AGLDSAMP)
          DA(GLD.AGLDSAMP)
          SHR .
      REP DDDEF(AGSKHFS)
          DA(GSK.AGSKHFS)
          SHR .
      REP DDDEF(AGSKLINK)
          DA(GSK.AGSKLINK)
          SHR .
      REP DDDEF(AGSKSAMP)
          DA(GSK.AGSKSAMP)
          SHR .
      REP DDDEF(AEEQINST)
          DA(HCM.AEEQINST)
          SHR .
      REP DDDEF(AICAHETC)
          DA(ICA.AICAHETC)
          SHR .
      REP DDDEF(AICAHLBR)
          DA(ICA.AICAHLBR)
          SHR .
      REP DDDEF(AICAHSAM)
          DA(ICA.AICAHSAM)
          SHR .
      REP DDDEF(AICAHSCR)
          DA(ICA.AICAHSCR)
          SHR .
      REP DDDEF(AICALINK)
          DA(ICA.AICALINK)
          SHR .
      REP DDDEF(AICAPROC)
          DA(ICA.AICAPROC)
          SHR .
      REP DDDEF(AICASAMP)
          DA(ICA.AICASAMP)
          SHR .
      REP DDDEF(AIMOHFS1)
          DA(IMO.AIMOHFS1)
          SHR .
      REP DDDEF(AIMOJCL1)
          DA(IMO.AIMOJCL1)
          SHR .
      REP DDDEF(AIMOMOD1)
          DA(IMO.AIMOMOD1)
          SHR .
      REP DDDEF(AIMWEMOD)
          DA(IMW.AIMWEMOD)
          SHR .
      REP DDDEF(AIMWHENU)
          DA(IMW.AIMWHENU)
          SHR .
      REP DDDEF(AIMWSAM1)
          DA(IMW.AIMWSAM1)
          SHR .
      REP DDDEF(AEVIMOD6)
          DA(ING.AEVIMOD6)
          SHR .
      REP DDDEF(AEVIMOD7)
          DA(ING.AEVIMOD7)
          SHR .
      REP DDDEF(AEVIMOD8)
          DA(ING.AEVIMOD8)
          SHR .
      REP DDDEF(AINGIMOD)
          DA(ING.AINGIMOD)
          SHR .
      REP DDDEF(AINGIMSG)
          DA(ING.AINGIMSG)
          SHR .
      REP DDDEF(AINGINST)
          DA(ING.AINGINST)
          SHR .
      REP DDDEF(AINGIPDB)
          DA(ING.AINGIPDB)
          SHR .
      REP DDDEF(AINGIPNL)
          DA(ING.AINGIPNL)
          SHR .
      REP DDDEF(AINGIREX)
          DA(ING.AINGIREX)
          SHR .
      REP DDDEF(AINGISKL)
          DA(ING.AINGISKL)
          SHR .
      REP DDDEF(AINGITBL)
          DA(ING.AINGITBL)
          SHR .
      REP DDDEF(AINGMODC)
          DA(ING.AINGMODC)
          SHR .
      REP DDDEF(AINGMOD1)
          DA(ING.AINGMOD1)
          SHR .
      REP DDDEF(AINGMOD2)
          DA(ING.AINGMOD2)
          SHR .
      REP DDDEF(AINGNMSG)
          DA(ING.AINGNMSG)
          SHR .
      REP DDDEF(AINGNPNL)
          DA(ING.AINGNPNL)
          SHR .
      REP DDDEF(AINGNPRF)
          DA(ING.AINGNPRF)
          SHR .
      REP DDDEF(AINGNPRM)
          DA(ING.AINGNPRM)
          SHR .
      REP DDDEF(AINGNREX)
          DA(ING.AINGNREX)
          SHR .
      REP DDDEF(AINGPWS1)
          DA(ING.AINGPWS1)
          SHR .
      REP DDDEF(AINGSAMP)
          DA(ING.AINGSAMP)
          SHR .
      REP DDDEF(AINGSRC)
          DA(ING.AINGSRC)
          SHR .
      REP DDDEF(AIOAIBIN)
          DA(IOA.AIOAIBIN)
          SHR .
      REP DDDEF(AIOAJAVA)
          DA(IOA.AIOAJAVA)
          SHR .
      REP DDDEF(AIOALMOD)
          DA(IOA.AIOALMOD)
          SHR .
      REP DDDEF(AIOAMMOD)
          DA(IOA.AIOAMMOD)
          SHR .
      REP DDDEF(AIOASAMP)
          DA(IOA.AIOASAMP)
          SHR .
      REP DDDEF(AIOEEXEC)
          DA(IOE.AIOEEXEC)
          SHR .
      REP DDDEF(AIOEHLIB)
          DA(IOE.AIOEHLIB)
          SHR .
      REP DDDEF(AIOEHSAM)
          DA(IOE.AIOEHSAM)
          SHR .
      REP DDDEF(AIOEHSHL)
          DA(IOE.AIOEHSHL)
          SHR .
      REP DDDEF(AIOEHSRC)
          DA(IOE.AIOEHSRC)
          SHR .
      REP DDDEF(AIOELMOD)
          DA(IOE.AIOELMOD)
          SHR .
      REP DDDEF(AIOEMSGE)
          DA(IOE.AIOEMSGE)
          SHR .
      REP DDDEF(AIOEPNLE)
          DA(IOE.AIOEPNLE)
          SHR .
      REP DDDEF(AIOEPROC)
          DA(IOE.AIOEPROC)
          SHR .
      REP DDDEF(AIOESAMP)
          DA(IOE.AIOESAMP)
          SHR .
      REP DDDEF(AISFEXEC)
          DA(ISF.AISFEXEC)
          SHR .
      REP DDDEF(AISFHELP)
          DA(ISF.AISFHELP)
          SHR .
      REP DDDEF(AISFJCL)
          DA(ISF.AISFJCL)
          SHR .
      REP DDDEF(AISFLINK)
          DA(ISF.AISFLINK)
          SHR .
      REP DDDEF(AISFLOAD)
          DA(ISF.AISFLOAD)
          SHR .
      REP DDDEF(AISFMLIB)
          DA(ISF.AISFMLIB)
          SHR .
      REP DDDEF(AISFPLIB)
          DA(ISF.AISFPLIB)
          SHR .
      REP DDDEF(AISFSLIB)
          DA(ISF.AISFSLIB)
          SHR .
      REP DDDEF(AISFSRC)
          DA(ISF.AISFSRC)
          SHR .
      REP DDDEF(AISFTLIB)
          DA(ISF.AISFTLIB)
          SHR .
      REP DDDEF(AISPALIB)
          DA(ISP.AISPALIB)
          SHR .
      REP DDDEF(AISPCLIB)
          DA(ISP.AISPCLIB)
          SHR .
      REP DDDEF(AISPEXEC)
          DA(ISP.AISPEXEC)
          SHR .
      REP DDDEF(AISPGENU)
          DA(ISP.AISPGENU)
          SHR .
      REP DDDEF(AISPGMLI)
          DA(ISP.AISPGMLI)
          SHR .
      REP DDDEF(AISPGUI)
          DA(ISP.AISPGUI)
          SHR .
      REP DDDEF(AISPHELP)
          DA(ISP.AISPHELP)
          SHR .
      REP DDDEF(AISPMACS)
          DA(ISP.AISPMACS)
          SHR .
      REP DDDEF(AISPMENU)
          DA(ISP.AISPMENU)
          SHR .
      REP DDDEF(AISPMOD1)
          DA(ISP.AISPMOD1)
          SHR .
      REP DDDEF(AISPPENU)
          DA(ISP.AISPPENU)
          SHR .
      REP DDDEF(AISPSAMP)
          DA(ISP.AISPSAMP)
          SHR .
      REP DDDEF(AISPSASC)
          DA(ISP.AISPSASC)
          SHR .
      REP DDDEF(AISPSENU)
          DA(ISP.AISPSENU)
          SHR .
      REP DDDEF(AISPSLIB)
          DA(ISP.AISPSLIB)
          SHR .
      REP DDDEF(AISPTENU)
          DA(ISP.AISPTENU)
          SHR .
      REP DDDEF(AAJVSMP1)
          DA(JAVA.AAJVSMP1)
          SHR .
      REP DDDEF(AAJVS390)
          DA(JAVA.AAJVS390)
          SHR .
      REP DDDEF(ABNJPNL1)
          DA(NETVIEW.ABNJPNL1)
          SHR .
      REP DDDEF(ABNJPNL2)
          DA(NETVIEW.ABNJPNL2)
          SHR .
      REP DDDEF(ABNJSRC1)
          DA(NETVIEW.ABNJSRC1)
          SHR .
      REP DDDEF(ACNMCLST)
          DA(NETVIEW.ACNMCLST)
          SHR .
      REP DDDEF(ACNMINST)
          DA(NETVIEW.ACNMINST)
          SHR .
      REP DDDEF(ACNMLINK)
          DA(NETVIEW.ACNMLINK)
          SHR .
      REP DDDEF(ACNMMAC1)
          DA(NETVIEW.ACNMMAC1)
          SHR .
      REP DDDEF(ACNMPNL1)
          DA(NETVIEW.ACNMPNL1)
          SHR .
      REP DDDEF(ACNMSAMP)
          DA(NETVIEW.ACNMSAMP)
          SHR .
      REP DDDEF(ADSIMSG1)
          DA(NETVIEW.ADSIMSG1)
          SHR .
      REP DDDEF(ADSIOPEN)
          DA(NETVIEW.ADSIOPEN)
          SHR .
      REP DDDEF(ADSIPARM)
          DA(NETVIEW.ADSIPARM)
          SHR .
      REP DDDEF(ADSIPRF)
          DA(NETVIEW.ADSIPRF)
          SHR .
      REP DDDEF(ADUIMSG1)
          DA(NETVIEW.ADUIMSG1)
          SHR .
      REP DDDEF(AEKGCAS1)
          DA(NETVIEW.AEKGCAS1)
          SHR .
      REP DDDEF(AEKGLANG)
          DA(NETVIEW.AEKGLANG)
          SHR .
      REP DDDEF(AEKGLUTB)
          DA(NETVIEW.AEKGLUTB)
          SHR .
      REP DDDEF(AEKGMOD1)
          DA(NETVIEW.AEKGMOD1)
          SHR .
      REP DDDEF(AEKGPNL1)
          DA(NETVIEW.AEKGPNL1)
          SHR .
      REP DDDEF(AEKGSMP1)
          DA(NETVIEW.AEKGSMP1)
          SHR .
      REP DDDEF(AEZLCLST)
          DA(NETVIEW.AEZLCLST)
          SHR .
      REP DDDEF(AEZLINST)
          DA(NETVIEW.AEZLINST)
          SHR .
      REP DDDEF(AEZLLINK)
          DA(NETVIEW.AEZLLINK)
          SHR .
      REP DDDEF(AEZLPNLU)
          DA(NETVIEW.AEZLPNLU)
          SHR .
      REP DDDEF(AEZLSAMP)
          DA(NETVIEW.AEZLSAMP)
          SHR .
      REP DDDEF(AFLBDAT1)
          DA(NETVIEW.AFLBDAT1)
          SHR .
      REP DDDEF(ANVULIB)
          DA(NETVIEW.ANVULIB)
          SHR .
      REP DDDEF(AACBCNTL)
          DA(SYS1.AACBCNTL)
          SHR .
      REP DDDEF(AADFMAC1)
          DA(SYS1.AADFMAC1)
          SHR .
      REP DDDEF(AADRLIB)
          DA(SYS1.AADRLIB)
          SHR .
      REP DDDEF(AADRYLIB)
          DA(SYS1.AADRYLIB)
          SHR .
      REP DDDEF(AAPPDAT2)
          DA(SYS1.AAPPDAT2)
          SHR .
      REP DDDEF(AAPPDAT4)
          DA(SYS1.AAPPDAT4)
          SHR .
      REP DDDEF(AAPPMOD1)
          DA(SYS1.AAPPMOD1)
          SHR .
      REP DDDEF(AAPPMOD2)
          DA(SYS1.AAPPMOD2)
          SHR .
      REP DDDEF(AAPPSAMP)
          DA(SYS1.AAPPSAMP)
          SHR .
      REP DDDEF(ABDTCLI0)
          DA(SYS1.ABDTCLI0)
          SHR .
      REP DDDEF(ABDTHELP)
          DA(SYS1.ABDTHELP)
          SHR .
      REP DDDEF(ABDTMAC)
          DA(SYS1.ABDTMAC)
          SHR .
      REP DDDEF(ABDTMOD)
          DA(SYS1.ABDTMOD)
          SHR .
      REP DDDEF(ABDTMSG)
          DA(SYS1.ABDTMSG)
          SHR .
      REP DDDEF(ABDTPNL0)
          DA(SYS1.ABDTPNL0)
          SHR .
      REP DDDEF(ABDTSAMP)
          DA(SYS1.ABDTSAMP)
          SHR .
      REP DDDEF(ABLSCLI0)
          DA(SYS1.ABLSCLI0)
          SHR .
      REP DDDEF(ABLSKEL0)
          DA(SYS1.ABLSKEL0)
          SHR .
      REP DDDEF(ABLSMSG0)
          DA(SYS1.ABLSMSG0)
          SHR .
      REP DDDEF(ABLSPNL0)
          DA(SYS1.ABLSPNL0)
          SHR .
      REP DDDEF(ABLSTBL0)
          DA(SYS1.ABLSTBL0)
          SHR .
      REP DDDEF(ABMFMOD0)
          DA(SYS1.ABMFMOD0)
          SHR .
      REP DDDEF(ABPXEXEC)
          DA(SYS1.ABPXEXEC)
          SHR .
      REP DDDEF(ABPXMENU)
          DA(SYS1.ABPXMENU)
          SHR .
      REP DDDEF(ABPXMOD1)
          DA(SYS1.ABPXMOD1)
          SHR .
      REP DDDEF(ABPXPENU)
          DA(SYS1.ABPXPENU)
          SHR .
      REP DDDEF(ABPXSPC)
          DA(SYS1.ABPXSPC)
          SHR .
      REP DDDEF(ABPXTENU)
          DA(SYS1.ABPXTENU)
          SHR .
      REP DDDEF(ACBDCLST)
          DA(SYS1.ACBDCLST)
          SHR .
      REP DDDEF(ACBDEHFS)
          DA(SYS1.ACBDEHFS)
          SHR .
      REP DDDEF(ACBDHENU)
          DA(SYS1.ACBDHENU)
          SHR .
      REP DDDEF(ACBDMENU)
          DA(SYS1.ACBDMENU)
          SHR .
      REP DDDEF(ACBDMOD1)
          DA(SYS1.ACBDMOD1)
          SHR .
      REP DDDEF(ACBDMOD2)
          DA(SYS1.ACBDMOD2)
          SHR .
      REP DDDEF(ACBDPENU)
          DA(SYS1.ACBDPENU)
          SHR .
      REP DDDEF(ACBDTEMP)
          DA(SYS1.ACBDTEMP)
          SHR .
      REP DDDEF(ACBDTENU)
          DA(SYS1.ACBDTENU)
          SHR .
      REP DDDEF(ACBRDBRM)
          DA(SYS1.ACBRDBRM)
          SHR .
      REP DDDEF(ACBRMOD0)
          DA(SYS1.ACBRMOD0)
          SHR .
      REP DDDEF(ACDMMOD0)
          DA(SYS1.ACDMMOD0)
          SHR .
      REP DDDEF(ACDRMODS)
          DA(SYS1.ACDRMODS)
          SHR .
      REP DDDEF(ACDRTABL)
          DA(SYS1.ACDRTABL)
          SHR .
      REP DDDEF(ACLMMOD0)
          DA(SYS1.ACLMMOD0)
          SHR .
      REP DDDEF(ACMDLIB)
          DA(SYS1.ACMDLIB)
          SHR .
      REP DDDEF(ACSSLIB)
          DA(SYS1.ACSSLIB)
          SHR .
      REP DDDEF(ACUNHF)
          DA(SYS1.ACUNHF)
          SHR .
      REP DDDEF(ACUNIMG)
          DA(SYS1.ACUNIMG)
          SHR .
      REP DDDEF(ACUNJCL)
          DA(SYS1.ACUNJCL)
          SHR .
      REP DDDEF(ACUNMAC)
          DA(SYS1.ACUNMAC)
          SHR .
      REP DDDEF(ACUNMENU)
          DA(SYS1.ACUNMENU)
          SHR .
      REP DDDEF(ACUNMJPN)
          DA(SYS1.ACUNMJPN)
          SHR .
      REP DDDEF(ACUNMOD)
          DA(SYS1.ACUNMOD)
          SHR .
      REP DDDEF(ACUNREXX)
          DA(SYS1.ACUNREXX)
          SHR .
      REP DDDEF(ACUNSAMP)
          DA(SYS1.ACUNSAMP)
          SHR .
      REP DDDEF(ACUNTBL)
          DA(SYS1.ACUNTBL)
          SHR .
      REP DDDEF(ADBBLIB)
          DA(SYS1.ADBBLIB)
          SHR .
      REP DDDEF(ADFPMOD0)
          DA(SYS1.ADFPMOD0)
          SHR .
      REP DDDEF(ADFQMLIB)
          DA(SYS1.ADFQMLIB)
          SHR .
      REP DDDEF(ADFQPLIB)
          DA(SYS1.ADFQPLIB)
          SHR .
      REP DDDEF(ADFQPSRC)
          DA(SYS1.ADFQPSRC)
          SHR .
      REP DDDEF(ADGTCLIB)
          DA(SYS1.ADGTCLIB)
          SHR .
      REP DDDEF(ADGTLLIB)
          DA(SYS1.ADGTLLIB)
          SHR .
      REP DDDEF(ADGTMLIB)
          DA(SYS1.ADGTMLIB)
          SHR .
      REP DDDEF(ADGTPLIB)
          DA(SYS1.ADGTPLIB)
          SHR .
      REP DDDEF(ADGTPSRC)
          DA(SYS1.ADGTPSRC)
          SHR .
      REP DDDEF(ADGTSLIB)
          DA(SYS1.ADGTSLIB)
          SHR .
      REP DDDEF(ADGTTLIB)
          DA(SYS1.ADGTTLIB)
          SHR .
      REP DDDEF(ADGTTSRC)
          DA(SYS1.ADGTTSRC)
          SHR .
      REP DDDEF(ADMSSVM)
          DA(SYS1.ADMSSVM)
          SHR .
      REP DDDEF(AEDGEXE1)
          DA(SYS1.AEDGEXE1)
          SHR .
      REP DDDEF(AEDGMENU)
          DA(SYS1.AEDGMENU)
          SHR .
      REP DDDEF(AEDGMOD1)
          DA(SYS1.AEDGMOD1)
          SHR .
      REP DDDEF(AEDGPENU)
          DA(SYS1.AEDGPENU)
          SHR .
      REP DDDEF(AEDGPSRC)
          DA(SYS1.AEDGPSRC)
          SHR .
      REP DDDEF(AEDGSRC1)
          DA(SYS1.AEDGSRC1)
          SHR .
      REP DDDEF(AERBCLS)
          DA(SYS1.AERBCLS)
          SHR .
      REP DDDEF(AERBMAC1)
          DA(SYS1.AERBMAC1)
          SHR .
      REP DDDEF(AERBMENU)
          DA(SYS1.AERBMENU)
          SHR .
      REP DDDEF(AERBMOD1)
          DA(SYS1.AERBMOD1)
          SHR .
      REP DDDEF(AERBPENU)
          DA(SYS1.AERBPENU)
          SHR .
      REP DDDEF(AERBPWSV)
          DA(SYS1.AERBPWSV)
          SHR .
      REP DDDEF(AERBT)
          DA(SYS1.AERBT)
          SHR .
      REP DDDEF(AERBTENU)
          DA(SYS1.AERBTENU)
          SHR .
      REP DDDEF(AFOMDATA)
          DA(SYS1.AFOMDATA)
          SHR .
      REP DDDEF(AFOMHDRS)
          DA(SYS1.AFOMHDRS)
          SHR .
      REP DDDEF(AFOMHFS)
          DA(SYS1.AFOMHFS)
          SHR .
      REP DDDEF(AFOMMOD1)
          DA(SYS1.AFOMMOD1)
          SHR .
      REP DDDEF(AFOMOBJ)
          DA(SYS1.AFOMOBJ)
          SHR .
      REP DDDEF(AGDEMOD0)
          DA(SYS1.AGDEMOD0)
          SHR .
      REP DDDEF(AGENLIB)
          DA(SYS1.AGENLIB)
          SHR .
      REP DDDEF(AGFTAJL1)
          DA(SYS1.AGFTAJL1)
          SHR .
      REP DDDEF(AGFTAMD1)
          DA(SYS1.AGFTAMD1)
          SHR .
      REP DDDEF(AGFUMOD1)
          DA(SYS1.AGFUMOD1)
          SHR .
      REP DDDEF(AHASMAC)
          DA(SYS1.AHASMAC)
          SHR .
      REP DDDEF(AHASMENU)
          DA(SYS1.AHASMENU)
          SHR .
      REP DDDEF(AHASMOD)
          DA(SYS1.AHASMOD)
          SHR .
      REP DDDEF(AHASPARM)
          DA(SYS1.AHASPARM)
          SHR .
      REP DDDEF(AHASPNL0)
          DA(SYS1.AHASPNL0)
          SHR .
      REP DDDEF(AHASSAMP)
          DA(SYS1.AHASSAMP)
          SHR .
      REP DDDEF(AHASSRC)
          DA(SYS1.AHASSRC)
          SHR .
      REP DDDEF(AHELP)
          DA(SYS1.AHELP)
          SHR .
      REP DDDEF(AHELPENP)
          DA(SYS1.AHELPENP)
          SHR .
      REP DDDEF(AICECLIB)
          DA(SYS1.AICECLIB)
          SHR .
      REP DDDEF(AICELIB)
          DA(SYS1.AICELIB)
          SHR .
      REP DDDEF(AICEMENU)
          DA(SYS1.AICEMENU)
          SHR .
      REP DDDEF(AICEPENU)
          DA(SYS1.AICEPENU)
          SHR .
      REP DDDEF(AICESAMP)
          DA(SYS1.AICESAMP)
          SHR .
      REP DDDEF(AICESLIB)
          DA(SYS1.AICESLIB)
          SHR .
      REP DDDEF(AICESRCE)
          DA(SYS1.AICESRCE)
          SHR .
      REP DDDEF(AICETLIB)
          DA(SYS1.AICETLIB)
          SHR .
      REP DDDEF(AICEUSER)
          DA(SYS1.AICEUSER)
          SHR .
      REP DDDEF(AICQAB)
          DA(SYS1.AICQAB)
          SHR .
      REP DDDEF(AICQILIB)
          DA(SYS1.AICQILIB)
          SHR .
      REP DDDEF(AICQMAC1)
          DA(SYS1.AICQMAC1)
          SHR .
      REP DDDEF(AICQMAC2)
          DA(SYS1.AICQMAC2)
          SHR .
      REP DDDEF(AICQMAC3)
          DA(SYS1.AICQMAC3)
          SHR .
      REP DDDEF(AICQMAC4)
          DA(SYS1.AICQMAC4)
          SHR .
      REP DDDEF(AICQMAC5)
          DA(SYS1.AICQMAC5)
          SHR .
      REP DDDEF(AIEAHDR)
          DA(SYS1.AIEAHDR)
          SHR .
      REP DDDEF(AIEWMOD0)
          DA(SYS1.AIEWMOD0)
          SHR .
      REP DDDEF(AIFALIB)
          DA(SYS1.AIFALIB)
          SHR .
      REP DDDEF(AIGDVBS1)
          DA(SYS1.AIGDVBS1)
          SHR .
      REP DDDEF(AIKYHFS)
          DA(SYS1.AIKYHFS)
          SHR .
      REP DDDEF(AIMAGE)
          DA(SYS1.AIMAGE)
          SHR .
      REP DDDEF(AIMFMOD0)
          DA(SYS1.AIMFMOD0)
          SHR .
      REP DDDEF(AINDLMD)
          DA(SYS1.AINDLMD)
          SHR .
      REP DDDEF(AISTASGD)
          DA(SYS1.AISTASGD)
          SHR .
      REP DDDEF(AISTASN1)
          DA(SYS1.AISTASN1)
          SHR .
      REP DDDEF(AISTCMIP)
          DA(SYS1.AISTCMIP)
          SHR .
      REP DDDEF(AISTDAT1)
          DA(SYS1.AISTDAT1)
          SHR .
      REP DDDEF(AISTDAT2)
          DA(SYS1.AISTDAT2)
          SHR .
      REP DDDEF(AISTGDMO)
          DA(SYS1.AISTGDMO)
          SHR .
      REP DDDEF(AISTMAC1)
          DA(SYS1.AISTMAC1)
          SHR .
      REP DDDEF(AITYHFS)
          DA(SYS1.AITYHFS)
          SHR .
      REP DDDEF(ALINKLIB)
          DA(SYS1.ALINKLIB)
          SHR .
      REP DDDEF(ALPALIB)
          DA(SYS1.ALPALIB)
          SHR .
      REP DDDEF(AMACLIB)
          DA(SYS1.AMACLIB)
          SHR .
      REP DDDEF(AMIGLIB)
          DA(SYS1.AMIGLIB)
          SHR .
      REP DDDEF(AMODGEN)
          DA(SYS1.AMODGEN)
          SHR .
      REP DDDEF(AMSGENP)
          DA(SYS1.AMSGENP)
          SHR .
      REP DDDEF(AMSGENU)
          DA(SYS1.AMSGENU)
          SHR .
      REP DDDEF(ANFSLIB)
          DA(SYS1.ANFSLIB)
          SHR .
      REP DDDEF(ANFSMAC)
          DA(SYS1.ANFSMAC)
          SHR .
      REP DDDEF(ANFSSAMP)
          DA(SYS1.ANFSSAMP)
          SHR .
      REP DDDEF(ANFSTARB)
          DA(SYS1.ANFSTARB)
          SHR .
      REP DDDEF(ANUCLEUS)
          DA(SYS1.ANUCLEUS)
          SHR .
      REP DDDEF(AOSACB)
          DA(SYS1.AOSACB)
          SHR .
      REP DDDEF(AOSA0)
          DA(SYS1.AOSA0)
          SHR .
      REP DDDEF(AOSA1)
          DA(SYS1.AOSA1)
          SHR .
      REP DDDEF(AOSBN)
          DA(SYS1.AOSBN)
          SHR .
      REP DDDEF(AOSB0)
          DA(SYS1.AOSB0)
          SHR .
      REP DDDEF(AOSB3)
          DA(SYS1.AOSB3)
          SHR .
      REP DDDEF(AOSCA)
          DA(SYS1.AOSCA)
          SHR .
      REP DDDEF(AOSCD)
          DA(SYS1.AOSCD)
          SHR .
      REP DDDEF(AOSCE)
          DA(SYS1.AOSCE)
          SHR .
      REP DDDEF(AOSC2)
          DA(SYS1.AOSC2)
          SHR .
      REP DDDEF(AOSC5)
          DA(SYS1.AOSC5)
          SHR .
      REP DDDEF(AOSC6)
          DA(SYS1.AOSC6)
          SHR .
      REP DDDEF(AOSD0)
          DA(SYS1.AOSD0)
          SHR .
      REP DDDEF(AOSD7)
          DA(SYS1.AOSD7)
          SHR .
      REP DDDEF(AOSD8)
          DA(SYS1.AOSD8)
          SHR .
      REP DDDEF(AOSG0)
          DA(SYS1.AOSG0)
          SHR .
      REP DDDEF(AOSJSC)
          DA(SYS1.AOSJSC)
          SHR .
      REP DDDEF(AOST3)
          DA(SYS1.AOST3)
          SHR .
      REP DDDEF(AOST4)
          DA(SYS1.AOST4)
          SHR .
      REP DDDEF(AOSU0)
          DA(SYS1.AOSU0)
          SHR .
      REP DDDEF(AOSXCF)
          DA(SYS1.AOSXCF)
          SHR .
      REP DDDEF(AOS00)
          DA(SYS1.AOS00)
          SHR .
      REP DDDEF(AOS04)
          DA(SYS1.AOS04)
          SHR .
      REP DDDEF(AOS05)
          DA(SYS1.AOS05)
          SHR .
      REP DDDEF(AOS06)
          DA(SYS1.AOS06)
          SHR .
      REP DDDEF(AOS11)
          DA(SYS1.AOS11)
          SHR .
      REP DDDEF(AOS12)
          DA(SYS1.AOS12)
          SHR .
      REP DDDEF(AOS24)
          DA(SYS1.AOS24)
          SHR .
      REP DDDEF(AOS26)
          DA(SYS1.AOS26)
          SHR .
      REP DDDEF(AOS28)
          DA(SYS1.AOS28)
          SHR .
      REP DDDEF(AOS32)
          DA(SYS1.AOS32)
          SHR .
      REP DDDEF(ASAMPLIB)
          DA(SYS1.ASAMPLIB)
          SHR .
      REP DDDEF(ASSFMOD0)
          DA(SYS1.ASSFMOD0)
          SHR .
      REP DDDEF(ATSOMAC)
          DA(SYS1.ATSOMAC)
          SHR .
      REP DDDEF(AUADS)
          DA(SYS1.AUADS)
          SHR .
      REP DDDEF(CIPLIB)
          DA(SYS1.CIPLIB)
          SHR .
      REP DDDEF(HHRFCLST)
          DA(SYS1.HHRFCLST)
          SHR .
      REP DDDEF(HHRFMSG)
          DA(SYS1.HHRFMSG)
          SHR .
      REP DDDEF(HHRFPANL)
          DA(SYS1.HHRFPANL)
          SHR .
      REP DDDEF(HHRFSKEL)
          DA(SYS1.HHRFSKEL)
          SHR .
      REP DDDEF(APARMLIB)
          DA(SYS1.IBM.APARMLIB)
          SHR .
      REP DDDEF(APROCLIB)
          DA(SYS1.IBM.APROCLIB)
          SHR .
      REP DDDEF(AEZADBR1)
          DA(TCPIP.AEZADBR1)
          SHR .
      REP DDDEF(AEZAMAC1)
          DA(TCPIP.AEZAMAC1)
          SHR .
      REP DDDEF(AEZAMAC2)
          DA(TCPIP.AEZAMAC2)
          SHR .
      REP DDDEF(AEZAMAC3)
          DA(TCPIP.AEZAMAC3)
          SHR .
      REP DDDEF(AEZAMODS)
          DA(TCPIP.AEZAMODS)
          SHR .
      REP DDDEF(AEZARNT1)
          DA(TCPIP.AEZARNT1)
          SHR .
      REP DDDEF(AEZARNT2)
          DA(TCPIP.AEZARNT2)
          SHR .
      REP DDDEF(AEZARNT3)
          DA(TCPIP.AEZARNT3)
          SHR .
      REP DDDEF(AEZARNT4)
          DA(TCPIP.AEZARNT4)
          SHR .
      REP DDDEF(AEZAROE1)
          DA(TCPIP.AEZAROE1)
          SHR .
      REP DDDEF(AEZAROE2)
          DA(TCPIP.AEZAROE2)
          SHR .
      REP DDDEF(AEZAROE3)
          DA(TCPIP.AEZAROE3)
          SHR .
      REP DDDEF(AEZASMP1)
          DA(TCPIP.AEZASMP1)
          SHR .
      REP DDDEF(AEZAXLTD)
          DA(TCPIP.AEZAXLTD)
          SHR .
      REP DDDEF(AEZAXLTK)
          DA(TCPIP.AEZAXLTK)
          SHR .
      REP DDDEF(AEZAXLT1)
          DA(TCPIP.AEZAXLT1)
          SHR .
      REP DDDEF(AEZAXLT2)
          DA(TCPIP.AEZAXLT2)
          SHR .
      REP DDDEF(AEZAXLT3)
          DA(TCPIP.AEZAXLT3)
          SHR .
    ENDUCL.
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
  SET BDY(MVST100) .
    UCLIN .
      REP DDDEF(AAOPEXEC)
          DA(AOP.AAOPEXEC)
          SHR .
      REP DDDEF(AAOPHFS)
          DA(AOP.AAOPHFS)
          SHR .
      REP DDDEF(AAOPMENU)
          DA(AOP.AAOPMENU)
          SHR .
      REP DDDEF(AAOPMOD1)
          DA(AOP.AAOPMOD1)
          SHR .
      REP DDDEF(AAOPPENU)
          DA(AOP.AAOPPENU)
          SHR .
      REP DDDEF(SAOPEXEC)
          DA(AOP.SAOPEXEC)
          SHR .
      REP DDDEF(SAOPMENU)
          DA(AOP.SAOPMENU)
          SHR .
      REP DDDEF(SAOPPENU)
          DA(AOP.SAOPPENU)
          SHR .
      REP DDDEF(AASMMAC1)
          DA(ASM.AASMMAC1)
          SHR .
      REP DDDEF(AASMMAC2)
          DA(ASM.AASMMAC2)
          SHR .
      REP DDDEF(AASMMOD1)
          DA(ASM.AASMMOD1)
          SHR .
      REP DDDEF(AASMMOD2)
          DA(ASM.AASMMOD2)
          SHR .
      REP DDDEF(AASMPUT2)
          DA(ASM.AASMPUT2)
          SHR .
      REP DDDEF(AASMSAM1)
          DA(ASM.AASMSAM1)
          SHR .
      REP DDDEF(AASMSAM2)
          DA(ASM.AASMSAM2)
          SHR .
      REP DDDEF(SASMMAC1)
          DA(ASM.SASMMAC1)
          SHR .
      REP DDDEF(SASMMAC2)
          DA(ASM.SASMMAC2)
          SHR .
      REP DDDEF(SASMMOD1)
          DA(ASM.SASMMOD1)
          SHR .
      REP DDDEF(SASMMOD2)
          DA(ASM.SASMMOD2)
          SHR .
      REP DDDEF(SASMPUT2)
          DA(ASM.SASMPUT2)
          SHR .
      REP DDDEF(SASMSAM1)
          DA(ASM.SASMSAM1)
          SHR .
      REP DDDEF(SASMSAM2)
          DA(ASM.SASMSAM2)
          SHR .
      REP DDDEF(AASUACF)
          DA(ASU.AASUACF)
          SHR .
      REP DDDEF(AASUCIDL)
          DA(ASU.AASUCIDL)
          SHR .
      REP DDDEF(AASUEXEC)
          DA(ASU.AASUEXEC)
          SHR .
      REP DDDEF(AASUHDR)
          DA(ASU.AASUHDR)
          SHR .
      REP DDDEF(AASUHHDR)
          DA(ASU.AASUHHDR)
          SHR .
      REP DDDEF(AASUHLIB)
          DA(ASU.AASUHLIB)
          SHR .
      REP DDDEF(AASUHSAM)
          DA(ASU.AASUHSAM)
          SHR .
      REP DDDEF(AASUIDL)
          DA(ASU.AASUIDL)
          SHR .
      REP DDDEF(AASULINK)
          DA(ASU.AASULINK)
          SHR .
      REP DDDEF(AASUMENU)
          DA(ASU.AASUMENU)
          SHR .
      REP DDDEF(AASUPENU)
          DA(ASU.AASUPENU)
          SHR .
      REP DDDEF(AASUSAMP)
          DA(ASU.AASUSAMP)
          SHR .
      REP DDDEF(AASUSTUB)
          DA(ASU.AASUSTUB)
          SHR .
      REP DDDEF(AASUTLIB)
          DA(ASU.AASUTLIB)
          SHR .
      REP DDDEF(SASUACF)
          DA(ASU.SASUACF)
          SHR .
      REP DDDEF(SASUCIDL)
          DA(ASU.SASUCIDL)
          SHR .
      REP DDDEF(SASUEXEC)
          DA(ASU.SASUEXEC)
          SHR .
      REP DDDEF(SASUHDR)
          DA(ASU.SASUHDR)
          SHR .
      REP DDDEF(SASUIDL)
          DA(ASU.SASUIDL)
          SHR .
      REP DDDEF(SASUMENU)
          DA(ASU.SASUMENU)
          SHR .
      REP DDDEF(SASUPENU)
          DA(ASU.SASUPENU)
          SHR .
      REP DDDEF(SASUSAMP)
          DA(ASU.SASUSAMP)
          SHR .
      REP DDDEF(SASUSTUB)
          DA(ASU.SASUSTUB)
          SHR .
      REP DDDEF(SASUTLIB)
          DA(ASU.SASUTLIB)
          SHR .
      REP DDDEF(ABPAHFS)
          DA(BPA.ABPAHFS)
          SHR .
      REP DDDEF(ACBCCMP)
          DA(CBC.ACBCCMP)
          SHR .
      REP DDDEF(ACBCSR1)
          DA(CBC.ACBCSR1)
          SHR .
      REP DDDEF(ACCNCMP)
          DA(CBC.ACCNCMP)
          SHR .
      REP DDDEF(ACCNSR1)
          DA(CBC.ACCNSR1)
          SHR .
      REP DDDEF(ACLBDLL)
          DA(CBC.ACLBDLL)
          SHR .
      REP DDDEF(ACLBDLL2)
          DA(CBC.ACLBDLL2)
          SHR .
      REP DDDEF(ACLBHFS1)
          DA(CBC.ACLBHFS1)
          SHR .
      REP DDDEF(ACLBOBJ)
          DA(CBC.ACLBOBJ)
          SHR .
      REP DDDEF(ACLBOBJ2)
          DA(CBC.ACLBOBJ2)
          SHR .
      REP DDDEF(ACLBSR1)
          DA(CBC.ACLBSR1)
          SHR .
      REP DDDEF(ACLBSR2)
          DA(CBC.ACLBSR2)
          SHR .
      REP DDDEF(ACLBSR3)
          DA(CBC.ACLBSR3)
          SHR .
      REP DDDEF(ACLBSR4)
          DA(CBC.ACLBSR4)
          SHR .
      REP DDDEF(ACLDHFS1)
          DA(CBC.ACLDHFS1)
          SHR .
      REP DDDEF(ACLDSR1)
          DA(CBC.ACLDSR1)
          SHR .
      REP DDDEF(ACTVMOD)
          DA(CBC.ACTVMOD)
          SHR .
      REP DDDEF(ACTVSRC)
          DA(CBC.ACTVSRC)
          SHR .
      REP DDDEF(SCBCCMP)
          DA(CBC.SCBCCMP)
          SHR .
      REP DDDEF(SCBCDOC)
          DA(CBC.SCBCDOC)
          SHR .
      REP DDDEF(SCBCIMG)
          DA(CBC.SCBCIMG)
          SHR .
      REP DDDEF(SCBCJCL)
          DA(CBC.SCBCJCL)
          SHR .
      REP DDDEF(SCBCPNL)
          DA(CBC.SCBCPNL)
          SHR .
      REP DDDEF(SCBCPRC)
          DA(CBC.SCBCPRC)
          SHR .
      REP DDDEF(SCBCSAM)
          DA(CBC.SCBCSAM)
          SHR .
      REP DDDEF(SCBCSKL)
          DA(CBC.SCBCSKL)
          SHR .
      REP DDDEF(SCBCUTL)
          DA(CBC.SCBCUTL)
          SHR .
      REP DDDEF(SCCNCMP)
          DA(CBC.SCCNCMP)
          SHR .
      REP DDDEF(SCCNDOC)
          DA(CBC.SCCNDOC)
          SHR .
      REP DDDEF(SCCNIMG)
          DA(CBC.SCCNIMG)
          SHR .
      REP DDDEF(SCCNJCL)
          DA(CBC.SCCNJCL)
          SHR .
      REP DDDEF(SCCNPNL)
          DA(CBC.SCCNPNL)
          SHR .
      REP DDDEF(SCCNPRC)
          DA(CBC.SCCNPRC)
          SHR .
      REP DDDEF(SCCNSAM)
          DA(CBC.SCCNSAM)
          SHR .
      REP DDDEF(SCCNSKL)
          DA(CBC.SCCNSKL)
          SHR .
      REP DDDEF(SCCNUTL)
          DA(CBC.SCCNUTL)
          SHR .
      REP DDDEF(SCLBCPP)
          DA(CBC.SCLBCPP)
          SHR .
      REP DDDEF(SCLBCPP2)
          DA(CBC.SCLBCPP2)
          SHR .
      REP DDDEF(SCLBDLL)
          DA(CBC.SCLBDLL)
          SHR .
      REP DDDEF(SCLBDLL2)
          DA(CBC.SCLBDLL2)
          SHR .
      REP DDDEF(SCLBHC)
          DA(CBC.SCLBH.C)
          SHR .
      REP DDDEF(SCLBHH)
          DA(CBC.SCLBH.H)
          SHR .
      REP DDDEF(SCLBHPP)
          DA(CBC.SCLBH.HPP)
          SHR .
      REP DDDEF(SCLBHI)
          DA(CBC.SCLBH.INL)
          SHR .
      REP DDDEF(SCLBJCL)
          DA(CBC.SCLBJCL)
          SHR .
      REP DDDEF(SCLBSID)
          DA(CBC.SCLBSID)
          SHR .
      REP DDDEF(SCLDJCL)
          DA(CBC.SCLDJCL)
          SHR .
      REP DDDEF(SCTVJCL)
          DA(CBC.SCTVJCL)
          SHR .
      REP DDDEF(SCTVMOD)
          DA(CBC.SCTVMOD)
          SHR .
      REP DDDEF(ACDSHFS)
          DA(CDS.ACDSHFS)
          SHR .
      REP DDDEF(ACDSLINK)
          DA(CDS.ACDSLINK)
          SHR .
      REP DDDEF(ACDSSAMP)
          DA(CDS.ACDSSAMP)
          SHR .
      REP DDDEF(SCDSSAMP)
          DA(CDS.SCDSSAMP)
          SHR .
      REP DDDEF(AAFHMOD1)
          DA(CEE.AAFHMOD1)
          SHR .
      REP DDDEF(AAFHSRC1)
          DA(CEE.AAFHSRC1)
          SHR .
      REP DDDEF(ACEEMOD1)
          DA(CEE.ACEEMOD1)
          SHR .
      REP DDDEF(ACEEMOD2)
          DA(CEE.ACEEMOD2)
          SHR .
      REP DDDEF(ACEESRC1)
          DA(CEE.ACEESRC1)
          SHR .
      REP DDDEF(ACEESRC2)
          DA(CEE.ACEESRC2)
          SHR .
      REP DDDEF(ACEESRC3)
          DA(CEE.ACEESRC3)
          SHR .
      REP DDDEF(AEDCCPP1)
          DA(CEE.AEDCCPP1)
          SHR .
      REP DDDEF(AEDCHFS)
          DA(CEE.AEDCHFS)
          SHR .
      REP DDDEF(AEDCMOD1)
          DA(CEE.AEDCMOD1)
          SHR .
      REP DDDEF(AEDCMOD2)
          DA(CEE.AEDCMOD2)
          SHR .
      REP DDDEF(AEDCMSEP)
          DA(CEE.AEDCMSEP)
          SHR .
      REP DDDEF(AEDCOBJ1)
          DA(CEE.AEDCOBJ1)
          SHR .
      REP DDDEF(AEDCSRC6)
          DA(CEE.AEDCSRC6)
          SHR .
      REP DDDEF(AEDCSRC7)
          DA(CEE.AEDCSRC7)
          SHR .
      REP DDDEF(AIBMMOD3)
          DA(CEE.AIBMMOD3)
          SHR .
      REP DDDEF(AIBMSRC3)
          DA(CEE.AIBMSRC3)
          SHR .
      REP DDDEF(AIGZMOD1)
          DA(CEE.AIGZMOD1)
          SHR .
      REP DDDEF(AIGZSRC1)
          DA(CEE.AIGZSRC1)
          SHR .
      REP DDDEF(SAFHFORT)
          DA(CEE.SAFHFORT)
          SHR .
      REP DDDEF(SCEEBIND)
          DA(CEE.SCEEBIND)
          SHR .
      REP DDDEF(SCEEBND2)
          DA(CEE.SCEEBND2)
          SHR .
      REP DDDEF(SCEECICS)
          DA(CEE.SCEECICS)
          SHR .
      REP DDDEF(SCEECLST)
          DA(CEE.SCEECLST)
          SHR .
      REP DDDEF(SCEECMAP)
          DA(CEE.SCEECMAP)
          SHR .
      REP DDDEF(SCEECPP)
          DA(CEE.SCEECPP)
          SHR .
      REP DDDEF(SCEEGXLT)
          DA(CEE.SCEEGXLT)
          SHR .
      REP DDDEF(SCEEH)
          DA(CEE.SCEEH)
          SHR .
      REP DDDEF(SCEEHARP)
          DA(CEE.SCEEH.ARPA.H)
          SHR .
      REP DDDEF(SCEEHH)
          DA(CEE.SCEEH.H)
          SHR .
      REP DDDEF(SCEEHNET)
          DA(CEE.SCEEH.NET.H)
          SHR .
      REP DDDEF(SCEEHNEI)
          DA(CEE.SCEEH.NETINET.H)
          SHR .
      REP DDDEF(SCEEHSYS)
          DA(CEE.SCEEH.SYS.H)
          SHR .
      REP DDDEF(SCEEHT)
          DA(CEE.SCEEH.T)
          SHR .
      REP DDDEF(SCEELIB)
          DA(CEE.SCEELIB)
          SHR .
      REP DDDEF(PLIBASE)
          DA(CEE.SCEELKED)
          SHR .
      REP DDDEF(SCEELKED)
          DA(CEE.SCEELKED)
          SHR .
      REP DDDEF(SEDCBASE)
          DA(CEE.SCEELKED)
          SHR .
      REP DDDEF(SIBMBASE)
          DA(CEE.SCEELKED)
          SHR .
      REP DDDEF(SIBMLINK)
          DA(CEE.SCEELKED)
          SHR .
      REP DDDEF(SCEELKEX)
          DA(CEE.SCEELKEX)
          SHR .
      REP DDDEF(SCEELOCL)
          DA(CEE.SCEELOCL)
          SHR .
      REP DDDEF(SCEELOCX)
          DA(CEE.SCEELOCX)
          SHR .
      REP DDDEF(SCEELPA)
          DA(CEE.SCEELPA)
          SHR .
      REP DDDEF(SCEEMAC)
          DA(CEE.SCEEMAC)
          SHR .
      REP DDDEF(SCEEMSGP)
          DA(CEE.SCEEMSGP)
          SHR .
      REP DDDEF(SCEEOBJ)
          DA(CEE.SCEEOBJ)
          SHR .
      REP DDDEF(SCEEPROC)
          DA(CEE.SCEEPROC)
          SHR .
      REP DDDEF(SCEERTLS)
          DA(CEE.SCEERTLS)
          SHR .
      REP DDDEF(SCEERUN)
          DA(CEE.SCEERUN)
          SHR .
      REP DDDEF(SCEERUN2)
          DA(CEE.SCEERUN2)
          SHR .
      REP DDDEF(SCEESAMP)
          DA(CEE.SCEESAMP)
          SHR .
      REP DDDEF(SCEESPC)
          DA(CEE.SCEESPC)
          SHR .
      REP DDDEF(SCEESPCO)
          DA(CEE.SCEESPCO)
          SHR .
      REP DDDEF(SCEEUMAP)
          DA(CEE.SCEEUMAP)
          SHR .
      REP DDDEF(SCEEUTBL)
          DA(CEE.SCEEUTBL)
          SHR .
      REP DDDEF(SIBMCALL)
          DA(CEE.SIBMCALL)
          SHR .
      REP DDDEF(SIBMCAL2)
          DA(CEE.SIBMCAL2)
          SHR .
      REP DDDEF(SIBMMATH)
          DA(CEE.SIBMMATH)
          SHR .
      REP DDDEF(SIBMTASK)
          DA(CEE.SIBMTASK)
          SHR .
      REP DDDEF(ACIMHFS)
          DA(CIM.ACIMHFS)
          SHR .
      REP DDDEF(ACIMMOD1)
          DA(CIM.ACIMMOD1)
          SHR .
      REP DDDEF(ACIMPLUG)
          DA(CIM.ACIMPLUG)
          SHR .
      REP DDDEF(SCIMXML)
          DA(CIM.SCIMXML)
          SHR .
      REP DDDEF(ACMXDBRM)
          DA(CMX.ACMXDBRM)
          SHR .
      REP DDDEF(ACMXHFS)
          DA(CMX.ACMXHFS)
          SHR .
      REP DDDEF(SCMXDBRM)
          DA(CMX.SCMXDBRM)
          SHR .
      REP DDDEF(ACSFCLI0)
          DA(CSF.ACSFCLI0)
          SHR .
      REP DDDEF(ACSFHDRS)
          DA(CSF.ACSFHDRS)
          SHR .
      REP DDDEF(ACSFMOD0)
          DA(CSF.ACSFMOD0)
          SHR .
      REP DDDEF(ACSFMOD1)
          DA(CSF.ACSFMOD1)
          SHR .
      REP DDDEF(ACSFMSG0)
          DA(CSF.ACSFMSG0)
          SHR .
      REP DDDEF(ACSFOBJ)
          DA(CSF.ACSFOBJ)
          SHR .
      REP DDDEF(ACSFPNL0)
          DA(CSF.ACSFPNL0)
          SHR .
      REP DDDEF(ACSFSKL0)
          DA(CSF.ACSFSKL0)
          SHR .
      REP DDDEF(ACSFTLIB)
          DA(CSF.ACSFTLIB)
          SHR .
      REP DDDEF(SCSFCLI0)
          DA(CSF.SCSFCLI0)
          SHR .
      REP DDDEF(SCSFHDRS)
          DA(CSF.SCSFHDRS)
          SHR .
      REP DDDEF(SCSFMOD0)
          DA(CSF.SCSFMOD0)
          SHR .
      REP DDDEF(SCSFMOD1)
          DA(CSF.SCSFMOD1)
          SHR .
      REP DDDEF(SCSFMSG0)
          DA(CSF.SCSFMSG0)
          SHR .
      REP DDDEF(SCSFOBJ)
          DA(CSF.SCSFOBJ)
          SHR .
      REP DDDEF(SCSFPNL0)
          DA(CSF.SCSFPNL0)
          SHR .
      REP DDDEF(SCSFSKL0)
          DA(CSF.SCSFSKL0)
          SHR .
      REP DDDEF(SCSFTLIB)
          DA(CSF.SCSFTLIB)
          SHR .
      REP DDDEF(AECNEXP)
          DA(ECN.AECNEXP)
          SHR .
      REP DDDEF(AECNHETC)
          DA(ECN.AECNHETC)
          SHR .
      REP DDDEF(AECNHEXP)
          DA(ECN.AECNHEXP)
          SHR .
      REP DDDEF(AECNHINC)
          DA(ECN.AECNHINC)
          SHR .
      REP DDDEF(AECNHLBR)
          DA(ECN.AECNHLBR)
          SHR .
      REP DDDEF(AECNLINK)
          DA(ECN.AECNLINK)
          SHR .
      REP DDDEF(SECNEXP)
          DA(ECN.SECNEXP)
          SHR .
      REP DDDEF(AEPHBOK1)
          DA(EOX.AEPHBOK1)
          SHR .
      REP DDDEF(AEPHCLB1)
          DA(EOX.AEPHCLB1)
          SHR .
      REP DDDEF(AEPHDAT1)
          DA(EOX.AEPHDAT1)
          SHR .
      REP DDDEF(AEPHLOD1)
          DA(EOX.AEPHLOD1)
          SHR .
      REP DDDEF(AEPHMSG1)
          DA(EOX.AEPHMSG1)
          SHR .
      REP DDDEF(AEPHPNL1)
          DA(EOX.AEPHPNL1)
          SHR .
      REP DDDEF(AEPHSAM1)
          DA(EOX.AEPHSAM1)
          SHR .
      REP DDDEF(AEPHTBL1)
          DA(EOX.AEPHTBL1)
          SHR .
      REP DDDEF(SEPHBOK1)
          DA(EOX.SEPHBOK1)
          SHR .
      REP DDDEF(SEPHCLB1)
          DA(EOX.SEPHCLB1)
          SHR .
      REP DDDEF(SEPHDAT1)
          DA(EOX.SEPHDAT1)
          SHR .
      REP DDDEF(SEPHLOD1)
          DA(EOX.SEPHLOD1)
          SHR .
      REP DDDEF(SEPHMSG1)
          DA(EOX.SEPHMSG1)
          SHR .
      REP DDDEF(SEPHPNL1)
          DA(EOX.SEPHPNL1)
          SHR .
      REP DDDEF(SEPHSAM1)
          DA(EOX.SEPHSAM1)
          SHR .
      REP DDDEF(SEPHTBL1)
          DA(EOX.SEPHTBL1)
          SHR .
      REP DDDEF(AEOXFONT)
          DA(EOY.AEOXFONT)
          SHR .
      REP DDDEF(AEOXIENU)
          DA(EOY.AEOXIENU)
          SHR .
      REP DDDEF(AEOXOENU)
          DA(EOY.AEOXOENU)
          SHR .
      REP DDDEF(AEOX1ENU)
          DA(EOY.AEOX1ENU)
          SHR .
      REP DDDEF(AEOX2ENU)
          DA(EOY.AEOX2ENU)
          SHR .
      REP DDDEF(AEOX3ENU)
          DA(EOY.AEOX3ENU)
          SHR .
      REP DDDEF(AEOX4ENU)
          DA(EOY.AEOX4ENU)
          SHR .
      REP DDDEF(AEOYAENU)
          DA(EOY.AEOYAENU)
          SHR .
      REP DDDEF(AEOYBENU)
          DA(EOY.AEOYBENU)
          SHR .
      REP DDDEF(AEOYCLIB)
          DA(EOY.AEOYCLIB)
          SHR .
      REP DDDEF(AEOYGENU)
          DA(EOY.AEOYGENU)
          SHR .
      REP DDDEF(AEOYIENU)
          DA(EOY.AEOYIENU)
          SHR .
      REP DDDEF(AEOYIPRF)
          DA(EOY.AEOYIPRF)
          SHR .
      REP DDDEF(AEOYLENU)
          DA(EOY.AEOYLENU)
          SHR .
      REP DDDEF(AEOYLEXS)
          DA(EOY.AEOYLEXS)
          SHR .
      REP DDDEF(AEOYLOAD)
          DA(EOY.AEOYLOAD)
          SHR .
      REP DDDEF(AEOYMC30)
          DA(EOY.AEOYMC30)
          SHR .
      REP DDDEF(AEOYMC40)
          DA(EOY.AEOYMC40)
          SHR .
      REP DDDEF(AEOYMENU)
          DA(EOY.AEOYMENU)
          SHR .
      REP DDDEF(AEOYOENU)
          DA(EOY.AEOYOENU)
          SHR .
      REP DDDEF(AEOYPENU)
          DA(EOY.AEOYPENU)
          SHR .
      REP DDDEF(AEOYPROC)
          DA(EOY.AEOYPROC)
          SHR .
      REP DDDEF(AEOYSAMP)
          DA(EOY.AEOYSAMP)
          SHR .
      REP DDDEF(AEOYSENU)
          DA(EOY.AEOYSENU)
          SHR .
      REP DDDEF(AEOYTENU)
          DA(EOY.AEOYTENU)
          SHR .
      REP DDDEF(AEOYXENU)
          DA(EOY.AEOYXENU)
          SHR .
      REP DDDEF(AEOY1ENU)
          DA(EOY.AEOY1ENU)
          SHR .
      REP DDDEF(AEOY2ENU)
          DA(EOY.AEOY2ENU)
          SHR .
      REP DDDEF(AEOY4ENU)
          DA(EOY.AEOY4ENU)
          SHR .
      REP DDDEF(SEOXFONT)
          DA(EOY.SEOXFONT)
          SHR .
      REP DDDEF(SEOXIENU)
          DA(EOY.SEOXIENU)
          SHR .
      REP DDDEF(SEOXOENU)
          DA(EOY.SEOXOENU)
          SHR .
      REP DDDEF(SEOX1ENU)
          DA(EOY.SEOX1ENU)
          SHR .
      REP DDDEF(SEOX2ENU)
          DA(EOY.SEOX2ENU)
          SHR .
      REP DDDEF(SEOX3ENU)
          DA(EOY.SEOX3ENU)
          SHR .
      REP DDDEF(SEOX4ENU)
          DA(EOY.SEOX4ENU)
          SHR .
      REP DDDEF(SEOYAENU)
          DA(EOY.SEOYAENU)
          SHR .
      REP DDDEF(SEOYBENU)
          DA(EOY.SEOYBENU)
          SHR .
      REP DDDEF(SEOYCLIB)
          DA(EOY.SEOYCLIB)
          SHR .
      REP DDDEF(SEOYGENU)
          DA(EOY.SEOYGENU)
          SHR .
      REP DDDEF(SEOYIENU)
          DA(EOY.SEOYIENU)
          SHR .
      REP DDDEF(SEOYIPRF)
          DA(EOY.SEOYIPRF)
          SHR .
      REP DDDEF(SEOYLENU)
          DA(EOY.SEOYLENU)
          SHR .
      REP DDDEF(SEOYLEXS)
          DA(EOY.SEOYLEXS)
          SHR .
      REP DDDEF(SEOYLOAD)
          DA(EOY.SEOYLOAD)
          SHR .
      REP DDDEF(SEOYLPA)
          DA(EOY.SEOYLPA)
          SHR .
      REP DDDEF(SEOYMC30)
          DA(EOY.SEOYMC30)
          SHR .
      REP DDDEF(SEOYMC40)
          DA(EOY.SEOYMC40)
          SHR .
      REP DDDEF(SEOYMENU)
          DA(EOY.SEOYMENU)
          SHR .
      REP DDDEF(SEOYOENU)
          DA(EOY.SEOYOENU)
          SHR .
      REP DDDEF(SEOYPENU)
          DA(EOY.SEOYPENU)
          SHR .
      REP DDDEF(SEOYPROC)
          DA(EOY.SEOYPROC)
          SHR .
      REP DDDEF(SEOYSAMP)
          DA(EOY.SEOYSAMP)
          SHR .
      REP DDDEF(SEOYSENU)
          DA(EOY.SEOYSENU)
          SHR .
      REP DDDEF(SEOYTENU)
          DA(EOY.SEOYTENU)
          SHR .
      REP DDDEF(SEOYXENU)
          DA(EOY.SEOYXENU)
          SHR .
      REP DDDEF(SEOY1ENU)
          DA(EOY.SEOY1ENU)
          SHR .
      REP DDDEF(SEOY2ENU)
          DA(EOY.SEOY2ENU)
          SHR .
      REP DDDEF(SEOY4ENU)
          DA(EOY.SEOY4ENU)
          SHR .
      REP DDDEF(AEPHBOOK)
          DA(EPH.AEPHBOOK)
          SHR .
      REP DDDEF(AEPHCLIB)
          DA(EPH.AEPHCLIB)
          SHR .
      REP DDDEF(AEPHGIF)
          DA(EPH.AEPHGIF)
          SHR .
      REP DDDEF(AEPHLOAD)
          DA(EPH.AEPHLOAD)
          SHR .
      REP DDDEF(AEPHSAMP)
          DA(EPH.AEPHSAMP)
          SHR .
      REP DDDEF(SEPHCLIB)
          DA(EPH.SEPHCLIB)
          SHR .
      REP DDDEF(SEPHSAMP)
          DA(EPH.SEPHSAMP)
          SHR .
      REP DDDEF(SEPHTAB)
          DA(EPH.SEPHTAB)
          SHR .
      REP DDDEF(AEQAMOD2)
          DA(EQAW.AEQAMOD2)
          SHR .
      REP DDDEF(AEQASRC2)
          DA(EQAW.AEQASRC2)
          SHR .
      REP DDDEF(SEQAAUTH)
          DA(EQAW.SEQAAUTH)
          SHR .
      REP DDDEF(SEQADUM)
          DA(EQAW.SEQADUM)
          SHR .
      REP DDDEF(SEQAMOD)
          DA(EQAW.SEQAMOD)
          SHR .
      REP DDDEF(SEQASAMP)
          DA(EQAW.SEQASAMP)
          SHR .
      REP DDDEF(AEUVACF)
          DA(EUV.AEUVACF)
          SHR .
      REP DDDEF(AEUVDBRM)
          DA(EUV.AEUVDBRM)
          SHR .
      REP DDDEF(AEUVEXEC)
          DA(EUV.AEUVEXEC)
          SHR .
      REP DDDEF(AEUVEXP)
          DA(EUV.AEUVEXP)
          SHR .
      REP DDDEF(AEUVHDCP)
          DA(EUV.AEUVHDCP)
          SHR .
      REP DDDEF(AEUVHDR)
          DA(EUV.AEUVHDR)
          SHR .
      REP DDDEF(AEUVHDRK)
          DA(EUV.AEUVHDRK)
          SHR .
      REP DDDEF(AEUVHETC)
          DA(EUV.AEUVHETC)
          SHR .
      REP DDDEF(AEUVHINC)
          DA(EUV.AEUVHINC)
          SHR .
      REP DDDEF(AEUVHLBR)
          DA(EUV.AEUVHLBR)
          SHR .
      REP DDDEF(AEUVHTCL)
          DA(EUV.AEUVHTCL)
          SHR .
      REP DDDEF(AEUVHXMP)
          DA(EUV.AEUVHXMP)
          SHR .
      REP DDDEF(AEUVIDL)
          DA(EUV.AEUVIDL)
          SHR .
      REP DDDEF(AEUVLIB)
          DA(EUV.AEUVLIB)
          SHR .
      REP DDDEF(AEUVLIBK)
          DA(EUV.AEUVLIBK)
          SHR .
      REP DDDEF(AEUVLIBS)
          DA(EUV.AEUVLIBS)
          SHR .
      REP DDDEF(AEUVLINK)
          DA(EUV.AEUVLINK)
          SHR .
      REP DDDEF(AEUVMSG)
          DA(EUV.AEUVMSG)
          SHR .
      REP DDDEF(AEUVPNL)
          DA(EUV.AEUVPNL)
          SHR .
      REP DDDEF(AEUVPRC)
          DA(EUV.AEUVPRC)
          SHR .
      REP DDDEF(SEUVACF)
          DA(EUV.SEUVACF)
          SHR .
      REP DDDEF(SEUVDBRM)
          DA(EUV.SEUVDBRM)
          SHR .
      REP DDDEF(SEUVEXEC)
          DA(EUV.SEUVEXEC)
          SHR .
      REP DDDEF(SEUVEXP)
          DA(EUV.SEUVEXP)
          SHR .
      REP DDDEF(SEUVHDR)
          DA(EUV.SEUVHDR)
          SHR .
      REP DDDEF(SEUVHDRK)
          DA(EUV.SEUVHDRK)
          SHR .
      REP DDDEF(SEUVIDL)
          DA(EUV.SEUVIDL)
          SHR .
      REP DDDEF(SEUVLIB)
          DA(EUV.SEUVLIB)
          SHR .
      REP DDDEF(SEUVLIBK)
          DA(EUV.SEUVLIBK)
          SHR .
      REP DDDEF(SEUVLIBS)
          DA(EUV.SEUVLIBS)
          SHR .
      REP DDDEF(SEUVMSG)
          DA(EUV.SEUVMSG)
          SHR .
      REP DDDEF(SEUVPNL)
          DA(EUV.SEUVPNL)
          SHR .
      REP DDDEF(SEUVPRC)
          DA(EUV.SEUVPRC)
          SHR .
      REP DDDEF(AEUVFEXC)
          DA(EUVF.AEUVFEXC)
          SHR .
      REP DDDEF(AEUVFEXP)
          DA(EUVF.AEUVFEXP)
          SHR .
      REP DDDEF(AEUVFHDR)
          DA(EUVF.AEUVFHDR)
          SHR .
      REP DDDEF(AEUVFHFS)
          DA(EUVF.AEUVFHFS)
          SHR .
      REP DDDEF(AEUVFLIB)
          DA(EUVF.AEUVFLIB)
          SHR .
      REP DDDEF(AEUVFLNK)
          DA(EUVF.AEUVFLNK)
          SHR .
      REP DDDEF(AEUVFSAM)
          DA(EUVF.AEUVFSAM)
          SHR .
      REP DDDEF(SEUVFEXC)
          DA(EUVF.SEUVFEXC)
          SHR .
      REP DDDEF(SEUVFEXP)
          DA(EUVF.SEUVFEXP)
          SHR .
      REP DDDEF(SEUVFHDR)
          DA(EUVF.SEUVFHDR)
          SHR .
      REP DDDEF(SEUVFLIB)
          DA(EUVF.SEUVFLIB)
          SHR .
      REP DDDEF(SEUVFLNK)
          DA(EUVF.SEUVFLNK)
          SHR .
      REP DDDEF(SEUVFLPA)
          DA(EUVF.SEUVFLPA)
          SHR .
      REP DDDEF(SEUVFSAM)
          DA(EUVF.SEUVFSAM)
          SHR .
      REP DDDEF(AEPWBENU)
          DA(FFST.V120ESA.AEPWBENU)
          SHR .
      REP DDDEF(AEPWMOD1)
          DA(FFST.V120ESA.AEPWMOD1)
          SHR .
      REP DDDEF(AEPWSRC1)
          DA(FFST.V120ESA.AEPWSRC1)
          SHR .
      REP DDDEF(SEPWBENU)
          DA(FFST.V120ESA.SEPWBENU)
          SHR .
      REP DDDEF(SEPWCENU)
          DA(FFST.V120ESA.SEPWCENU)
          SHR .
      REP DDDEF(SEPWMAC1)
          DA(FFST.V120ESA.SEPWMAC1)
          SHR .
      REP DDDEF(SEPWMOD1)
          DA(FFST.V120ESA.SEPWMOD1)
          SHR .
      REP DDDEF(SEPWMOD2)
          DA(FFST.V120ESA.SEPWMOD2)
          SHR .
      REP DDDEF(SEPWMOD3)
          DA(FFST.V120ESA.SEPWMOD3)
          SHR .
      REP DDDEF(SEPWMOD4)
          DA(FFST.V120ESA.SEPWMOD4)
          SHR .
      REP DDDEF(SEPWPENU)
          DA(FFST.V120ESA.SEPWPENU)
          SHR .
      REP DDDEF(SEPWSRC1)
          DA(FFST.V120ESA.SEPWSRC1)
          SHR .
      REP DDDEF(SEPWSRC2)
          DA(FFST.V120ESA.SEPWSRC2)
          SHR .
      REP DDDEF(AADMCDA)
          DA(GDDM.AADMCDA)
          SHR .
      REP DDDEF(AADMCFO)
          DA(GDDM.AADMCFO)
          SHR .
      REP DDDEF(AADMDAT)
          DA(GDDM.AADMDAT)
          SHR .
      REP DDDEF(AADMGDF)
          DA(GDDM.AADMGDF)
          SHR .
      REP DDDEF(AADMIMG)
          DA(GDDM.AADMIMG)
          SHR .
      REP DDDEF(AADMMAP)
          DA(GDDM.AADMMAP)
          SHR .
      REP DDDEF(AADMMOD)
          DA(GDDM.AADMMOD)
          SHR .
      REP DDDEF(AADMMSG)
          DA(GDDM.AADMMSG)
          SHR .
      REP DDDEF(AADMOPS)
          DA(GDDM.AADMOPS)
          SHR .
      REP DDDEF(AADMPCF)
          DA(GDDM.AADMPCF)
          SHR .
      REP DDDEF(AADMPNL)
          DA(GDDM.AADMPNL)
          SHR .
      REP DDDEF(AADMSAM)
          DA(GDDM.AADMSAM)
          SHR .
      REP DDDEF(AADMSYM)
          DA(GDDM.AADMSYM)
          SHR .
      REP DDDEF(SADMCDA)
          DA(GDDM.SADMCDA)
          SHR .
      REP DDDEF(SADMCFO)
          DA(GDDM.SADMCFO)
          SHR .
      REP DDDEF(SADMDAT)
          DA(GDDM.SADMDAT)
          SHR .
      REP DDDEF(SADMGDF)
          DA(GDDM.SADMGDF)
          SHR .
      REP DDDEF(SADMIMG)
          DA(GDDM.SADMIMG)
          SHR .
      REP DDDEF(SADMMAP)
          DA(GDDM.SADMMAP)
          SHR .
      REP DDDEF(SADMMOD)
          DA(GDDM.SADMMOD)
          SHR .
      REP DDDEF(SADMMSG)
          DA(GDDM.SADMMSG)
          SHR .
      REP DDDEF(SADMOPS)
          DA(GDDM.SADMOPS)
          SHR .
      REP DDDEF(SADMPCF)
          DA(GDDM.SADMPCF)
          SHR .
      REP DDDEF(SADMPNL)
          DA(GDDM.SADMPNL)
          SHR .
      REP DDDEF(SADMSAM)
          DA(GDDM.SADMSAM)
          SHR .
      REP DDDEF(SADMSYM)
          DA(GDDM.SADMSYM)
          SHR .
      REP DDDEF(AGIMCLS0)
          DA(GIM.AGIMCLS0)
          SHR .
      REP DDDEF(AGIMMENU)
          DA(GIM.AGIMMENU)
          SHR .
      REP DDDEF(AGIMPENU)
          DA(GIM.AGIMPENU)
          SHR .
      REP DDDEF(AGIMSENU)
          DA(GIM.AGIMSENU)
          SHR .
      REP DDDEF(AGIMTENU)
          DA(GIM.AGIMTENU)
          SHR .
      REP DDDEF(SGIMCLS0)
          DA(GIM.SGIMCLS0)
          SHR .
      REP DDDEF(SGIMLMD0)
          DA(GIM.SGIMLMD0)
          SHR .
      REP DDDEF(SGIMMENU)
          DA(GIM.SGIMMENU)
          SHR .
      REP DDDEF(SGIMPENU)
          DA(GIM.SGIMPENU)
          SHR .
      REP DDDEF(SGIMSENU)
          DA(GIM.SGIMSENU)
          SHR .
      REP DDDEF(SGIMTENU)
          DA(GIM.SGIMTENU)
          SHR .
      REP DDDEF(AGLDEXEC)
          DA(GLD.AGLDEXEC)
          SHR .
      REP DDDEF(AGLDEXPC)
          DA(GLD.AGLDEXPC)
          SHR .
      REP DDDEF(AGLDHCLI)
          DA(GLD.AGLDHCLI)
          SHR .
      REP DDDEF(AGLDHDRC)
          DA(GLD.AGLDHDRC)
          SHR .
      REP DDDEF(AGLDHFS)
          DA(GLD.AGLDHFS)
          SHR .
      REP DDDEF(AGLDLNK)
          DA(GLD.AGLDLNK)
          SHR .
      REP DDDEF(AGLDSAMP)
          DA(GLD.AGLDSAMP)
          SHR .
      REP DDDEF(SGLDEXEC)
          DA(GLD.SGLDEXEC)
          SHR .
      REP DDDEF(SGLDEXPC)
          DA(GLD.SGLDEXPC)
          SHR .
      REP DDDEF(SGLDHDRC)
          DA(GLD.SGLDHDRC)
          SHR .
      REP DDDEF(SGLDLNK)
          DA(GLD.SGLDLNK)
          SHR .
      REP DDDEF(SGLDSAMP)
          DA(GLD.SGLDSAMP)
          SHR .
      REP DDDEF(AGSKHFS)
          DA(GSK.AGSKHFS)
          SHR .
      REP DDDEF(AGSKLINK)
          DA(GSK.AGSKLINK)
          SHR .
      REP DDDEF(AGSKSAMP)
          DA(GSK.AGSKSAMP)
          SHR .
      REP DDDEF(SGSKLOAD)
          DA(GSK.SGSKLOAD)
          SHR .
      REP DDDEF(SGSKSAMP)
          DA(GSK.SGSKSAMP)
          SHR .
      REP DDDEF(AEEQINST)
          DA(HCM.AEEQINST)
          SHR .
      REP DDDEF(SEEQINST)
          DA(HCM.SEEQINST)
          SHR .
      REP DDDEF(AICAHETC)
          DA(ICA.AICAHETC)
          SHR .
      REP DDDEF(AICAHLBR)
          DA(ICA.AICAHLBR)
          SHR .
      REP DDDEF(AICAHSAM)
          DA(ICA.AICAHSAM)
          SHR .
      REP DDDEF(AICAHSCR)
          DA(ICA.AICAHSCR)
          SHR .
      REP DDDEF(AICALINK)
          DA(ICA.AICALINK)
          SHR .
      REP DDDEF(AICAPROC)
          DA(ICA.AICAPROC)
          SHR .
      REP DDDEF(AICASAMP)
          DA(ICA.AICASAMP)
          SHR .
      REP DDDEF(SICALMOD)
          DA(ICA.SICALMOD)
          SHR .
      REP DDDEF(SICAPROC)
          DA(ICA.SICAPROC)
          SHR .
      REP DDDEF(SICASAMP)
          DA(ICA.SICASAMP)
          SHR .
      REP DDDEF(ICQABTXT)
          DA(ICQ.ICQABTXT)
          SHR .
      REP DDDEF(ICQCCLIB)
          DA(ICQ.ICQCCLIB)
          SHR .
      REP DDDEF(ICQILIB)
          DA(ICQ.ICQILIB)
          SHR .
      REP DDDEF(ICQMLIB)
          DA(ICQ.ICQMLIB)
          SHR .
      REP DDDEF(ICQPLIB)
          DA(ICQ.ICQPLIB)
          SHR .
      REP DDDEF(ICQSLIB)
          DA(ICQ.ICQSLIB)
          SHR .
      REP DDDEF(ICQTABLS)
          DA(ICQ.ICQTABLS)
          SHR .
      REP DDDEF(AIMOHFS1)
          DA(IMO.AIMOHFS1)
          SHR .
      REP DDDEF(AIMOJCL1)
          DA(IMO.AIMOJCL1)
          SHR .
      REP DDDEF(AIMOMOD1)
          DA(IMO.AIMOMOD1)
          SHR .
      REP DDDEF(SIMOJCL1)
          DA(IMO.SIMOJCL1)
          SHR .
      REP DDDEF(SIMOMOD1)
          DA(IMO.SIMOMOD1)
          SHR .
      REP DDDEF(AIMWEMOD)
          DA(IMW.AIMWEMOD)
          SHR .
      REP DDDEF(AIMWHENU)
          DA(IMW.AIMWHENU)
          SHR .
      REP DDDEF(AIMWSAM1)
          DA(IMW.AIMWSAM1)
          SHR .
      REP DDDEF(SIMWSDCK)
          DA(IMW.SIMWSDCK)
          SHR .
      REP DDDEF(SIMWTBL1)
          DA(IMW.SIMWTBL1)
          SHR .
      REP DDDEF(AEVIMOD6)
          DA(ING.AEVIMOD6)
          SHR .
      REP DDDEF(AEVIMOD7)
          DA(ING.AEVIMOD7)
          SHR .
      REP DDDEF(AEVIMOD8)
          DA(ING.AEVIMOD8)
          SHR .
      REP DDDEF(AINGIMOD)
          DA(ING.AINGIMOD)
          SHR .
      REP DDDEF(AINGIMSG)
          DA(ING.AINGIMSG)
          SHR .
      REP DDDEF(AINGINST)
          DA(ING.AINGINST)
          SHR .
      REP DDDEF(AINGIPDB)
          DA(ING.AINGIPDB)
          SHR .
      REP DDDEF(AINGIPNL)
          DA(ING.AINGIPNL)
          SHR .
      REP DDDEF(AINGIREX)
          DA(ING.AINGIREX)
          SHR .
      REP DDDEF(AINGISKL)
          DA(ING.AINGISKL)
          SHR .
      REP DDDEF(AINGITBL)
          DA(ING.AINGITBL)
          SHR .
      REP DDDEF(AINGMODC)
          DA(ING.AINGMODC)
          SHR .
      REP DDDEF(AINGMOD1)
          DA(ING.AINGMOD1)
          SHR .
      REP DDDEF(AINGMOD2)
          DA(ING.AINGMOD2)
          SHR .
      REP DDDEF(AINGNMSG)
          DA(ING.AINGNMSG)
          SHR .
      REP DDDEF(AINGNPNL)
          DA(ING.AINGNPNL)
          SHR .
      REP DDDEF(AINGNPRF)
          DA(ING.AINGNPRF)
          SHR .
      REP DDDEF(AINGNPRM)
          DA(ING.AINGNPRM)
          SHR .
      REP DDDEF(AINGNREX)
          DA(ING.AINGNREX)
          SHR .
      REP DDDEF(AINGPWS1)
          DA(ING.AINGPWS1)
          SHR .
      REP DDDEF(AINGSAMP)
          DA(ING.AINGSAMP)
          SHR .
      REP DDDEF(AINGSRC)
          DA(ING.AINGSRC)
          SHR .
      REP DDDEF(SEVIMOD6)
          DA(ING.SEVIMOD6)
          SHR .
      REP DDDEF(SEVIMOD7)
          DA(ING.SEVIMOD7)
          SHR .
      REP DDDEF(SEVIMOD8)
          DA(ING.SEVIMOD8)
          SHR .
      REP DDDEF(SINGIMOD)
          DA(ING.SINGIMOD)
          SHR .
      REP DDDEF(SINGIMSG)
          DA(ING.SINGIMSG)
          SHR .
      REP DDDEF(SINGINST)
          DA(ING.SINGINST)
          SHR .
      REP DDDEF(SINGIPDB)
          DA(ING.SINGIPDB)
          SHR .
      REP DDDEF(SINGIPNL)
          DA(ING.SINGIPNL)
          SHR .
      REP DDDEF(SINGIREX)
          DA(ING.SINGIREX)
          SHR .
      REP DDDEF(SINGISKL)
          DA(ING.SINGISKL)
          SHR .
      REP DDDEF(SINGITBL)
          DA(ING.SINGITBL)
          SHR .
      REP DDDEF(SINGMODC)
          DA(ING.SINGMODC)
          SHR .
      REP DDDEF(SINGMOD1)
          DA(ING.SINGMOD1)
          SHR .
      REP DDDEF(SINGMOD2)
          DA(ING.SINGMOD2)
          SHR .
      REP DDDEF(SINGMOD3)
          DA(ING.SINGMOD3)
          SHR .
      REP DDDEF(SINGNMSG)
          DA(ING.SINGNMSG)
          SHR .
      REP DDDEF(SINGNPNL)
          DA(ING.SINGNPNL)
          SHR .
      REP DDDEF(SINGNPRF)
          DA(ING.SINGNPRF)
          SHR .
      REP DDDEF(SINGNPRM)
          DA(ING.SINGNPRM)
          SHR .
      REP DDDEF(SINGNREX)
          DA(ING.SINGNREX)
          SHR .
      REP DDDEF(SINGPWS1)
          DA(ING.SINGPWS1)
          SHR .
      REP DDDEF(SINGSAMP)
          DA(ING.SINGSAMP)
          SHR .
      REP DDDEF(SINGSRC)
          DA(ING.SINGSRC)
          SHR .
      REP DDDEF(AIOAIBIN)
          DA(IOA.AIOAIBIN)
          SHR .
      REP DDDEF(AIOAJAVA)
          DA(IOA.AIOAJAVA)
          SHR .
      REP DDDEF(AIOALMOD)
          DA(IOA.AIOALMOD)
          SHR .
      REP DDDEF(AIOAMMOD)
          DA(IOA.AIOAMMOD)
          SHR .
      REP DDDEF(AIOASAMP)
          DA(IOA.AIOASAMP)
          SHR .
      REP DDDEF(SIOAIBIN)
          DA(IOA.SIOAIBIN)
          SHR .
      REP DDDEF(SIOAJAVA)
          DA(IOA.SIOAJAVA)
          SHR .
      REP DDDEF(SIOAMMOD)
          DA(IOA.SIOAMMOD)
          SHR .
      REP DDDEF(SIOASAMP)
          DA(IOA.SIOASAMP)
          SHR .
      REP DDDEF(AIOEEXEC)
          DA(IOE.AIOEEXEC)
          SHR .
      REP DDDEF(AIOEHLIB)
          DA(IOE.AIOEHLIB)
          SHR .
      REP DDDEF(AIOEHSAM)
          DA(IOE.AIOEHSAM)
          SHR .
      REP DDDEF(AIOEHSHL)
          DA(IOE.AIOEHSHL)
          SHR .
      REP DDDEF(AIOEHSRC)
          DA(IOE.AIOEHSRC)
          SHR .
      REP DDDEF(AIOELMOD)
          DA(IOE.AIOELMOD)
          SHR .
      REP DDDEF(AIOEMSGE)
          DA(IOE.AIOEMSGE)
          SHR .
      REP DDDEF(AIOEPNLE)
          DA(IOE.AIOEPNLE)
          SHR .
      REP DDDEF(AIOEPROC)
          DA(IOE.AIOEPROC)
          SHR .
      REP DDDEF(AIOESAMP)
          DA(IOE.AIOESAMP)
          SHR .
      REP DDDEF(SIOEEXEC)
          DA(IOE.SIOEEXEC)
          SHR .
      REP DDDEF(SIOELMOD)
          DA(IOE.SIOELMOD)
          SHR .
      REP DDDEF(SIOEMSGE)
          DA(IOE.SIOEMSGE)
          SHR .
      REP DDDEF(SIOEPNLE)
          DA(IOE.SIOEPNLE)
          SHR .
      REP DDDEF(SIOEPROC)
          DA(IOE.SIOEPROC)
          SHR .
      REP DDDEF(SIOESAMP)
          DA(IOE.SIOESAMP)
          SHR .
      REP DDDEF(AISFEXEC)
          DA(ISF.AISFEXEC)
          SHR .
      REP DDDEF(AISFHELP)
          DA(ISF.AISFHELP)
          SHR .
      REP DDDEF(AISFJCL)
          DA(ISF.AISFJCL)
          SHR .
      REP DDDEF(AISFLINK)
          DA(ISF.AISFLINK)
          SHR .
      REP DDDEF(AISFLOAD)
          DA(ISF.AISFLOAD)
          SHR .
      REP DDDEF(AISFMLIB)
          DA(ISF.AISFMLIB)
          SHR .
      REP DDDEF(AISFPLIB)
          DA(ISF.AISFPLIB)
          SHR .
      REP DDDEF(AISFSLIB)
          DA(ISF.AISFSLIB)
          SHR .
      REP DDDEF(AISFSRC)
          DA(ISF.AISFSRC)
          SHR .
      REP DDDEF(AISFTLIB)
          DA(ISF.AISFTLIB)
          SHR .
      REP DDDEF(SISFEXEC)
          DA(ISF.SISFEXEC)
          SHR .
      REP DDDEF(SISFHELP)
          DA(ISF.SISFHELP)
          SHR .
      REP DDDEF(SISFJCL)
          DA(ISF.SISFJCL)
          SHR .
      REP DDDEF(SISFLINK)
          DA(ISF.SISFLINK)
          SHR .
      REP DDDEF(SISFLOAD)
          DA(ISF.SISFLOAD)
          SHR .
      REP DDDEF(SISFLPA)
          DA(ISF.SISFLPA)
          SHR .
      REP DDDEF(SISFMLIB)
          DA(ISF.SISFMLIB)
          SHR .
      REP DDDEF(SISFPLIB)
          DA(ISF.SISFPLIB)
          SHR .
      REP DDDEF(SISFSLIB)
          DA(ISF.SISFSLIB)
          SHR .
      REP DDDEF(SISFSRC)
          DA(ISF.SISFSRC)
          SHR .
      REP DDDEF(SISFTLIB)
          DA(ISF.SISFTLIB)
          SHR .
      REP DDDEF(AISPALIB)
          DA(ISP.AISPALIB)
          SHR .
      REP DDDEF(AISPCLIB)
          DA(ISP.AISPCLIB)
          SHR .
      REP DDDEF(AISPEXEC)
          DA(ISP.AISPEXEC)
          SHR .
      REP DDDEF(AISPGENU)
          DA(ISP.AISPGENU)
          SHR .
      REP DDDEF(AISPGMLI)
          DA(ISP.AISPGMLI)
          SHR .
      REP DDDEF(AISPGUI)
          DA(ISP.AISPGUI)
          SHR .
      REP DDDEF(AISPHELP)
          DA(ISP.AISPHELP)
          SHR .
      REP DDDEF(AISPMACS)
          DA(ISP.AISPMACS)
          SHR .
      REP DDDEF(AISPMENU)
          DA(ISP.AISPMENU)
          SHR .
      REP DDDEF(AISPMOD1)
          DA(ISP.AISPMOD1)
          SHR .
      REP DDDEF(AISPPENU)
          DA(ISP.AISPPENU)
          SHR .
      REP DDDEF(AISPSAMP)
          DA(ISP.AISPSAMP)
          SHR .
      REP DDDEF(AISPSASC)
          DA(ISP.AISPSASC)
          SHR .
      REP DDDEF(AISPSENU)
          DA(ISP.AISPSENU)
          SHR .
      REP DDDEF(AISPSLIB)
          DA(ISP.AISPSLIB)
          SHR .
      REP DDDEF(AISPTENU)
          DA(ISP.AISPTENU)
          SHR .
      REP DDDEF(SISPALIB)
          DA(ISP.SISPALIB)
          SHR .
      REP DDDEF(SISPCLIB)
          DA(ISP.SISPCLIB)
          SHR .
      REP DDDEF(SISPEXEC)
          DA(ISP.SISPEXEC)
          SHR .
      REP DDDEF(SISPGENU)
          DA(ISP.SISPGENU)
          SHR .
      REP DDDEF(SISPGMLI)
          DA(ISP.SISPGMLI)
          SHR .
      REP DDDEF(SISPGUI)
          DA(ISP.SISPGUI)
          SHR .
      REP DDDEF(SISPHELP)
          DA(ISP.SISPHELP)
          SHR .
      REP DDDEF(SISPLOAD)
          DA(ISP.SISPLOAD)
          SHR .
      REP DDDEF(SISPLPA)
          DA(ISP.SISPLPA)
          SHR .
      REP DDDEF(SISPMACS)
          DA(ISP.SISPMACS)
          SHR .
      REP DDDEF(SISPMENU)
          DA(ISP.SISPMENU)
          SHR .
      REP DDDEF(SISPPENU)
          DA(ISP.SISPPENU)
          SHR .
      REP DDDEF(SISPSAMP)
          DA(ISP.SISPSAMP)
          SHR .
      REP DDDEF(SISPSASC)
          DA(ISP.SISPSASC)
          SHR .
      REP DDDEF(SISPSENU)
          DA(ISP.SISPSENU)
          SHR .
      REP DDDEF(SISPSLIB)
          DA(ISP.SISPSLIB)
          SHR .
      REP DDDEF(SISPTENU)
          DA(ISP.SISPTENU)
          SHR .
      REP DDDEF(AAJVSMP1)
          DA(JAVA.AAJVSMP1)
          SHR .
      REP DDDEF(AAJVS390)
          DA(JAVA.AAJVS390)
          SHR .
      REP DDDEF(SAJVSMP1)
          DA(JAVA.SAJVSMP1)
          SHR .
      REP DDDEF(ABNJPNL1)
          DA(NETVIEW.ABNJPNL1)
          SHR .
      REP DDDEF(ABNJPNL2)
          DA(NETVIEW.ABNJPNL2)
          SHR .
      REP DDDEF(ABNJSRC1)
          DA(NETVIEW.ABNJSRC1)
          SHR .
      REP DDDEF(ACNMCLST)
          DA(NETVIEW.ACNMCLST)
          SHR .
      REP DDDEF(ACNMINST)
          DA(NETVIEW.ACNMINST)
          SHR .
      REP DDDEF(ACNMLINK)
          DA(NETVIEW.ACNMLINK)
          SHR .
      REP DDDEF(ACNMMAC1)
          DA(NETVIEW.ACNMMAC1)
          SHR .
      REP DDDEF(ACNMPNL1)
          DA(NETVIEW.ACNMPNL1)
          SHR .
      REP DDDEF(ACNMSAMP)
          DA(NETVIEW.ACNMSAMP)
          SHR .
      REP DDDEF(ADSIMSG1)
          DA(NETVIEW.ADSIMSG1)
          SHR .
      REP DDDEF(ADSIOPEN)
          DA(NETVIEW.ADSIOPEN)
          SHR .
      REP DDDEF(ADSIPARM)
          DA(NETVIEW.ADSIPARM)
          SHR .
      REP DDDEF(ADSIPRF)
          DA(NETVIEW.ADSIPRF)
          SHR .
      REP DDDEF(ADUIMSG1)
          DA(NETVIEW.ADUIMSG1)
          SHR .
      REP DDDEF(AEKGCAS1)
          DA(NETVIEW.AEKGCAS1)
          SHR .
      REP DDDEF(AEKGLANG)
          DA(NETVIEW.AEKGLANG)
          SHR .
      REP DDDEF(AEKGLUTB)
          DA(NETVIEW.AEKGLUTB)
          SHR .
      REP DDDEF(AEKGMOD1)
          DA(NETVIEW.AEKGMOD1)
          SHR .
      REP DDDEF(AEKGPNL1)
          DA(NETVIEW.AEKGPNL1)
          SHR .
      REP DDDEF(AEKGSMP1)
          DA(NETVIEW.AEKGSMP1)
          SHR .
      REP DDDEF(AEZLCLST)
          DA(NETVIEW.AEZLCLST)
          SHR .
      REP DDDEF(AEZLINST)
          DA(NETVIEW.AEZLINST)
          SHR .
      REP DDDEF(AEZLLINK)
          DA(NETVIEW.AEZLLINK)
          SHR .
      REP DDDEF(AEZLPNLU)
          DA(NETVIEW.AEZLPNLU)
          SHR .
      REP DDDEF(AEZLSAMP)
          DA(NETVIEW.AEZLSAMP)
          SHR .
      REP DDDEF(AFLBDAT1)
          DA(NETVIEW.AFLBDAT1)
          SHR .
      REP DDDEF(ANVULIB)
          DA(NETVIEW.ANVULIB)
          SHR .
      REP DDDEF(BNJPNL1)
          DA(NETVIEW.BNJPNL1)
          SHR .
      REP DDDEF(BNJPNL2)
          DA(NETVIEW.BNJPNL2)
          SHR .
      REP DDDEF(BNJSRC1)
          DA(NETVIEW.BNJSRC1)
          SHR .
      REP DDDEF(CNMCLST)
          DA(NETVIEW.CNMCLST)
          SHR .
      REP DDDEF(CNMINST)
          DA(NETVIEW.CNMINST)
          SHR .
      REP DDDEF(CNMLINK)
          DA(NETVIEW.CNMLINK)
          SHR .
      REP DDDEF(CNMPNL1)
          DA(NETVIEW.CNMPNL1)
          SHR .
      REP DDDEF(CNMSAMP)
          DA(NETVIEW.CNMSAMP)
          SHR .
      REP DDDEF(DSIPARM)
          DA(NETVIEW.DSIPARM)
          SHR .
      REP DDDEF(DSIPRF)
          DA(NETVIEW.DSIPRF)
          SHR .
      REP DDDEF(NVULIB)
          DA(NETVIEW.NVULIB)
          SHR .
      REP DDDEF(SCNMLNK1)
          DA(NETVIEW.SCNMLNK1)
          SHR .
      REP DDDEF(SCNMLPA1)
          DA(NETVIEW.SCNMLPA1)
          SHR .
      REP DDDEF(SCNMMAC1)
          DA(NETVIEW.SCNMMAC1)
          SHR .
      REP DDDEF(SDSIMSG1)
          DA(NETVIEW.SDSIMSG1)
          SHR .
      REP DDDEF(SDSIOPEN)
          DA(NETVIEW.SDSIOPEN)
          SHR .
      REP DDDEF(SDUIMSG1)
          DA(NETVIEW.SDUIMSG1)
          SHR .
      REP DDDEF(SEKGCAS1)
          DA(NETVIEW.SEKGCAS1)
          SHR .
      REP DDDEF(SEKGLANG)
          DA(NETVIEW.SEKGLANG)
          SHR .
      REP DDDEF(SEKGLNK1)
          DA(NETVIEW.SEKGLNK1)
          SHR .
      REP DDDEF(SEKGLUTB)
          DA(NETVIEW.SEKGLUTB)
          SHR .
      REP DDDEF(SEKGMOD1)
          DA(NETVIEW.SEKGMOD1)
          SHR .
      REP DDDEF(SEKGMOD2)
          DA(NETVIEW.SEKGMOD2)
          SHR .
      REP DDDEF(SEKGPNL1)
          DA(NETVIEW.SEKGPNL1)
          SHR .
      REP DDDEF(SEKGSMP1)
          DA(NETVIEW.SEKGSMP1)
          SHR .
      REP DDDEF(SEZLCLST)
          DA(NETVIEW.SEZLCLST)
          SHR .
      REP DDDEF(SEZLINST)
          DA(NETVIEW.SEZLINST)
          SHR .
      REP DDDEF(SEZLLINK)
          DA(NETVIEW.SEZLLINK)
          SHR .
      REP DDDEF(SEZLPNLU)
          DA(NETVIEW.SEZLPNLU)
          SHR .
      REP DDDEF(SEZLSAMP)
          DA(NETVIEW.SEZLSAMP)
          SHR .
      REP DDDEF(SFLBDAT1)
          DA(NETVIEW.SFLBDAT1)
          SHR .
      REP DDDEF(SMPLTS)
          DA(SMPE.MVST100.SMPLTS)
          SHR .
      REP DDDEF(AACBCNTL)
          DA(SYS1.AACBCNTL)
          SHR .
      REP DDDEF(AADFMAC1)
          DA(SYS1.AADFMAC1)
          SHR .
      REP DDDEF(AADRLIB)
          DA(SYS1.AADRLIB)
          SHR .
      REP DDDEF(AADRYLIB)
          DA(SYS1.AADRYLIB)
          SHR .
      REP DDDEF(AAPPDAT2)
          DA(SYS1.AAPPDAT2)
          SHR .
      REP DDDEF(AAPPDAT4)
          DA(SYS1.AAPPDAT4)
          SHR .
      REP DDDEF(AAPPMOD1)
          DA(SYS1.AAPPMOD1)
          SHR .
      REP DDDEF(AAPPMOD2)
          DA(SYS1.AAPPMOD2)
          SHR .
      REP DDDEF(AAPPSAMP)
          DA(SYS1.AAPPSAMP)
          SHR .
      REP DDDEF(ABDTCLI0)
          DA(SYS1.ABDTCLI0)
          SHR .
      REP DDDEF(ABDTHELP)
          DA(SYS1.ABDTHELP)
          SHR .
      REP DDDEF(ABDTMAC)
          DA(SYS1.ABDTMAC)
          SHR .
      REP DDDEF(ABDTMOD)
          DA(SYS1.ABDTMOD)
          SHR .
      REP DDDEF(ABDTMSG)
          DA(SYS1.ABDTMSG)
          SHR .
      REP DDDEF(ABDTPNL0)
          DA(SYS1.ABDTPNL0)
          SHR .
      REP DDDEF(ABDTSAMP)
          DA(SYS1.ABDTSAMP)
          SHR .
      REP DDDEF(ABLSCLI0)
          DA(SYS1.ABLSCLI0)
          SHR .
      REP DDDEF(ABLSKEL0)
          DA(SYS1.ABLSKEL0)
          SHR .
      REP DDDEF(ABLSMSG0)
          DA(SYS1.ABLSMSG0)
          SHR .
      REP DDDEF(ABLSPNL0)
          DA(SYS1.ABLSPNL0)
          SHR .
      REP DDDEF(ABLSTBL0)
          DA(SYS1.ABLSTBL0)
          SHR .
      REP DDDEF(ABMFMOD0)
          DA(SYS1.ABMFMOD0)
          SHR .
      REP DDDEF(ABPXEXEC)
          DA(SYS1.ABPXEXEC)
          SHR .
      REP DDDEF(ABPXMENU)
          DA(SYS1.ABPXMENU)
          SHR .
      REP DDDEF(ABPXMOD1)
          DA(SYS1.ABPXMOD1)
          SHR .
      REP DDDEF(ABPXPENU)
          DA(SYS1.ABPXPENU)
          SHR .
      REP DDDEF(ABPXSPC)
          DA(SYS1.ABPXSPC)
          SHR .
      REP DDDEF(ABPXTENU)
          DA(SYS1.ABPXTENU)
          SHR .
      REP DDDEF(ACBDCLST)
          DA(SYS1.ACBDCLST)
          SHR .
      REP DDDEF(ACBDEHFS)
          DA(SYS1.ACBDEHFS)
          SHR .
      REP DDDEF(ACBDHENU)
          DA(SYS1.ACBDHENU)
          SHR .
      REP DDDEF(ACBDMENU)
          DA(SYS1.ACBDMENU)
          SHR .
      REP DDDEF(ACBDMOD1)
          DA(SYS1.ACBDMOD1)
          SHR .
      REP DDDEF(ACBDMOD2)
          DA(SYS1.ACBDMOD2)
          SHR .
      REP DDDEF(ACBDPENU)
          DA(SYS1.ACBDPENU)
          SHR .
      REP DDDEF(ACBDTEMP)
          DA(SYS1.ACBDTEMP)
          SHR .
      REP DDDEF(ACBDTENU)
          DA(SYS1.ACBDTENU)
          SHR .
      REP DDDEF(ACBRDBRM)
          DA(SYS1.ACBRDBRM)
          SHR .
      REP DDDEF(ACBRMOD0)
          DA(SYS1.ACBRMOD0)
          SHR .
      REP DDDEF(ACDMMOD0)
          DA(SYS1.ACDMMOD0)
          SHR .
      REP DDDEF(ACDRMODS)
          DA(SYS1.ACDRMODS)
          SHR .
      REP DDDEF(ACDRTABL)
          DA(SYS1.ACDRTABL)
          SHR .
      REP DDDEF(ACLMMOD0)
          DA(SYS1.ACLMMOD0)
          SHR .
      REP DDDEF(ACMDLIB)
          DA(SYS1.ACMDLIB)
          SHR .
      REP DDDEF(ACSSLIB)
          DA(SYS1.ACSSLIB)
          SHR .
      REP DDDEF(ACUNHF)
          DA(SYS1.ACUNHF)
          SHR .
      REP DDDEF(ACUNIMG)
          DA(SYS1.ACUNIMG)
          SHR .
      REP DDDEF(ACUNJCL)
          DA(SYS1.ACUNJCL)
          SHR .
      REP DDDEF(ACUNMAC)
          DA(SYS1.ACUNMAC)
          SHR .
      REP DDDEF(ACUNMENU)
          DA(SYS1.ACUNMENU)
          SHR .
      REP DDDEF(ACUNMJPN)
          DA(SYS1.ACUNMJPN)
          SHR .
      REP DDDEF(ACUNMOD)
          DA(SYS1.ACUNMOD)
          SHR .
      REP DDDEF(ACUNREXX)
          DA(SYS1.ACUNREXX)
          SHR .
      REP DDDEF(ACUNSAMP)
          DA(SYS1.ACUNSAMP)
          SHR .
      REP DDDEF(ACUNTBL)
          DA(SYS1.ACUNTBL)
          SHR .
      REP DDDEF(ADBBLIB)
          DA(SYS1.ADBBLIB)
          SHR .
      REP DDDEF(ADFMAC1)
          DA(SYS1.ADFMAC1)
          SHR .
      REP DDDEF(ADFPMOD0)
          DA(SYS1.ADFPMOD0)
          SHR .
      REP DDDEF(ADFQMLIB)
          DA(SYS1.ADFQMLIB)
          SHR .
      REP DDDEF(ADFQPLIB)
          DA(SYS1.ADFQPLIB)
          SHR .
      REP DDDEF(ADFQPSRC)
          DA(SYS1.ADFQPSRC)
          SHR .
      REP DDDEF(ADGTCLIB)
          DA(SYS1.ADGTCLIB)
          SHR .
      REP DDDEF(ADGTLLIB)
          DA(SYS1.ADGTLLIB)
          SHR .
      REP DDDEF(ADGTMLIB)
          DA(SYS1.ADGTMLIB)
          SHR .
      REP DDDEF(ADGTPLIB)
          DA(SYS1.ADGTPLIB)
          SHR .
      REP DDDEF(ADGTPSRC)
          DA(SYS1.ADGTPSRC)
          SHR .
      REP DDDEF(ADGTSLIB)
          DA(SYS1.ADGTSLIB)
          SHR .
      REP DDDEF(ADGTTLIB)
          DA(SYS1.ADGTTLIB)
          SHR .
      REP DDDEF(ADGTTSRC)
          DA(SYS1.ADGTTSRC)
          SHR .
      REP DDDEF(ADMSSVM)
          DA(SYS1.ADMSSVM)
          SHR .
      REP DDDEF(AEDGEXE1)
          DA(SYS1.AEDGEXE1)
          SHR .
      REP DDDEF(AEDGMENU)
          DA(SYS1.AEDGMENU)
          SHR .
      REP DDDEF(AEDGMOD1)
          DA(SYS1.AEDGMOD1)
          SHR .
      REP DDDEF(AEDGPENU)
          DA(SYS1.AEDGPENU)
          SHR .
      REP DDDEF(AEDGPSRC)
          DA(SYS1.AEDGPSRC)
          SHR .
      REP DDDEF(AEDGSRC1)
          DA(SYS1.AEDGSRC1)
          SHR .
      REP DDDEF(AERBCLS)
          DA(SYS1.AERBCLS)
          SHR .
      REP DDDEF(AERBMAC1)
          DA(SYS1.AERBMAC1)
          SHR .
      REP DDDEF(AERBMENU)
          DA(SYS1.AERBMENU)
          SHR .
      REP DDDEF(AERBMOD1)
          DA(SYS1.AERBMOD1)
          SHR .
      REP DDDEF(AERBPENU)
          DA(SYS1.AERBPENU)
          SHR .
      REP DDDEF(AERBPWSV)
          DA(SYS1.AERBPWSV)
          SHR .
      REP DDDEF(AERBT)
          DA(SYS1.AERBT)
          SHR .
      REP DDDEF(AERBTENU)
          DA(SYS1.AERBTENU)
          SHR .
      REP DDDEF(AFOMDATA)
          DA(SYS1.AFOMDATA)
          SHR .
      REP DDDEF(AFOMHDRS)
          DA(SYS1.AFOMHDRS)
          SHR .
      REP DDDEF(AFOMHFS)
          DA(SYS1.AFOMHFS)
          SHR .
      REP DDDEF(AFOMMOD1)
          DA(SYS1.AFOMMOD1)
          SHR .
      REP DDDEF(AFOMOBJ)
          DA(SYS1.AFOMOBJ)
          SHR .
      REP DDDEF(AGDEMOD0)
          DA(SYS1.AGDEMOD0)
          SHR .
      REP DDDEF(AGENLIB)
          DA(SYS1.AGENLIB)
          SHR .
      REP DDDEF(AGFTAJL1)
          DA(SYS1.AGFTAJL1)
          SHR .
      REP DDDEF(AGFTAMD1)
          DA(SYS1.AGFTAMD1)
          SHR .
      REP DDDEF(AGFUMOD1)
          DA(SYS1.AGFUMOD1)
          SHR .
      REP DDDEF(AHASMAC)
          DA(SYS1.AHASMAC)
          SHR .
      REP DDDEF(AHASMENU)
          DA(SYS1.AHASMENU)
          SHR .
      REP DDDEF(AHASMOD)
          DA(SYS1.AHASMOD)
          SHR .
      REP DDDEF(AHASPARM)
          DA(SYS1.AHASPARM)
          SHR .
      REP DDDEF(AHASPNL0)
          DA(SYS1.AHASPNL0)
          SHR .
      REP DDDEF(AHASSAMP)
          DA(SYS1.AHASSAMP)
          SHR .
      REP DDDEF(AHASSRC)
          DA(SYS1.AHASSRC)
          SHR .
      REP DDDEF(AHELP)
          DA(SYS1.AHELP)
          SHR .
      REP DDDEF(AHELPENP)
          DA(SYS1.AHELPENP)
          SHR .
      REP DDDEF(AICECLIB)
          DA(SYS1.AICECLIB)
          SHR .
      REP DDDEF(AICELIB)
          DA(SYS1.AICELIB)
          SHR .
      REP DDDEF(AICEMENU)
          DA(SYS1.AICEMENU)
          SHR .
      REP DDDEF(AICEPENU)
          DA(SYS1.AICEPENU)
          SHR .
      REP DDDEF(AICESAMP)
          DA(SYS1.AICESAMP)
          SHR .
      REP DDDEF(AICESLIB)
          DA(SYS1.AICESLIB)
          SHR .
      REP DDDEF(AICESRCE)
          DA(SYS1.AICESRCE)
          SHR .
      REP DDDEF(AICETLIB)
          DA(SYS1.AICETLIB)
          SHR .
      REP DDDEF(AICEUSER)
          DA(SYS1.AICEUSER)
          SHR .
      REP DDDEF(AICQAB)
          DA(SYS1.AICQAB)
          SHR .
      REP DDDEF(AICQILIB)
          DA(SYS1.AICQILIB)
          SHR .
      REP DDDEF(AICQMAC1)
          DA(SYS1.AICQMAC1)
          SHR .
      REP DDDEF(AICQMAC2)
          DA(SYS1.AICQMAC2)
          SHR .
      REP DDDEF(AICQMAC3)
          DA(SYS1.AICQMAC3)
          SHR .
      REP DDDEF(AICQMAC4)
          DA(SYS1.AICQMAC4)
          SHR .
      REP DDDEF(AICQMAC5)
          DA(SYS1.AICQMAC5)
          SHR .
      REP DDDEF(AIEAHDR)
          DA(SYS1.AIEAHDR)
          SHR .
      REP DDDEF(AIEWMOD0)
          DA(SYS1.AIEWMOD0)
          SHR .
      REP DDDEF(AIFALIB)
          DA(SYS1.AIFALIB)
          SHR .
      REP DDDEF(AIGDVBS1)
          DA(SYS1.AIGDVBS1)
          SHR .
      REP DDDEF(AIKYHFS)
          DA(SYS1.AIKYHFS)
          SHR .
      REP DDDEF(AIMAGE)
          DA(SYS1.AIMAGE)
          SHR .
      REP DDDEF(AIMFMOD0)
          DA(SYS1.AIMFMOD0)
          SHR .
      REP DDDEF(AINDLMD)
          DA(SYS1.AINDLMD)
          SHR .
      REP DDDEF(AISTASGD)
          DA(SYS1.AISTASGD)
          SHR .
      REP DDDEF(AISTASN1)
          DA(SYS1.AISTASN1)
          SHR .
      REP DDDEF(AISTCMIP)
          DA(SYS1.AISTCMIP)
          SHR .
      REP DDDEF(AISTDAT1)
          DA(SYS1.AISTDAT1)
          SHR .
      REP DDDEF(AISTDAT2)
          DA(SYS1.AISTDAT2)
          SHR .
      REP DDDEF(AISTGDMO)
          DA(SYS1.AISTGDMO)
          SHR .
      REP DDDEF(AISTMAC1)
          DA(SYS1.AISTMAC1)
          SHR .
      REP DDDEF(AITYHFS)
          DA(SYS1.AITYHFS)
          SHR .
      REP DDDEF(ALINKLIB)
          DA(SYS1.ALINKLIB)
          SHR .
      REP DDDEF(ALPALIB)
          DA(SYS1.ALPALIB)
          SHR .
      REP DDDEF(AMACLIB)
          DA(SYS1.AMACLIB)
          SHR .
      REP DDDEF(AMIGLIB)
          DA(SYS1.AMIGLIB)
          SHR .
      REP DDDEF(AMODGEN)
          DA(SYS1.AMODGEN)
          SHR .
      REP DDDEF(AMSGENP)
          DA(SYS1.AMSGENP)
          SHR .
      REP DDDEF(AMSGENU)
          DA(SYS1.AMSGENU)
          SHR .
      REP DDDEF(ANFSLIB)
          DA(SYS1.ANFSLIB)
          SHR .
      REP DDDEF(ANFSMAC)
          DA(SYS1.ANFSMAC)
          SHR .
      REP DDDEF(ANFSSAMP)
          DA(SYS1.ANFSSAMP)
          SHR .
      REP DDDEF(ANFSTARB)
          DA(SYS1.ANFSTARB)
          SHR .
      REP DDDEF(ANUCLEUS)
          DA(SYS1.ANUCLEUS)
          SHR .
      REP DDDEF(AOSACB)
          DA(SYS1.AOSACB)
          SHR .
      REP DDDEF(AOSA0)
          DA(SYS1.AOSA0)
          SHR .
      REP DDDEF(AOSA1)
          DA(SYS1.AOSA1)
          SHR .
      REP DDDEF(AOSBN)
          DA(SYS1.AOSBN)
          SHR .
      REP DDDEF(AOSB0)
          DA(SYS1.AOSB0)
          SHR .
      REP DDDEF(AOSB3)
          DA(SYS1.AOSB3)
          SHR .
      REP DDDEF(AOSCA)
          DA(SYS1.AOSCA)
          SHR .
      REP DDDEF(AOSCD)
          DA(SYS1.AOSCD)
          SHR .
      REP DDDEF(AOSCE)
          DA(SYS1.AOSCE)
          SHR .
      REP DDDEF(AOSC2)
          DA(SYS1.AOSC2)
          SHR .
      REP DDDEF(AOSC5)
          DA(SYS1.AOSC5)
          SHR .
      REP DDDEF(AOSC6)
          DA(SYS1.AOSC6)
          SHR .
      REP DDDEF(AOSD0)
          DA(SYS1.AOSD0)
          SHR .
      REP DDDEF(AOSD7)
          DA(SYS1.AOSD7)
          SHR .
      REP DDDEF(AOSD8)
          DA(SYS1.AOSD8)
          SHR .
      REP DDDEF(AOSG0)
          DA(SYS1.AOSG0)
          SHR .
      REP DDDEF(AOSJSC)
          DA(SYS1.AOSJSC)
          SHR .
      REP DDDEF(AOST3)
          DA(SYS1.AOST3)
          SHR .
      REP DDDEF(AOST4)
          DA(SYS1.AOST4)
          SHR .
      REP DDDEF(AOSU0)
          DA(SYS1.AOSU0)
          SHR .
      REP DDDEF(AOSXCF)
          DA(SYS1.AOSXCF)
          SHR .
      REP DDDEF(AOS00)
          DA(SYS1.AOS00)
          SHR .
      REP DDDEF(AOS04)
          DA(SYS1.AOS04)
          SHR .
      REP DDDEF(AOS05)
          DA(SYS1.AOS05)
          SHR .
      REP DDDEF(AOS06)
          DA(SYS1.AOS06)
          SHR .
      REP DDDEF(AOS11)
          DA(SYS1.AOS11)
          SHR .
      REP DDDEF(AOS12)
          DA(SYS1.AOS12)
          SHR .
      REP DDDEF(AOS24)
          DA(SYS1.AOS24)
          SHR .
      REP DDDEF(AOS26)
          DA(SYS1.AOS26)
          SHR .
      REP DDDEF(AOS28)
          DA(SYS1.AOS28)
          SHR .
      REP DDDEF(AOS32)
          DA(SYS1.AOS32)
          SHR .
      REP DDDEF(ASAMPLIB)
          DA(SYS1.ASAMPLIB)
          SHR .
      REP DDDEF(ASSFMOD0)
          DA(SYS1.ASSFMOD0)
          SHR .
      REP DDDEF(ATSOMAC)
          DA(SYS1.ATSOMAC)
          SHR .
      REP DDDEF(AUADS)
          DA(SYS1.AUADS)
          SHR .
      REP DDDEF(CBRDBRM)
          DA(SYS1.CBRDBRM)
          SHR .
      REP DDDEF(CIPLIB)
          DA(SYS1.CIPLIB)
          SHR .
      REP DDDEF(CMDLIB)
          DA(SYS1.CMDLIB)
          SHR .
      REP DDDEF(CSSLIB)
          DA(SYS1.CSSLIB)
          SHR .
      REP DDDEF(DBBLIB)
          DA(SYS1.DBBLIB)
          SHR .
      REP DDDEF(DFQLLIB)
          DA(SYS1.DFQLLIB)
          SHR .
      REP DDDEF(DFQMLIB)
          DA(SYS1.DFQMLIB)
          SHR .
      REP DDDEF(DFQPLIB)
          DA(SYS1.DFQPLIB)
          SHR .
      REP DDDEF(DGTCLIB)
          DA(SYS1.DGTCLIB)
          SHR .
      REP DDDEF(DGTLLIB)
          DA(SYS1.DGTLLIB)
          SHR .
      REP DDDEF(DGTMLIB)
          DA(SYS1.DGTMLIB)
          SHR .
      REP DDDEF(DGTPLIB)
          DA(SYS1.DGTPLIB)
          SHR .
      REP DDDEF(DGTSLIB)
          DA(SYS1.DGTSLIB)
          SHR .
      REP DDDEF(DGTTLIB)
          DA(SYS1.DGTTLIB)
          SHR .
      REP DDDEF(HELP)
          DA(SYS1.HELP)
          SHR .
      REP DDDEF(HELPENP)
          DA(SYS1.HELPENP)
          SHR .
      REP DDDEF(HHRFCLST)
          DA(SYS1.HHRFCLST)
          SHR .
      REP DDDEF(HHRFMSG)
          DA(SYS1.HHRFMSG)
          SHR .
      REP DDDEF(HHRFPANL)
          DA(SYS1.HHRFPANL)
          SHR .
      REP DDDEF(HHRFSKEL)
          DA(SYS1.HHRFSKEL)
          SHR .
      REP DDDEF(HRFCLST)
          DA(SYS1.HRFCLST)
          SHR .
      REP DDDEF(HRFMSG)
          DA(SYS1.HRFMSG)
          SHR .
      REP DDDEF(HRFPANL)
          DA(SYS1.HRFPANL)
          SHR .
      REP DDDEF(HRFSKEL)
          DA(SYS1.HRFSKEL)
          SHR .
      REP DDDEF(APARMLIB)
          DA(SYS1.IBM.APARMLIB)
          SHR .
      REP DDDEF(APROCLIB)
          DA(SYS1.IBM.APROCLIB)
          SHR .
      REP DDDEF(PARMLIB)
          DA(SYS1.IBM.PARMLIB)
          SHR .
      REP DDDEF(PROCLIB)
          DA(SYS1.IBM.PROCLIB)
          SHR .
      REP DDDEF(IGDVBS1)
          DA(SYS1.IGDVBS1)
          SHR .
      REP DDDEF(IMAGELIB)
          DA(SYS1.IMAGELIB)
          SHR .
      REP DDDEF(ISAMLPA)
          DA(SYS1.ISAMLPA)
          SHR .
      REP DDDEF(LINKLIB)
          DA(SYS1.LINKLIB)
          SHR .
      REP DDDEF(LPALIB)
          DA(SYS1.LPALIB)
          SHR .
      REP DDDEF(MACLIB)
          DA(SYS1.MACLIB)
          SHR .
      REP DDDEF(MIGLIB)
          DA(SYS1.MIGLIB)
          SHR .
      REP DDDEF(MODGEN)
          DA(SYS1.MODGEN)
          SHR .
      REP DDDEF(MSGENP)
          DA(SYS1.MSGENP)
          SHR .
      REP DDDEF(MSGENU)
          DA(SYS1.MSGENU)
          SHR .
      REP DDDEF(NFSLIB)
          DA(SYS1.NFSLIB)
          SHR .
      REP DDDEF(NFSMAC)
          DA(SYS1.NFSMAC)
          SHR .
      REP DDDEF(NFSSAMP)
          DA(SYS1.NFSSAMP)
          SHR .
      REP DDDEF(NFSTARB)
          DA(SYS1.NFSTARB)
          SHR .
      REP DDDEF(NUCLEUS)
          DA(SYS1.NUCLEUS)
          SHR .
      REP DDDEF(SACBCNTL)
          DA(SYS1.SACBCNTL)
          SHR .
      REP DDDEF(SADRYLIB)
          DA(SYS1.SADRYLIB)
          SHR .
      REP DDDEF(SAMPLIB)
          DA(SYS1.SAMPLIB)
          SHR .
      REP DDDEF(SAPPDAT2)
          DA(SYS1.SAPPDAT2)
          SHR .
      REP DDDEF(SAPPDAT4)
          DA(SYS1.SAPPDAT4)
          SHR .
      REP DDDEF(SAPPMOD1)
          DA(SYS1.SAPPMOD1)
          SHR .
      REP DDDEF(SAPPSAMP)
          DA(SYS1.SAPPSAMP)
          SHR .
      REP DDDEF(SBDTCLI0)
          DA(SYS1.SBDTCLI0)
          SHR .
      REP DDDEF(SBDTCMD)
          DA(SYS1.SBDTCMD)
          SHR .
      REP DDDEF(SBDTHELP)
          DA(SYS1.SBDTHELP)
          SHR .
      REP DDDEF(SBDTLIB)
          DA(SYS1.SBDTLIB)
          SHR .
      REP DDDEF(SBDTLINK)
          DA(SYS1.SBDTLINK)
          SHR .
      REP DDDEF(SBDTLPA)
          DA(SYS1.SBDTLPA)
          SHR .
      REP DDDEF(SBDTMAC)
          DA(SYS1.SBDTMAC)
          SHR .
      REP DDDEF(SBDTMSG)
          DA(SYS1.SBDTMSG)
          SHR .
      REP DDDEF(SBDTPNL0)
          DA(SYS1.SBDTPNL0)
          SHR .
      REP DDDEF(SBDTSAMP)
          DA(SYS1.SBDTSAMP)
          SHR .
      REP DDDEF(SBLSCLI0)
          DA(SYS1.SBLSCLI0)
          SHR .
      REP DDDEF(SBLSKEL0)
          DA(SYS1.SBLSKEL0)
          SHR .
      REP DDDEF(SBLSMSG0)
          DA(SYS1.SBLSMSG0)
          SHR .
      REP DDDEF(SBLSPNL0)
          DA(SYS1.SBLSPNL0)
          SHR .
      REP DDDEF(SBLSTBL0)
          DA(SYS1.SBLSTBL0)
          SHR .
      REP DDDEF(SBPXEXEC)
          DA(SYS1.SBPXEXEC)
          SHR .
      REP DDDEF(SBPXMENU)
          DA(SYS1.SBPXMENU)
          SHR .
      REP DDDEF(SBPXPENU)
          DA(SYS1.SBPXPENU)
          SHR .
      REP DDDEF(SBPXTENU)
          DA(SYS1.SBPXTENU)
          SHR .
      REP DDDEF(SCBDCLST)
          DA(SYS1.SCBDCLST)
          SHR .
      REP DDDEF(SCBDHENU)
          DA(SYS1.SCBDHENU)
          SHR .
      REP DDDEF(SCBDMENU)
          DA(SYS1.SCBDMENU)
          SHR .
      REP DDDEF(SCBDPENU)
          DA(SYS1.SCBDPENU)
          SHR .
      REP DDDEF(SCBDTEMP)
          DA(SYS1.SCBDTEMP)
          SHR .
      REP DDDEF(SCBDTENU)
          DA(SYS1.SCBDTENU)
          SHR .
      REP DDDEF(SCDRTABL)
          DA(SYS1.SCDRTABL)
          SHR .
      REP DDDEF(SCUNHF)
          DA(SYS1.SCUNHF)
          SHR .
      REP DDDEF(SCUNIMG)
          DA(SYS1.SCUNIMG)
          SHR .
      REP DDDEF(SCUNJCL)
          DA(SYS1.SCUNJCL)
          SHR .
      REP DDDEF(SCUNMENU)
          DA(SYS1.SCUNMENU)
          SHR .
      REP DDDEF(SCUNMJPN)
          DA(SYS1.SCUNMJPN)
          SHR .
      REP DDDEF(SCUNREXX)
          DA(SYS1.SCUNREXX)
          SHR .
      REP DDDEF(SCUNTBL)
          DA(SYS1.SCUNTBL)
          SHR .
      REP DDDEF(SDFQPSRC)
          DA(SYS1.SDFQPSRC)
          SHR .
      REP DDDEF(SDGTPSRC)
          DA(SYS1.SDGTPSRC)
          SHR .
      REP DDDEF(SDGTTSRC)
          DA(SYS1.SDGTTSRC)
          SHR .
      REP DDDEF(SDMSSVM)
          DA(SYS1.SDMSSVM)
          SHR .
      REP DDDEF(SDMSSVMS)
          DA(SYS1.SDMSSVMS)
          SHR .
      REP DDDEF(SDWWDLPA)
          DA(SYS1.SDWWDLPA)
          SHR .
      REP DDDEF(SEDGEXE1)
          DA(SYS1.SEDGEXE1)
          SHR .
      REP DDDEF(SEDGMENU)
          DA(SYS1.SEDGMENU)
          SHR .
      REP DDDEF(SEDGPENU)
          DA(SYS1.SEDGPENU)
          SHR .
      REP DDDEF(SEDGPSRC)
          DA(SYS1.SEDGPSRC)
          SHR .
      REP DDDEF(SERBCLS)
          DA(SYS1.SERBCLS)
          SHR .
      REP DDDEF(SERBLINK)
          DA(SYS1.SERBLINK)
          SHR .
      REP DDDEF(SERBLPA)
          DA(SYS1.SERBLPA)
          SHR .
      REP DDDEF(SERBMENU)
          DA(SYS1.SERBMENU)
          SHR .
      REP DDDEF(SERBPENU)
          DA(SYS1.SERBPENU)
          SHR .
      REP DDDEF(SERBPWSV)
          DA(SYS1.SERBPWSV)
          SHR .
      REP DDDEF(SERBT)
          DA(SYS1.SERBT)
          SHR .
      REP DDDEF(SERBTENU)
          DA(SYS1.SERBTENU)
          SHR .
      REP DDDEF(SFOMDATA)
          DA(SYS1.SFOMDATA)
          SHR .
      REP DDDEF(SFOMHDRS)
          DA(SYS1.SFOMHDRS)
          SHR .
      REP DDDEF(SFOMOBJ)
          DA(SYS1.SFOMOBJ)
          SHR .
      REP DDDEF(SHASLINK)
          DA(SYS1.SHASLINK)
          SHR .
      REP DDDEF(SHASMAC)
          DA(SYS1.SHASMAC)
          SHR .
      REP DDDEF(SHASMENU)
          DA(SYS1.SHASMENU)
          SHR .
      REP DDDEF(SHASMIG)
          DA(SYS1.SHASMIG)
          SHR .
      REP DDDEF(SHASPARM)
          DA(SYS1.SHASPARM)
          SHR .
      REP DDDEF(SHASPNL0)
          DA(SYS1.SHASPNL0)
          SHR .
      REP DDDEF(SHASSAMP)
          DA(SYS1.SHASSAMP)
          SHR .
      REP DDDEF(SHASSRC)
          DA(SYS1.SHASSRC)
          SHR .
      REP DDDEF(SICECLIB)
          DA(SYS1.SICECLIB)
          SHR .
      REP DDDEF(SICELINK)
          DA(SYS1.SICELINK)
          SHR .
      REP DDDEF(SICELPA)
          DA(SYS1.SICELPA)
          SHR .
      REP DDDEF(SICEMENU)
          DA(SYS1.SICEMENU)
          SHR .
      REP DDDEF(SICEPENU)
          DA(SYS1.SICEPENU)
          SHR .
      REP DDDEF(SICEPROC)
          DA(SYS1.SICEPROC)
          SHR .
      REP DDDEF(SICESAMP)
          DA(SYS1.SICESAMP)
          SHR .
      REP DDDEF(SICESLIB)
          DA(SYS1.SICESLIB)
          SHR .
      REP DDDEF(SICESRCE)
          DA(SYS1.SICESRCE)
          SHR .
      REP DDDEF(SICETLIB)
          DA(SYS1.SICETLIB)
          SHR .
      REP DDDEF(SICEUSER)
          DA(SYS1.SICEUSER)
          SHR .
      REP DDDEF(SIEAHDR)
          DA(SYS1.SIEAHDR.H)
          SHR .
      REP DDDEF(SIFALIB)
          DA(SYS1.SIFALIB)
          SHR .
      REP DDDEF(SIOALMOD)
          DA(SYS1.SIOALMOD)
          SHR .
      REP DDDEF(SISTASGD)
          DA(SYS1.SISTASGD)
          SHR .
      REP DDDEF(SISTASN1)
          DA(SYS1.SISTASN1)
          SHR .
      REP DDDEF(SISTCLIB)
          DA(SYS1.SISTCLIB)
          SHR .
      REP DDDEF(SISTCMIP)
          DA(SYS1.SISTCMIP)
          SHR .
      REP DDDEF(SISTDAT1)
          DA(SYS1.SISTDAT1)
          SHR .
      REP DDDEF(SISTDAT2)
          DA(SYS1.SISTDAT2)
          SHR .
      REP DDDEF(SISTGDMO)
          DA(SYS1.SISTGDMO)
          SHR .
      REP DDDEF(SISTMAC1)
          DA(SYS1.SISTMAC1)
          SHR .
      REP DDDEF(SORTLIB)
          DA(SYS1.SORTLIB)
          SHR .
      REP DDDEF(SORTLPA)
          DA(SYS1.SORTLPA)
          SHR .
      REP DDDEF(SVCLIB)
          DA(SYS1.SVCLIB)
          SHR .
      REP DDDEF(UADS)
          DA(SYS1.UADS)
          SHR .
      REP DDDEF(VTAMLIB)
          DA(SYS1.VTAMLIB)
          SHR .
      REP DDDEF(AEZADBR1)
          DA(TCPIP.AEZADBR1)
          SHR .
      REP DDDEF(AEZAMAC1)
          DA(TCPIP.AEZAMAC1)
          SHR .
      REP DDDEF(AEZAMAC2)
          DA(TCPIP.AEZAMAC2)
          SHR .
      REP DDDEF(AEZAMAC3)
          DA(TCPIP.AEZAMAC3)
          SHR .
      REP DDDEF(AEZAMODS)
          DA(TCPIP.AEZAMODS)
          SHR .
      REP DDDEF(AEZARNT1)
          DA(TCPIP.AEZARNT1)
          SHR .
      REP DDDEF(AEZARNT2)
          DA(TCPIP.AEZARNT2)
          SHR .
      REP DDDEF(AEZARNT3)
          DA(TCPIP.AEZARNT3)
          SHR .
      REP DDDEF(AEZARNT4)
          DA(TCPIP.AEZARNT4)
          SHR .
      REP DDDEF(AEZAROE1)
          DA(TCPIP.AEZAROE1)
          SHR .
      REP DDDEF(AEZAROE2)
          DA(TCPIP.AEZAROE2)
          SHR .
      REP DDDEF(AEZAROE3)
          DA(TCPIP.AEZAROE3)
          SHR .
      REP DDDEF(AEZASMP1)
          DA(TCPIP.AEZASMP1)
          SHR .
      REP DDDEF(AEZAXLTD)
          DA(TCPIP.AEZAXLTD)
          SHR .
      REP DDDEF(AEZAXLTK)
          DA(TCPIP.AEZAXLTK)
          SHR .
      REP DDDEF(AEZAXLT1)
          DA(TCPIP.AEZAXLT1)
          SHR .
      REP DDDEF(AEZAXLT2)
          DA(TCPIP.AEZAXLT2)
          SHR .
      REP DDDEF(AEZAXLT3)
          DA(TCPIP.AEZAXLT3)
          SHR .
      REP DDDEF(SEZACMAC)
          DA(TCPIP.SEZACMAC)
          SHR .
      REP DDDEF(SEZACMTX)
          DA(TCPIP.SEZACMTX)
          SHR .
      REP DDDEF(SEZADBCX)
          DA(TCPIP.SEZADBCX)
          SHR .
      REP DDDEF(SEZADBRM)
          DA(TCPIP.SEZADBRM)
          SHR .
      REP DDDEF(SEZADEFS)
          DA(TCPIP.SEZADEFS)
          SHR .
      REP DDDEF(SEZADPIL)
          DA(TCPIP.SEZADPIL)
          SHR .
      REP DDDEF(SEZADSIL)
          DA(TCPIP.SEZADSIL)
          SHR .
      REP DDDEF(SEZADSIM)
          DA(TCPIP.SEZADSIM)
          SHR .
      REP DDDEF(SEZADSIP)
          DA(TCPIP.SEZADSIP)
          SHR .
      REP DDDEF(SEZAINST)
          DA(TCPIP.SEZAINST)
          SHR .
      REP DDDEF(SEZALIBN)
          DA(TCPIP.SEZALIBN)
          SHR .
      REP DDDEF(SEZALNK2)
          DA(TCPIP.SEZALNK2)
          SHR .
      REP DDDEF(SEZALOAD)
          DA(TCPIP.SEZALOAD)
          SHR .
      REP DDDEF(SEZALPA)
          DA(TCPIP.SEZALPA)
          SHR .
      REP DDDEF(SEZAMENU)
          DA(TCPIP.SEZAMENU)
          SHR .
      REP DDDEF(SEZANCLS)
          DA(TCPIP.SEZANCLS)
          SHR .
      REP DDDEF(SEZANMAC)
          DA(TCPIP.SEZANMAC)
          SHR .
      REP DDDEF(SEZANPNL)
          DA(TCPIP.SEZANPNL)
          SHR .
      REP DDDEF(SEZAOLDX)
          DA(TCPIP.SEZAOLDX)
          SHR .
      REP DDDEF(SEZAPENU)
          DA(TCPIP.SEZAPENU)
          SHR .
      REP DDDEF(SEZARNT1)
          DA(TCPIP.SEZARNT1)
          SHR .
      REP DDDEF(SEZARNT2)
          DA(TCPIP.SEZARNT2)
          SHR .
      REP DDDEF(SEZARNT3)
          DA(TCPIP.SEZARNT3)
          SHR .
      REP DDDEF(SEZARNT4)
          DA(TCPIP.SEZARNT4)
          SHR .
      REP DDDEF(SEZAROE1)
          DA(TCPIP.SEZAROE1)
          SHR .
      REP DDDEF(SEZAROE2)
          DA(TCPIP.SEZAROE2)
          SHR .
      REP DDDEF(SEZAROE3)
          DA(TCPIP.SEZAROE3)
          SHR .
      REP DDDEF(SEZARPCL)
          DA(TCPIP.SEZARPCL)
          SHR .
      REP DDDEF(SEZATCP)
          DA(TCPIP.SEZATCP)
          SHR .
      REP DDDEF(SEZATCPX)
          DA(TCPIP.SEZATCPX)
          SHR .
      REP DDDEF(SEZATELX)
          DA(TCPIP.SEZATELX)
          SHR .
      REP DDDEF(SEZAXAWL)
          DA(TCPIP.SEZAXAWL)
          SHR .
      REP DDDEF(SEZAXLD1)
          DA(TCPIP.SEZAXLD1)
          SHR .
      REP DDDEF(SEZAXLD2)
          DA(TCPIP.SEZAXLD2)
          SHR .
      REP DDDEF(SEZAXMLB)
          DA(TCPIP.SEZAXMLB)
          SHR .
      REP DDDEF(SEZAXTLB)
          DA(TCPIP.SEZAXTLB)
          SHR .
      REP DDDEF(SEZAX11L)
          DA(TCPIP.SEZAX11L)
          SHR .
    ENDUCL.
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
  RESETRC.
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,T2CLEAN),(4000,LT))
./ ADD NAME=T3CLEAN  0114-04350-04350-1300-00129-00130-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*------------------------------------------------------------------
//* DOC: REMOVE SSA FROM SMP/E DATASET DDDEF ENTRIES
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 4
//*-------------------------------------------------------------------
//T3CLEAN  EXEC PGM=GIMSMP,COND=(4000,LT),REGION=0M
//STEPLIB  DD DISP=SHR,
//         DSN=MASTER.SYS1.MIGLIB
//SMPCSI   DD DSN=PRIME.SMPE.GLOBAL.CSI,
//            DISP=SHR
//SMPPTS   DD DSN=PRIME.SMPE.SMPPTS,
//            DISP=SHR
//SMPOUT   DD SYSOUT=*
//SMPRPT   DD SYSOUT=*
//SMPLIST  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SMPLOG   DD SYSOUT=*
//SMPLOGA  DD SYSOUT=*
//SMPHOLD  DD DUMMY
//SMPPTFIN DD DUMMY
//SMPPUNCH DD DUMMY
//SMPJCLIN DD DUMMY
//SMPCNTL  DD *
  SET BDY(GLOBAL) .
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
    UCLIN .
      REP DDDEF(SMPLOG)
          DATASET(SMPE.SMPGLOG)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(SMPE.SMPGLOGA)
          MOD .
      REP DDDEF(SMPPTS)
          DATASET(SMPE.SMPPTS)
          SHR .
      REP DDDEF(SMPTLIB)
          DSPREFIX(SYS1.MVS)
          VOLUME(C4RES1)
          UNIT(SYSALLDA) .
    ENDUCL .
  SET BDY(MVST100) .
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
    UCLIN .
      REP DDDEF(SMPLTS)
          DATASET(SMPE.MVST100.SMPLTS)
          SHR .
      REP DDDEF(SMPMTS)
          DATASET(SMPE.MVST100.SMPMTS)
          SHR .
      REP DDDEF(SMPSCDS)
          DATASET(SMPE.MVST100.SMPSCDS)
          SHR .
      REP DDDEF(SMPSTS)
          DATASET(SMPE.MVST100.SMPSTS)
          SHR .
      REP DDDEF(SMPLOG)
          DATASET(SMPE.MVST100.SMPTLOG)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(SMPE.MVST100.SMPTLOGA)
          MOD .
      REP DDDEF(SMPPTS)
          DATASET(SMPE.SMPPTS)
          SHR .
    ENDUCL .
  SET BDY(MVSD100) .
    ZEDIT DDDEF .
      CHANGE UNIT(*,*) .
      CHANGE VOLUME(*,*) .
    ENDZEDIT .
    UCLIN .
      REP DDDEF(SMPLOG)
          DATASET(SMPE.MVSD100.SMPDLOG)
          MOD .
      REP DDDEF(SMPLOGA)
          DATASET(SMPE.MVSD100.SMPDLOGA)
          MOD .
      REP DDDEF(SMPLTS)
          DATASET(SMPE.MVST100.SMPLTS)
          SHR .
      REP DDDEF(SMPMTS)
          DATASET(SMPE.MVST100.SMPMTS)
          SHR .
      REP DDDEF(SMPSCDS)
          DATASET(SMPE.MVST100.SMPSCDS)
          SHR .
      REP DDDEF(SMPSTS)
          DATASET(SMPE.MVST100.SMPSTS)
          SHR .
      REP DDDEF(SMPPTS)
          DATASET(SMPE.SMPPTS)
          SHR .
    ENDUCL .
  SET BDY(GLOBAL) .
    UCLIN .
    REP  GZONE ZINDEX(
       (MVSD100,SMPE.MVS.DLIB.CSI,DLIB)
       (MVST100,SMPE.MVS.TARGET.CSI,TARGET)
                                   ).
    ENDUCL .
  SET BDY(MVST100) .
    UCLIN .
      REP TARGETZONE(MVST100) RELATED(MVSD100) .
    ENDUCL.
  SET BDY(MVSD100) .
    UCLIN .
      REP DLIBZONE(MVSD100) RELATED(MVST100) .
    ENDUCL.
    RESETRC.
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((4,GE,T3CLEAN),(4000,LT))
//*
./ ADD NAME=T4CLEAN  0114-04350-04350-1300-04283-04284-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: DELETES THE DATA SET ALIAS NAME FOR EACH DATA SET
//*      IN THE RESPECTIVE CATALOG
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 8
//*-------------------------------------------------------------------
//T4CLEAN  EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
      DELETE -
           PRIME.MSOPS.MSOAC.DSILOGP -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSILOGS -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSISVRT -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSITRCP -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSITRCS -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.STATS -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.SHARED.IPLDATA -
           PATH  -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.SYS1.LINKLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.LPALIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MACLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MIGLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.CSSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MODGEN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.LINKLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.VTAMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZALOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICEUSER  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMSAM1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPMACS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.NFSMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZANMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SCNMMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZACMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SORTLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICELPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SORTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICELINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMMAC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.AOP.AAOPEXEC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.AAOPHFS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.AAOPMENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.AAOPMOD1  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.AAOPPENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.SAOPEXEC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.SAOPMENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.AOP.SAOPPENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.ASM.AASMMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.AASMMAC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.AASMMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.AASMMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.AASMPUT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.AASMSAM1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.AASMSAM2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMPUT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ASM.SASMSAM2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.ASU.AASUACF  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUCIDL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUEXEC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUHDR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUHHDR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUHLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUHSAM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUIDL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASULINK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUMENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUPENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUSAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUSTUB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.AASUTLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUACF  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUCIDL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUEXEC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUHDR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUIDL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUMENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUPENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUSAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUSTUB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ASU.SASUTLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.BDT1.BDTSPOOL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.BDT1.MSG0001  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.BDT1.TQIBITS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.BDT1.TQIDATA  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.BPA.ABPAHFS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.CBC.ACBCCMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACBCSR1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACCNCMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACCNSR1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBDLL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBDLL2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBHFS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBOBJ  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBOBJ2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBSR1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBSR2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBSR3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLBSR4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLDHFS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACLDSR1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACTVMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.ACTVSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCCMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCDOC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCIMG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCPRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCSKL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCBCUTL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNCMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNDOC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNIMG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNPRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNSKL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCCNUTL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBCPP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBCPP2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBDLL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBDLL2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBH.C  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBH.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBH.HPP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBH.INL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLBSID  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCLDJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCTVJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CBC.SCTVMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.CDS.ACDSHFS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CDS.ACDSLINK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CDS.ACDSSAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CDS.SCDSSAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.CEE.AAFHMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AAFHSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.ACEEMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.ACEEMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.ACEESRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.ACEESRC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.ACEESRC3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCCPP1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCMSEP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCOBJ1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCSRC6  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AEDCSRC7  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AIBMMOD3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AIBMSRC3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AIGZMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.AIGZSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SAFHFORT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEBIND  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEBND2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEECICS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEECLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEECMAP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEECPP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEGXLT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH.ARPA.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH.NET.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH.NETINET.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH.SYS.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEH.T  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEELIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEELKED  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEELKEX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEELOCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEELOCX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEELPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEMSGP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEOBJ  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEERTLS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEERUN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEERUN2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEESAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEESPC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEESPCO  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEUMAP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SCEEUTBL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SIBMCALL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SIBMCAL2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SIBMMATH  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CEE.SIBMTASK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.CIM.ACIMHFS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CIM.ACIMMOD1  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CIM.ACIMPLUG  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CIM.SCIMXML  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CMX.ACMXDBRM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CMX.ACMXHFS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.CMX.SCMXDBRM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.EXMP.CMDPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.DOCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.HFSFILE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.ISPPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.IVPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.PARMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.PGMDIR  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.PROCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.REPORTS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.SAMPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EXMP.VTAMLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFCLI0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFHDRS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFMSG0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFOBJ  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFSKL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.ACSFTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFCLI0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFHDRS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFMSG0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFOBJ  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFSKL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.CSF.SCSFTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.ECN.AECNEXP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ECN.AECNHETC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ECN.AECNHEXP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ECN.AECNHINC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ECN.AECNHLBR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ECN.AECNLINK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ECN.SECNEXP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.EOX.AEPHBOK1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHCLB1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHDAT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHLOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHMSG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHSAM1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.AEPHTBL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHBOK1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHCLB1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHDAT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHLOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHMSG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHSAM1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOX.SEPHTBL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOXFONT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOXIENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOXOENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOX1ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOX2ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOX3ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOX4ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYAENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYBENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYGENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYIENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYIPRF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYLENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYLEXS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYLOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYMC30  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYMC40  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYOENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYSENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOYXENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOY1ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOY2ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.AEOY4ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.BKLSHELF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOXFONT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOXIENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOXOENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOX1ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOX2ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOX3ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOX4ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYAENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYBENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYGENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYIENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYIPRF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYLENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYLEXS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYLOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYMC30  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYMC40  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYOENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYSENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOYXENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOY1ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOY2ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EOY.SEOY4ENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.EPH.AEPHBOOK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.AEPHCLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.AEPHGIF  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.AEPHLOAD  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.AEPHSAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.SEPHCLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.SEPHSAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EPH.SEPHTAB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EQAW.AEQAMOD2  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EQAW.AEQASRC2  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EQAW.SEQAAUTH  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EQAW.SEQADUM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EQAW.SEQAMOD  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EQAW.SEQASAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVACF  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVDBRM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVEXEC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVEXP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHDCP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHDR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHDRK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHETC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHINC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHLBR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHTCL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVHXMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVIDL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVLIBK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVLIBS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVLINK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVMSG  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVPNL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.AEUVPRC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVACF  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVDBRM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVEXEC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVEXP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVHDR  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVHDRK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVIDL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVLIBK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVLIBS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVMSG  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVPNL  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.EUV.SEUVPRC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.EUVF.AEUVFEXC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.AEUVFEXP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.AEUVFHDR  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.AEUVFHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.AEUVFLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.AEUVFLNK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.AEUVFSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFEXC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFEXP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFHDR  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFLNK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.EUVF.SEUVFSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.AEPWBENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.AEPWMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.AEPWSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.EPWCKPT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.EPWDUMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.EPWLOG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.EPWLOG2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.EPWPARM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWBENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWCENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWMOD3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWMOD4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.FFST.V120ESA.SEPWSRC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMCDA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMCFO  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMDAT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMGDF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMIMG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMMAP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMOPS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMPCF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.AADMSYM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMCDA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMCFO  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMDAT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMGDF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMIMG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMMAP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMOPS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMPCF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GDDM.SADMSYM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.AGIMCLS0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.AGIMMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.AGIMPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.AGIMSENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.AGIMTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.SGIMCLS0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.SGIMLMD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.SGIMMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.SGIMPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.SGIMSENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GIM.SGIMTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDEXPC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDHCLI  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDHDRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDLNK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.AGLDSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.SGLDEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.SGLDEXPC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.SGLDHDRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.SGLDLNK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GLD.SGLDSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GSK.AGSKHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GSK.AGSKLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GSK.AGSKSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GSK.SGSKLOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.GSK.SGSKSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.HCM.AEEQINST  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.HCM.SEEQINST  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.ICA.AICAHETC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.AICAHLBR  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.AICAHSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.AICAHSCR  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.AICALINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.AICAPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.AICASAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.SICALMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.SICAPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ICA.SICASAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.ICQ.ICQABTXT  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ICQ.ICQCCLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ICQ.ICQILIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ICQ.ICQMLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ICQ.ICQPLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ICQ.ICQSLIB  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.ICQ.ICQTABLS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.IMO.AIMOHFS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IMO.AIMOJCL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IMO.AIMOMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IMO.SIMOJCL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IMO.SIMOMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.IMW.AIMWEMOD  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IMW.AIMWHENU  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IMW.AIMWSAM1  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IMW.SIMWSDCK  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IMW.SIMWTBL1  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.ING.AEVIMOD6  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AEVIMOD7  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AEVIMOD8  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGIMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGIMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGIPDB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGIPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGIREX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGISKL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGITBL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGMODC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGNMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGNPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGNPRF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGNPRM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGNREX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGPWS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.AINGSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SEVIMOD6  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SEVIMOD7  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SEVIMOD8  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGIMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGIMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGIPDB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGIPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGIREX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGISKL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGITBL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGMODC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGMOD3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGNMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGNPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGNPRF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGNPRM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGNREX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGPWS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ING.SINGSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.IOA.AIOAIBIN  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.AIOAJAVA  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.AIOALMOD  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.AIOAMMOD  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.AIOASAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.SIOAIBIN  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.SIOAJAVA  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.SIOAMMOD  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.IOA.SIOASAMP  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.IOE.AIOEEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEHLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEHSAM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEHSHL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEHSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOELMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEMSGE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEPNLE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOEPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.AIOESAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.SIOEEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.SIOELMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.SIOEMSGE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.SIOEPNLE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.SIOEPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.IOE.SIOESAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFLOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.AISFTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.HASPINDX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFLOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISF.SISFTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPALIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPGENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPGMLI  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPGUI  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPMACS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPSASC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPSENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.AISPTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPALIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPGENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPGMLI  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPGUI  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPLOAD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPSASC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPSENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.ISP.SISPTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.JAVA.AAJVSMP1  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.JAVA.AAJVS390  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.JAVA.SAJVSMP1  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSIARPT  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSIASRC  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.MSOAC.DSILIST  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.MSOPS.SHARED.DSIPARM  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.NETVIEW.ABNJPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ABNJPNL2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ABNJSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ACNMCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ACNMINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ACNMLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ACNMMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ACNMPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ACNMSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ADSIMSG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ADSIOPEN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ADSIPARM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ADSIPRF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ADUIMSG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEKGCAS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEKGLANG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEKGLUTB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEKGMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEKGPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEKGSMP1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEZLCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEZLINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEZLLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEZLPNLU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AEZLSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.AFLBDAT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.ANVULIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.BNJPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.BNJPNL2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.BNJSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.CNMCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.CNMINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.CNMLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.CNMPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.CNMSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.DSIPARM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.DSIPRF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.NVULIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SCNMLNK1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SCNMLPA1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SDSIMSG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SDSIOPEN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SDUIMSG1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGCAS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGLANG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGLNK1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGLUTB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGPNL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEKGSMP1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEZLCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEZLINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEZLLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEZLPNLU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SEZLSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.NETVIEW.SFLBDAT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           HFSCAT.OMVS.ETC  -
           ALIAS -
           CAT(CATALOG.H14.USERCAT)
      DELETE -
           HFSCAT.OMVS.JV390  -
           ALIAS -
           CAT(CATALOG.H14.USERCAT)
      DELETE -
           HFSCAT.OMVS.ROOT  -
           ALIAS -
           CAT(CATALOG.H14.USERCAT)
      DELETE -
           HFSCAT.OMVS.VAR  -
           ALIAS -
           CAT(CATALOG.H14.USERCAT)
      DELETE -
           PRIME.SMPE.MVSD100.SMPDLOG  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVSD100.SMPDLOGA  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVST100.SMPLTS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVST100.SMPMTS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVST100.SMPSCDS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVST100.SMPSTS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVST100.SMPTLOG  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.MVST100.SMPTLOGA  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.SMPGLOG  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.SMPGLOGA  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           PRIME.SMPE.SMPPTS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
      DELETE -
           MASTER.SYS1.AACBCNTL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AADFMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AADRLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AADRYLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AAPPDAT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AAPPDAT4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AAPPMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AAPPMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AAPPSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTCLI0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABDTSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABLSCLI0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABLSKEL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABLSMSG0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABLSPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABLSTBL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABMFMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABPXEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABPXMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABPXMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABPXPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABPXSPC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ABPXTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDEHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDHENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDMOD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDTEMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBDTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBRDBRM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACBRMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACDMMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACDRMODS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACDRTABL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACLMMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACMDLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACSSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNHF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNIMG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNMJPN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNREXX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ACUNTBL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADBBLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADFMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADFPMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADFQMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADFQPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADFQPSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTLLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTPSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADGTTSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ADMSSVM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AEDGEXE1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AEDGMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AEDGMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AEDGPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AEDGPSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AEDGSRC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBCLS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBPWSV  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AERBTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AFOMDATA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AFOMHDRS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AFOMHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AFOMMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AFOMOBJ  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AGDEMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AGENLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AGFTAJL1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AGFTAMD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AGFUMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASPARM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHASSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AHELPENP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICECLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICELIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICEMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICEPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICESAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICESLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICESRCE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICETLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICEUSER  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQAB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQILIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQMAC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQMAC3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQMAC4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AICQMAC5  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIEAHDR  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIEWMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIFALIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIGDVBS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIKYHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIMAGE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AIMFMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AINDLMD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTASGD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTASN1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTCMIP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTDAT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTDAT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTGDMO  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AISTMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AITYHFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ALINKLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ALPALIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AMACLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AMIGLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AMODGEN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AMSGENP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AMSGENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ANFSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ANFSMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ANFSSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ANFSTARB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ANUCLEUS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSACB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSA0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSA1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSBN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSB0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSB3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSCA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSCD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSCE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSC5  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSC6  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSD7  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSD8  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSG0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSJSC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOST3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOST4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSU0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOSXCF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS00  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS04  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS05  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS06  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS11  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS12  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS24  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS26  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS28  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AOS32  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ASAMPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ASSFMOD0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ATSOMAC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.AUADS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.BDT.INITS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.BRODCAST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.CBRDBRM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.CIPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.CMDLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.EXMP.LOGREC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DAE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DBBLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DFQLLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DFQMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DFQPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DFSMS.ACDS -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DFSMS.COMMDS -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DFSMS.SCDS -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DGTCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DGTLLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DGTMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DGTPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DGTSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DGTTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DUMP00  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DUMP01  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.DUMP02  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.GMJD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HASPACE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HASPCKPT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HASPCKP2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HELPENP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HHRFCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HHRFMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HHRFPANL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HHRFSKEL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HRFCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HRFMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HRFPANL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.HRFSKEL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IBM.APARMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IBM.APROCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IBM.PARMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IBM.PROCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IGDVBS1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IMAGELIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IODF00.CLUSTER -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.IPLPARM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.ISAMLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.LOGR.CDS01  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.LOGR.CDS02  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.LOGR.CDS03  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MAN1 -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MAN2 -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MAN3 -
           PATH  -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MSGENP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.MSGENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.NFSLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.NFSSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.NFSTARB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.NUCLEUS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.PARMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.PROCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.RACF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.RACFSEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SACBCNTL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SADRYLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SAMPLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SAPPDAT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SAPPDAT4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SAPPMOD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SAPPSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTCLI0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTCMD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTHELP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTMSG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBDTSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBLSCLI0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBLSKEL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBLSMSG0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBLSPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBLSTBL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBPXEXEC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBPXMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBPXPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SBPXTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCBDCLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCBDHENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCBDMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCBDPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCBDTEMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCBDTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCDRTABL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNHF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNIMG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNJCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNMJPN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNREXX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SCUNTBL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SDFQPSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SDGTPSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SDGTTSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SDMSSVM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SDMSSVMS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SDWWDLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SEDGEXE1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SEDGMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SEDGPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SEDGPSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBCLS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBLPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBPWSV  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBT  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SERBTENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SFOMDATA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SFOMHDRS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SFOMOBJ  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASLINK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASMIG  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASPARM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASPNL0  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASSAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SHASSRC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICECLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICEMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICEPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICEPROC  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICESAMP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICESLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICESRCE  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SICETLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SIEAHDR.H  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SIFALIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SIOALMOD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTASGD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTASN1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTCMIP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTDAT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTDAT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SISTGDMO  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.SVCLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.UADS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.VTAMLIB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.VTAMLST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.WLM.CDS01  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.WLM.CDS02  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.WLM.CDS03  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.WLM.DEF  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.XCF.CDS01  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.XCF.CDS02  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.SYS1.XCF.CDS03  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZADBR1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAMAC1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAMAC2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAMAC3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAMODS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZARNT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZARNT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZARNT3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZARNT4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAROE1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAROE2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAROE3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZASMP1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAXLTD  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAXLTK  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAXLT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAXLT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.AEZAXLT3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZACMTX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADBCX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADBRM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADEFS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADPIL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADSIL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADSIM  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZADSIP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAINST  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZALIBN  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZALNK2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZALPA  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAMENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZANCLS  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZANPNL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAOLDX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAPENU  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZARNT1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZARNT2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZARNT3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZARNT4  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAROE1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAROE2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAROE3  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZARPCL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZATCP  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZATCPX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZATELX  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAXAWL  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAXLD1  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAXLD2  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAXMLB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAXTLB  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           MASTER.TCPIP.SEZAX11L  -
           ALIAS -
           CAT(CATALOG.C14.MASTER)
      DELETE -
           PRIME.TCPIVP.TCPPARMS  -
           ALIAS -
           CAT(PRIME14.USERCAT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((8,GE,T4CLEAN),(4000,LT))
//*
./ ADD NAME=T5CLEAN  0114-04350-04350-1300-00033-00035-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*-------------------------------------------------------------------
//* DOC: DELETE WORK SYSTEM'S CSI DATASETS AND PATHS OUT OF CATALOG
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 00
//*--------------------------------------------------------------------
//*
//* NOTE:  IF NO SSA WAS DEFINED FOR THIS INSTALLATION, THEN THIS
//*        IS A NULL JOB AND DOES NOT NEED TO BE RUN.
//*
//*--------------------------------------------------------------------
//T5CLEAN  EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE PRIME.SMPE.GLOBAL.CSI PATH -
      CATALOG(PRIME14.USERCAT)
  DELETE PRIME.SMPE.MVS.DLIB.CSI PATH -
      CATALOG(PRIME14.USERCAT)
  DELETE PRIME.SMPE.MVS.TARGET.CSI PATH -
      CATALOG(PRIME14.USERCAT)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,T5CLEAN),(4000,LT))
//*
./ ADD NAME=T6CLEAN  0114-04350-04350-1300-00020-00020-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*******************************************************************
//* This job deletes the transport dataset
//*******************************************************************
//STEP01  EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
  DELETE  'EXMP.HFSFILE'
//*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,STEP01),(4000,LT))
./ ADD NAME=T7CLEAN  0114-04350-04350-1300-00036-00037-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//*----------------------------------------------------------------
//* DOC: DELETE ALL SSA'S (SYSTEM SPECIFIC ALIAS)
//*      IN THE DRIVING SYSTEM MASTER CATALOG.
//*      DELETE ALL SSA'S RELATED TO THE TARGET SYSTEM
//*      USER CATALOG(S) IN THE TARGET SYSTEM MASTER CATALOG.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 0
//*------------------------------------------------------------------
//*
//T7CLEAN  EXEC PGM=IDCAMS,COND=(4000,LT)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE MASTER ALIAS -
    CATALOG(CATALOG.ZOS.MASTER/PWUPDATE)
  DELETE PRIME ALIAS -
    CATALOG(CATALOG.C14.MASTER)
  DELETE PRIME ALIAS -
    CATALOG(CATALOG.ZOS.MASTER/PWUPDATE)
  DELETE HFSCAT ALIAS -
    CATALOG(CATALOG.C14.MASTER)
  DELETE HFSCAT ALIAS -
    CATALOG(CATALOG.ZOS.MASTER/PWUPDATE)
/*
//NOTOK   EXEC PGM=MAXRETCD,COND=((0,GE,T7CLEAN),(4000,LT))
//*
./ ADD NAME=U0AXML   0114-04350-04350-1300-00018-00016-00000-HOWTO
GENERATING THE PRODUCT DEFINITION FILE


Job  U1XML  creates  a  product  definition file  for  the
products in  your order.   If you plan to use Managed System
Infrastructure for Setup (msys for Setup), you must run this
job.  Otherwise, job U1XML is optional.

U1XML can take  as much as one hour or longer to complete.
IBM recommends that you run U1XML from the  target system.
Ensure that the target system has a  sort  product  enabled,
such as DFSORT.   Also, to avoid a potential memory shortage
abend, run this job with REGION=0M coded on the job's JOB or
EXEC statement.

If you choose to  run  U1XML  on  the  driving system, add
TYPRUN=HOLD to the job statement  before submitting the job.
Job U1XML should  end  with  a  return  code  of  0  or 4.
./ ADD NAME=U1XML    0114-04350-04350-1300-00081-00082-00000-HOWTO
//IBMUSER  JOB (ACCT#,EXP),'PROGRMMER',
//         TIME=1440,
//         NOTIFY=&SYSUID,
//         REGION=0M,
//         CLASS=A,
//         MSGCLASS=X,
//         MSGLEVEL=(1,1)
//*
//*
//JOBLIB   DD DISP=SHR,DSN=SUPPLIED.LOADLIB
//*
//* -------------------------------------------------------------------
//* DOC: THIS JOB CALLS PGM 'CPPXMLG' IN "Package" MODE, WHICH
//*      WILL BUILD A FILE CONTAINING AN XML DESCRIPTION OF THE
//*      NEWSYSTEM YOU RECEIVED AND OF THE PRODUCTS IT CONTAINS.
//*
//* CAUTION!! IT'S NOT FOR 'CPPXMLG" EXECUTION in "Priming" MODE.
//*           To avoid OUT-OF STORAGE abend, specify REGION=0M.
//*
//*      THIS JOB XLMGNR8 IS OPTIONAL. THE FILE CAN BE USED AS
//*      INPUT TO z/OS msys for Setup CUSTOMPAC PACKAGE INPUT
//*      ADAPTER (PIA).
//*
//*      It is requested that you run job U1XML from the target
//*      system.
//*      Ensure the ISPF data sets are from the target system and not
//*      from the driving system.
//*
//* NOTE 1: Leave from the installation dialog to avoid its
//*         order ISPF table ENQUEUE failure when you submit this job.
//*         In case of execution, add the TYPRUN=HOLD and
//*         then release it.
//*
//* NOTE 2: See the APAR IR41105 on your SMP/E data sets,
//*         (ex. PTF UR51456 for FMID:HMP1C00 is required),
//*         for the new ++PRODXML support.
//*
//* MRC: THE MAXIMUM EXPECTED RETURN CODE IS: 4
//*--------------------------------------------------------------------
//DELETE   EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
   DELETE SUPPLIED.SCPPXML
   SET MAXCC = 0
/*
//BUILDXML  EXEC PGM=IKJEFT1B,DYNAMNBR=99,REGION=0M,TIME=300
//STEPLIB  DD DSN=SYS1.MIGLIB,DISP=SHR
//         DD DSN=GIM.SGIMLMD0,DISP=SHR
//SMPCSI   DD DSN=SMPE.GLOBAL.CSI,
//         DISP=SHR
//DTDFILE  DD DSN=SUPPLIED.SCPPSENU(DTDSTUB),DISP=SHR
//SCPPXML  DD DSN=SUPPLIED.SCPPXML,
//         DISP=(NEW,CATLG,DELETE),
//         UNIT=SYSALLDA,SPACE=(TRK,(30,5)),
//         DCB=(RECFM=VB,BLKSIZE=23476,LRECL=255)
//*SYSEXEC  DD DSN=SUPPLIED.SCPPCENU,DISP=SHR         CR17118
//SCPPTENU DD DSN=SUPPLIED.SCPPTENU,DISP=OLD
//ISPLLIB  DD DSN=SUPPLIED.SCPPLOAD,DISP=SHR
//         DD DSN=ISP.SISPLOAD,DISP=SHR
//*ISPMLIB  DD DSN=SUPPLIED.EXAMPL.SCPPMENU,DISP=SHR  CR17118
//ISPMLIB  DD DSN=ISP.SISPMENU,DISP=SHR
//ISPPLIB  DD DSN=ISP.SISPPENU,DISP=SHR
//ISPSLIB  DD DSN=ISP.SISPSENU,DISP=SHR
//ISPTLIB  DD DSN=SUPPLIED.SCPPTENU,DISP=OLD
//         DD DSN=ISP.SISPTENU,DISP=SHR
//ISPTABL  DD DSN=SUPPLIED.SCPPTENU,DISP=OLD
//*MSGINV   DD DSN=SUPPLIED.EXAMPL.SCPPEENU,DISP=SHR  CR17118
//ISPPROF  DD DSN=&XMLPRF,UNIT=SYSALLDA,DISP=(,DELETE),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80),
//            SPACE=(CYL,(1,1,1))
//ISPLOG   DD SYSOUT=*,DCB=(LRECL=125,BLKSIZE=129,RECFM=VA)
//ISPCTL1  DD DSN=&ISPFTMP,UNIT=SYSALLDA,DISP=(,DELETE),
//            DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80),
//            SPACE=(TRK,(20,20))
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSOUT   DD DUMMY
//SYSTSIN  DD *
 PROFILE PREFIX(IBMUSER)
 ISPSTART PGM(CPPXMLG) PARM('/NEWXTBL')
/*
